ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"reboot.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ReBoot,"ax",%progbits
  19              		.align	1
  20              		.global	ReBoot
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	ReBoot:
  26              	.LFB144:
  27              		.file 1 "Common/reboot.c"
   1:Common/reboot.c **** #include "reboot.h"
   2:Common/reboot.c **** #include "shell.h"
   3:Common/reboot.c **** #include "stm32h743xx.h"
   4:Common/reboot.c **** #include "stm32h7xx_hal.h"
   5:Common/reboot.c **** 
   6:Common/reboot.c **** void ReBoot(void)
   7:Common/reboot.c **** {
  28              		.loc 1 7 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
   8:Common/reboot.c ****     __set_FAULTMASK(1);
  34              		.loc 1 8 5 view .LVU1
  35              	.LVL0:
  36              	.LBB16:
  37              	.LBI16:
  38              		.file 2 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h"
   1:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 2


  13:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 3


  70:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 4


 127:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 5


 184:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 6


 241:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 7


 298:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 8


 355:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 9


 412:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 10


 469:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 11


 526:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 12


 583:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
  39              		.loc 2 624 27 view .LVU2
  40              	.LBB17:
 625:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
  41              		.loc 2 626 3 view .LVU3
  42 0000 0123     		movs	r3, #1
  43              		.syntax unified
  44              	@ 626 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
  45 0002 83F31388 		MSR faultmask, r3
  46              	@ 0 "" 2
  47              	.LVL1:
  48              		.loc 2 626 3 is_stmt 0 view .LVU4
  49              		.thumb
  50              		.syntax unified
  51              	.LBE17:
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 13


  52              	.LBE16:
   9:Common/reboot.c **** 
  10:Common/reboot.c ****     NVIC_SystemReset();
  53              		.loc 1 10 5 is_stmt 1 view .LVU5
  54              	.LBB18:
  55              	.LBI18:
  56              		.file 3 "HAL_Lib/CMSIS/Core/Include/core_cm7.h"
   1:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**************************************************************************//**
   2:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * @file     core_cm7.h
   3:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * @version  V5.1.1
   5:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * @date     28. March 2019
   6:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
   7:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*
   8:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  *
  10:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  *
  12:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  *
  16:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  *
  18:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  * limitations under the License.
  23:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
  24:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  25:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #elif defined (__clang__)
  28:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif
  30:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  31:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  34:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #include <stdint.h>
  35:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  36:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
  37:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  extern "C" {
  38:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif
  39:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  40:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
  41:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  44:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  47:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  50:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 14


  51:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
  53:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  54:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  55:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
  56:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  *                 CMSIS definitions
  57:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
  58:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
  59:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
  61:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
  62:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  63:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #include "cmsis_version.h"
  64:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  65:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  71:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  73:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** */
  76:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #else
  81:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #endif
  84:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #else
  85:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
  87:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
  88:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #if defined __ARM_FP
  90:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #else
  93:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #endif
  96:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #else
  97:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
  99:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 100:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #else
 105:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #endif
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 15


 108:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #else
 109:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 111:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 112:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #else
 117:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #endif
 120:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #else
 121:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 123:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 124:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #else
 129:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #endif
 132:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #else
 133:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 135:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 136:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #else
 141:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #endif
 144:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #else
 145:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 147:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 148:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #else
 153:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #endif
 156:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #else
 157:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 159:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 160:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif
 161:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 162:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 164:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 16


 165:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 166:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
 167:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif
 168:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 169:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 171:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 173:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 176:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 177:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  extern "C" {
 178:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif
 179:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 180:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* check device defines and use defaults */
 181:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 186:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 187:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 191:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 192:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 196:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 197:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 201:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 202:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 206:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 207:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 211:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 212:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 216:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 217:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
 221:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 17


 222:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 223:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 225:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 227:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** */
 231:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #ifdef __cplusplus
 232:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #else
 234:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif
 236:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 239:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 244:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 246:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 247:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 248:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
 249:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  *                 Register Abstraction
 250:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   Core Register contain:
 251:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core Register
 252:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core NVIC Register
 253:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core SCB Register
 254:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core SysTick Register
 255:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core Debug Register
 256:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core MPU Register
 257:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core FPU Register
 258:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
 259:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 260:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** */
 263:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 264:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 265:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
 269:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 270:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 271:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 272:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 274:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef union
 275:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
 276:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   struct
 277:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
 278:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 18


 279:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } APSR_Type;
 289:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 290:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* APSR Register Definitions */
 291:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 294:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 297:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 300:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 303:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 306:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 309:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 310:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 311:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 313:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef union
 314:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
 315:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   struct
 316:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
 317:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } IPSR_Type;
 322:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 323:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 327:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 328:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 329:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 331:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef union
 332:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
 333:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   struct
 334:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
 335:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 19


 336:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } xPSR_Type;
 350:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 351:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 355:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 358:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 361:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 364:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 367:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 370:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 373:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 376:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 379:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 382:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 383:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 384:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 386:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef union
 387:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
 388:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   struct
 389:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
 390:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 20


 393:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } CONTROL_Type;
 397:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 398:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 402:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 405:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 408:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 410:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 411:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 412:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
 416:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 417:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 418:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 419:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 421:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
 422:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
 423:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[24U];
 427:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }  NVIC_Type;
 437:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 438:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 442:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 444:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 445:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 446:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 21


 450:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 451:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 452:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 453:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 455:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
 456:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
 457:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 22


 507:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } SCB_Type;
 508:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 509:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 513:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 516:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 519:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 522:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 525:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 529:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 532:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 535:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 538:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 541:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 544:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 547:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 550:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 553:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 556:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 560:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 23


 564:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 567:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 570:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 573:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 576:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 579:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 582:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 586:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 589:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 592:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 596:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 599:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 602:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 605:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 608:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 611:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 614:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 617:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 620:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 24


 621:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 624:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 627:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 630:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 633:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 636:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 639:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 642:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 645:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 648:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 651:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 654:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 657:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 660:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 663:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 667:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 670:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 673:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 677:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 25


 678:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 680:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 683:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 686:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 689:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 692:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 696:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 699:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 702:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 705:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 708:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 711:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 714:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 718:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 721:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 724:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 727:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 730:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 733:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 26


 735:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 737:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 740:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 743:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 747:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 750:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 753:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 756:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 759:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 763:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 766:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 770:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 773:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 776:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 779:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 782:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 786:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 789:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 27


 792:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 795:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 798:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 801:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 804:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 808:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 811:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 815:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 819:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 822:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 826:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 829:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 833:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 836:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 840:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 843:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 846:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 28


 849:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 853:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 856:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 859:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 862:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 866:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 869:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 873:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 876:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 879:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 883:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 886:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 889:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 893:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 896:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 899:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 902:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 905:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 29


 906:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 908:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 910:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 911:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 912:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
 916:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 917:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 918:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 919:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 921:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
 922:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
 923:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } SCnSCB_Type;
 927:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 928:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 932:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Pos         26U                                         /*!< ACTLR: 
 934:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Msk         (1UL << SCnSCB_ACTLR_DISDYNADD_Pos)         /*!< ACTLR: 
 935:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 936:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Pos         21U                                         /*!< ACTLR: 
 937:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Msk         (0x1FUL << SCnSCB_ACTLR_DISISSCH1_Pos)      /*!< ACTLR: 
 938:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 939:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Pos             16U                                         /*!< ACTLR: 
 940:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Msk             (0x1FUL << SCnSCB_ACTLR_DISDI_Pos)          /*!< ACTLR: 
 941:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 942:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Pos     15U                                         /*!< ACTLR: 
 943:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Msk     (1UL << SCnSCB_ACTLR_DISCRITAXIRUR_Pos)     /*!< ACTLR: 
 944:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 945:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Pos      14U                                         /*!< ACTLR: 
 946:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Msk      (1UL << SCnSCB_ACTLR_DISBTACALLOC_Pos)      /*!< ACTLR: 
 947:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 948:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Pos       13U                                         /*!< ACTLR: 
 949:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Msk       (1UL << SCnSCB_ACTLR_DISBTACREAD_Pos)       /*!< ACTLR: 
 950:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 951:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 952:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 953:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 954:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 955:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 956:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 957:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 958:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 959:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 960:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 961:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 962:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 30


 963:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 964:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 965:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 966:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 967:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 968:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 969:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 970:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 971:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 972:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 973:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
 974:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 975:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 976:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
 977:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 978:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
 979:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
 980:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
 981:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 982:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 983:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 984:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 985:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } SysTick_Type;
 986:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 987:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 988:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 989:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 990:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 991:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 992:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 993:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 994:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 995:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 996:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
 997:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 998:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 999:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1000:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
1001:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
1002:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
1003:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1004:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SysTick Current Register Definitions */
1005:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
1006:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
1007:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1008:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
1009:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
1010:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
1011:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1012:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
1013:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
1014:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1015:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
1016:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
1017:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1018:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1019:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 31


1020:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1021:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1022:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1023:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1024:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1025:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
1026:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1027:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1028:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1029:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1030:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1031:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
1032:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1033:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  union
1034:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
1035:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1036:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1037:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1038:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1039:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1040:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1041:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1042:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1043:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1044:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1045:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[32U];
1046:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1047:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1048:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1049:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1050:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1051:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1052:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1053:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1054:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1055:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1056:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1057:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1058:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1059:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1060:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1061:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1062:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } ITM_Type;
1063:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1064:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1065:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1066:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1067:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1068:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1069:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1070:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1071:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1072:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1073:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1074:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1075:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1076:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 32


1077:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1078:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1079:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1080:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1081:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1082:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1083:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1084:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1085:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1086:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1087:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1088:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1089:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1090:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1091:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1092:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1093:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1094:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1095:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1096:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1097:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1098:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1099:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1100:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1101:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1102:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1103:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1104:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1105:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1106:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1107:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1108:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1109:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1110:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1111:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1112:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1113:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
1114:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1115:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1116:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1117:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1118:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1119:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
1120:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1121:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1122:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1123:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1124:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1125:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1126:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1127:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1128:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1129:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1130:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1131:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1132:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1133:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 33


1134:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1135:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1136:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1137:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1138:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1139:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1140:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1141:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1142:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1143:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1144:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1145:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1146:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1147:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } DWT_Type;
1148:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1149:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* DWT Control Register Definitions */
1150:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1151:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1152:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1153:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1154:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1155:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1156:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1157:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1158:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1159:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1160:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1161:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1162:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1163:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1164:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1165:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1166:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1167:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1168:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1169:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1170:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1171:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1172:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1173:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1174:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1175:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1176:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1177:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1178:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1179:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1180:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1181:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1182:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1183:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1184:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1185:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1186:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1187:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1188:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1189:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1190:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 34


1191:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1192:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1193:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1194:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1195:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1196:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1197:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1198:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1199:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1200:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1201:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1202:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1203:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1204:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1205:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1206:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1207:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1208:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1209:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1210:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1211:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1212:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1213:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1214:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1215:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1216:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1217:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1218:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1219:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1220:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1221:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1222:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1223:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1224:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1225:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1226:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1227:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1228:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1229:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1230:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1231:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1232:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1233:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1234:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1235:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1236:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1237:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1238:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1239:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1240:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1241:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1242:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1243:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1244:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1245:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1246:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1247:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 35


1248:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1249:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1250:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1251:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1252:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1253:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1254:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1255:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1256:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1257:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1258:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1259:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1260:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1261:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1262:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1263:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
1264:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1265:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1266:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1267:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1268:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1269:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
1270:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1271:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1272:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1273:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1274:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1275:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1276:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1277:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1278:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1279:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1280:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1281:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1282:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1283:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1284:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1285:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1286:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1287:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1288:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1289:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1290:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1291:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1292:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1293:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1294:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1295:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } TPI_Type;
1296:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1297:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1298:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1299:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1300:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1301:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1302:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1303:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1304:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 36


1305:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1306:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1307:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1308:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1309:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1310:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1311:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1312:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1313:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1314:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1315:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1316:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1317:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1318:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1319:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1320:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1321:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1322:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1323:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1324:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1325:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1326:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1327:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1328:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1329:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1330:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1331:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1332:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1333:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1334:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1335:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1336:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1337:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1338:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1339:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1340:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1341:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1342:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1343:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1344:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1345:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1346:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1347:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1348:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1349:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1350:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1351:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1352:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1353:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1354:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1355:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1356:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1357:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1358:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1359:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1360:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1361:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 37


1362:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1363:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1364:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1365:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1366:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1367:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1368:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1369:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1370:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1371:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1372:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1373:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1374:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1375:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1376:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1377:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1378:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1379:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1380:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1381:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1382:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1383:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1384:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1385:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1386:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1387:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1388:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1389:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1390:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1391:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1392:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1393:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1394:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1395:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1396:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1397:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1398:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1399:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1400:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1401:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1402:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1403:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1404:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1405:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1406:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1407:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1408:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1409:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1410:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1411:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1412:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1413:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1414:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1415:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1416:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1417:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1418:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 38


1419:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1420:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1421:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1422:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1423:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1424:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1425:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
1426:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1427:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1428:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1429:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1430:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1431:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
1432:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1433:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1434:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1435:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1436:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1437:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1438:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1439:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1440:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1441:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1442:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1443:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1444:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } MPU_Type;
1445:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1446:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1447:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1448:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* MPU Type Register Definitions */
1449:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1450:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1451:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1452:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1453:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1454:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1455:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1456:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1457:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1458:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* MPU Control Register Definitions */
1459:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1460:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1461:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1462:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1463:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1464:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1465:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1466:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1467:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1468:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1469:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1470:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1471:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1472:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1473:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1474:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1475:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 39


1476:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1477:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1478:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1479:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1480:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1481:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1482:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1483:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1484:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1485:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1486:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1487:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1488:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1489:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1490:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1491:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1492:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1493:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1494:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1495:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1496:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1497:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1498:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1499:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1500:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1501:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1502:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1503:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1504:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1505:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1506:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1507:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1508:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1509:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1510:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1511:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1512:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1513:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1514:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1515:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1516:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1517:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1518:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1519:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1520:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1521:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
1522:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1523:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1524:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1525:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1526:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1527:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
1528:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1529:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1530:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1531:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1532:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 40


1533:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1534:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1535:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1536:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } FPU_Type;
1537:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1538:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1539:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1540:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1541:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1542:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1543:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1544:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1545:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1546:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1547:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1548:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1549:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1550:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1551:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1552:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1553:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1554:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1555:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1556:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1557:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1558:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1559:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1560:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1561:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1562:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1563:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1564:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1565:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1566:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1567:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1568:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1569:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1570:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1571:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1572:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1573:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1574:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1575:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1576:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1577:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1578:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1579:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1580:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1581:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1582:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1583:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1584:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1585:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1586:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1587:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1588:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1589:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 41


1590:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1591:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1592:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1593:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1594:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1595:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1596:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1597:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1598:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1599:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1600:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1601:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1602:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1603:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1604:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1605:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1606:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1607:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1608:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1609:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1610:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1611:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1612:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1613:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1614:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1615:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1616:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1617:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1618:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1619:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1620:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1621:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1622:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1623:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1624:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1625:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1626:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1627:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1628:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1629:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1630:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1631:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1632:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1633:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
1634:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1635:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1636:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1637:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1638:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1639:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** typedef struct
1640:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1641:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1642:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1643:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1644:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1645:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** } CoreDebug_Type;
1646:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 42


1647:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1648:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1649:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1650:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1651:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1652:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1653:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1654:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1655:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1656:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1657:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1658:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1659:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1660:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1661:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1662:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1663:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1664:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1665:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1666:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1667:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1668:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1669:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1670:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1671:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1672:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1673:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1674:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1675:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1676:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1677:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1678:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1679:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1680:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1681:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1682:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1683:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1684:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1685:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1686:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1687:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1688:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1689:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1690:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1691:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1692:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1693:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1694:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1695:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1696:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1697:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1698:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1699:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1700:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1701:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1702:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1703:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 43


1704:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1705:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1706:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1707:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1708:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1709:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1710:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1711:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1712:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1713:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1714:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1715:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1716:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1717:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1718:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1719:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1720:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1721:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1722:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1723:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1724:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1725:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1726:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1727:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1728:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1729:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1730:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1731:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1732:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1733:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1734:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1735:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1736:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1737:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1738:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
1739:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1740:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1741:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1742:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1743:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1744:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1745:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return           Masked and shifted value.
1746:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** */
1747:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1748:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1749:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1750:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1751:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1752:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1753:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1754:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** */
1755:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1756:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1757:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1758:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1759:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1760:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 44


1761:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1762:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1763:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1764:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
1765:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1766:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1767:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1768:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1769:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1770:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1771:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1772:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1773:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1774:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1775:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1776:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1777:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1778:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1779:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1780:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1781:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1782:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1783:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1784:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1785:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1786:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1787:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1788:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1789:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif
1790:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1791:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1792:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1793:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1794:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*@} */
1795:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1796:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1797:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1798:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /*******************************************************************************
1799:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1800:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   Core Function Interface contains:
1801:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core NVIC Functions
1802:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core SysTick Functions
1803:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core Debug Functions
1804:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   - Core Register Access Functions
1805:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  ******************************************************************************/
1806:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1807:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1808:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** */
1809:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1810:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1811:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1812:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1813:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1814:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1815:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1816:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1817:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   @{
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 45


1818:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1819:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1820:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1821:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1822:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1823:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
1824:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1825:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #else
1826:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1827:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1828:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1829:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1830:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1831:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1832:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1833:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1834:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1835:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1836:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1837:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1838:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1839:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1840:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1841:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1842:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1843:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #endif
1844:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1845:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #else
1846:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1847:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1848:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1849:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1850:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1851:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1852:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1853:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1854:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1855:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1856:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1857:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1858:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1859:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1860:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1861:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1862:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1863:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Priority Grouping
1864:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1865:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1866:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            Only values from 0..7 are used.
1867:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1868:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1869:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1870:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1871:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1872:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1873:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t reg_value;
1874:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 46


1875:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1876:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1877:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1878:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1879:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1880:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1881:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1882:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
1883:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1884:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1885:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1886:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Priority Grouping
1887:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1888:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1889:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1890:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1891:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1892:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1893:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
1894:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1895:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1896:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1897:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Enable Interrupt
1898:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1899:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1900:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1901:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1902:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1903:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1904:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1905:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
1906:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     __COMPILER_BARRIER();
1907:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1908:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     __COMPILER_BARRIER();
1909:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
1910:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
1911:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1912:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1913:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1914:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1915:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1916:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1917:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1918:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1919:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1920:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1921:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1922:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1923:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1924:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
1925:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1926:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
1927:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   else
1928:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
1929:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     return(0U);
1930:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
1931:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 47


1932:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1933:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1934:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1935:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Disable Interrupt
1936:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1937:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1938:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1939:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1940:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1941:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1942:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1943:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
1944:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1945:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     __DSB();
1946:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     __ISB();
1947:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
1948:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
1949:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1950:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1951:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1952:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1953:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1954:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1955:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1956:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1957:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1958:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1959:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1960:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1961:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1962:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
1963:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1964:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
1965:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   else
1966:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
1967:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     return(0U);
1968:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
1969:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
1970:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1971:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1972:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1973:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1974:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1975:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1976:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1977:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1978:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1979:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1980:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1981:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
1982:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1983:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
1984:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
1985:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1986:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
1987:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
1988:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 48


1989:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1990:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1991:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
1992:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
1993:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1994:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
1995:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1996:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
1997:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1998:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
1999:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
2000:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2001:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2002:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
2003:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Active Interrupt
2004:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2005:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2006:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
2007:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2008:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \note    IRQn must not be negative.
2009:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
2010:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2011:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
2012:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2013:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
2014:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2015:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
2016:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   else
2017:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
2018:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     return(0U);
2019:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
2020:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
2021:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2022:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2023:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
2024:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2025:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2026:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2027:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2028:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2029:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2030:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2031:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
2032:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2033:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
2034:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2035:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
2036:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2037:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
2038:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   else
2039:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
2040:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2041:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
2042:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
2043:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2044:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2045:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 49


2046:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2047:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2048:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2049:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2050:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2051:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return             Interrupt Priority.
2052:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2053:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
2054:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2055:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
2056:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2057:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2058:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
2059:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2060:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
2061:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   else
2062:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
2063:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2064:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   }
2065:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
2066:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2067:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2068:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
2069:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Encode Priority
2070:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2071:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2072:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2073:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2074:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2075:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2076:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2077:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2078:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
2079:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2080:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
2081:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2082:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2083:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2084:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2085:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2086:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2087:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2088:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   return (
2089:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2090:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2091:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****          );
2092:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
2093:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2094:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2095:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
2096:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Decode Priority
2097:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2098:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2099:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2100:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2101:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2102:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 50


2103:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2104:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2105:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
2106:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2107:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
2108:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2109:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2110:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2111:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2112:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2113:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2114:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2115:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2116:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2117:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
2118:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2119:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2120:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
2121:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2122:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2123:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2124:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2125:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2126:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2127:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2128:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
2129:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2130:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
2131:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2132:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
2133:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __DSB();
2134:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
2135:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2136:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2137:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
2138:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2139:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2140:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2141:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****            or negative to specify a processor exception.
2142:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2143:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2144:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
2145:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2146:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
2147:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2148:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
2149:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** }
2150:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2151:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2152:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** /**
2153:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \brief   System Reset
2154:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2155:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****  */
2156:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
  57              		.loc 3 2156 34 view .LVU6
  58              	.LBB19:
2157:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** {
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 51


2158:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
  59              		.loc 3 2158 3 view .LVU7
  60              	.LBB20:
  61              	.LBI20:
 627:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 52


 680:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 53


 737:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 54


 794:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 55


 851:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 56


 908:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  62              		.loc 2 944 27 view .LVU8
  63              	.LBB21:
 945:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  64              		.loc 2 946 3 view .LVU9
  65              		.syntax unified
  66              	@ 946 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
  67 0006 BFF34F8F 		dsb 0xF
  68              	@ 0 "" 2
  69              		.thumb
  70              		.syntax unified
  71              	.LBE21:
  72              	.LBE20:
2159:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****                                                                        buffered write are completed
2160:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
  73              		.loc 3 2160 3 view .LVU10
2161:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  74              		.loc 3 2161 32 is_stmt 0 view .LVU11
  75 000a 0549     		ldr	r1, .L3
  76 000c CA68     		ldr	r2, [r1, #12]
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 57


  77              		.loc 3 2161 40 view .LVU12
  78 000e 02F4E062 		and	r2, r2, #1792
2160:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  79              		.loc 3 2160 17 view .LVU13
  80 0012 044B     		ldr	r3, .L3+4
  81 0014 1343     		orrs	r3, r3, r2
2160:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  82              		.loc 3 2160 15 view .LVU14
  83 0016 CB60     		str	r3, [r1, #12]
2162:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2163:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
  84              		.loc 3 2163 3 is_stmt 1 view .LVU15
  85              	.LBB22:
  86              	.LBI22:
 944:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
  87              		.loc 2 944 27 view .LVU16
  88              	.LBB23:
  89              		.loc 2 946 3 view .LVU17
  90              		.syntax unified
  91              	@ 946 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
  92 0018 BFF34F8F 		dsb 0xF
  93              	@ 0 "" 2
  94              		.thumb
  95              		.syntax unified
  96              	.L2:
  97              	.LBE23:
  98              	.LBE22:
2164:HAL_Lib/CMSIS/Core/Include/core_cm7.h **** 
2165:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
  99              		.loc 3 2165 3 view .LVU18
2166:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
2167:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****     __NOP();
 100              		.loc 3 2167 5 view .LVU19
 101              		.syntax unified
 102              	@ 2167 "HAL_Lib/CMSIS/Core/Include/core_cm7.h" 1
 103 001c 00BF     		nop
 104              	@ 0 "" 2
2165:HAL_Lib/CMSIS/Core/Include/core_cm7.h ****   {
 105              		.loc 3 2165 8 view .LVU20
 106              		.thumb
 107              		.syntax unified
 108 001e FDE7     		b	.L2
 109              	.L4:
 110              		.align	2
 111              	.L3:
 112 0020 00ED00E0 		.word	-536810240
 113 0024 0400FA05 		.word	100270084
 114              	.LBE19:
 115              	.LBE18:
 116              		.cfi_endproc
 117              	.LFE144:
 119              		.global	shellCommandReBoot
 120              		.global	shellDescReBoot
 121              		.global	shellCmdReBoot
 122              		.section	.rodata.shellCmdReBoot,"a"
 123              		.align	2
 126              	shellCmdReBoot:
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 58


 127 0000 5265426F 		.ascii	"ReBoot\000"
 127      6F7400
 128              		.section	.rodata.shellDescReBoot,"a"
 129              		.align	2
 132              	shellDescReBoot:
 133 0000 53797374 		.ascii	"System ReBoot\000"
 133      656D2052 
 133      65426F6F 
 133      7400
 134              		.section	shellCommand,"a"
 135              		.align	2
 138              	shellCommandReBoot:
 139 0000 00210000 		.word	8448
 140 0004 00000000 		.word	shellCmdReBoot
 141 0008 00000000 		.word	ReBoot
 142 000c 00000000 		.word	shellDescReBoot
 143              		.text
 144              	.Letext0:
 145              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 146              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 147              		.file 6 "System/shell/shell.h"
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 reboot.c
C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s:19     .text.ReBoot:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s:25     .text.ReBoot:00000000 ReBoot
C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s:112    .text.ReBoot:00000020 $d
C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s:138    shellCommand:00000000 shellCommandReBoot
C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s:132    .rodata.shellDescReBoot:00000000 shellDescReBoot
C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s:126    .rodata.shellCmdReBoot:00000000 shellCmdReBoot
C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s:123    .rodata.shellCmdReBoot:00000000 $d
C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s:129    .rodata.shellDescReBoot:00000000 $d
C:\Users\HUAV\AppData\Local\Temp\ccet0BDe.s:135    shellCommand:00000000 $d

NO UNDEFINED SYMBOLS
