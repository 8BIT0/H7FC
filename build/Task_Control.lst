ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Task_Control.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.TaskControl_Init,"ax",%progbits
  17              		.align	1
  18              		.global	TaskControl_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	TaskControl_Init:
  26              	.LFB151:
  27              		.file 1 "Task/Task_Control.c"
   1:Task/Task_Control.c **** /*
   2:Task/Task_Control.c ****  *  coder : 8_B!T0
   3:Task/Task_Control.c ****  *  this file use for moto & servo control
   4:Task/Task_Control.c ****  */
   5:Task/Task_Control.c **** #include "Task_Control.h"
   6:Task/Task_Control.c **** #include "Srv_IMUSample.h"
   7:Task/Task_Control.c **** #include "Task_Telemetry.h"
   8:Task/Task_Control.c **** #include "Srv_DataHub.h"
   9:Task/Task_Control.c **** #include "scheduler.h"
  10:Task/Task_Control.c **** #include "Srv_Actuator.h"
  11:Task/Task_Control.c **** #include "mmu.h"
  12:Task/Task_Control.c **** #include "adrc.h"
  13:Task/Task_Control.c **** 
  14:Task/Task_Control.c **** #define DEFAULT_CONTROL_MODEL Model_Quad
  15:Task/Task_Control.c **** #define DEFAULT_ESC_TYPE DevDshot_600
  16:Task/Task_Control.c **** 
  17:Task/Task_Control.c **** SrvIMU_UnionData_TypeDef LstCyc_IMU_Data;
  18:Task/Task_Control.c **** SrvRecever_RCSig_TypeDef LstCyc_Rc_Data;
  19:Task/Task_Control.c **** 
  20:Task/Task_Control.c **** TaskControl_Monitor_TypeDef TaskControl_Monitor = {
  21:Task/Task_Control.c ****     .init_state = false,
  22:Task/Task_Control.c ****     .control_abort = false,
  23:Task/Task_Control.c ****     .auto_control = false,
  24:Task/Task_Control.c **** 
  25:Task/Task_Control.c ****     .ctl_model = Model_Quad,
  26:Task/Task_Control.c **** 
  27:Task/Task_Control.c ****     .IMU_Rt = 0,
  28:Task/Task_Control.c ****     .RC_Rt = 0,
  29:Task/Task_Control.c **** };
  30:Task/Task_Control.c **** 
  31:Task/Task_Control.c **** /* internal function */
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 2


  32:Task/Task_Control.c **** static bool TaskControl_OverAngularSpeed_Detect(void);
  33:Task/Task_Control.c **** 
  34:Task/Task_Control.c **** void TaskControl_Init(void)
  35:Task/Task_Control.c **** {
  28              		.loc 1 35 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  36:Task/Task_Control.c ****     // init monitor
  37:Task/Task_Control.c ****     memset(&TaskControl_Monitor, 0, sizeof(TaskControl_Monitor));
  39              		.loc 1 37 5 view .LVU1
  40 0002 084C     		ldr	r4, .L3
  41 0004 6022     		movs	r2, #96
  42 0006 0021     		movs	r1, #0
  43 0008 2046     		mov	r0, r4
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
  38:Task/Task_Control.c **** 
  39:Task/Task_Control.c ****     TaskControl_Monitor.ctl_model = SrvActuator.get_model();
  46              		.loc 1 39 5 view .LVU2
  47              		.loc 1 39 48 is_stmt 0 view .LVU3
  48 000e 064D     		ldr	r5, .L3+4
  49 0010 AB69     		ldr	r3, [r5, #24]	@ unaligned
  50              		.loc 1 39 37 view .LVU4
  51 0012 9847     		blx	r3
  52              	.LVL1:
  53              		.loc 1 39 35 view .LVU5
  54 0014 2071     		strb	r0, [r4, #4]
  40:Task/Task_Control.c ****     TaskControl_Monitor.init_state = SrvActuator.init(DEFAULT_CONTROL_MODEL, DEFAULT_ESC_TYPE);
  55              		.loc 1 40 5 is_stmt 1 view .LVU6
  56              		.loc 1 40 49 is_stmt 0 view .LVU7
  57 0016 2B68     		ldr	r3, [r5]	@ unaligned
  58              		.loc 1 40 38 view .LVU8
  59 0018 0321     		movs	r1, #3
  60 001a 0020     		movs	r0, #0
  61 001c 9847     		blx	r3
  62              	.LVL2:
  63              		.loc 1 40 36 view .LVU9
  64 001e 2070     		strb	r0, [r4]
  41:Task/Task_Control.c **** }
  65              		.loc 1 41 1 view .LVU10
  66 0020 38BD     		pop	{r3, r4, r5, pc}
  67              	.L4:
  68 0022 00BF     		.align	2
  69              	.L3:
  70 0024 00000000 		.word	.LANCHOR0
  71 0028 00000000 		.word	SrvActuator
  72              		.cfi_endproc
  73              	.LFE151:
  75              		.section	.text.TaskControl_Core,"ax",%progbits
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 3


  76              		.align	1
  77              		.global	TaskControl_Core
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv5-d16
  83              	TaskControl_Core:
  84              	.LVL3:
  85              	.LFB152:
  42:Task/Task_Control.c **** 
  43:Task/Task_Control.c **** void TaskControl_Core(Task_Handle hdl)
  44:Task/Task_Control.c **** {
  86              		.loc 1 44 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 96
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		.loc 1 44 1 is_stmt 0 view .LVU12
  91 0000 30B5     		push	{r4, r5, lr}
  92              	.LCFI1:
  93              		.cfi_def_cfa_offset 12
  94              		.cfi_offset 4, -12
  95              		.cfi_offset 5, -8
  96              		.cfi_offset 14, -4
  97 0002 A1B0     		sub	sp, sp, #132
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 144
  45:Task/Task_Control.c ****     uint64_t imu_update_time = 0;
 100              		.loc 1 45 5 is_stmt 1 view .LVU13
 101              		.loc 1 45 14 is_stmt 0 view .LVU14
 102 0004 0022     		movs	r2, #0
 103 0006 0023     		movs	r3, #0
 104 0008 CDE91E23 		strd	r2, [sp, #120]
  46:Task/Task_Control.c ****     uint64_t rc_update_time = 0;
 105              		.loc 1 46 5 is_stmt 1 view .LVU15
 106              		.loc 1 46 14 is_stmt 0 view .LVU16
 107 000c CDE91C23 		strd	r2, [sp, #112]
  47:Task/Task_Control.c ****     uint16_t rc_ch[32];
 108              		.loc 1 47 5 is_stmt 1 view .LVU17
  48:Task/Task_Control.c ****     uint16_t gimbal[4];
 109              		.loc 1 48 5 view .LVU18
  49:Task/Task_Control.c ****     uint8_t rc_channel_sum;
 110              		.loc 1 49 5 view .LVU19
  50:Task/Task_Control.c ****     uint8_t imu_err_code;
 111              		.loc 1 50 5 view .LVU20
  51:Task/Task_Control.c ****     uint8_t axis = Axis_X;
 112              		.loc 1 51 5 view .LVU21
 113              	.LVL4:
  52:Task/Task_Control.c ****     bool arm_state;
 114              		.loc 1 52 5 view .LVU22
  53:Task/Task_Control.c ****     bool failsafe;
 115              		.loc 1 53 5 view .LVU23
  54:Task/Task_Control.c **** 
  55:Task/Task_Control.c ****     if (TaskControl_Monitor.init_state && !TaskControl_Monitor.control_abort)
 116              		.loc 1 55 5 view .LVU24
 117              		.loc 1 55 28 is_stmt 0 view .LVU25
 118 0010 894B     		ldr	r3, .L31
 119 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 4


 120              		.loc 1 55 8 view .LVU26
 121 0014 002B     		cmp	r3, #0
 122 0016 00F0EF80 		beq	.L6
 123              		.loc 1 55 63 discriminator 1 view .LVU27
 124 001a 874B     		ldr	r3, .L31
 125 001c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 126              		.loc 1 55 40 discriminator 1 view .LVU28
 127 001e 002B     		cmp	r3, #0
 128 0020 40F0EA80 		bne	.L6
  56:Task/Task_Control.c ****     {
  57:Task/Task_Control.c ****         TaskControl_Monitor.auto_control = true;
 129              		.loc 1 57 9 is_stmt 1 view .LVU29
 130              		.loc 1 57 42 is_stmt 0 view .LVU30
 131 0024 8449     		ldr	r1, .L31
 132 0026 0123     		movs	r3, #1
 133 0028 0B76     		strb	r3, [r1, #24]
  58:Task/Task_Control.c **** 
  59:Task/Task_Control.c ****         // check imu filter gyro data update or not
  60:Task/Task_Control.c ****         SrvDataHub.get_scaled_imu(&imu_update_time,
 134              		.loc 1 60 9 is_stmt 1 view .LVU31
 135              		.loc 1 60 19 is_stmt 0 view .LVU32
 136 002a 844C     		ldr	r4, .L31+4
 137              		.loc 1 60 9 view .LVU33
 138 002c 0DF12603 		add	r3, sp, #38
 139 0030 0693     		str	r3, [sp, #24]
 140 0032 01F13C03 		add	r3, r1, #60
 141 0036 0593     		str	r3, [sp, #20]
 142 0038 01F13803 		add	r3, r1, #56
 143 003c 0493     		str	r3, [sp, #16]
 144 003e 01F13403 		add	r3, r1, #52
 145 0042 0393     		str	r3, [sp, #12]
 146 0044 01F13003 		add	r3, r1, #48
 147 0048 0293     		str	r3, [sp, #8]
 148 004a 01F12C03 		add	r3, r1, #44
 149 004e 0193     		str	r3, [sp, #4]
 150 0050 01F12803 		add	r3, r1, #40
 151 0054 0093     		str	r3, [sp]
 152 0056 01F12403 		add	r3, r1, #36
 153 005a 01F12002 		add	r2, r1, #32
 154 005e 1C31     		adds	r1, r1, #28
 155 0060 1EA8     		add	r0, sp, #120
 156              	.LVL5:
 157              		.loc 1 60 9 view .LVU34
 158 0062 A568     		ldr	r5, [r4, #8]
 159 0064 A847     		blx	r5
 160              	.LVL6:
  61:Task/Task_Control.c ****                                   &TaskControl_Monitor.acc_scale,
  62:Task/Task_Control.c ****                                   &TaskControl_Monitor.gyr_scale,
  63:Task/Task_Control.c ****                                   &TaskControl_Monitor.acc[Axis_X],
  64:Task/Task_Control.c ****                                   &TaskControl_Monitor.acc[Axis_Y],
  65:Task/Task_Control.c ****                                   &TaskControl_Monitor.acc[Axis_Z],
  66:Task/Task_Control.c ****                                   &TaskControl_Monitor.gyr[Axis_X],
  67:Task/Task_Control.c ****                                   &TaskControl_Monitor.gyr[Axis_Y],
  68:Task/Task_Control.c ****                                   &TaskControl_Monitor.gyr[Axis_Z],
  69:Task/Task_Control.c ****                                   &TaskControl_Monitor.imu_tmpr,
  70:Task/Task_Control.c ****                                   &imu_err_code);
  71:Task/Task_Control.c **** 
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 5


  72:Task/Task_Control.c ****         // get rc channel and other toggle signal
  73:Task/Task_Control.c ****         SrvDataHub.get_rc(&rc_update_time, rc_ch, &rc_channel_sum);
 161              		.loc 1 73 9 is_stmt 1 view .LVU35
 162              		.loc 1 73 19 is_stmt 0 view .LVU36
 163 0066 6369     		ldr	r3, [r4, #20]
 164              		.loc 1 73 9 view .LVU37
 165 0068 0DF12702 		add	r2, sp, #39
 166 006c 0CA9     		add	r1, sp, #48
 167 006e 1CA8     		add	r0, sp, #112
 168 0070 9847     		blx	r3
 169              	.LVL7:
  74:Task/Task_Control.c **** 
  75:Task/Task_Control.c ****         // get failsafe
  76:Task/Task_Control.c ****         SrvDataHub.get_arm_state(&arm_state);
 170              		.loc 1 76 9 is_stmt 1 view .LVU38
 171              		.loc 1 76 19 is_stmt 0 view .LVU39
 172 0072 E369     		ldr	r3, [r4, #28]
 173              		.loc 1 76 9 view .LVU40
 174 0074 0DF12500 		add	r0, sp, #37
 175 0078 9847     		blx	r3
 176              	.LVL8:
  77:Task/Task_Control.c ****         SrvDataHub.get_failsafe(&failsafe);
 177              		.loc 1 77 9 is_stmt 1 view .LVU41
 178              		.loc 1 77 19 is_stmt 0 view .LVU42
 179 007a 236A     		ldr	r3, [r4, #32]
 180              		.loc 1 77 9 view .LVU43
 181 007c 09A8     		add	r0, sp, #36
 182 007e 9847     		blx	r3
 183              	.LVL9:
  78:Task/Task_Control.c ****         SrvDataHub.get_gimbal_percent(gimbal);
 184              		.loc 1 78 9 is_stmt 1 view .LVU44
 185              		.loc 1 78 19 is_stmt 0 view .LVU45
 186 0080 A369     		ldr	r3, [r4, #24]
 187              		.loc 1 78 9 view .LVU46
 188 0082 0AA8     		add	r0, sp, #40
 189 0084 9847     		blx	r3
 190              	.LVL10:
  79:Task/Task_Control.c **** 
  80:Task/Task_Control.c ****         if (imu_update_time)
 191              		.loc 1 80 9 is_stmt 1 view .LVU47
 192              		.loc 1 80 13 is_stmt 0 view .LVU48
 193 0086 1E9A     		ldr	r2, [sp, #120]
 194 0088 1F9B     		ldr	r3, [sp, #124]
 195              		.loc 1 80 12 view .LVU49
 196 008a 52EA0301 		orrs	r1, r2, r3
 197 008e 00F0A780 		beq	.L7
  81:Task/Task_Control.c ****         {
  82:Task/Task_Control.c ****             if (imu_update_time > TaskControl_Monitor.IMU_Rt)
 198              		.loc 1 82 13 is_stmt 1 view .LVU50
 199              		.loc 1 82 54 is_stmt 0 view .LVU51
 200 0092 6949     		ldr	r1, .L31
 201 0094 8868     		ldr	r0, [r1, #8]
 202 0096 C968     		ldr	r1, [r1, #12]
 203              		.loc 1 82 16 view .LVU52
 204 0098 9042     		cmp	r0, r2
 205 009a 9941     		sbcs	r1, r1, r3
 206 009c 15D2     		bcs	.L8
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 6


  83:Task/Task_Control.c ****             {
  84:Task/Task_Control.c ****                 TaskControl_Monitor.imu_update_error_cnt = 0;
 207              		.loc 1 84 17 is_stmt 1 view .LVU53
 208              		.loc 1 84 58 is_stmt 0 view .LVU54
 209 009e 6649     		ldr	r1, .L31
 210 00a0 0020     		movs	r0, #0
 211 00a2 4871     		strb	r0, [r1, #5]
  85:Task/Task_Control.c ****                 TaskControl_Monitor.IMU_Rt = imu_update_time;
 212              		.loc 1 85 17 is_stmt 1 view .LVU55
 213              		.loc 1 85 44 is_stmt 0 view .LVU56
 214 00a4 8A60     		str	r2, [r1, #8]
 215 00a6 CB60     		str	r3, [r1, #12]
 216              	.L9:
  86:Task/Task_Control.c ****             }
  87:Task/Task_Control.c ****             else if (imu_update_time <= TaskControl_Monitor.IMU_Rt)
  88:Task/Task_Control.c ****             {
  89:Task/Task_Control.c ****                 TaskControl_Monitor.imu_update_error_cnt++;
  90:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
  91:Task/Task_Control.c ****                     TaskControl_Monitor.control_abort = true;
  92:Task/Task_Control.c ****             }
  93:Task/Task_Control.c **** 
  94:Task/Task_Control.c ****             if(imu_err_code != SrvIMU_Sample_NoError)
 217              		.loc 1 94 13 is_stmt 1 view .LVU57
 218              		.loc 1 94 29 is_stmt 0 view .LVU58
 219 00a8 9DF82630 		ldrb	r3, [sp, #38]	@ zero_extendqisi2
 220              		.loc 1 94 15 view .LVU59
 221 00ac 002B     		cmp	r3, #0
 222 00ae 61D0     		beq	.L10
  95:Task/Task_Control.c ****             {
  96:Task/Task_Control.c ****                 switch(imu_err_code)
 223              		.loc 1 96 17 is_stmt 1 view .LVU60
 224 00b0 052B     		cmp	r3, #5
 225 00b2 15D9     		bls	.L29
 226 00b4 062B     		cmp	r3, #6
 227 00b6 61D1     		bne	.L13
  97:Task/Task_Control.c ****                 {
  98:Task/Task_Control.c ****                     case SrvIMU_Sample_Module_UnReady:
  99:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Acc_Blunt:
 100:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Gyr_Blunt:
 101:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Acc_OverRange:
 102:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Gyr_OverRange:
 103:Task/Task_Control.c ****                         TaskControl_Monitor.imu_none_update_cnt++;
 104:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 105:Task/Task_Control.c ****                         {
 106:Task/Task_Control.c ****                             TaskControl_Monitor.control_abort = true;
 107:Task/Task_Control.c ****                             goto lock_moto;
 108:Task/Task_Control.c ****                         }
 109:Task/Task_Control.c ****                         else
 110:Task/Task_Control.c ****                         {
 111:Task/Task_Control.c ****                             /* use last time sample imu data for control */
 112:Task/Task_Control.c ****                             for(axis = Axis_X; axis < Axis_Sum; axis++)
 113:Task/Task_Control.c ****                             {
 114:Task/Task_Control.c ****                                 TaskControl_Monitor.acc[axis] = TaskControl_Monitor.acc_lst[axis];
 115:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 116:Task/Task_Control.c ****                             }
 117:Task/Task_Control.c ****                         }
 118:Task/Task_Control.c ****                         break;
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 7


 119:Task/Task_Control.c **** 
 120:Task/Task_Control.c ****                     case SrvIMU_Sample_Over_Angular_Accelerate:
 121:Task/Task_Control.c ****                         if(TaskControl_Monitor.angular_warning_cnt < OVER_ANGULAR_ACCELERATE_COUNT)
 228              		.loc 1 121 25 view .LVU61
 229              		.loc 1 121 47 is_stmt 0 view .LVU62
 230 00b8 5F4B     		ldr	r3, .L31
 231 00ba DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 232              		.loc 1 121 27 view .LVU63
 233 00bc 042B     		cmp	r3, #4
 234 00be 55D8     		bhi	.L17
 122:Task/Task_Control.c ****                         {
 123:Task/Task_Control.c ****                             TaskControl_Monitor.angular_warning_cnt++;
 235              		.loc 1 123 29 is_stmt 1 view .LVU64
 236              		.loc 1 123 68 is_stmt 0 view .LVU65
 237 00c0 0133     		adds	r3, r3, #1
 238 00c2 5D4A     		ldr	r2, .L31
 239 00c4 D370     		strb	r3, [r2, #3]
 124:Task/Task_Control.c **** 
 125:Task/Task_Control.c ****                             for(axis = Axis_X; axis < Axis_Sum; axis++)
 240              		.loc 1 125 29 is_stmt 1 view .LVU66
 241              		.loc 1 125 38 is_stmt 0 view .LVU67
 242 00c6 0023     		movs	r3, #0
 243              		.loc 1 125 29 view .LVU68
 244 00c8 4DE0     		b	.L18
 245              	.L8:
  87:Task/Task_Control.c ****             {
 246              		.loc 1 87 18 is_stmt 1 view .LVU69
  89:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 247              		.loc 1 89 17 view .LVU70
  89:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 248              		.loc 1 89 36 is_stmt 0 view .LVU71
 249 00ca 5B4A     		ldr	r2, .L31
 250 00cc 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
  89:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 251              		.loc 1 89 57 view .LVU72
 252 00ce 0133     		adds	r3, r3, #1
 253 00d0 DBB2     		uxtb	r3, r3
 254 00d2 5371     		strb	r3, [r2, #5]
  90:Task/Task_Control.c ****                     TaskControl_Monitor.control_abort = true;
 255              		.loc 1 90 17 is_stmt 1 view .LVU73
  90:Task/Task_Control.c ****                     TaskControl_Monitor.control_abort = true;
 256              		.loc 1 90 20 is_stmt 0 view .LVU74
 257 00d4 092B     		cmp	r3, #9
 258 00d6 E7D9     		bls	.L9
  91:Task/Task_Control.c ****             }
 259              		.loc 1 91 21 is_stmt 1 view .LVU75
  91:Task/Task_Control.c ****             }
 260              		.loc 1 91 55 is_stmt 0 view .LVU76
 261 00d8 1346     		mov	r3, r2
 262 00da 0122     		movs	r2, #1
 263 00dc 5A70     		strb	r2, [r3, #1]
 264 00de E3E7     		b	.L9
 265              	.L29:
  96:Task/Task_Control.c ****                 {
 266              		.loc 1 96 17 view .LVU77
 267 00e0 5BB2     		sxtb	r3, r3
 268 00e2 002B     		cmp	r3, #0
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 8


 269 00e4 4AD0     		beq	.L13
 103:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 270              		.loc 1 103 25 is_stmt 1 view .LVU78
 103:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 271              		.loc 1 103 44 is_stmt 0 view .LVU79
 272 00e6 544A     		ldr	r2, .L31
 273 00e8 92F85C30 		ldrb	r3, [r2, #92]	@ zero_extendqisi2
 103:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 274              		.loc 1 103 64 view .LVU80
 275 00ec 0133     		adds	r3, r3, #1
 276 00ee DBB2     		uxtb	r3, r3
 277 00f0 82F85C30 		strb	r3, [r2, #92]
 104:Task/Task_Control.c ****                         {
 278              		.loc 1 104 25 is_stmt 1 view .LVU81
 104:Task/Task_Control.c ****                         {
 279              		.loc 1 104 27 is_stmt 0 view .LVU82
 280 00f4 092B     		cmp	r3, #9
 281 00f6 01D8     		bhi	.L30
 112:Task/Task_Control.c ****                             {
 282              		.loc 1 112 38 view .LVU83
 283 00f8 0023     		movs	r3, #0
 284 00fa 1AE0     		b	.L15
 285              	.L30:
 106:Task/Task_Control.c ****                             goto lock_moto;
 286              		.loc 1 106 29 is_stmt 1 view .LVU84
 106:Task/Task_Control.c ****                             goto lock_moto;
 287              		.loc 1 106 63 is_stmt 0 view .LVU85
 288 00fc 1346     		mov	r3, r2
 289 00fe 0122     		movs	r2, #1
 290 0100 5A70     		strb	r2, [r3, #1]
 107:Task/Task_Control.c ****                         }
 291              		.loc 1 107 29 is_stmt 1 view .LVU86
 292 0102 79E0     		b	.L6
 293              	.LVL11:
 294              	.L16:
 114:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 295              		.loc 1 114 33 discriminator 3 view .LVU87
 114:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 296              		.loc 1 114 92 is_stmt 0 discriminator 3 view .LVU88
 297 0104 4C4A     		ldr	r2, .L31
 298 0106 03F11001 		add	r1, r3, #16
 299 010a 02EB8101 		add	r1, r2, r1, lsl #2
 300 010e 0868     		ldr	r0, [r1]	@ float
 114:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 301              		.loc 1 114 63 discriminator 3 view .LVU89
 302 0110 03F10801 		add	r1, r3, #8
 303 0114 02EB8101 		add	r1, r2, r1, lsl #2
 304 0118 4860     		str	r0, [r1, #4]	@ float
 115:Task/Task_Control.c ****                             }
 305              		.loc 1 115 33 is_stmt 1 discriminator 3 view .LVU90
 115:Task/Task_Control.c ****                             }
 306              		.loc 1 115 92 is_stmt 0 discriminator 3 view .LVU91
 307 011a 03F11201 		add	r1, r3, #18
 308 011e 02EB8101 		add	r1, r2, r1, lsl #2
 309 0122 4968     		ldr	r1, [r1, #4]	@ float
 115:Task/Task_Control.c ****                             }
 310              		.loc 1 115 63 discriminator 3 view .LVU92
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 9


 311 0124 03F10C00 		add	r0, r3, #12
 312 0128 02EB8002 		add	r2, r2, r0, lsl #2
 313 012c 1160     		str	r1, [r2]	@ float
 112:Task/Task_Control.c ****                             {
 314              		.loc 1 112 65 is_stmt 1 discriminator 3 view .LVU93
 112:Task/Task_Control.c ****                             {
 315              		.loc 1 112 69 is_stmt 0 discriminator 3 view .LVU94
 316 012e 0133     		adds	r3, r3, #1
 317              	.LVL12:
 112:Task/Task_Control.c ****                             {
 318              		.loc 1 112 69 discriminator 3 view .LVU95
 319 0130 DBB2     		uxtb	r3, r3
 320              	.LVL13:
 321              	.L15:
 112:Task/Task_Control.c ****                             {
 322              		.loc 1 112 48 is_stmt 1 discriminator 1 view .LVU96
 112:Task/Task_Control.c ****                             {
 323              		.loc 1 112 29 is_stmt 0 discriminator 1 view .LVU97
 324 0132 022B     		cmp	r3, #2
 325 0134 E6D9     		bls	.L16
 326 0136 21E0     		b	.L13
 327              	.L19:
 126:Task/Task_Control.c ****                             {
 127:Task/Task_Control.c ****                                 TaskControl_Monitor.acc[axis] = TaskControl_Monitor.acc_lst[axis];
 328              		.loc 1 127 33 is_stmt 1 discriminator 3 view .LVU98
 329              		.loc 1 127 92 is_stmt 0 discriminator 3 view .LVU99
 330 0138 3F4A     		ldr	r2, .L31
 331 013a 03F11001 		add	r1, r3, #16
 332 013e 02EB8101 		add	r1, r2, r1, lsl #2
 333 0142 0868     		ldr	r0, [r1]	@ float
 334              		.loc 1 127 63 discriminator 3 view .LVU100
 335 0144 03F10801 		add	r1, r3, #8
 336 0148 02EB8101 		add	r1, r2, r1, lsl #2
 337 014c 4860     		str	r0, [r1, #4]	@ float
 128:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 338              		.loc 1 128 33 is_stmt 1 discriminator 3 view .LVU101
 339              		.loc 1 128 92 is_stmt 0 discriminator 3 view .LVU102
 340 014e 03F11201 		add	r1, r3, #18
 341 0152 02EB8101 		add	r1, r2, r1, lsl #2
 342 0156 4968     		ldr	r1, [r1, #4]	@ float
 343              		.loc 1 128 63 discriminator 3 view .LVU103
 344 0158 03F10C00 		add	r0, r3, #12
 345 015c 02EB8002 		add	r2, r2, r0, lsl #2
 346 0160 1160     		str	r1, [r2]	@ float
 125:Task/Task_Control.c ****                             {
 347              		.loc 1 125 65 is_stmt 1 discriminator 3 view .LVU104
 125:Task/Task_Control.c ****                             {
 348              		.loc 1 125 69 is_stmt 0 discriminator 3 view .LVU105
 349 0162 0133     		adds	r3, r3, #1
 350              	.LVL14:
 125:Task/Task_Control.c ****                             {
 351              		.loc 1 125 69 discriminator 3 view .LVU106
 352 0164 DBB2     		uxtb	r3, r3
 353              	.LVL15:
 354              	.L18:
 125:Task/Task_Control.c ****                             {
 355              		.loc 1 125 48 is_stmt 1 discriminator 1 view .LVU107
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 10


 125:Task/Task_Control.c ****                             {
 356              		.loc 1 125 29 is_stmt 0 discriminator 1 view .LVU108
 357 0166 022B     		cmp	r3, #2
 358 0168 E6D9     		bls	.L19
 359 016a 07E0     		b	.L13
 360              	.LVL16:
 361              	.L17:
 129:Task/Task_Control.c ****                             }
 130:Task/Task_Control.c ****                         }
 131:Task/Task_Control.c ****                         else
 132:Task/Task_Control.c ****                         {
 133:Task/Task_Control.c ****                             TaskControl_Monitor.angular_protect = true;
 362              		.loc 1 133 29 is_stmt 1 view .LVU109
 363              		.loc 1 133 65 is_stmt 0 view .LVU110
 364 016c 324B     		ldr	r3, .L31
 365 016e 0122     		movs	r2, #1
 366 0170 9A70     		strb	r2, [r3, #2]
 367 0172 03E0     		b	.L13
 368              	.L10:
 134:Task/Task_Control.c ****                         }
 135:Task/Task_Control.c ****                         break;
 136:Task/Task_Control.c ****                 }
 137:Task/Task_Control.c ****             }
 138:Task/Task_Control.c ****             else
 139:Task/Task_Control.c ****                 TaskControl_Monitor.imu_none_update_cnt = 0;
 369              		.loc 1 139 17 is_stmt 1 view .LVU111
 370              		.loc 1 139 57 is_stmt 0 view .LVU112
 371 0174 304B     		ldr	r3, .L31
 372 0176 0022     		movs	r2, #0
 373 0178 83F85C20 		strb	r2, [r3, #92]
 374              	.LVL17:
 375              	.L13:
 140:Task/Task_Control.c ****         }
 141:Task/Task_Control.c ****         else
 142:Task/Task_Control.c ****         {
 143:Task/Task_Control.c ****             /* check keep time to abort drone control */
 144:Task/Task_Control.c ****             TaskControl_Monitor.imu_none_update_cnt ++;
 145:Task/Task_Control.c **** 
 146:Task/Task_Control.c ****             if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 147:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 148:Task/Task_Control.c **** 
 149:Task/Task_Control.c ****             goto lock_moto;
 150:Task/Task_Control.c ****         }
 151:Task/Task_Control.c **** 
 152:Task/Task_Control.c ****         /* only manipulate esc or servo when disarm */
 153:Task/Task_Control.c ****         if (rc_update_time && !failsafe)
 376              		.loc 1 153 9 is_stmt 1 view .LVU113
 377              		.loc 1 153 13 is_stmt 0 view .LVU114
 378 017c 1C9A     		ldr	r2, [sp, #112]
 379 017e 1D9B     		ldr	r3, [sp, #116]
 380              		.loc 1 153 12 view .LVU115
 381 0180 52EA0301 		orrs	r1, r2, r3
 382 0184 11D0     		beq	.L21
 383              		.loc 1 153 31 discriminator 1 view .LVU116
 384 0186 9DF82410 		ldrb	r1, [sp, #36]	@ zero_extendqisi2
 385              		.loc 1 153 28 discriminator 1 view .LVU117
 386 018a 71B9     		cbnz	r1, .L21
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 11


 154:Task/Task_Control.c ****         {
 155:Task/Task_Control.c ****             if (rc_update_time >= TaskControl_Monitor.RC_Rt)
 387              		.loc 1 155 13 is_stmt 1 view .LVU118
 388              		.loc 1 155 54 is_stmt 0 view .LVU119
 389 018c 2A49     		ldr	r1, .L31
 390 018e 0869     		ldr	r0, [r1, #16]
 391 0190 4969     		ldr	r1, [r1, #20]
 392              		.loc 1 155 16 view .LVU120
 393 0192 8242     		cmp	r2, r0
 394 0194 73EB0101 		sbcs	r1, r3, r1
 395 0198 07D3     		bcc	.L21
 156:Task/Task_Control.c ****             {
 157:Task/Task_Control.c ****                 TaskControl_Monitor.auto_control = false;
 396              		.loc 1 157 17 is_stmt 1 view .LVU121
 397              		.loc 1 157 50 is_stmt 0 view .LVU122
 398 019a 2749     		ldr	r1, .L31
 399 019c 0020     		movs	r0, #0
 400 019e 0876     		strb	r0, [r1, #24]
 158:Task/Task_Control.c ****                 TaskControl_Monitor.RC_Rt = rc_update_time;
 401              		.loc 1 158 17 is_stmt 1 view .LVU123
 402              		.loc 1 158 43 is_stmt 0 view .LVU124
 403 01a0 0A61     		str	r2, [r1, #16]
 404 01a2 4B61     		str	r3, [r1, #20]
 159:Task/Task_Control.c **** 
 160:Task/Task_Control.c ****                 if (arm_state != TELEMETRY_SET_DISARM)
 405              		.loc 1 160 17 is_stmt 1 view .LVU125
 406              		.loc 1 160 31 is_stmt 0 view .LVU126
 407 01a4 9DF82530 		ldrb	r3, [sp, #37]	@ zero_extendqisi2
 408              		.loc 1 160 20 view .LVU127
 409 01a8 33BB     		cbnz	r3, .L6
 410              	.L21:
 161:Task/Task_Control.c ****                     goto lock_moto;
 162:Task/Task_Control.c ****             }
 163:Task/Task_Control.c ****         }
 164:Task/Task_Control.c ****         
 165:Task/Task_Control.c ****         if(TaskControl_Monitor.angular_protect)
 411              		.loc 1 165 9 is_stmt 1 view .LVU128
 412              		.loc 1 165 31 is_stmt 0 view .LVU129
 413 01aa 234B     		ldr	r3, .L31
 414 01ac 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 415              		.loc 1 165 11 view .LVU130
 416 01ae 33B1     		cbz	r3, .L22
 166:Task/Task_Control.c ****         {
 167:Task/Task_Control.c ****             if(arm_state == TELEMETRY_SET_ARM)
 417              		.loc 1 167 13 is_stmt 1 view .LVU131
 418              		.loc 1 167 26 is_stmt 0 view .LVU132
 419 01b0 9DF82530 		ldrb	r3, [sp, #37]	@ zero_extendqisi2
 420              		.loc 1 167 15 view .LVU133
 421 01b4 03B3     		cbz	r3, .L6
 168:Task/Task_Control.c ****             {
 169:Task/Task_Control.c ****                 TaskControl_Monitor.angular_protect = false;
 422              		.loc 1 169 17 is_stmt 1 view .LVU134
 423              		.loc 1 169 53 is_stmt 0 view .LVU135
 424 01b6 204B     		ldr	r3, .L31
 425 01b8 0022     		movs	r2, #0
 426 01ba 9A70     		strb	r2, [r3, #2]
 170:Task/Task_Control.c ****                 TaskControl_Monitor.angular_warning_cnt = 0;
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 12


 427              		.loc 1 170 17 is_stmt 1 view .LVU136
 428              		.loc 1 170 57 is_stmt 0 view .LVU137
 429 01bc DA70     		strb	r2, [r3, #3]
 430              	.L22:
 171:Task/Task_Control.c ****             }
 172:Task/Task_Control.c ****             else
 173:Task/Task_Control.c ****                 goto lock_moto;
 174:Task/Task_Control.c ****         }
 175:Task/Task_Control.c **** 
 176:Task/Task_Control.c ****         /* currently lock moto */
 177:Task/Task_Control.c ****         if(TaskControl_Monitor.auto_control)
 431              		.loc 1 177 9 is_stmt 1 view .LVU138
 432              		.loc 1 177 31 is_stmt 0 view .LVU139
 433 01be 1E4B     		ldr	r3, .L31
 434 01c0 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 435              		.loc 1 177 11 view .LVU140
 436 01c2 CBB9     		cbnz	r3, .L6
 178:Task/Task_Control.c ****             goto lock_moto;
 179:Task/Task_Control.c **** 
 180:Task/Task_Control.c ****         // do drone control algorithm down below
 181:Task/Task_Control.c **** 
 182:Task/Task_Control.c ****         // currently use gimbal input percent val for moto testing
 183:Task/Task_Control.c ****         gimbal[1] = 0;
 437              		.loc 1 183 9 is_stmt 1 view .LVU141
 438              		.loc 1 183 19 is_stmt 0 view .LVU142
 439 01c4 ADF82A30 		strh	r3, [sp, #42]	@ movhi
 184:Task/Task_Control.c ****         gimbal[2] = 0;
 440              		.loc 1 184 9 is_stmt 1 view .LVU143
 441              		.loc 1 184 19 is_stmt 0 view .LVU144
 442 01c8 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 185:Task/Task_Control.c ****         gimbal[3] = 0;
 443              		.loc 1 185 9 is_stmt 1 view .LVU145
 444              		.loc 1 185 19 is_stmt 0 view .LVU146
 445 01cc ADF82E30 		strh	r3, [sp, #46]	@ movhi
 186:Task/Task_Control.c **** 
 187:Task/Task_Control.c ****         SrvActuator.moto_control(gimbal);
 446              		.loc 1 187 9 is_stmt 1 view .LVU147
 447              		.loc 1 187 20 is_stmt 0 view .LVU148
 448 01d0 1B4B     		ldr	r3, .L31+8
 449 01d2 9B68     		ldr	r3, [r3, #8]	@ unaligned
 450              		.loc 1 187 9 view .LVU149
 451 01d4 0AA8     		add	r0, sp, #40
 452 01d6 9847     		blx	r3
 453              	.LVL18:
 188:Task/Task_Control.c **** 
 189:Task/Task_Control.c ****         if(imu_err_code == SrvIMU_Sample_NoError)
 454              		.loc 1 189 9 is_stmt 1 view .LVU150
 455              		.loc 1 189 25 is_stmt 0 view .LVU151
 456 01d8 9DF82630 		ldrb	r3, [sp, #38]	@ zero_extendqisi2
 457              		.loc 1 189 11 view .LVU152
 458 01dc 43B3     		cbz	r3, .L23
 459 01de 0EE0     		b	.L5
 460              	.LVL19:
 461              	.L7:
 144:Task/Task_Control.c **** 
 462              		.loc 1 144 13 is_stmt 1 view .LVU153
 144:Task/Task_Control.c **** 
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 13


 463              		.loc 1 144 32 is_stmt 0 view .LVU154
 464 01e0 154A     		ldr	r2, .L31
 465 01e2 92F85C30 		ldrb	r3, [r2, #92]	@ zero_extendqisi2
 144:Task/Task_Control.c **** 
 466              		.loc 1 144 53 view .LVU155
 467 01e6 0133     		adds	r3, r3, #1
 468 01e8 DBB2     		uxtb	r3, r3
 469 01ea 82F85C30 		strb	r3, [r2, #92]
 146:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 470              		.loc 1 146 13 is_stmt 1 view .LVU156
 146:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 471              		.loc 1 146 15 is_stmt 0 view .LVU157
 472 01ee 092B     		cmp	r3, #9
 473 01f0 02D9     		bls	.L6
 147:Task/Task_Control.c **** 
 474              		.loc 1 147 17 is_stmt 1 view .LVU158
 147:Task/Task_Control.c **** 
 475              		.loc 1 147 51 is_stmt 0 view .LVU159
 476 01f2 1346     		mov	r3, r2
 477 01f4 0122     		movs	r2, #1
 478 01f6 5A70     		strb	r2, [r3, #1]
 149:Task/Task_Control.c ****         }
 479              		.loc 1 149 13 is_stmt 1 view .LVU160
 480              	.LVL20:
 481              	.L6:
 190:Task/Task_Control.c ****         {
 191:Task/Task_Control.c ****             for(axis = Axis_X; axis < Axis_Sum; axis ++)
 192:Task/Task_Control.c ****             {
 193:Task/Task_Control.c ****                 TaskControl_Monitor.acc_lst[axis] = TaskControl_Monitor.acc[axis];
 194:Task/Task_Control.c ****                 TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 195:Task/Task_Control.c ****             }
 196:Task/Task_Control.c ****         }
 197:Task/Task_Control.c ****         return;
 198:Task/Task_Control.c ****     }
 199:Task/Task_Control.c **** 
 200:Task/Task_Control.c **** lock_moto:
 201:Task/Task_Control.c ****     SrvActuator.lock();
 482              		.loc 1 201 5 view .LVU161
 483              		.loc 1 201 16 is_stmt 0 view .LVU162
 484 01f8 114B     		ldr	r3, .L31+8
 485 01fa 5B68     		ldr	r3, [r3, #4]	@ unaligned
 486              		.loc 1 201 5 view .LVU163
 487 01fc 9847     		blx	r3
 488              	.LVL21:
 489              	.L5:
 202:Task/Task_Control.c **** }
 490              		.loc 1 202 1 view .LVU164
 491 01fe 21B0     		add	sp, sp, #132
 492              	.LCFI3:
 493              		.cfi_remember_state
 494              		.cfi_def_cfa_offset 12
 495              		@ sp needed
 496 0200 30BD     		pop	{r4, r5, pc}
 497              	.LVL22:
 498              	.L25:
 499              	.LCFI4:
 500              		.cfi_restore_state
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 14


 193:Task/Task_Control.c ****                 TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 501              		.loc 1 193 17 is_stmt 1 discriminator 3 view .LVU165
 193:Task/Task_Control.c ****                 TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 502              		.loc 1 193 76 is_stmt 0 discriminator 3 view .LVU166
 503 0202 0D4A     		ldr	r2, .L31
 504 0204 03F10801 		add	r1, r3, #8
 505 0208 02EB8101 		add	r1, r2, r1, lsl #2
 506 020c 4868     		ldr	r0, [r1, #4]	@ float
 193:Task/Task_Control.c ****                 TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 507              		.loc 1 193 51 discriminator 3 view .LVU167
 508 020e 03F11001 		add	r1, r3, #16
 509 0212 02EB8101 		add	r1, r2, r1, lsl #2
 510 0216 0860     		str	r0, [r1]	@ float
 194:Task/Task_Control.c ****             }
 511              		.loc 1 194 17 is_stmt 1 discriminator 3 view .LVU168
 194:Task/Task_Control.c ****             }
 512              		.loc 1 194 76 is_stmt 0 discriminator 3 view .LVU169
 513 0218 03F10C01 		add	r1, r3, #12
 514 021c 02EB8101 		add	r1, r2, r1, lsl #2
 515 0220 0968     		ldr	r1, [r1]	@ float
 194:Task/Task_Control.c ****             }
 516              		.loc 1 194 51 discriminator 3 view .LVU170
 517 0222 03F11200 		add	r0, r3, #18
 518 0226 02EB8002 		add	r2, r2, r0, lsl #2
 519 022a 5160     		str	r1, [r2, #4]	@ float
 191:Task/Task_Control.c ****             {
 520              		.loc 1 191 49 is_stmt 1 discriminator 3 view .LVU171
 191:Task/Task_Control.c ****             {
 521              		.loc 1 191 54 is_stmt 0 discriminator 3 view .LVU172
 522 022c 0133     		adds	r3, r3, #1
 523              	.LVL23:
 191:Task/Task_Control.c ****             {
 524              		.loc 1 191 54 discriminator 3 view .LVU173
 525 022e DBB2     		uxtb	r3, r3
 526              	.LVL24:
 527              	.L23:
 191:Task/Task_Control.c ****             {
 528              		.loc 1 191 32 is_stmt 1 discriminator 1 view .LVU174
 191:Task/Task_Control.c ****             {
 529              		.loc 1 191 13 is_stmt 0 discriminator 1 view .LVU175
 530 0230 022B     		cmp	r3, #2
 531 0232 E6D9     		bls	.L25
 532 0234 E3E7     		b	.L5
 533              	.L32:
 534 0236 00BF     		.align	2
 535              	.L31:
 536 0238 00000000 		.word	.LANCHOR0
 537 023c 00000000 		.word	SrvDataHub
 538 0240 00000000 		.word	SrvActuator
 539              		.cfi_endproc
 540              	.LFE152:
 542              		.global	TaskControl_Monitor
 543              		.global	LstCyc_Rc_Data
 544              		.global	LstCyc_IMU_Data
 545              		.section	.bss.LstCyc_IMU_Data,"aw",%nobits
 546              		.align	2
 549              	LstCyc_IMU_Data:
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 15


 550 0000 00000000 		.space	79
 550      00000000 
 550      00000000 
 550      00000000 
 550      00000000 
 551              		.section	.bss.LstCyc_Rc_Data,"aw",%nobits
 552              		.align	2
 555              	LstCyc_Rc_Data:
 556 0000 00000000 		.space	88
 556      00000000 
 556      00000000 
 556      00000000 
 556      00000000 
 557              		.section	.bss.TaskControl_Monitor,"aw",%nobits
 558              		.align	3
 559              		.set	.LANCHOR0,. + 0
 562              	TaskControl_Monitor:
 563 0000 00000000 		.space	96
 563      00000000 
 563      00000000 
 563      00000000 
 563      00000000 
 564              		.text
 565              	.Letext0:
 566              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 567              		.file 3 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 568              		.file 4 "System/runtime/runtime.h"
 569              		.file 5 "System/scheduler/scheduler.h"
 570              		.file 6 "Service/imu_data.h"
 571              		.file 7 "Task/Task_Control.h"
 572              		.file 8 "Service/Srv_IMUSample.h"
 573              		.file 9 "Service/Srv_Receiver.h"
 574              		.file 10 "Task/Task_Telemetry.h"
 575              		.file 11 "Device/Dev_Dshot.h"
 576              		.file 12 "Service/Srv_Actuator.h"
 577              		.file 13 "Service/Srv_DataHub.h"
 578              		.file 14 "<built-in>"
ARM GAS  /var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Task_Control.c
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:17     .text.TaskControl_Init:0000000000000000 $t
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:25     .text.TaskControl_Init:0000000000000000 TaskControl_Init
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:70     .text.TaskControl_Init:0000000000000024 $d
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:76     .text.TaskControl_Core:0000000000000000 $t
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:83     .text.TaskControl_Core:0000000000000000 TaskControl_Core
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:536    .text.TaskControl_Core:0000000000000238 $d
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:562    .bss.TaskControl_Monitor:0000000000000000 TaskControl_Monitor
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:555    .bss.LstCyc_Rc_Data:0000000000000000 LstCyc_Rc_Data
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:549    .bss.LstCyc_IMU_Data:0000000000000000 LstCyc_IMU_Data
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:546    .bss.LstCyc_IMU_Data:0000000000000000 $d
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:552    .bss.LstCyc_Rc_Data:0000000000000000 $d
/var/folders/8_/_8bzxkcs1296m80nzxdrn9q80000gn/T//ccybDFQU.s:558    .bss.TaskControl_Monitor:0000000000000000 $d

UNDEFINED SYMBOLS
memset
SrvActuator
SrvDataHub
