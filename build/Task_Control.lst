ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Task_Control.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TaskControl_disarm_check,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	TaskControl_disarm_check:
  26              	.LVL0:
  27              	.LFB2076:
  28              		.file 1 "Task/Task_Control.c"
   1:Task/Task_Control.c **** /*
   2:Task/Task_Control.c ****  *  Auther : 8_B!T0
   3:Task/Task_Control.c ****  *  this file use for moto & servo control
   4:Task/Task_Control.c ****  *  (but currently none servo)
   5:Task/Task_Control.c ****  */
   6:Task/Task_Control.c **** #include "Task_Control.h"
   7:Task/Task_Control.c **** #include "Srv_OsCommon.h"
   8:Task/Task_Control.c **** #include "Task_Telemetry.h"
   9:Task/Task_Control.c **** #include "Srv_DataHub.h"
  10:Task/Task_Control.c **** #include "Srv_Actuator.h"
  11:Task/Task_Control.c **** #include "shell_port.h"
  12:Task/Task_Control.c **** 
  13:Task/Task_Control.c **** #define CONTROL_STORAGE_SECTION_NAME "Control_Para"
  14:Task/Task_Control.c **** 
  15:Task/Task_Control.c **** #define DEFAULT_ATTITUDE_CONTROLLER_MODE CtlM_PID
  16:Task/Task_Control.c **** #define DEFAULT_ALTITUDE_CONTROLLER_MODE CtlM_PID
  17:Task/Task_Control.c **** 
  18:Task/Task_Control.c **** #define DEFAULT_CONTROL_RATE        1.0f
  19:Task/Task_Control.c **** 
  20:Task/Task_Control.c **** #define ATTITUDE_DISARM_RANGE_MAX   10.0f
  21:Task/Task_Control.c **** #define ATTITUDE_DISARM_RANGE_MIN   -10.0f
  22:Task/Task_Control.c **** 
  23:Task/Task_Control.c **** #define THROTTLE_CHANGE_RATE        50   /* unit value per ms */
  24:Task/Task_Control.c **** 
  25:Task/Task_Control.c **** #define DEFAULT_CONTROL_ATT_RANGE   25.0f
  26:Task/Task_Control.c **** #define DEFAULT_CONTROL_GYR_RANGE   500.0f
  27:Task/Task_Control.c **** 
  28:Task/Task_Control.c **** #define MAX_CONTROL_RATE            1.5f
  29:Task/Task_Control.c **** #define MIN_CONTROL_RATE            0.5f
  30:Task/Task_Control.c **** #define MAX_CONTROL_ATT_RANGE       45.0f
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 2


  31:Task/Task_Control.c **** #define MIN_CONTROL_ATT_RANGE       15.0f
  32:Task/Task_Control.c **** #define MAX_CONTROL_GYR_RANGE       800.0f
  33:Task/Task_Control.c **** #define MIN_CONTROL_GYR_RANGE       200.0f
  34:Task/Task_Control.c **** 
  35:Task/Task_Control.c **** #define Check_Control_Rate(x)       ((x > MAX_CONTROL_RATE) ? MAX_CONTROL_RATE : ((x < MIN_CONTROL_
  36:Task/Task_Control.c **** #define Check_AttControl_Range(x)   ((x > MAX_CONTROL_ATT_RANGE) ? MAX_CONTROL_ATT_RANGE : ((x < MI
  37:Task/Task_Control.c **** #define Check_GyrControl_Range(x)   ((x > MAX_CONTROL_GYR_RANGE) ? MAX_CONTROL_GYR_RANGE : ((x < MI
  38:Task/Task_Control.c **** 
  39:Task/Task_Control.c **** static uint32_t imu_update_time = 0;
  40:Task/Task_Control.c **** static uint32_t att_update_time = 0;
  41:Task/Task_Control.c **** static uint8_t imu_err_code;
  42:Task/Task_Control.c **** static bool failsafe = false;
  43:Task/Task_Control.c **** static bool imu_init_state = false;
  44:Task/Task_Control.c **** static bool att_update = false;
  45:Task/Task_Control.c **** 
  46:Task/Task_Control.c **** DataPipe_CreateDataObj(ExpControlData_TypeDef, ExpCtl);
  47:Task/Task_Control.c **** 
  48:Task/Task_Control.c **** TaskControl_Monitor_TypeDef TaskControl_Monitor = {
  49:Task/Task_Control.c ****     .init_state = false,
  50:Task/Task_Control.c ****     .control_abort = false,
  51:Task/Task_Control.c **** 
  52:Task/Task_Control.c ****     /* on test mode use angular_speed over rate threshold protect */
  53:Task/Task_Control.c ****     .angular_protect_enable = true,
  54:Task/Task_Control.c ****     .angular_protect = false,
  55:Task/Task_Control.c **** 
  56:Task/Task_Control.c ****     /* on test mode for throttle control value mutation protect */
  57:Task/Task_Control.c ****     .throttle_protect_enable = true,
  58:Task/Task_Control.c ****     .throttle_protect = false,
  59:Task/Task_Control.c ****     .throttle_percent = 0,
  60:Task/Task_Control.c **** 
  61:Task/Task_Control.c ****     .dynamic_disarm_enable = false,
  62:Task/Task_Control.c ****     .IMU_Rt = 0,
  63:Task/Task_Control.c **** };
  64:Task/Task_Control.c **** 
  65:Task/Task_Control.c **** /* internal function */
  66:Task/Task_Control.c **** static void TaskControl_FlightControl_Polling(ControlData_TypeDef *exp_ctl_val, uint32_t sys_ms);
  67:Task/Task_Control.c **** static void TaskControl_Actuator_ControlValue_Update(uint16_t throttle, float GX_Ctl_Out, float GY_
  68:Task/Task_Control.c **** static void TaskControl_CLI_Polling(void);
  69:Task/Task_Control.c **** static void TaskControl_Get_StoreParam(void);
  70:Task/Task_Control.c **** 
  71:Task/Task_Control.c **** /* internal var */
  72:Task/Task_Control.c **** static uint32_t TaskControl_Period = 0;
  73:Task/Task_Control.c **** 
  74:Task/Task_Control.c **** void TaskControl_Init(uint32_t period)
  75:Task/Task_Control.c **** {
  76:Task/Task_Control.c ****     /* init monitor */
  77:Task/Task_Control.c ****     memset(&TaskControl_Monitor, 0, sizeof(TaskControl_Monitor));
  78:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
  79:Task/Task_Control.c **** 
  80:Task/Task_Control.c ****     /* pipe init */
  81:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_addr = (uint32_t)DataPipe_DataObjAddr(ExpCtl);
  82:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_size = DataPipe_DataSize(ExpCtl);
  83:Task/Task_Control.c ****     DataPipe_Enable(&CtlData_smp_DataPipe);
  84:Task/Task_Control.c ****     
  85:Task/Task_Control.c ****     /* Parametet Init */
  86:Task/Task_Control.c ****     TaskControl_Get_StoreParam();
  87:Task/Task_Control.c ****     TaskControl_Monitor.init_state = SrvActuator.init(TaskControl_Monitor.actuator_param);
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 3


  88:Task/Task_Control.c **** 
  89:Task/Task_Control.c ****     osMessageQDef(MotoCLI_Data, 64, TaskControl_CLIData_TypeDef);
  90:Task/Task_Control.c ****     TaskControl_Monitor.CLIMessage_ID = osMessageCreate(osMessageQ(MotoCLI_Data), NULL);
  91:Task/Task_Control.c ****     
  92:Task/Task_Control.c ****     TaskControl_Period = period;
  93:Task/Task_Control.c **** }
  94:Task/Task_Control.c **** 
  95:Task/Task_Control.c **** /* read param from storage */
  96:Task/Task_Control.c **** static void TaskControl_Get_StoreParam(void)
  97:Task/Task_Control.c **** {
  98:Task/Task_Control.c ****     SrvActuator_Setting_TypeDef Actuator_Param;
  99:Task/Task_Control.c ****     TaskControl_CtlPara_TypeDef Ctl_Param;
 100:Task/Task_Control.c **** 
 101:Task/Task_Control.c ****     /* search storage section first */
 102:Task/Task_Control.c ****     memset(&Ctl_Param, 0, sizeof(TaskControl_CtlPara_TypeDef));
 103:Task/Task_Control.c ****     memset(&Actuator_Param, 0, sizeof(SrvActuator_Setting_TypeDef));
 104:Task/Task_Control.c ****     memset(&TaskControl_Monitor.controller_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 105:Task/Task_Control.c ****     memset(&TaskControl_Monitor.actuator_store_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 106:Task/Task_Control.c **** 
 107:Task/Task_Control.c ****     TaskControl_Monitor.controller_info = Storage.search(Para_User, CONTROL_STORAGE_SECTION_NAME);
 108:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 109:Task/Task_Control.c **** 
 110:Task/Task_Control.c ****     /* set Ctl Parameter as default */
 111:Task/Task_Control.c ****     Ctl_Param.att_mode = DEFAULT_ATTITUDE_CONTROLLER_MODE;
 112:Task/Task_Control.c ****     Ctl_Param.alt_mode = DEFAULT_ATTITUDE_CONTROLLER_MODE;
 113:Task/Task_Control.c ****     Ctl_Param.att_rate = DEFAULT_CONTROL_RATE;
 114:Task/Task_Control.c ****     Ctl_Param.gx_rate = DEFAULT_CONTROL_RATE;
 115:Task/Task_Control.c ****     Ctl_Param.gy_rate = DEFAULT_CONTROL_RATE;
 116:Task/Task_Control.c ****     Ctl_Param.gz_rate = DEFAULT_CONTROL_RATE;
 117:Task/Task_Control.c ****     Ctl_Param.pitch_range = DEFAULT_CONTROL_ATT_RANGE;
 118:Task/Task_Control.c ****     Ctl_Param.roll_range = DEFAULT_CONTROL_ATT_RANGE;
 119:Task/Task_Control.c ****     Ctl_Param.gx_range = DEFAULT_CONTROL_GYR_RANGE;
 120:Task/Task_Control.c ****     Ctl_Param.gy_range = DEFAULT_CONTROL_GYR_RANGE;
 121:Task/Task_Control.c ****     Ctl_Param.gz_range = DEFAULT_CONTROL_GYR_RANGE;
 122:Task/Task_Control.c ****     memcpy(&TaskControl_Monitor.ctl_para, &Ctl_Param, sizeof(TaskControl_CtlPara_TypeDef));
 123:Task/Task_Control.c **** 
 124:Task/Task_Control.c ****     if (TaskControl_Monitor.controller_info.item_addr == 0)
 125:Task/Task_Control.c ****     {
 126:Task/Task_Control.c ****         /* section create */
 127:Task/Task_Control.c ****         Storage.create(Para_User, CONTROL_STORAGE_SECTION_NAME, (uint8_t *)&Ctl_Param, sizeof(TaskC
 128:Task/Task_Control.c ****     }
 129:Task/Task_Control.c ****     else if (Storage.get(Para_User, TaskControl_Monitor.controller_info.item, (uint8_t *)&Ctl_Param
 130:Task/Task_Control.c ****     {
 131:Task/Task_Control.c ****         /* check rate parameter validation */
 132:Task/Task_Control.c ****         Ctl_Param.att_rate = Check_Control_Rate(Ctl_Param.att_rate);
 133:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 134:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 135:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 136:Task/Task_Control.c **** 
 137:Task/Task_Control.c ****         /* check range parameter validation */
 138:Task/Task_Control.c ****         Ctl_Param.pitch_range = Check_AttControl_Range(Ctl_Param.pitch_range);
 139:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 140:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 141:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 142:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 143:Task/Task_Control.c **** 
 144:Task/Task_Control.c ****         memcpy(&TaskControl_Monitor.ctl_para, &Ctl_Param, sizeof(TaskControl_CtlPara_TypeDef));
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 4


 145:Task/Task_Control.c ****     }
 146:Task/Task_Control.c ****     
 147:Task/Task_Control.c ****     /* controller load parameter from storage */
 148:Task/Task_Control.c ****     Controller.att_ctl_init(TaskControl_Monitor.ctl_para.att_mode);
 149:Task/Task_Control.c ****     Controller.alt_ctl_init(TaskControl_Monitor.ctl_para.alt_mode);
 150:Task/Task_Control.c **** 
 151:Task/Task_Control.c ****     /* get actuator parameter */
 152:Task/Task_Control.c ****     /* set as default */
 153:Task/Task_Control.c ****     TaskControl_Monitor.actuator_param = SrvActuator.default_param();
 154:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr && \
 155:Task/Task_Control.c ****         (Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuator_
 156:Task/Task_Control.c ****         TaskControl_Monitor.actuator_param = Actuator_Param;
 157:Task/Task_Control.c **** }
 158:Task/Task_Control.c **** 
 159:Task/Task_Control.c **** static bool TaskControl_disarm_check(bool telemetry_arm, float pitch, float roll)
 160:Task/Task_Control.c **** {
  29              		.loc 1 160 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 161:Task/Task_Control.c ****     if (telemetry_arm == DRONE_ARM)
  34              		.loc 1 161 5 view .LVU1
  35              		.loc 1 161 8 is_stmt 0 view .LVU2
  36 0000 58BB     		cbnz	r0, .L10
 162:Task/Task_Control.c ****     {
 163:Task/Task_Control.c ****         TaskControl_Monitor.moto_unlock = Moto_Lock;
 164:Task/Task_Control.c ****         return false;
 165:Task/Task_Control.c ****     }
 166:Task/Task_Control.c **** 
 167:Task/Task_Control.c ****     if (TaskControl_Monitor.dynamic_disarm_enable)
  37              		.loc 1 167 5 is_stmt 1 view .LVU3
  38              		.loc 1 167 28 is_stmt 0 view .LVU4
  39 0002 1E4B     		ldr	r3, .L12
  40 0004 93F81101 		ldrb	r0, [r3, #273]	@ zero_extendqisi2
  41              	.LVL1:
  42              		.loc 1 167 8 view .LVU5
  43 0008 60BB     		cbnz	r0, .L11
 168:Task/Task_Control.c ****     {
 169:Task/Task_Control.c ****         TaskControl_Monitor.moto_unlock = Moto_Unlock;
 170:Task/Task_Control.c ****         return true;
 171:Task/Task_Control.c ****     }
 172:Task/Task_Control.c **** 
 173:Task/Task_Control.c ****     if (TaskControl_Monitor.moto_unlock != Moto_Unlock)
  44              		.loc 1 173 5 is_stmt 1 view .LVU6
  45              		.loc 1 173 28 is_stmt 0 view .LVU7
  46 000a 1C4B     		ldr	r3, .L12
  47 000c 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
  48              		.loc 1 173 8 view .LVU8
  49 0010 012B     		cmp	r3, #1
  50 0012 30D0     		beq	.L8
 174:Task/Task_Control.c ****     {
 175:Task/Task_Control.c ****         if (TaskControl_Monitor.moto_unlock == Moto_Unlock_Err)
  51              		.loc 1 175 9 is_stmt 1 view .LVU9
  52              		.loc 1 175 12 is_stmt 0 view .LVU10
  53 0014 022B     		cmp	r3, #2
  54 0016 2FD0     		beq	.L3
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 5


 176:Task/Task_Control.c ****             return false;
 177:Task/Task_Control.c **** 
 178:Task/Task_Control.c ****         /* attitude pitch check */
 179:Task/Task_Control.c ****         if ((pitch > ATTITUDE_DISARM_RANGE_MAX) || \
  55              		.loc 1 179 9 is_stmt 1 view .LVU11
  56              		.loc 1 179 12 is_stmt 0 view .LVU12
  57 0018 F2EE047A 		vmov.f32	s15, #1.0e+1
  58 001c B4EEE70A 		vcmpe.f32	s0, s15
  59 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  60 0024 14DC     		bgt	.L5
  61              		.loc 1 179 49 discriminator 1 view .LVU13
  62 0026 FAEE047A 		vmov.f32	s15, #-1.0e+1
  63 002a B4EEE70A 		vcmpe.f32	s0, s15
  64 002e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  65 0032 0DD4     		bmi	.L5
 180:Task/Task_Control.c ****             (pitch < ATTITUDE_DISARM_RANGE_MIN) || \
  66              		.loc 1 180 49 view .LVU14
  67 0034 F2EE047A 		vmov.f32	s15, #1.0e+1
  68 0038 F4EEE70A 		vcmpe.f32	s1, s15
  69 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  70 0040 06DC     		bgt	.L5
 181:Task/Task_Control.c ****             (roll > ATTITUDE_DISARM_RANGE_MAX) || \
  71              		.loc 1 181 48 view .LVU15
  72 0042 FAEE047A 		vmov.f32	s15, #-1.0e+1
  73 0046 F4EEE70A 		vcmpe.f32	s1, s15
  74 004a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  75 004e 0DD5     		bpl	.L9
  76              	.L5:
 182:Task/Task_Control.c ****             (roll < ATTITUDE_DISARM_RANGE_MIN))
 183:Task/Task_Control.c ****         {
 184:Task/Task_Control.c ****             TaskControl_Monitor.moto_unlock = Moto_Unlock_Err;
  77              		.loc 1 184 13 is_stmt 1 view .LVU16
  78              		.loc 1 184 45 is_stmt 0 view .LVU17
  79 0050 0A4B     		ldr	r3, .L12
  80 0052 0222     		movs	r2, #2
  81 0054 83F81221 		strb	r2, [r3, #274]
 185:Task/Task_Control.c ****             return false;
  82              		.loc 1 185 13 is_stmt 1 view .LVU18
  83              		.loc 1 185 20 is_stmt 0 view .LVU19
  84 0058 7047     		bx	lr
  85              	.LVL2:
  86              	.L10:
 163:Task/Task_Control.c ****         return false;
  87              		.loc 1 163 9 is_stmt 1 view .LVU20
 163:Task/Task_Control.c ****         return false;
  88              		.loc 1 163 41 is_stmt 0 view .LVU21
  89 005a 0020     		movs	r0, #0
  90              	.LVL3:
 163:Task/Task_Control.c ****         return false;
  91              		.loc 1 163 41 view .LVU22
  92 005c 074B     		ldr	r3, .L12
  93 005e 83F81201 		strb	r0, [r3, #274]
 164:Task/Task_Control.c ****     }
  94              		.loc 1 164 9 is_stmt 1 view .LVU23
 164:Task/Task_Control.c ****     }
  95              		.loc 1 164 16 is_stmt 0 view .LVU24
  96 0062 7047     		bx	lr
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 6


  97              	.L11:
 169:Task/Task_Control.c ****         return true;
  98              		.loc 1 169 9 is_stmt 1 view .LVU25
 169:Task/Task_Control.c ****         return true;
  99              		.loc 1 169 41 is_stmt 0 view .LVU26
 100 0064 0122     		movs	r2, #1
 101 0066 83F81221 		strb	r2, [r3, #274]
 170:Task/Task_Control.c ****     }
 102              		.loc 1 170 9 is_stmt 1 view .LVU27
 170:Task/Task_Control.c ****     }
 103              		.loc 1 170 16 is_stmt 0 view .LVU28
 104 006a 7047     		bx	lr
 105              	.L9:
 186:Task/Task_Control.c ****         }
 187:Task/Task_Control.c **** 
 188:Task/Task_Control.c ****         TaskControl_Monitor.moto_unlock = Moto_Unlock;
 106              		.loc 1 188 9 is_stmt 1 view .LVU29
 107              		.loc 1 188 41 is_stmt 0 view .LVU30
 108 006c 0120     		movs	r0, #1
 109 006e 034B     		ldr	r3, .L12
 110 0070 83F81201 		strb	r0, [r3, #274]
 189:Task/Task_Control.c ****         return true;
 111              		.loc 1 189 9 is_stmt 1 view .LVU31
 112              		.loc 1 189 16 is_stmt 0 view .LVU32
 113 0074 7047     		bx	lr
 114              	.L8:
 190:Task/Task_Control.c ****     }
 191:Task/Task_Control.c **** 
 192:Task/Task_Control.c ****     return true;
 115              		.loc 1 192 12 view .LVU33
 116 0076 0120     		movs	r0, #1
 117              	.L3:
 193:Task/Task_Control.c **** }
 118              		.loc 1 193 1 view .LVU34
 119 0078 7047     		bx	lr
 120              	.L13:
 121 007a 00BF     		.align	2
 122              	.L12:
 123 007c 00000000 		.word	.LANCHOR0
 124              		.cfi_endproc
 125              	.LFE2076:
 127              		.section	.text.TaskControl_Actuator_ControlValue_Update,"ax",%progbits
 128              		.align	1
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 133              	TaskControl_Actuator_ControlValue_Update:
 134              	.LVL4:
 135              	.LFB2078:
 194:Task/Task_Control.c **** 
 195:Task/Task_Control.c **** void TaskControl_Core(void const *arg)
 196:Task/Task_Control.c **** {
 197:Task/Task_Control.c ****     uint32_t sys_time = SrvOsCommon.get_os_ms();
 198:Task/Task_Control.c ****     uint32_t task_tick = 0;
 199:Task/Task_Control.c ****     bool upgrade_state = false;
 200:Task/Task_Control.c ****     ControlData_TypeDef CtlData;
 201:Task/Task_Control.c ****     memset(&CtlData, 0, sizeof(ControlData_TypeDef));
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 7


 202:Task/Task_Control.c **** 
 203:Task/Task_Control.c ****     while(1)
 204:Task/Task_Control.c ****     {
 205:Task/Task_Control.c ****         task_tick = SrvOsCommon.get_os_ms();
 206:Task/Task_Control.c **** 
 207:Task/Task_Control.c ****         /* get control data from data hub */
 208:Task/Task_Control.c ****         SrvDataHub.get_rc_control_data(&CtlData);
 209:Task/Task_Control.c **** 
 210:Task/Task_Control.c ****         if (SrvDataHub.get_upgrade_state(&upgrade_state) && upgrade_state)
 211:Task/Task_Control.c ****         {
 212:Task/Task_Control.c ****             /* lock all actuator when upgrading */
 213:Task/Task_Control.c ****             SrvActuator.lock();
 214:Task/Task_Control.c ****         }
 215:Task/Task_Control.c ****         else
 216:Task/Task_Control.c ****         {
 217:Task/Task_Control.c ****             if (!TaskControl_Monitor.CLI_enable)
 218:Task/Task_Control.c ****             {
 219:Task/Task_Control.c ****                 /* debug set control to angular speed control */
 220:Task/Task_Control.c ****                 TaskControl_FlightControl_Polling(&CtlData, task_tick);
 221:Task/Task_Control.c ****             }
 222:Task/Task_Control.c ****             else
 223:Task/Task_Control.c ****             {
 224:Task/Task_Control.c ****                 if(TaskControl_Monitor.CLI_enable)
 225:Task/Task_Control.c ****                 {
 226:Task/Task_Control.c ****                     TaskControl_CLI_Polling();
 227:Task/Task_Control.c ****                 }
 228:Task/Task_Control.c ****                 else
 229:Task/Task_Control.c ****                     /* lock all moto */
 230:Task/Task_Control.c ****                     SrvActuator.lock();
 231:Task/Task_Control.c ****             }
 232:Task/Task_Control.c ****         }
 233:Task/Task_Control.c **** 
 234:Task/Task_Control.c ****         SrvOsCommon.precise_delay(&sys_time, TaskControl_Period);
 235:Task/Task_Control.c ****     }
 236:Task/Task_Control.c **** }
 237:Task/Task_Control.c **** 
 238:Task/Task_Control.c **** static void TaskControl_Actuator_ControlValue_Update(uint16_t throttle, float GX_Ctl_Out, float GY_
 239:Task/Task_Control.c **** {
 136              		.loc 1 239 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 239 1 is_stmt 0 view .LVU36
 141 0000 00B5     		push	{lr}
 142              	.LCFI0:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 14, -4
 145 0002 83B0     		sub	sp, sp, #12
 146              	.LCFI1:
 147              		.cfi_def_cfa_offset 16
 240:Task/Task_Control.c ****     int16_t ctl_buf[Actuator_Ctl_Sum] = {0};
 148              		.loc 1 240 5 is_stmt 1 view .LVU37
 149              		.loc 1 240 13 is_stmt 0 view .LVU38
 150 0004 0023     		movs	r3, #0
 151 0006 0093     		str	r3, [sp]
 152 0008 0193     		str	r3, [sp, #4]
 241:Task/Task_Control.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 8


 242:Task/Task_Control.c ****     /* idle spin when disarm */
 243:Task/Task_Control.c ****     ctl_buf[Actuator_Ctl_Throttle] = throttle;
 153              		.loc 1 243 5 is_stmt 1 view .LVU39
 154              		.loc 1 243 36 is_stmt 0 view .LVU40
 155 000a ADF80000 		strh	r0, [sp]	@ movhi
 244:Task/Task_Control.c **** 
 245:Task/Task_Control.c ****     ctl_buf[Actuator_Ctl_GyrX] = (int16_t)GX_Ctl_Out;
 156              		.loc 1 245 5 is_stmt 1 view .LVU41
 157              		.loc 1 245 34 is_stmt 0 view .LVU42
 158 000e BDEEC00A 		vcvt.s32.f32	s0, s0
 159              	.LVL5:
 160              		.loc 1 245 32 view .LVU43
 161 0012 10EE103A 		vmov	r3, s0	@ int
 162 0016 ADF80230 		strh	r3, [sp, #2]	@ movhi
 246:Task/Task_Control.c ****     ctl_buf[Actuator_Ctl_GyrY] = (int16_t)GY_Ctl_Out;
 163              		.loc 1 246 5 is_stmt 1 view .LVU44
 164              		.loc 1 246 34 is_stmt 0 view .LVU45
 165 001a FDEEE00A 		vcvt.s32.f32	s1, s1
 166              	.LVL6:
 167              		.loc 1 246 32 view .LVU46
 168 001e 10EE903A 		vmov	r3, s1	@ int
 169 0022 ADF80430 		strh	r3, [sp, #4]	@ movhi
 247:Task/Task_Control.c ****     ctl_buf[Actuator_Ctl_GyrZ] = (int16_t)GZ_Ctl_Out;
 170              		.loc 1 247 5 is_stmt 1 view .LVU47
 171              		.loc 1 247 34 is_stmt 0 view .LVU48
 172 0026 BDEEC11A 		vcvt.s32.f32	s2, s2
 173              	.LVL7:
 174              		.loc 1 247 32 view .LVU49
 175 002a 11EE103A 		vmov	r3, s2	@ int
 176 002e ADF80630 		strh	r3, [sp, #6]	@ movhi
 248:Task/Task_Control.c **** 
 249:Task/Task_Control.c ****     SrvActuator.moto_control(ctl_buf);
 177              		.loc 1 249 5 is_stmt 1 view .LVU50
 178              		.loc 1 249 16 is_stmt 0 view .LVU51
 179 0032 034B     		ldr	r3, .L16
 180 0034 1B69     		ldr	r3, [r3, #16]
 181              		.loc 1 249 5 view .LVU52
 182 0036 6846     		mov	r0, sp
 183              	.LVL8:
 184              		.loc 1 249 5 view .LVU53
 185 0038 9847     		blx	r3
 186              	.LVL9:
 250:Task/Task_Control.c **** }
 187              		.loc 1 250 1 view .LVU54
 188 003a 03B0     		add	sp, sp, #12
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 4
 191              		@ sp needed
 192 003c 5DF804FB 		ldr	pc, [sp], #4
 193              	.L17:
 194              		.align	2
 195              	.L16:
 196 0040 00000000 		.word	SrvActuator
 197              		.cfi_endproc
 198              	.LFE2078:
 200              		.section	.text.TaskControl_Convert_CtlData,"ax",%progbits
 201              		.align	1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 9


 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	TaskControl_Convert_CtlData:
 207              	.LVL10:
 208              	.LFB2079:
 251:Task/Task_Control.c **** 
 252:Task/Task_Control.c **** /****************************************************** Flight Control Section ********************
 253:Task/Task_Control.c **** static float TaskControl_Convert_CtlData(uint8_t gimbal_percent, float range, float rate)
 254:Task/Task_Control.c **** {
 209              		.loc 1 254 1 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              		.loc 1 254 1 is_stmt 0 view .LVU56
 215 0000 07EE900A 		vmov	s15, r0	@ int
 255:Task/Task_Control.c ****     float exp = 0.0f;
 216              		.loc 1 255 5 is_stmt 1 view .LVU57
 217              	.LVL11:
 256:Task/Task_Control.c **** 
 257:Task/Task_Control.c ****     exp = (gimbal_percent - 50.0f) / 100.0f;
 218              		.loc 1 257 5 view .LVU58
 219              		.loc 1 257 27 is_stmt 0 view .LVU59
 220 0004 F8EEE77A 		vcvt.f32.s32	s15, s15
 221 0008 9FED0A7A 		vldr.32	s14, .L24
 222 000c 77EEC77A 		vsub.f32	s15, s15, s14
 223              		.loc 1 257 9 view .LVU60
 224 0010 DFED096A 		vldr.32	s13, .L24+4
 225 0014 87EEA67A 		vdiv.f32	s14, s15, s13
 226              	.LVL12:
 258:Task/Task_Control.c ****     if (exp >= 0)
 227              		.loc 1 258 5 is_stmt 1 view .LVU61
 228              		.loc 1 258 8 is_stmt 0 view .LVU62
 229 0018 B5EEC07A 		vcmpe.f32	s14, #0
 230 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 231 0020 04DB     		blt	.L23
 259:Task/Task_Control.c ****     {
 260:Task/Task_Control.c ****         exp *= range;
 232              		.loc 1 260 9 is_stmt 1 view .LVU63
 233              		.loc 1 260 13 is_stmt 0 view .LVU64
 234 0022 27EE000A 		vmul.f32	s0, s14, s0
 235              	.LVL13:
 236              	.L21:
 261:Task/Task_Control.c ****     }
 262:Task/Task_Control.c ****     else
 263:Task/Task_Control.c ****         exp *= -range;
 264:Task/Task_Control.c ****     
 265:Task/Task_Control.c ****     return exp *= rate;
 237              		.loc 1 265 5 is_stmt 1 view .LVU65
 266:Task/Task_Control.c **** }
 238              		.loc 1 266 1 is_stmt 0 view .LVU66
 239 0026 20EE200A 		vmul.f32	s0, s0, s1
 240              	.LVL14:
 241              		.loc 1 266 1 view .LVU67
 242 002a 7047     		bx	lr
 243              	.LVL15:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 10


 244              	.L23:
 263:Task/Task_Control.c ****     
 245              		.loc 1 263 9 is_stmt 1 view .LVU68
 263:Task/Task_Control.c ****     
 246              		.loc 1 263 13 is_stmt 0 view .LVU69
 247 002c 20EE470A 		vnmul.f32	s0, s0, s14
 248              	.LVL16:
 263:Task/Task_Control.c ****     
 249              		.loc 1 263 13 view .LVU70
 250 0030 F9E7     		b	.L21
 251              	.L25:
 252 0032 00BF     		.align	2
 253              	.L24:
 254 0034 00004842 		.word	1112014848
 255 0038 0000C842 		.word	1120403456
 256              		.cfi_endproc
 257              	.LFE2079:
 259              		.section	.rodata.TaskControl_Get_StoreParam.str1.4,"aMS",%progbits,1
 260              		.align	2
 261              	.LC1:
 262 0000 436F6E74 		.ascii	"Control_Para\000"
 262      726F6C5F 
 262      50617261 
 262      00
 263 000d 000000   		.align	2
 264              	.LC2:
 265 0010 41637475 		.ascii	"Actuator_Para\000"
 265      61746F72 
 265      5F506172 
 265      6100
 266              		.section	.text.TaskControl_Get_StoreParam,"ax",%progbits
 267              		.align	1
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	TaskControl_Get_StoreParam:
 273              	.LFB2075:
  97:Task/Task_Control.c ****     SrvActuator_Setting_TypeDef Actuator_Param;
 274              		.loc 1 97 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 128
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 28
 281              		.cfi_offset 4, -28
 282              		.cfi_offset 5, -24
 283              		.cfi_offset 6, -20
 284              		.cfi_offset 7, -16
 285              		.cfi_offset 8, -12
 286              		.cfi_offset 9, -8
 287              		.cfi_offset 14, -4
 288 0004 B1B0     		sub	sp, sp, #196
 289              	.LCFI4:
 290              		.cfi_def_cfa_offset 224
  98:Task/Task_Control.c ****     TaskControl_CtlPara_TypeDef Ctl_Param;
 291              		.loc 1 98 5 view .LVU72
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 11


  99:Task/Task_Control.c **** 
 292              		.loc 1 99 5 view .LVU73
 102:Task/Task_Control.c ****     memset(&Actuator_Param, 0, sizeof(SrvActuator_Setting_TypeDef));
 293              		.loc 1 102 5 view .LVU74
 294 0006 2622     		movs	r2, #38
 295 0008 0021     		movs	r1, #0
 296 000a 23A8     		add	r0, sp, #140
 297 000c FFF7FEFF 		bl	memset
 298              	.LVL17:
 103:Task/Task_Control.c ****     memset(&TaskControl_Monitor.controller_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 299              		.loc 1 103 5 view .LVU75
 300 0010 0024     		movs	r4, #0
 301 0012 2D94     		str	r4, [sp, #180]
 302 0014 2E94     		str	r4, [sp, #184]
 303 0016 2F94     		str	r4, [sp, #188]
 104:Task/Task_Control.c ****     memset(&TaskControl_Monitor.actuator_store_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 304              		.loc 1 104 5 view .LVU76
 305 0018 C24D     		ldr	r5, .L68
 306 001a 05F10709 		add	r9, r5, #7
 307 001e 4526     		movs	r6, #69
 308 0020 3246     		mov	r2, r6
 309 0022 2146     		mov	r1, r4
 310 0024 4846     		mov	r0, r9
 311 0026 FFF7FEFF 		bl	memset
 312              	.LVL18:
 105:Task/Task_Control.c **** 
 313              		.loc 1 105 5 view .LVU77
 314 002a 05F17207 		add	r7, r5, #114
 315 002e 3246     		mov	r2, r6
 316 0030 2146     		mov	r1, r4
 317 0032 3846     		mov	r0, r7
 318 0034 FFF7FEFF 		bl	memset
 319              	.LVL19:
 107:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 320              		.loc 1 107 5 view .LVU78
 107:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 321              		.loc 1 107 50 is_stmt 0 view .LVU79
 322 0038 DFF80483 		ldr	r8, .L68+28
 323 003c D8F80430 		ldr	r3, [r8, #4]
 107:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 324              		.loc 1 107 43 view .LVU80
 325 0040 B94A     		ldr	r2, .L68+4
 326 0042 0221     		movs	r1, #2
 327 0044 10A8     		add	r0, sp, #64
 328 0046 9847     		blx	r3
 329              	.LVL20:
 330 0048 3246     		mov	r2, r6
 331 004a 10A9     		add	r1, sp, #64
 332 004c 4846     		mov	r0, r9
 333 004e FFF7FEFF 		bl	memcpy
 334              	.LVL21:
 108:Task/Task_Control.c **** 
 335              		.loc 1 108 5 is_stmt 1 view .LVU81
 108:Task/Task_Control.c **** 
 336              		.loc 1 108 54 is_stmt 0 view .LVU82
 337 0052 D8F80430 		ldr	r3, [r8, #4]
 108:Task/Task_Control.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 12


 338              		.loc 1 108 47 view .LVU83
 339 0056 B54A     		ldr	r2, .L68+8
 340 0058 0221     		movs	r1, #2
 341 005a 10A8     		add	r0, sp, #64
 342 005c 9847     		blx	r3
 343              	.LVL22:
 344 005e 3246     		mov	r2, r6
 345 0060 10A9     		add	r1, sp, #64
 346 0062 3846     		mov	r0, r7
 347 0064 FFF7FEFF 		bl	memcpy
 348              	.LVL23:
 111:Task/Task_Control.c ****     Ctl_Param.alt_mode = DEFAULT_ATTITUDE_CONTROLLER_MODE;
 349              		.loc 1 111 5 is_stmt 1 view .LVU84
 111:Task/Task_Control.c ****     Ctl_Param.alt_mode = DEFAULT_ATTITUDE_CONTROLLER_MODE;
 350              		.loc 1 111 24 is_stmt 0 view .LVU85
 351 0068 8DF88C40 		strb	r4, [sp, #140]
 112:Task/Task_Control.c ****     Ctl_Param.att_rate = DEFAULT_CONTROL_RATE;
 352              		.loc 1 112 5 is_stmt 1 view .LVU86
 112:Task/Task_Control.c ****     Ctl_Param.att_rate = DEFAULT_CONTROL_RATE;
 353              		.loc 1 112 24 is_stmt 0 view .LVU87
 354 006c 8DF88D40 		strb	r4, [sp, #141]
 113:Task/Task_Control.c ****     Ctl_Param.gx_rate = DEFAULT_CONTROL_RATE;
 355              		.loc 1 113 5 is_stmt 1 view .LVU88
 113:Task/Task_Control.c ****     Ctl_Param.gx_rate = DEFAULT_CONTROL_RATE;
 356              		.loc 1 113 24 is_stmt 0 view .LVU89
 357 0070 4FF07E53 		mov	r3, #1065353216
 358 0074 CDF88E30 		str	r3, [sp, #142]	@ unaligned
 114:Task/Task_Control.c ****     Ctl_Param.gy_rate = DEFAULT_CONTROL_RATE;
 359              		.loc 1 114 5 is_stmt 1 view .LVU90
 114:Task/Task_Control.c ****     Ctl_Param.gy_rate = DEFAULT_CONTROL_RATE;
 360              		.loc 1 114 23 is_stmt 0 view .LVU91
 361 0078 CDF89A30 		str	r3, [sp, #154]	@ unaligned
 115:Task/Task_Control.c ****     Ctl_Param.gz_rate = DEFAULT_CONTROL_RATE;
 362              		.loc 1 115 5 is_stmt 1 view .LVU92
 115:Task/Task_Control.c ****     Ctl_Param.gz_rate = DEFAULT_CONTROL_RATE;
 363              		.loc 1 115 23 is_stmt 0 view .LVU93
 364 007c CDF8A230 		str	r3, [sp, #162]	@ unaligned
 116:Task/Task_Control.c ****     Ctl_Param.pitch_range = DEFAULT_CONTROL_ATT_RANGE;
 365              		.loc 1 116 5 is_stmt 1 view .LVU94
 116:Task/Task_Control.c ****     Ctl_Param.pitch_range = DEFAULT_CONTROL_ATT_RANGE;
 366              		.loc 1 116 23 is_stmt 0 view .LVU95
 367 0080 CDF8AA30 		str	r3, [sp, #170]	@ unaligned
 117:Task/Task_Control.c ****     Ctl_Param.roll_range = DEFAULT_CONTROL_ATT_RANGE;
 368              		.loc 1 117 5 is_stmt 1 view .LVU96
 117:Task/Task_Control.c ****     Ctl_Param.roll_range = DEFAULT_CONTROL_ATT_RANGE;
 369              		.loc 1 117 27 is_stmt 0 view .LVU97
 370 0084 AA4B     		ldr	r3, .L68+12
 371 0086 CDF89230 		str	r3, [sp, #146]	@ unaligned
 118:Task/Task_Control.c ****     Ctl_Param.gx_range = DEFAULT_CONTROL_GYR_RANGE;
 372              		.loc 1 118 5 is_stmt 1 view .LVU98
 118:Task/Task_Control.c ****     Ctl_Param.gx_range = DEFAULT_CONTROL_GYR_RANGE;
 373              		.loc 1 118 26 is_stmt 0 view .LVU99
 374 008a CDF89630 		str	r3, [sp, #150]	@ unaligned
 119:Task/Task_Control.c ****     Ctl_Param.gy_range = DEFAULT_CONTROL_GYR_RANGE;
 375              		.loc 1 119 5 is_stmt 1 view .LVU100
 119:Task/Task_Control.c ****     Ctl_Param.gy_range = DEFAULT_CONTROL_GYR_RANGE;
 376              		.loc 1 119 24 is_stmt 0 view .LVU101
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 13


 377 008e A94B     		ldr	r3, .L68+16
 378 0090 CDF89E30 		str	r3, [sp, #158]	@ unaligned
 120:Task/Task_Control.c ****     Ctl_Param.gz_range = DEFAULT_CONTROL_GYR_RANGE;
 379              		.loc 1 120 5 is_stmt 1 view .LVU102
 120:Task/Task_Control.c ****     Ctl_Param.gz_range = DEFAULT_CONTROL_GYR_RANGE;
 380              		.loc 1 120 24 is_stmt 0 view .LVU103
 381 0094 CDF8A630 		str	r3, [sp, #166]	@ unaligned
 121:Task/Task_Control.c ****     memcpy(&TaskControl_Monitor.ctl_para, &Ctl_Param, sizeof(TaskControl_CtlPara_TypeDef));
 382              		.loc 1 121 5 is_stmt 1 view .LVU104
 121:Task/Task_Control.c ****     memcpy(&TaskControl_Monitor.ctl_para, &Ctl_Param, sizeof(TaskControl_CtlPara_TypeDef));
 383              		.loc 1 121 24 is_stmt 0 view .LVU105
 384 0098 CDF8AE30 		str	r3, [sp, #174]	@ unaligned
 122:Task/Task_Control.c **** 
 385              		.loc 1 122 5 is_stmt 1 view .LVU106
 386 009c 05F14C0E 		add	lr, r5, #76
 387 00a0 0DF18C0C 		add	ip, sp, #140
 388 00a4 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 389 00a8 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 390 00ac BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 391 00b0 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 392 00b4 9CE80300 		ldm	ip, {r0, r1}
 393 00b8 4EF8040B 		str	r0, [lr], #4
 394 00bc AEF80010 		strh	r1, [lr]	@ movhi
 124:Task/Task_Control.c ****     {
 395              		.loc 1 124 5 view .LVU107
 124:Task/Task_Control.c ****     {
 396              		.loc 1 124 44 is_stmt 0 view .LVU108
 397 00c0 D5F80730 		ldr	r3, [r5, #7]	@ unaligned
 124:Task/Task_Control.c ****     {
 398              		.loc 1 124 8 view .LVU109
 399 00c4 002B     		cmp	r3, #0
 400 00c6 55D1     		bne	.L27
 127:Task/Task_Control.c ****     }
 401              		.loc 1 127 9 is_stmt 1 view .LVU110
 127:Task/Task_Control.c ****     }
 402              		.loc 1 127 16 is_stmt 0 view .LVU111
 403 00c8 D8F80840 		ldr	r4, [r8, #8]
 127:Task/Task_Control.c ****     }
 404              		.loc 1 127 9 view .LVU112
 405 00cc 2623     		movs	r3, #38
 406 00ce 23AA     		add	r2, sp, #140
 407 00d0 9549     		ldr	r1, .L68+4
 408 00d2 0220     		movs	r0, #2
 409 00d4 A047     		blx	r4
 410              	.LVL24:
 411              	.L28:
 148:Task/Task_Control.c ****     Controller.alt_ctl_init(TaskControl_Monitor.ctl_para.alt_mode);
 412              		.loc 1 148 5 is_stmt 1 view .LVU113
 148:Task/Task_Control.c ****     Controller.alt_ctl_init(TaskControl_Monitor.ctl_para.alt_mode);
 413              		.loc 1 148 15 is_stmt 0 view .LVU114
 414 00d6 984D     		ldr	r5, .L68+20
 415 00d8 2B68     		ldr	r3, [r5]
 148:Task/Task_Control.c ****     Controller.alt_ctl_init(TaskControl_Monitor.ctl_para.alt_mode);
 416              		.loc 1 148 5 view .LVU115
 417 00da 924C     		ldr	r4, .L68
 418 00dc 94F84C00 		ldrb	r0, [r4, #76]	@ zero_extendqisi2
 419 00e0 9847     		blx	r3
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 14


 420              	.LVL25:
 149:Task/Task_Control.c **** 
 421              		.loc 1 149 5 is_stmt 1 view .LVU116
 149:Task/Task_Control.c **** 
 422              		.loc 1 149 15 is_stmt 0 view .LVU117
 423 00e2 6B68     		ldr	r3, [r5, #4]
 149:Task/Task_Control.c **** 
 424              		.loc 1 149 5 view .LVU118
 425 00e4 94F84D00 		ldrb	r0, [r4, #77]	@ zero_extendqisi2
 426 00e8 9847     		blx	r3
 427              	.LVL26:
 153:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr && \
 428              		.loc 1 153 5 is_stmt 1 view .LVU119
 153:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr && \
 429              		.loc 1 153 53 is_stmt 0 view .LVU120
 430 00ea 944B     		ldr	r3, .L68+24
 431 00ec 9B68     		ldr	r3, [r3, #8]
 153:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr && \
 432              		.loc 1 153 42 view .LVU121
 433 00ee 10A8     		add	r0, sp, #64
 434 00f0 9847     		blx	r3
 435              	.LVL27:
 436 00f2 1099     		ldr	r1, [sp, #64]	@ unaligned
 437 00f4 119A     		ldr	r2, [sp, #68]	@ unaligned
 438 00f6 129B     		ldr	r3, [sp, #72]	@ unaligned
 439 00f8 C4F8B710 		str	r1, [r4, #183]	@ unaligned
 440 00fc C4F8BB20 		str	r2, [r4, #187]	@ unaligned
 441 0100 C4F8BF30 		str	r3, [r4, #191]	@ unaligned
 154:Task/Task_Control.c ****         (Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuator_
 442              		.loc 1 154 5 is_stmt 1 view .LVU122
 154:Task/Task_Control.c ****         (Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuator_
 443              		.loc 1 154 48 is_stmt 0 view .LVU123
 444 0104 D4F87230 		ldr	r3, [r4, #114]	@ unaligned
 154:Task/Task_Control.c ****         (Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuator_
 445              		.loc 1 154 8 view .LVU124
 446 0108 8BB3     		cbz	r3, .L26
 155:Task/Task_Control.c ****         TaskControl_Monitor.actuator_param = Actuator_Param;
 447              		.loc 1 155 17 discriminator 1 view .LVU125
 448 010a 8D4B     		ldr	r3, .L68+28
 449 010c 1F69     		ldr	r7, [r3, #16]
 155:Task/Task_Control.c ****         TaskControl_Monitor.actuator_param = Actuator_Param;
 450              		.loc 1 155 10 discriminator 1 view .LVU126
 451 010e 2546     		mov	r5, r4
 452 0110 0C22     		movs	r2, #12
 453 0112 0E92     		str	r2, [sp, #56]
 454 0114 2DAA     		add	r2, sp, #180
 455 0116 0D92     		str	r2, [sp, #52]
 456 0118 D4F87790 		ldr	r9, [r4, #119]	@ unaligned
 457 011c D4F87B80 		ldr	r8, [r4, #123]	@ unaligned
 458 0120 D4F87FE0 		ldr	lr, [r4, #127]	@ unaligned
 459 0124 04F1830C 		add	ip, r4, #131
 460 0128 6E46     		mov	r6, sp
 461 012a B335     		adds	r5, r5, #179
 462              	.L48:
 463 012c 3446     		mov	r4, r6
 464 012e DCF80000 		ldr	r0, [ip]	@ unaligned
 465 0132 DCF80410 		ldr	r1, [ip, #4]	@ unaligned
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 15


 466 0136 DCF80820 		ldr	r2, [ip, #8]	@ unaligned
 467 013a DCF80C30 		ldr	r3, [ip, #12]	@ unaligned
 468 013e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 469 0140 0CF1100C 		add	ip, ip, #16
 470 0144 2646     		mov	r6, r4
 471 0146 AC45     		cmp	ip, r5
 472 0148 F0D1     		bne	.L48
 473 014a DCF80000 		ldr	r0, [ip]	@ unaligned
 474 014e 2060     		str	r0, [r4]
 475 0150 4946     		mov	r1, r9
 476 0152 4246     		mov	r2, r8
 477 0154 7346     		mov	r3, lr
 478 0156 0220     		movs	r0, #2
 479 0158 B847     		blx	r7
 480              	.LVL28:
 154:Task/Task_Control.c ****         (Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuator_
 481              		.loc 1 154 59 discriminator 1 view .LVU127
 482 015a 40B9     		cbnz	r0, .L26
 156:Task/Task_Control.c **** }
 483              		.loc 1 156 9 is_stmt 1 view .LVU128
 156:Task/Task_Control.c **** }
 484              		.loc 1 156 44 is_stmt 0 view .LVU129
 485 015c 714C     		ldr	r4, .L68
 486 015e 2DAB     		add	r3, sp, #180
 487 0160 07CB     		ldmia	r3!, {r0, r1, r2}
 488 0162 C4F8B700 		str	r0, [r4, #183]	@ unaligned
 489 0166 C4F8BB10 		str	r1, [r4, #187]	@ unaligned
 490 016a C4F8BF20 		str	r2, [r4, #191]	@ unaligned
 491              	.L26:
 157:Task/Task_Control.c **** 
 492              		.loc 1 157 1 view .LVU130
 493 016e 31B0     		add	sp, sp, #196
 494              	.LCFI5:
 495              		.cfi_remember_state
 496              		.cfi_def_cfa_offset 28
 497              		@ sp needed
 498 0170 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 499              	.L27:
 500              	.LCFI6:
 501              		.cfi_restore_state
 129:Task/Task_Control.c ****     {
 502              		.loc 1 129 10 is_stmt 1 view .LVU131
 129:Task/Task_Control.c ****     {
 503              		.loc 1 129 21 is_stmt 0 view .LVU132
 504 0174 724B     		ldr	r3, .L68+28
 505 0176 1D69     		ldr	r5, [r3, #16]
 129:Task/Task_Control.c ****     {
 506              		.loc 1 129 14 view .LVU133
 507 0178 6A4C     		ldr	r4, .L68
 508 017a 2623     		movs	r3, #38
 509 017c 0E93     		str	r3, [sp, #56]
 510 017e 23AB     		add	r3, sp, #140
 511 0180 0D93     		str	r3, [sp, #52]
 512 0182 EC46     		mov	ip, sp
 513 0184 04F1180E 		add	lr, r4, #24
 514 0188 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 515 018c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 16


 516 0190 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 517 0194 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 518 0198 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 519 019c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 520 01a0 DEF80030 		ldr	r3, [lr]
 521 01a4 CCF80030 		str	r3, [ip]
 522 01a8 04F10C03 		add	r3, r4, #12
 523 01ac 0ECB     		ldm	r3, {r1, r2, r3}
 524 01ae 0220     		movs	r0, #2
 525 01b0 A847     		blx	r5
 526              	.LVL29:
 129:Task/Task_Control.c ****     {
 527              		.loc 1 129 13 view .LVU134
 528 01b2 0028     		cmp	r0, #0
 529 01b4 8FD1     		bne	.L28
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 530              		.loc 1 132 9 is_stmt 1 view .LVU135
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 531              		.loc 1 132 30 is_stmt 0 view .LVU136
 532 01b6 DDF88E30 		ldr	r3, [sp, #142]	@ unaligned
 533 01ba 07EE903A 		vmov	s15, r3	@ int
 534 01be B7EE087A 		vmov.f32	s14, #1.5e+0
 535 01c2 F4EEC77A 		vcmpe.f32	s15, s14
 536 01c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 537 01ca 09DC     		bgt	.L49
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 538              		.loc 1 132 30 discriminator 2 view .LVU137
 539 01cc B6EE007A 		vmov.f32	s14, #5.0e-1
 540 01d0 F4EEC77A 		vcmpe.f32	s15, s14
 541 01d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 542 01d8 04D5     		bpl	.L29
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 543              		.loc 1 132 30 view .LVU138
 544 01da F0EE477A 		vmov.f32	s15, s14
 545 01de 01E0     		b	.L29
 546              	.L49:
 547 01e0 F7EE087A 		vmov.f32	s15, #1.5e+0
 548              	.L29:
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 549              		.loc 1 132 28 discriminator 8 view .LVU139
 550 01e4 17EE903A 		vmov	r3, s15
 551 01e8 CDF88E30 		str	r3, [sp, #142]	@ unaligned
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 552              		.loc 1 133 9 is_stmt 1 discriminator 8 view .LVU140
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 553              		.loc 1 133 29 is_stmt 0 discriminator 8 view .LVU141
 554 01ec DDF89A30 		ldr	r3, [sp, #154]	@ unaligned
 555 01f0 07EE903A 		vmov	s15, r3	@ int
 556 01f4 B7EE087A 		vmov.f32	s14, #1.5e+0
 557 01f8 F4EEC77A 		vcmpe.f32	s15, s14
 558 01fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 559 0200 09DC     		bgt	.L50
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 560              		.loc 1 133 29 discriminator 2 view .LVU142
 561 0202 B6EE007A 		vmov.f32	s14, #5.0e-1
 562 0206 F4EEC77A 		vcmpe.f32	s15, s14
 563 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 17


 564 020e 04D5     		bpl	.L31
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 565              		.loc 1 133 29 view .LVU143
 566 0210 F0EE477A 		vmov.f32	s15, s14
 567 0214 01E0     		b	.L31
 568              	.L50:
 569 0216 F7EE087A 		vmov.f32	s15, #1.5e+0
 570              	.L31:
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 571              		.loc 1 133 27 discriminator 8 view .LVU144
 572 021a 17EE903A 		vmov	r3, s15
 573 021e CDF89A30 		str	r3, [sp, #154]	@ unaligned
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 574              		.loc 1 134 9 is_stmt 1 discriminator 8 view .LVU145
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 575              		.loc 1 134 29 is_stmt 0 discriminator 8 view .LVU146
 576 0222 DDF8A230 		ldr	r3, [sp, #162]	@ unaligned
 577 0226 07EE903A 		vmov	s15, r3	@ int
 578 022a B7EE087A 		vmov.f32	s14, #1.5e+0
 579 022e F4EEC77A 		vcmpe.f32	s15, s14
 580 0232 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 581 0236 09DC     		bgt	.L51
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 582              		.loc 1 134 29 discriminator 2 view .LVU147
 583 0238 B6EE007A 		vmov.f32	s14, #5.0e-1
 584 023c F4EEC77A 		vcmpe.f32	s15, s14
 585 0240 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 586 0244 04D5     		bpl	.L33
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 587              		.loc 1 134 29 view .LVU148
 588 0246 F0EE477A 		vmov.f32	s15, s14
 589 024a 01E0     		b	.L33
 590              	.L51:
 591 024c F7EE087A 		vmov.f32	s15, #1.5e+0
 592              	.L33:
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 593              		.loc 1 134 27 discriminator 8 view .LVU149
 594 0250 17EE903A 		vmov	r3, s15
 595 0254 CDF8A230 		str	r3, [sp, #162]	@ unaligned
 135:Task/Task_Control.c **** 
 596              		.loc 1 135 9 is_stmt 1 discriminator 8 view .LVU150
 135:Task/Task_Control.c **** 
 597              		.loc 1 135 29 is_stmt 0 discriminator 8 view .LVU151
 598 0258 DDF8AA30 		ldr	r3, [sp, #170]	@ unaligned
 599 025c 07EE903A 		vmov	s15, r3	@ int
 600 0260 B7EE087A 		vmov.f32	s14, #1.5e+0
 601 0264 F4EEC77A 		vcmpe.f32	s15, s14
 602 0268 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 603 026c 09DC     		bgt	.L52
 135:Task/Task_Control.c **** 
 604              		.loc 1 135 29 discriminator 2 view .LVU152
 605 026e B6EE007A 		vmov.f32	s14, #5.0e-1
 606 0272 F4EEC77A 		vcmpe.f32	s15, s14
 607 0276 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 608 027a 04D5     		bpl	.L35
 135:Task/Task_Control.c **** 
 609              		.loc 1 135 29 view .LVU153
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 18


 610 027c F0EE477A 		vmov.f32	s15, s14
 611 0280 01E0     		b	.L35
 612              	.L52:
 613 0282 F7EE087A 		vmov.f32	s15, #1.5e+0
 614              	.L35:
 135:Task/Task_Control.c **** 
 615              		.loc 1 135 27 discriminator 8 view .LVU154
 616 0286 17EE903A 		vmov	r3, s15
 617 028a CDF8AA30 		str	r3, [sp, #170]	@ unaligned
 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 618              		.loc 1 138 9 is_stmt 1 discriminator 8 view .LVU155
 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 619              		.loc 1 138 33 is_stmt 0 discriminator 8 view .LVU156
 620 028e DDF89230 		ldr	r3, [sp, #146]	@ unaligned
 621 0292 07EE903A 		vmov	s15, r3	@ int
 622 0296 9FED2B7A 		vldr.32	s14, .L68+32
 623 029a F4EEC77A 		vcmpe.f32	s15, s14
 624 029e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 625 02a2 09DC     		bgt	.L53
 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 626              		.loc 1 138 33 discriminator 2 view .LVU157
 627 02a4 B2EE0E7A 		vmov.f32	s14, #1.5e+1
 628 02a8 F4EEC77A 		vcmpe.f32	s15, s14
 629 02ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 630 02b0 04D5     		bpl	.L37
 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 631              		.loc 1 138 33 view .LVU158
 632 02b2 F0EE477A 		vmov.f32	s15, s14
 633 02b6 01E0     		b	.L37
 634              	.L53:
 635 02b8 DFED227A 		vldr.32	s15, .L68+32
 636              	.L37:
 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 637              		.loc 1 138 31 discriminator 8 view .LVU159
 638 02bc 17EE903A 		vmov	r3, s15
 639 02c0 CDF89230 		str	r3, [sp, #146]	@ unaligned
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 640              		.loc 1 139 9 is_stmt 1 discriminator 8 view .LVU160
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 641              		.loc 1 139 32 is_stmt 0 discriminator 8 view .LVU161
 642 02c4 DDF89630 		ldr	r3, [sp, #150]	@ unaligned
 643 02c8 07EE903A 		vmov	s15, r3	@ int
 644 02cc 9FED1D7A 		vldr.32	s14, .L68+32
 645 02d0 F4EEC77A 		vcmpe.f32	s15, s14
 646 02d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 647 02d8 09DC     		bgt	.L54
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 648              		.loc 1 139 32 discriminator 2 view .LVU162
 649 02da B2EE0E7A 		vmov.f32	s14, #1.5e+1
 650 02de F4EEC77A 		vcmpe.f32	s15, s14
 651 02e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 652 02e6 04D5     		bpl	.L39
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 653              		.loc 1 139 32 view .LVU163
 654 02e8 F0EE477A 		vmov.f32	s15, s14
 655 02ec 01E0     		b	.L39
 656              	.L54:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 19


 657 02ee DFED157A 		vldr.32	s15, .L68+32
 658              	.L39:
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 659              		.loc 1 139 30 discriminator 8 view .LVU164
 660 02f2 17EE903A 		vmov	r3, s15
 661 02f6 CDF89630 		str	r3, [sp, #150]	@ unaligned
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 662              		.loc 1 140 9 is_stmt 1 discriminator 8 view .LVU165
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 663              		.loc 1 140 30 is_stmt 0 discriminator 8 view .LVU166
 664 02fa DDF89E30 		ldr	r3, [sp, #158]	@ unaligned
 665 02fe 07EE903A 		vmov	s15, r3	@ int
 666 0302 9FED127A 		vldr.32	s14, .L68+40
 667 0306 F4EEC77A 		vcmpe.f32	s15, s14
 668 030a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 669 030e 1FDC     		bgt	.L55
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 670              		.loc 1 140 30 discriminator 2 view .LVU167
 671 0310 9FED0D7A 		vldr.32	s14, .L68+36
 672 0314 F4EEC77A 		vcmpe.f32	s15, s14
 673 0318 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 674 031c 1AD5     		bpl	.L41
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 675              		.loc 1 140 30 view .LVU168
 676 031e F0EE477A 		vmov.f32	s15, s14
 677 0322 17E0     		b	.L41
 678              	.L69:
 679              		.align	2
 680              	.L68:
 681 0324 00000000 		.word	.LANCHOR0
 682 0328 00000000 		.word	.LC1
 683 032c 10000000 		.word	.LC2
 684 0330 0000C841 		.word	1103626240
 685 0334 0000FA43 		.word	1140457472
 686 0338 00000000 		.word	Controller
 687 033c 00000000 		.word	SrvActuator
 688 0340 00000000 		.word	Storage
 689 0344 00003442 		.word	1110704128
 690 0348 00004843 		.word	1128792064
 691 034c 00004844 		.word	1145569280
 692              	.L55:
 693 0350 5FED027A 		vldr.32	s15, .L68+40
 694              	.L41:
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 695              		.loc 1 140 28 discriminator 8 view .LVU169
 696 0354 17EE903A 		vmov	r3, s15
 697 0358 CDF89E30 		str	r3, [sp, #158]	@ unaligned
 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 698              		.loc 1 141 9 is_stmt 1 discriminator 8 view .LVU170
 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 699              		.loc 1 141 30 is_stmt 0 discriminator 8 view .LVU171
 700 035c DDF8A630 		ldr	r3, [sp, #166]	@ unaligned
 701 0360 07EE903A 		vmov	s15, r3	@ int
 702 0364 1FED077A 		vldr.32	s14, .L68+40
 703 0368 F4EEC77A 		vcmpe.f32	s15, s14
 704 036c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 705 0370 09DC     		bgt	.L56
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 20


 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 706              		.loc 1 141 30 discriminator 2 view .LVU172
 707 0372 1FED0B7A 		vldr.32	s14, .L68+36
 708 0376 F4EEC77A 		vcmpe.f32	s15, s14
 709 037a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 710 037e 04D5     		bpl	.L43
 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 711              		.loc 1 141 30 view .LVU173
 712 0380 F0EE477A 		vmov.f32	s15, s14
 713 0384 01E0     		b	.L43
 714              	.L56:
 715 0386 5FED0F7A 		vldr.32	s15, .L68+40
 716              	.L43:
 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 717              		.loc 1 141 28 discriminator 8 view .LVU174
 718 038a 17EE903A 		vmov	r3, s15
 719 038e CDF8A630 		str	r3, [sp, #166]	@ unaligned
 142:Task/Task_Control.c **** 
 720              		.loc 1 142 9 is_stmt 1 discriminator 8 view .LVU175
 142:Task/Task_Control.c **** 
 721              		.loc 1 142 30 is_stmt 0 discriminator 8 view .LVU176
 722 0392 DDF8AE30 		ldr	r3, [sp, #174]	@ unaligned
 723 0396 07EE903A 		vmov	s15, r3	@ int
 724 039a 1FED147A 		vldr.32	s14, .L68+40
 725 039e F4EEC77A 		vcmpe.f32	s15, s14
 726 03a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 727 03a6 09DC     		bgt	.L57
 142:Task/Task_Control.c **** 
 728              		.loc 1 142 30 discriminator 2 view .LVU177
 729 03a8 1FED197A 		vldr.32	s14, .L68+36
 730 03ac F4EEC77A 		vcmpe.f32	s15, s14
 731 03b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 732 03b4 04D5     		bpl	.L45
 142:Task/Task_Control.c **** 
 733              		.loc 1 142 30 view .LVU178
 734 03b6 F0EE477A 		vmov.f32	s15, s14
 735 03ba 01E0     		b	.L45
 736              	.L57:
 737 03bc 5FED1D7A 		vldr.32	s15, .L68+40
 738              	.L45:
 142:Task/Task_Control.c **** 
 739              		.loc 1 142 28 discriminator 8 view .LVU179
 740 03c0 17EE903A 		vmov	r3, s15
 741 03c4 CDF8AE30 		str	r3, [sp, #174]	@ unaligned
 144:Task/Task_Control.c ****     }
 742              		.loc 1 144 9 is_stmt 1 discriminator 8 view .LVU180
 743 03c8 054C     		ldr	r4, .L70
 744 03ca 23AD     		add	r5, sp, #140
 745 03cc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 746 03ce 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 747 03d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 748 03d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 749 03d4 95E80300 		ldm	r5, {r0, r1}
 750 03d8 44F8040B 		str	r0, [r4], #4
 751 03dc 2180     		strh	r1, [r4]	@ movhi
 752 03de 7AE6     		b	.L28
 753              	.L71:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 21


 754              		.align	2
 755              	.L70:
 756 03e0 4C000000 		.word	.LANCHOR0+76
 757              		.cfi_endproc
 758              	.LFE2075:
 760              		.section	.text.TaskControl_FlightControl_Polling,"ax",%progbits
 761              		.align	1
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 766              	TaskControl_FlightControl_Polling:
 767              	.LVL30:
 768              	.LFB2080:
 267:Task/Task_Control.c **** 
 268:Task/Task_Control.c **** /* need to be optmize */
 269:Task/Task_Control.c **** static void TaskControl_FlightControl_Polling(ControlData_TypeDef *exp_ctl_val, uint32_t sys_ms)
 270:Task/Task_Control.c **** {
 769              		.loc 1 270 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 56
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		.loc 1 270 1 is_stmt 0 view .LVU182
 774 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 775              	.LCFI7:
 776              		.cfi_def_cfa_offset 36
 777              		.cfi_offset 4, -36
 778              		.cfi_offset 5, -32
 779              		.cfi_offset 6, -28
 780              		.cfi_offset 7, -24
 781              		.cfi_offset 8, -20
 782              		.cfi_offset 9, -16
 783              		.cfi_offset 10, -12
 784              		.cfi_offset 11, -8
 785              		.cfi_offset 14, -4
 786 0004 2DED028B 		vpush.64	{d8}
 787              	.LCFI8:
 788              		.cfi_def_cfa_offset 44
 789              		.cfi_offset 80, -44
 790              		.cfi_offset 81, -40
 791 0008 99B0     		sub	sp, sp, #100
 792              	.LCFI9:
 793              		.cfi_def_cfa_offset 144
 271:Task/Task_Control.c ****     uint8_t axis = Axis_X;
 794              		.loc 1 271 5 is_stmt 1 view .LVU183
 795              	.LVL31:
 272:Task/Task_Control.c ****     bool arm_state = false;
 796              		.loc 1 272 5 view .LVU184
 273:Task/Task_Control.c ****     bool USB_Attach = false;
 797              		.loc 1 273 5 view .LVU185
 798              		.loc 1 273 10 is_stmt 0 view .LVU186
 799 000a 0023     		movs	r3, #0
 800 000c 8DF85F30 		strb	r3, [sp, #95]
 274:Task/Task_Control.c ****     AngControl_Out_TypeDef att_ctl_out;
 801              		.loc 1 274 5 is_stmt 1 view .LVU187
 275:Task/Task_Control.c ****     AttControl_In_TypeDef att_ctl_exp;
 802              		.loc 1 275 5 view .LVU188
 276:Task/Task_Control.c ****     AttControl_In_TypeDef att_ctl_mea;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 22


 803              		.loc 1 276 5 view .LVU189
 277:Task/Task_Control.c ****     bool ang_ctl_only = false;
 804              		.loc 1 277 5 view .LVU190
 805              	.LVL32:
 278:Task/Task_Control.c **** 
 279:Task/Task_Control.c ****     memset(&att_ctl_exp, 0, sizeof(AttControl_In_TypeDef));
 806              		.loc 1 279 5 view .LVU191
 807 0010 0F93     		str	r3, [sp, #60]
 808 0012 1093     		str	r3, [sp, #64]
 809 0014 1193     		str	r3, [sp, #68]
 810 0016 1293     		str	r3, [sp, #72]
 811 0018 1393     		str	r3, [sp, #76]
 280:Task/Task_Control.c ****     memset(&att_ctl_out, 0, sizeof(AngControl_Out_TypeDef));
 812              		.loc 1 280 5 view .LVU192
 813 001a 1493     		str	r3, [sp, #80]
 814 001c 1593     		str	r3, [sp, #84]
 815 001e 1693     		str	r3, [sp, #88]
 281:Task/Task_Control.c **** 
 282:Task/Task_Control.c ****     if (TaskControl_Monitor.init_state && exp_ctl_val)
 816              		.loc 1 282 5 view .LVU193
 817              		.loc 1 282 28 is_stmt 0 view .LVU194
 818 0020 A54B     		ldr	r3, .L101
 819 0022 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 820              		.loc 1 282 8 view .LVU195
 821 0024 002E     		cmp	r6, #0
 822 0026 00F0AE81 		beq	.L73
 823 002a 0446     		mov	r4, r0
 824 002c 8B46     		mov	fp, r1
 825              		.loc 1 282 40 discriminator 1 view .LVU196
 826 002e 0028     		cmp	r0, #0
 827 0030 00F0A981 		beq	.L73
 283:Task/Task_Control.c ****     {
 284:Task/Task_Control.c ****         if (exp_ctl_val->update_time_stamp && !exp_ctl_val->fail_safe)
 828              		.loc 1 284 9 is_stmt 1 view .LVU197
 829              		.loc 1 284 24 is_stmt 0 view .LVU198
 830 0034 0368     		ldr	r3, [r0]
 831              		.loc 1 284 12 view .LVU199
 832 0036 002B     		cmp	r3, #0
 833 0038 51D0     		beq	.L96
 834              		.loc 1 284 59 discriminator 1 view .LVU200
 835 003a 90F85F70 		ldrb	r7, [r0, #95]	@ zero_extendqisi2
 836              		.loc 1 284 44 discriminator 1 view .LVU201
 837 003e 002F     		cmp	r7, #0
 838 0040 40F0D680 		bne	.L97
 285:Task/Task_Control.c ****         {
 286:Task/Task_Control.c ****             att_ctl_exp.pitch  = TaskControl_Convert_CtlData(exp_ctl_val->pitch_percent, TaskContro
 839              		.loc 1 286 13 is_stmt 1 view .LVU202
 840              		.loc 1 286 34 is_stmt 0 view .LVU203
 841 0044 90F84FA0 		ldrb	r10, [r0, #79]	@ zero_extendqisi2
 842 0048 9B4D     		ldr	r5, .L101
 843 004a D5F84E30 		ldr	r3, [r5, #78]	@ unaligned
 844 004e 08EE103A 		vmov	s16, r3	@ int
 845 0052 D5F85230 		ldr	r3, [r5, #82]	@ unaligned
 846 0056 00EE103A 		vmov	s0, r3	@ int
 847 005a F0EE480A 		vmov.f32	s1, s16
 848 005e 5046     		mov	r0, r10
 849              	.LVL33:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 23


 850              		.loc 1 286 34 view .LVU204
 851 0060 FFF7FEFF 		bl	TaskControl_Convert_CtlData
 852              	.LVL34:
 853              		.loc 1 286 32 view .LVU205
 854 0064 8DED0F0A 		vstr.32	s0, [sp, #60]
 287:Task/Task_Control.c ****             att_ctl_exp.roll   = TaskControl_Convert_CtlData(exp_ctl_val->roll_percent,  TaskContro
 855              		.loc 1 287 13 is_stmt 1 view .LVU206
 856              		.loc 1 287 34 is_stmt 0 view .LVU207
 857 0068 94F85090 		ldrb	r9, [r4, #80]	@ zero_extendqisi2
 858 006c D5F85630 		ldr	r3, [r5, #86]	@ unaligned
 859 0070 00EE103A 		vmov	s0, r3	@ int
 860 0074 F0EE480A 		vmov.f32	s1, s16
 861 0078 4846     		mov	r0, r9
 862 007a FFF7FEFF 		bl	TaskControl_Convert_CtlData
 863              	.LVL35:
 864              		.loc 1 287 32 view .LVU208
 865 007e 8DED100A 		vstr.32	s0, [sp, #64]
 288:Task/Task_Control.c ****             att_ctl_exp.gyro_x = TaskControl_Convert_CtlData(exp_ctl_val->pitch_percent, TaskContro
 866              		.loc 1 288 13 is_stmt 1 view .LVU209
 867              		.loc 1 288 34 is_stmt 0 view .LVU210
 868 0082 D5F85A30 		ldr	r3, [r5, #90]	@ unaligned
 869 0086 00EE903A 		vmov	s1, r3	@ int
 870 008a D5F85E30 		ldr	r3, [r5, #94]	@ unaligned
 871 008e 00EE103A 		vmov	s0, r3	@ int
 872 0092 5046     		mov	r0, r10
 873 0094 FFF7FEFF 		bl	TaskControl_Convert_CtlData
 874              	.LVL36:
 875              		.loc 1 288 32 view .LVU211
 876 0098 8DED110A 		vstr.32	s0, [sp, #68]
 289:Task/Task_Control.c ****             att_ctl_exp.gyro_y = TaskControl_Convert_CtlData(exp_ctl_val->roll_percent,  TaskContro
 877              		.loc 1 289 13 is_stmt 1 view .LVU212
 878              		.loc 1 289 34 is_stmt 0 view .LVU213
 879 009c D5F86230 		ldr	r3, [r5, #98]	@ unaligned
 880 00a0 00EE903A 		vmov	s1, r3	@ int
 881 00a4 D5F86630 		ldr	r3, [r5, #102]	@ unaligned
 882 00a8 00EE103A 		vmov	s0, r3	@ int
 883 00ac 4846     		mov	r0, r9
 884 00ae FFF7FEFF 		bl	TaskControl_Convert_CtlData
 885              	.LVL37:
 886              		.loc 1 289 32 view .LVU214
 887 00b2 8DED120A 		vstr.32	s0, [sp, #72]
 290:Task/Task_Control.c ****             att_ctl_exp.gyro_z = TaskControl_Convert_CtlData(exp_ctl_val->yaw_percent,   TaskContro
 888              		.loc 1 290 13 is_stmt 1 view .LVU215
 889              		.loc 1 290 34 is_stmt 0 view .LVU216
 890 00b6 D5F86A30 		ldr	r3, [r5, #106]	@ unaligned
 891 00ba 00EE903A 		vmov	s1, r3	@ int
 892 00be D5F86E30 		ldr	r3, [r5, #110]	@ unaligned
 893 00c2 00EE103A 		vmov	s0, r3	@ int
 894 00c6 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 895 00ca FFF7FEFF 		bl	TaskControl_Convert_CtlData
 896              	.LVL38:
 897              		.loc 1 290 32 view .LVU217
 898 00ce 8DED130A 		vstr.32	s0, [sp, #76]
 291:Task/Task_Control.c **** 
 292:Task/Task_Control.c ****             if (exp_ctl_val->control_mode == AngularSpeed_Control)
 899              		.loc 1 292 13 is_stmt 1 view .LVU218
 900              		.loc 1 292 28 is_stmt 0 view .LVU219
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 24


 901 00d2 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 902              		.loc 1 292 16 view .LVU220
 903 00d6 012B     		cmp	r3, #1
 904 00d8 02D0     		beq	.L74
 277:Task/Task_Control.c **** 
 905              		.loc 1 277 10 view .LVU221
 906 00da 3E46     		mov	r6, r7
 907 00dc 00E0     		b	.L74
 908              	.LVL39:
 909              	.L96:
 277:Task/Task_Control.c **** 
 910              		.loc 1 277 10 view .LVU222
 911 00de 0026     		movs	r6, #0
 912              	.LVL40:
 913              	.L74:
 293:Task/Task_Control.c ****                 ang_ctl_only = true;
 294:Task/Task_Control.c ****         }
 295:Task/Task_Control.c **** 
 296:Task/Task_Control.c ****         arm_state = exp_ctl_val->arm_state;
 914              		.loc 1 296 9 is_stmt 1 view .LVU223
 915              		.loc 1 296 19 is_stmt 0 view .LVU224
 916 00e0 94F85E90 		ldrb	r9, [r4, #94]	@ zero_extendqisi2
 917              	.LVL41:
 297:Task/Task_Control.c ****         failsafe = exp_ctl_val->fail_safe;
 918              		.loc 1 297 9 is_stmt 1 view .LVU225
 919              		.loc 1 297 31 is_stmt 0 view .LVU226
 920 00e4 94F85F20 		ldrb	r2, [r4, #95]	@ zero_extendqisi2
 921              		.loc 1 297 18 view .LVU227
 922 00e8 744B     		ldr	r3, .L101+4
 923 00ea 1A70     		strb	r2, [r3]
 298:Task/Task_Control.c ****         TaskControl_Monitor.control_abort = false;
 924              		.loc 1 298 9 is_stmt 1 view .LVU228
 925              		.loc 1 298 43 is_stmt 0 view .LVU229
 926 00ec 724D     		ldr	r5, .L101
 927 00ee 4FF00008 		mov	r8, #0
 928 00f2 85F80180 		strb	r8, [r5, #1]
 299:Task/Task_Control.c **** 
 300:Task/Task_Control.c ****         /* pipe converted control data to data hub */
 301:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).arm = arm_state;
 929              		.loc 1 301 9 is_stmt 1 view .LVU230
 930              		.loc 1 301 38 is_stmt 0 view .LVU231
 931 00f6 724B     		ldr	r3, .L101+8
 932 00f8 83F80490 		strb	r9, [r3, #4]
 302:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).failsafe = failsafe;
 933              		.loc 1 302 9 is_stmt 1 view .LVU232
 934              		.loc 1 302 43 is_stmt 0 view .LVU233
 935 00fc 5A71     		strb	r2, [r3, #5]
 303:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).throttle_percent = exp_ctl_val->throttle_percent;
 936              		.loc 1 303 9 is_stmt 1 view .LVU234
 937              		.loc 1 303 64 is_stmt 0 view .LVU235
 938 00fe 94F84E20 		ldrb	r2, [r4, #78]	@ zero_extendqisi2
 939              		.loc 1 303 51 view .LVU236
 940 0102 DA71     		strb	r2, [r3, #7]
 304:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).control_mode = exp_ctl_val->control_mode;
 941              		.loc 1 304 9 is_stmt 1 view .LVU237
 942              		.loc 1 304 60 is_stmt 0 view .LVU238
 943 0104 94F85820 		ldrb	r2, [r4, #88]	@ zero_extendqisi2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 25


 944              		.loc 1 304 47 view .LVU239
 945 0108 9A71     		strb	r2, [r3, #6]
 305:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).pitch = att_ctl_exp.pitch;
 946              		.loc 1 305 9 is_stmt 1 view .LVU240
 947              		.loc 1 305 53 is_stmt 0 view .LVU241
 948 010a 0F9A     		ldr	r2, [sp, #60]	@ float
 949              		.loc 1 305 40 view .LVU242
 950 010c 9A60     		str	r2, [r3, #8]	@ float
 306:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).roll  = att_ctl_exp.roll;
 951              		.loc 1 306 9 is_stmt 1 view .LVU243
 952              		.loc 1 306 53 is_stmt 0 view .LVU244
 953 010e 109A     		ldr	r2, [sp, #64]	@ float
 954              		.loc 1 306 40 view .LVU245
 955 0110 DA60     		str	r2, [r3, #12]	@ float
 307:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_x = att_ctl_exp.gyro_x;
 956              		.loc 1 307 9 is_stmt 1 view .LVU246
 957              		.loc 1 307 53 is_stmt 0 view .LVU247
 958 0112 119A     		ldr	r2, [sp, #68]	@ float
 959              		.loc 1 307 40 view .LVU248
 960 0114 1A61     		str	r2, [r3, #16]	@ float
 308:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_y = att_ctl_exp.gyro_y;
 961              		.loc 1 308 9 is_stmt 1 view .LVU249
 962              		.loc 1 308 53 is_stmt 0 view .LVU250
 963 0116 129A     		ldr	r2, [sp, #72]	@ float
 964              		.loc 1 308 40 view .LVU251
 965 0118 5A61     		str	r2, [r3, #20]	@ float
 309:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_z = att_ctl_exp.gyro_z;
 966              		.loc 1 309 9 is_stmt 1 view .LVU252
 967              		.loc 1 309 53 is_stmt 0 view .LVU253
 968 011a 139A     		ldr	r2, [sp, #76]	@ float
 969              		.loc 1 309 40 view .LVU254
 970 011c 9A61     		str	r2, [r3, #24]	@ float
 310:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_hub_DataPipe);
 971              		.loc 1 310 9 is_stmt 1 view .LVU255
 972 011e 694F     		ldr	r7, .L101+12
 973 0120 6949     		ldr	r1, .L101+16
 974 0122 3846     		mov	r0, r7
 975 0124 FFF7FEFF 		bl	DataPipe_SendTo
 976              	.LVL42:
 311:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_Log_DataPipe);
 977              		.loc 1 311 9 view .LVU256
 978 0128 6849     		ldr	r1, .L101+20
 979 012a 3846     		mov	r0, r7
 980 012c FFF7FEFF 		bl	DataPipe_SendTo
 981              	.LVL43:
 312:Task/Task_Control.c **** 
 313:Task/Task_Control.c ****         // check imu filter gyro data update or not
 314:Task/Task_Control.c ****         if(!SrvDataHub.get_scaled_imu(&imu_update_time,
 982              		.loc 1 314 9 view .LVU257
 983              		.loc 1 314 23 is_stmt 0 view .LVU258
 984 0130 674B     		ldr	r3, .L101+24
 985 0132 9F6B     		ldr	r7, [r3, #56]
 986              		.loc 1 314 13 view .LVU259
 987 0134 674B     		ldr	r3, .L101+28
 988 0136 0693     		str	r3, [sp, #24]
 989 0138 CDF81480 		str	r8, [sp, #20]
 990 013c 05F1E403 		add	r3, r5, #228
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 26


 991 0140 0493     		str	r3, [sp, #16]
 992 0142 05F1E003 		add	r3, r5, #224
 993 0146 0393     		str	r3, [sp, #12]
 994 0148 05F1DC03 		add	r3, r5, #220
 995 014c 0293     		str	r3, [sp, #8]
 996 014e 05F1D803 		add	r3, r5, #216
 997 0152 0193     		str	r3, [sp, #4]
 998 0154 05F1D403 		add	r3, r5, #212
 999 0158 0093     		str	r3, [sp]
 1000 015a 05F1D003 		add	r3, r5, #208
 1001 015e 4246     		mov	r2, r8
 1002 0160 4146     		mov	r1, r8
 1003 0162 5D48     		ldr	r0, .L101+32
 1004 0164 B847     		blx	r7
 1005              	.LVL44:
 1006              		.loc 1 314 11 view .LVU260
 1007 0166 0028     		cmp	r0, #0
 1008 0168 00F00D81 		beq	.L73
 315:Task/Task_Control.c ****                                       NULL, NULL,
 316:Task/Task_Control.c ****                                       &TaskControl_Monitor.acc[Axis_X],
 317:Task/Task_Control.c ****                                       &TaskControl_Monitor.acc[Axis_Y],
 318:Task/Task_Control.c ****                                       &TaskControl_Monitor.acc[Axis_Z],
 319:Task/Task_Control.c ****                                       &TaskControl_Monitor.gyr[Axis_X],
 320:Task/Task_Control.c ****                                       &TaskControl_Monitor.gyr[Axis_Y],
 321:Task/Task_Control.c ****                                       &TaskControl_Monitor.gyr[Axis_Z],
 322:Task/Task_Control.c ****                                       NULL, &imu_err_code) || !imu_init_state)
 1009              		.loc 1 322 63 view .LVU261
 1010 016c 5B4B     		ldr	r3, .L101+36
 1011 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1012              		.loc 1 322 60 view .LVU262
 1013 0170 002B     		cmp	r3, #0
 1014 0172 00F00881 		beq	.L73
 323:Task/Task_Control.c ****             goto lock_moto;
 324:Task/Task_Control.c **** 
 325:Task/Task_Control.c ****         /* if angular speed over ride then lock the moto and set drone as arm */
 326:Task/Task_Control.c **** 
 327:Task/Task_Control.c ****         // get attitude
 328:Task/Task_Control.c ****         att_update = SrvDataHub.get_attitude(&att_update_time,
 1015              		.loc 1 328 9 is_stmt 1 view .LVU263
 1016              		.loc 1 328 32 is_stmt 0 view .LVU264
 1017 0176 564B     		ldr	r3, .L101+24
 1018 0178 D3F84480 		ldr	r8, [r3, #68]
 1019              		.loc 1 328 22 view .LVU265
 1020 017c 05F58873 		add	r3, r5, #272
 1021 0180 0493     		str	r3, [sp, #16]
 1022 0182 0023     		movs	r3, #0
 1023 0184 0393     		str	r3, [sp, #12]
 1024 0186 0293     		str	r3, [sp, #8]
 1025 0188 0193     		str	r3, [sp, #4]
 1026 018a 0093     		str	r3, [sp]
 1027 018c 05F58673 		add	r3, r5, #268
 1028 0190 05F58472 		add	r2, r5, #264
 1029 0194 05F58271 		add	r1, r5, #260
 1030 0198 5148     		ldr	r0, .L101+40
 1031 019a C047     		blx	r8
 1032              	.LVL45:
 1033              		.loc 1 328 20 view .LVU266
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 27


 1034 019c 514B     		ldr	r3, .L101+44
 1035 019e 1870     		strb	r0, [r3]
 329:Task/Task_Control.c ****                                              &TaskControl_Monitor.pitch,
 330:Task/Task_Control.c ****                                              &TaskControl_Monitor.roll,
 331:Task/Task_Control.c ****                                              &TaskControl_Monitor.yaw,
 332:Task/Task_Control.c ****                                              NULL, NULL, NULL, NULL,
 333:Task/Task_Control.c ****                                              &TaskControl_Monitor.flip_over);
 334:Task/Task_Control.c **** 
 335:Task/Task_Control.c ****         TaskControl_disarm_check(arm_state, TaskControl_Monitor.pitch, TaskControl_Monitor.roll);
 1036              		.loc 1 335 9 is_stmt 1 view .LVU267
 1037 01a0 D5ED420A 		vldr.32	s1, [r5, #264]
 1038 01a4 95ED410A 		vldr.32	s0, [r5, #260]
 1039 01a8 4846     		mov	r0, r9
 1040 01aa FFF7FEFF 		bl	TaskControl_disarm_check
 1041              	.LVL46:
 336:Task/Task_Control.c **** 
 337:Task/Task_Control.c ****         /* if armed or usb attached then lock moto */
 338:Task/Task_Control.c ****         if (TaskControl_Monitor.moto_unlock != Moto_Unlock)
 1042              		.loc 1 338 9 view .LVU268
 1043              		.loc 1 338 32 is_stmt 0 view .LVU269
 1044 01ae 95F81231 		ldrb	r3, [r5, #274]	@ zero_extendqisi2
 1045              		.loc 1 338 12 view .LVU270
 1046 01b2 012B     		cmp	r3, #1
 1047 01b4 40F0E780 		bne	.L73
 339:Task/Task_Control.c ****             goto lock_moto;
 340:Task/Task_Control.c **** 
 341:Task/Task_Control.c ****         if (imu_update_time)
 1048              		.loc 1 341 9 is_stmt 1 view .LVU271
 1049              		.loc 1 341 13 is_stmt 0 view .LVU272
 1050 01b8 474B     		ldr	r3, .L101+32
 1051 01ba 1B68     		ldr	r3, [r3]
 1052              		.loc 1 341 12 view .LVU273
 1053 01bc 002B     		cmp	r3, #0
 1054 01be 00F0D680 		beq	.L75
 342:Task/Task_Control.c ****         {
 343:Task/Task_Control.c ****             if (imu_update_time > TaskControl_Monitor.IMU_Rt)
 1055              		.loc 1 343 13 is_stmt 1 view .LVU274
 1056              		.loc 1 343 54 is_stmt 0 view .LVU275
 1057 01c2 D5F8C820 		ldr	r2, [r5, #200]
 1058              		.loc 1 343 16 view .LVU276
 1059 01c6 9342     		cmp	r3, r2
 1060 01c8 14D9     		bls	.L76
 344:Task/Task_Control.c ****             {
 345:Task/Task_Control.c ****                 TaskControl_Monitor.imu_update_error_cnt = 0;
 1061              		.loc 1 345 17 is_stmt 1 view .LVU277
 1062              		.loc 1 345 58 is_stmt 0 view .LVU278
 1063 01ca 0021     		movs	r1, #0
 1064 01cc 85F8C410 		strb	r1, [r5, #196]
 346:Task/Task_Control.c ****                 TaskControl_Monitor.IMU_Rt = imu_update_time;
 1065              		.loc 1 346 17 is_stmt 1 view .LVU279
 1066              		.loc 1 346 44 is_stmt 0 view .LVU280
 1067 01d0 C5F8C830 		str	r3, [r5, #200]
 1068              	.L77:
 347:Task/Task_Control.c ****             }
 348:Task/Task_Control.c ****             else if (imu_update_time <= TaskControl_Monitor.IMU_Rt)
 349:Task/Task_Control.c ****             {
 350:Task/Task_Control.c ****                 TaskControl_Monitor.imu_update_error_cnt++;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 28


 351:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 352:Task/Task_Control.c ****                 {
 353:Task/Task_Control.c ****                     TaskControl_Monitor.control_abort = true;
 354:Task/Task_Control.c ****                     goto lock_moto;
 355:Task/Task_Control.c ****                 }
 356:Task/Task_Control.c ****             }
 357:Task/Task_Control.c **** 
 358:Task/Task_Control.c ****             if(imu_err_code != SrvIMU_Sample_NoError)
 1069              		.loc 1 358 13 is_stmt 1 view .LVU281
 1070              		.loc 1 358 29 is_stmt 0 view .LVU282
 1071 01d4 3F4B     		ldr	r3, .L101+28
 1072 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1073              		.loc 1 358 15 view .LVU283
 1074 01d8 002B     		cmp	r3, #0
 1075 01da 00F08580 		beq	.L78
 359:Task/Task_Control.c ****             {
 360:Task/Task_Control.c ****                 switch(imu_err_code)
 1076              		.loc 1 360 17 is_stmt 1 view .LVU284
 1077 01de 013B     		subs	r3, r3, #1
 1078 01e0 052B     		cmp	r3, #5
 1079 01e2 00F28580 		bhi	.L79
 1080 01e6 DFE803F0 		tbb	[pc, r3]
 1081              	.L81:
 1082 01ea 16       		.byte	(.L83-.L81)/2
 1083 01eb 83       		.byte	(.L79-.L81)/2
 1084 01ec 12       		.byte	(.L82-.L81)/2
 1085 01ed 83       		.byte	(.L79-.L81)/2
 1086 01ee 12       		.byte	(.L82-.L81)/2
 1087 01ef 3E       		.byte	(.L80-.L81)/2
 1088              	.LVL47:
 1089              		.p2align 1
 1090              	.L97:
 277:Task/Task_Control.c **** 
 1091              		.loc 1 277 10 is_stmt 0 view .LVU285
 1092 01f0 0026     		movs	r6, #0
 1093 01f2 75E7     		b	.L74
 1094              	.LVL48:
 1095              	.L76:
 348:Task/Task_Control.c ****             {
 1096              		.loc 1 348 18 is_stmt 1 view .LVU286
 350:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 1097              		.loc 1 350 17 view .LVU287
 350:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 1098              		.loc 1 350 36 is_stmt 0 view .LVU288
 1099 01f4 304A     		ldr	r2, .L101
 1100 01f6 92F8C430 		ldrb	r3, [r2, #196]	@ zero_extendqisi2
 350:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 1101              		.loc 1 350 57 view .LVU289
 1102 01fa 0133     		adds	r3, r3, #1
 1103 01fc DBB2     		uxtb	r3, r3
 1104 01fe 82F8C430 		strb	r3, [r2, #196]
 351:Task/Task_Control.c ****                 {
 1105              		.loc 1 351 17 is_stmt 1 view .LVU290
 351:Task/Task_Control.c ****                 {
 1106              		.loc 1 351 20 is_stmt 0 view .LVU291
 1107 0202 092B     		cmp	r3, #9
 1108 0204 E6D9     		bls	.L77
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 29


 353:Task/Task_Control.c ****                     goto lock_moto;
 1109              		.loc 1 353 21 is_stmt 1 view .LVU292
 353:Task/Task_Control.c ****                     goto lock_moto;
 1110              		.loc 1 353 55 is_stmt 0 view .LVU293
 1111 0206 1346     		mov	r3, r2
 1112 0208 0122     		movs	r2, #1
 1113 020a 5A70     		strb	r2, [r3, #1]
 354:Task/Task_Control.c ****                 }
 1114              		.loc 1 354 21 is_stmt 1 view .LVU294
 1115 020c BBE0     		b	.L73
 1116              	.L82:
 361:Task/Task_Control.c ****                 {
 362:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Acc_Blunt:
 363:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Acc_OverRange:
 364:Task/Task_Control.c ****                         /* still can use gyro loop control quad */
 365:Task/Task_Control.c ****                         /* switch into manul control */
 366:Task/Task_Control.c ****                         break;
 367:Task/Task_Control.c ****                     
 368:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Gyr_Blunt:
 369:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Gyr_OverRange:
 370:Task/Task_Control.c ****                         /* totally waste */
 371:Task/Task_Control.c ****                         /* bye drone see u in another world */
 372:Task/Task_Control.c ****                         TaskControl_Monitor.control_abort = true;
 1117              		.loc 1 372 25 view .LVU295
 1118              		.loc 1 372 59 is_stmt 0 view .LVU296
 1119 020e 2A4B     		ldr	r3, .L101
 1120 0210 0122     		movs	r2, #1
 1121 0212 5A70     		strb	r2, [r3, #1]
 373:Task/Task_Control.c ****                         goto lock_moto;
 1122              		.loc 1 373 25 is_stmt 1 view .LVU297
 1123 0214 B7E0     		b	.L73
 1124              	.L83:
 374:Task/Task_Control.c ****                         break;
 1125              		.loc 1 374 25 view .LVU298
 375:Task/Task_Control.c **** 
 376:Task/Task_Control.c ****                     case SrvIMU_Sample_Module_UnReady:
 377:Task/Task_Control.c ****                         TaskControl_Monitor.imu_none_update_cnt++;
 1126              		.loc 1 377 25 view .LVU299
 1127              		.loc 1 377 44 is_stmt 0 view .LVU300
 1128 0216 284A     		ldr	r2, .L101
 1129 0218 92F81831 		ldrb	r3, [r2, #280]	@ zero_extendqisi2
 1130              		.loc 1 377 64 view .LVU301
 1131 021c 0133     		adds	r3, r3, #1
 1132 021e DBB2     		uxtb	r3, r3
 1133 0220 82F81831 		strb	r3, [r2, #280]
 378:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 1134              		.loc 1 378 25 is_stmt 1 view .LVU302
 1135              		.loc 1 378 27 is_stmt 0 view .LVU303
 1136 0224 092B     		cmp	r3, #9
 1137 0226 1AD8     		bhi	.L100
 379:Task/Task_Control.c ****                         {
 380:Task/Task_Control.c ****                             TaskControl_Monitor.control_abort = true;
 381:Task/Task_Control.c ****                             goto lock_moto;
 382:Task/Task_Control.c ****                         }
 383:Task/Task_Control.c ****                         else
 384:Task/Task_Control.c ****                         {
 385:Task/Task_Control.c ****                             /* use last time sample imu data for control */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 30


 386:Task/Task_Control.c ****                             for(axis = Axis_X; axis < Axis_Sum; axis++)
 1138              		.loc 1 386 38 view .LVU304
 1139 0228 0023     		movs	r3, #0
 1140              	.LVL49:
 1141              	.L84:
 1142              		.loc 1 386 48 is_stmt 1 discriminator 1 view .LVU305
 1143              		.loc 1 386 29 is_stmt 0 discriminator 1 view .LVU306
 1144 022a 022B     		cmp	r3, #2
 1145 022c 60D8     		bhi	.L79
 387:Task/Task_Control.c ****                             {
 388:Task/Task_Control.c ****                                 TaskControl_Monitor.acc[axis] = TaskControl_Monitor.acc_lst[axis];
 1146              		.loc 1 388 33 is_stmt 1 discriminator 3 view .LVU307
 1147              		.loc 1 388 92 is_stmt 0 discriminator 3 view .LVU308
 1148 022e 224A     		ldr	r2, .L101
 1149 0230 03F13A01 		add	r1, r3, #58
 1150 0234 02EB8101 		add	r1, r2, r1, lsl #2
 1151 0238 0868     		ldr	r0, [r1]	@ float
 1152              		.loc 1 388 63 discriminator 3 view .LVU309
 1153 023a 03F13401 		add	r1, r3, #52
 1154 023e 02EB8101 		add	r1, r2, r1, lsl #2
 1155 0242 0860     		str	r0, [r1]	@ float
 389:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 1156              		.loc 1 389 33 is_stmt 1 discriminator 3 view .LVU310
 1157              		.loc 1 389 92 is_stmt 0 discriminator 3 view .LVU311
 1158 0244 03F13C01 		add	r1, r3, #60
 1159 0248 02EB8101 		add	r1, r2, r1, lsl #2
 1160 024c 4968     		ldr	r1, [r1, #4]	@ float
 1161              		.loc 1 389 63 discriminator 3 view .LVU312
 1162 024e 03F13600 		add	r0, r3, #54
 1163 0252 02EB8002 		add	r2, r2, r0, lsl #2
 1164 0256 5160     		str	r1, [r2, #4]	@ float
 386:Task/Task_Control.c ****                             {
 1165              		.loc 1 386 65 is_stmt 1 discriminator 3 view .LVU313
 386:Task/Task_Control.c ****                             {
 1166              		.loc 1 386 69 is_stmt 0 discriminator 3 view .LVU314
 1167 0258 0133     		adds	r3, r3, #1
 1168              	.LVL50:
 386:Task/Task_Control.c ****                             {
 1169              		.loc 1 386 69 discriminator 3 view .LVU315
 1170 025a DBB2     		uxtb	r3, r3
 1171              	.LVL51:
 386:Task/Task_Control.c ****                             {
 1172              		.loc 1 386 69 discriminator 3 view .LVU316
 1173 025c E5E7     		b	.L84
 1174              	.LVL52:
 1175              	.L100:
 380:Task/Task_Control.c ****                             goto lock_moto;
 1176              		.loc 1 380 29 is_stmt 1 view .LVU317
 380:Task/Task_Control.c ****                             goto lock_moto;
 1177              		.loc 1 380 63 is_stmt 0 view .LVU318
 1178 025e 1346     		mov	r3, r2
 1179 0260 0122     		movs	r2, #1
 1180 0262 5A70     		strb	r2, [r3, #1]
 381:Task/Task_Control.c ****                         }
 1181              		.loc 1 381 29 is_stmt 1 view .LVU319
 1182 0264 8FE0     		b	.L73
 1183              	.L80:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 31


 390:Task/Task_Control.c ****                             }
 391:Task/Task_Control.c ****                         }
 392:Task/Task_Control.c ****                         break;
 393:Task/Task_Control.c **** 
 394:Task/Task_Control.c ****                     case SrvIMU_Sample_Over_Angular_Accelerate:
 395:Task/Task_Control.c ****                         if(TaskControl_Monitor.angular_warning_cnt < OVER_ANGULAR_ACCELERATE_COUNT)
 1184              		.loc 1 395 25 view .LVU320
 1185              		.loc 1 395 47 is_stmt 0 view .LVU321
 1186 0266 144B     		ldr	r3, .L101
 1187 0268 93F8C330 		ldrb	r3, [r3, #195]	@ zero_extendqisi2
 1188              		.loc 1 395 27 view .LVU322
 1189 026c 042B     		cmp	r3, #4
 1190 026e 1FD8     		bhi	.L86
 396:Task/Task_Control.c ****                         {
 397:Task/Task_Control.c ****                             TaskControl_Monitor.angular_warning_cnt++;
 1191              		.loc 1 397 29 is_stmt 1 view .LVU323
 1192              		.loc 1 397 68 is_stmt 0 view .LVU324
 1193 0270 0133     		adds	r3, r3, #1
 1194 0272 114A     		ldr	r2, .L101
 1195 0274 82F8C330 		strb	r3, [r2, #195]
 398:Task/Task_Control.c **** 
 399:Task/Task_Control.c ****                             for(axis = Axis_X; axis < Axis_Sum; axis++)
 1196              		.loc 1 399 29 is_stmt 1 view .LVU325
 1197              		.loc 1 399 38 is_stmt 0 view .LVU326
 1198 0278 0023     		movs	r3, #0
 1199              		.loc 1 399 29 view .LVU327
 1200 027a 16E0     		b	.L87
 1201              	.LVL53:
 1202              	.L88:
 400:Task/Task_Control.c ****                             {
 401:Task/Task_Control.c ****                                 TaskControl_Monitor.acc[axis] = TaskControl_Monitor.acc_lst[axis];
 1203              		.loc 1 401 33 is_stmt 1 discriminator 3 view .LVU328
 1204              		.loc 1 401 92 is_stmt 0 discriminator 3 view .LVU329
 1205 027c 0E4A     		ldr	r2, .L101
 1206 027e 03F13A01 		add	r1, r3, #58
 1207 0282 02EB8101 		add	r1, r2, r1, lsl #2
 1208 0286 0868     		ldr	r0, [r1]	@ float
 1209              		.loc 1 401 63 discriminator 3 view .LVU330
 1210 0288 03F13401 		add	r1, r3, #52
 1211 028c 02EB8101 		add	r1, r2, r1, lsl #2
 1212 0290 0860     		str	r0, [r1]	@ float
 402:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 1213              		.loc 1 402 33 is_stmt 1 discriminator 3 view .LVU331
 1214              		.loc 1 402 92 is_stmt 0 discriminator 3 view .LVU332
 1215 0292 03F13C01 		add	r1, r3, #60
 1216 0296 02EB8101 		add	r1, r2, r1, lsl #2
 1217 029a 4968     		ldr	r1, [r1, #4]	@ float
 1218              		.loc 1 402 63 discriminator 3 view .LVU333
 1219 029c 03F13600 		add	r0, r3, #54
 1220 02a0 02EB8002 		add	r2, r2, r0, lsl #2
 1221 02a4 5160     		str	r1, [r2, #4]	@ float
 399:Task/Task_Control.c ****                             {
 1222              		.loc 1 399 65 is_stmt 1 discriminator 3 view .LVU334
 399:Task/Task_Control.c ****                             {
 1223              		.loc 1 399 69 is_stmt 0 discriminator 3 view .LVU335
 1224 02a6 0133     		adds	r3, r3, #1
 1225              	.LVL54:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 32


 399:Task/Task_Control.c ****                             {
 1226              		.loc 1 399 69 discriminator 3 view .LVU336
 1227 02a8 DBB2     		uxtb	r3, r3
 1228              	.LVL55:
 1229              	.L87:
 399:Task/Task_Control.c ****                             {
 1230              		.loc 1 399 48 is_stmt 1 discriminator 1 view .LVU337
 399:Task/Task_Control.c ****                             {
 1231              		.loc 1 399 29 is_stmt 0 discriminator 1 view .LVU338
 1232 02aa 022B     		cmp	r3, #2
 1233 02ac E6D9     		bls	.L88
 1234 02ae 1FE0     		b	.L79
 1235              	.LVL56:
 1236              	.L86:
 403:Task/Task_Control.c ****                             }
 404:Task/Task_Control.c ****                         }
 405:Task/Task_Control.c ****                         else
 406:Task/Task_Control.c ****                             TaskControl_Monitor.angular_protect = true;
 1237              		.loc 1 406 29 is_stmt 1 view .LVU339
 1238              		.loc 1 406 65 is_stmt 0 view .LVU340
 1239 02b0 014B     		ldr	r3, .L101
 1240 02b2 0122     		movs	r2, #1
 1241 02b4 DA70     		strb	r2, [r3, #3]
 1242 02b6 1BE0     		b	.L79
 1243              	.L102:
 1244              		.align	2
 1245              	.L101:
 1246 02b8 00000000 		.word	.LANCHOR0
 1247 02bc 00000000 		.word	.LANCHOR1
 1248 02c0 00000000 		.word	.LANCHOR2
 1249 02c4 00000000 		.word	CtlData_smp_DataPipe
 1250 02c8 00000000 		.word	CtlData_hub_DataPipe
 1251 02cc 00000000 		.word	CtlData_Log_DataPipe
 1252 02d0 00000000 		.word	SrvDataHub
 1253 02d4 00000000 		.word	.LANCHOR4
 1254 02d8 00000000 		.word	.LANCHOR3
 1255 02dc 00000000 		.word	.LANCHOR5
 1256 02e0 00000000 		.word	.LANCHOR6
 1257 02e4 00000000 		.word	.LANCHOR7
 1258              	.L78:
 407:Task/Task_Control.c ****                         break;
 408:Task/Task_Control.c ****                 }
 409:Task/Task_Control.c ****             }
 410:Task/Task_Control.c ****             else
 411:Task/Task_Control.c ****                 TaskControl_Monitor.imu_none_update_cnt = 0;
 1259              		.loc 1 411 17 is_stmt 1 view .LVU341
 1260              		.loc 1 411 57 is_stmt 0 view .LVU342
 1261 02e8 384B     		ldr	r3, .L103
 1262 02ea 0022     		movs	r2, #0
 1263 02ec 83F81821 		strb	r2, [r3, #280]
 1264              	.LVL57:
 1265              	.L79:
 412:Task/Task_Control.c ****         }
 413:Task/Task_Control.c ****         else
 414:Task/Task_Control.c ****         {
 415:Task/Task_Control.c ****             /* check keep time to abort drone control */
 416:Task/Task_Control.c ****             TaskControl_Monitor.imu_none_update_cnt ++;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 33


 417:Task/Task_Control.c **** 
 418:Task/Task_Control.c ****             if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 419:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 420:Task/Task_Control.c **** 
 421:Task/Task_Control.c ****             goto lock_moto;
 422:Task/Task_Control.c ****         }
 423:Task/Task_Control.c ****         
 424:Task/Task_Control.c ****         if(TaskControl_Monitor.angular_protect_enable && TaskControl_Monitor.angular_protect)
 1266              		.loc 1 424 9 is_stmt 1 view .LVU343
 1267              		.loc 1 424 31 is_stmt 0 view .LVU344
 1268 02f0 364B     		ldr	r3, .L103
 1269 02f2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1270              		.loc 1 424 11 view .LVU345
 1271 02f4 1BB1     		cbz	r3, .L90
 1272              		.loc 1 424 77 discriminator 1 view .LVU346
 1273 02f6 354B     		ldr	r3, .L103
 1274 02f8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1275              		.loc 1 424 55 discriminator 1 view .LVU347
 1276 02fa 002B     		cmp	r3, #0
 1277 02fc 43D1     		bne	.L73
 1278              	.L90:
 425:Task/Task_Control.c ****             goto lock_moto;
 426:Task/Task_Control.c **** 
 427:Task/Task_Control.c ****         if(TaskControl_Monitor.flip_over)
 1279              		.loc 1 427 9 is_stmt 1 view .LVU348
 1280              		.loc 1 427 31 is_stmt 0 view .LVU349
 1281 02fe 334B     		ldr	r3, .L103
 1282 0300 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 1283              		.loc 1 427 11 view .LVU350
 1284 0304 002B     		cmp	r3, #0
 1285 0306 3ED1     		bne	.L73
 428:Task/Task_Control.c ****         {
 429:Task/Task_Control.c ****             if (!exp_ctl_val->aux.bit.flip_over)
 430:Task/Task_Control.c ****                 goto lock_moto;
 431:Task/Task_Control.c **** 
 432:Task/Task_Control.c ****             /* when drone is up side down and we want to flip over it by telemetry */
 433:Task/Task_Control.c ****             /* reverse propeller spin dir to reverse the drone */
 434:Task/Task_Control.c ****         }
 435:Task/Task_Control.c ****         else
 436:Task/Task_Control.c ****         {
 437:Task/Task_Control.c ****             /* do drone control algorithm down below */
 438:Task/Task_Control.c ****             TaskControl_Monitor.throttle_percent = exp_ctl_val->throttle_percent;
 1286              		.loc 1 438 13 is_stmt 1 view .LVU351
 1287              		.loc 1 438 63 is_stmt 0 view .LVU352
 1288 0308 94F84E30 		ldrb	r3, [r4, #78]	@ zero_extendqisi2
 1289              		.loc 1 438 50 view .LVU353
 1290 030c DFF8BCC0 		ldr	ip, .L103
 1291 0310 8CF80031 		strb	r3, [ip, #256]
 439:Task/Task_Control.c **** 
 440:Task/Task_Control.c ****             /* Controller Update */
 441:Task/Task_Control.c ****             /* altitude control update */
 442:Task/Task_Control.c ****             /* attitude control update */
 443:Task/Task_Control.c ****             Controller.att_ctl(TaskControl_Monitor.ctl_para.att_mode, sys_ms, ang_ctl_only, att_ctl
 1292              		.loc 1 443 13 is_stmt 1 view .LVU354
 1293              		.loc 1 443 23 is_stmt 0 view .LVU355
 1294 0314 2E4B     		ldr	r3, .L103+4
 1295 0316 D3F80880 		ldr	r8, [r3, #8]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 34


 1296              		.loc 1 443 13 view .LVU356
 1297 031a 14AB     		add	r3, sp, #80
 1298 031c 0993     		str	r3, [sp, #36]
 1299 031e 04AC     		add	r4, sp, #16
 1300              	.LVL58:
 1301              		.loc 1 443 13 view .LVU357
 1302 0320 0AAD     		add	r5, sp, #40
 1303 0322 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1304 0324 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1305 0326 2B68     		ldr	r3, [r5]
 1306 0328 2360     		str	r3, [r4]
 1307 032a 10AB     		add	r3, sp, #64
 1308 032c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1309 032e 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1310 0332 0F9B     		ldr	r3, [sp, #60]
 1311 0334 3246     		mov	r2, r6
 1312 0336 5946     		mov	r1, fp
 1313 0338 9CF84C00 		ldrb	r0, [ip, #76]	@ zero_extendqisi2
 1314 033c C047     		blx	r8
 1315              	.LVL59:
 444:Task/Task_Control.c **** 
 445:Task/Task_Control.c ****             /* when when usb attached lock moto */
 446:Task/Task_Control.c ****             if (SrvDataHub.get_vcp_attach_state(&USB_Attach) || !USB_Attach)
 1316              		.loc 1 446 13 is_stmt 1 view .LVU358
 1317              		.loc 1 446 27 is_stmt 0 view .LVU359
 1318 033e 254B     		ldr	r3, .L103+8
 1319 0340 9B69     		ldr	r3, [r3, #24]
 1320              		.loc 1 446 17 view .LVU360
 1321 0342 0DF15F00 		add	r0, sp, #95
 1322 0346 9847     		blx	r3
 1323              	.LVL60:
 1324              		.loc 1 446 16 view .LVU361
 1325 0348 10B9     		cbnz	r0, .L91
 1326              		.loc 1 446 65 discriminator 1 view .LVU362
 1327 034a 9DF85F30 		ldrb	r3, [sp, #95]	@ zero_extendqisi2
 1328              		.loc 1 446 62 discriminator 1 view .LVU363
 1329 034e D3B9     		cbnz	r3, .L73
 1330              	.L91:
 447:Task/Task_Control.c ****             {
 448:Task/Task_Control.c ****                 TaskControl_Actuator_ControlValue_Update(TaskControl_Monitor.throttle_percent, \
 1331              		.loc 1 448 17 is_stmt 1 view .LVU364
 1332 0350 9DED161A 		vldr.32	s2, [sp, #88]
 1333 0354 DDED150A 		vldr.32	s1, [sp, #84]
 1334 0358 9DED140A 		vldr.32	s0, [sp, #80]
 1335 035c 1B4B     		ldr	r3, .L103
 1336 035e 93F80001 		ldrb	r0, [r3, #256]	@ zero_extendqisi2
 1337 0362 FFF7FEFF 		bl	TaskControl_Actuator_ControlValue_Update
 1338              	.LVL61:
 449:Task/Task_Control.c ****                                                          att_ctl_out.gyro_x, \
 450:Task/Task_Control.c ****                                                          att_ctl_out.gyro_y, \
 451:Task/Task_Control.c ****                                                          att_ctl_out.gyro_z);
 452:Task/Task_Control.c **** 
 453:Task/Task_Control.c ****                 if(imu_err_code == SrvIMU_Sample_NoError)
 1339              		.loc 1 453 17 view .LVU365
 1340              		.loc 1 453 33 is_stmt 0 view .LVU366
 1341 0366 1C4B     		ldr	r3, .L103+12
 1342 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 35


 1343              		.loc 1 453 19 view .LVU367
 1344 036a 5BB3     		cbz	r3, .L92
 1345 036c 0EE0     		b	.L72
 1346              	.LVL62:
 1347              	.L75:
 416:Task/Task_Control.c **** 
 1348              		.loc 1 416 13 is_stmt 1 view .LVU368
 416:Task/Task_Control.c **** 
 1349              		.loc 1 416 32 is_stmt 0 view .LVU369
 1350 036e 174A     		ldr	r2, .L103
 1351 0370 92F81831 		ldrb	r3, [r2, #280]	@ zero_extendqisi2
 416:Task/Task_Control.c **** 
 1352              		.loc 1 416 53 view .LVU370
 1353 0374 0133     		adds	r3, r3, #1
 1354 0376 DBB2     		uxtb	r3, r3
 1355 0378 82F81831 		strb	r3, [r2, #280]
 418:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 1356              		.loc 1 418 13 is_stmt 1 view .LVU371
 418:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 1357              		.loc 1 418 15 is_stmt 0 view .LVU372
 1358 037c 092B     		cmp	r3, #9
 1359 037e 02D9     		bls	.L73
 419:Task/Task_Control.c **** 
 1360              		.loc 1 419 17 is_stmt 1 view .LVU373
 419:Task/Task_Control.c **** 
 1361              		.loc 1 419 51 is_stmt 0 view .LVU374
 1362 0380 1346     		mov	r3, r2
 1363 0382 0122     		movs	r2, #1
 1364 0384 5A70     		strb	r2, [r3, #1]
 421:Task/Task_Control.c ****         }
 1365              		.loc 1 421 13 is_stmt 1 view .LVU375
 1366              	.LVL63:
 1367              	.L73:
 454:Task/Task_Control.c ****                 {
 455:Task/Task_Control.c ****                     for(axis = Axis_X; axis < Axis_Sum; axis ++)
 456:Task/Task_Control.c ****                     {
 457:Task/Task_Control.c ****                         TaskControl_Monitor.acc_lst[axis] = TaskControl_Monitor.acc[axis];
 458:Task/Task_Control.c ****                         TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 459:Task/Task_Control.c ****                     }
 460:Task/Task_Control.c ****                 }
 461:Task/Task_Control.c ****             
 462:Task/Task_Control.c ****                 return;
 463:Task/Task_Control.c ****             }
 464:Task/Task_Control.c ****         }
 465:Task/Task_Control.c ****     }
 466:Task/Task_Control.c **** 
 467:Task/Task_Control.c **** lock_moto:
 468:Task/Task_Control.c ****     SrvActuator.lock();
 1368              		.loc 1 468 5 discriminator 2 view .LVU376
 1369              		.loc 1 468 16 is_stmt 0 discriminator 2 view .LVU377
 1370 0386 154B     		ldr	r3, .L103+16
 1371 0388 DB68     		ldr	r3, [r3, #12]
 1372              		.loc 1 468 5 discriminator 2 view .LVU378
 1373 038a 9847     		blx	r3
 1374              	.LVL64:
 1375              	.L72:
 469:Task/Task_Control.c **** }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 36


 1376              		.loc 1 469 1 view .LVU379
 1377 038c 19B0     		add	sp, sp, #100
 1378              	.LCFI10:
 1379              		.cfi_remember_state
 1380              		.cfi_def_cfa_offset 44
 1381              		@ sp needed
 1382 038e BDEC028B 		vldm	sp!, {d8}
 1383              	.LCFI11:
 1384              		.cfi_restore 80
 1385              		.cfi_restore 81
 1386              		.cfi_def_cfa_offset 36
 1387 0392 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1388              	.LVL65:
 1389              	.L94:
 1390              	.LCFI12:
 1391              		.cfi_restore_state
 457:Task/Task_Control.c ****                         TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 1392              		.loc 1 457 25 is_stmt 1 discriminator 3 view .LVU380
 457:Task/Task_Control.c ****                         TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 1393              		.loc 1 457 84 is_stmt 0 discriminator 3 view .LVU381
 1394 0396 0D4A     		ldr	r2, .L103
 1395 0398 03F13401 		add	r1, r3, #52
 1396 039c 02EB8101 		add	r1, r2, r1, lsl #2
 1397 03a0 0868     		ldr	r0, [r1]	@ float
 457:Task/Task_Control.c ****                         TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 1398              		.loc 1 457 59 discriminator 3 view .LVU382
 1399 03a2 03F13A01 		add	r1, r3, #58
 1400 03a6 02EB8101 		add	r1, r2, r1, lsl #2
 1401 03aa 0860     		str	r0, [r1]	@ float
 458:Task/Task_Control.c ****                     }
 1402              		.loc 1 458 25 is_stmt 1 discriminator 3 view .LVU383
 458:Task/Task_Control.c ****                     }
 1403              		.loc 1 458 84 is_stmt 0 discriminator 3 view .LVU384
 1404 03ac 03F13601 		add	r1, r3, #54
 1405 03b0 02EB8101 		add	r1, r2, r1, lsl #2
 1406 03b4 4968     		ldr	r1, [r1, #4]	@ float
 458:Task/Task_Control.c ****                     }
 1407              		.loc 1 458 59 discriminator 3 view .LVU385
 1408 03b6 03F13C00 		add	r0, r3, #60
 1409 03ba 02EB8002 		add	r2, r2, r0, lsl #2
 1410 03be 5160     		str	r1, [r2, #4]	@ float
 455:Task/Task_Control.c ****                     {
 1411              		.loc 1 455 57 is_stmt 1 discriminator 3 view .LVU386
 455:Task/Task_Control.c ****                     {
 1412              		.loc 1 455 62 is_stmt 0 discriminator 3 view .LVU387
 1413 03c0 0133     		adds	r3, r3, #1
 1414              	.LVL66:
 455:Task/Task_Control.c ****                     {
 1415              		.loc 1 455 62 discriminator 3 view .LVU388
 1416 03c2 DBB2     		uxtb	r3, r3
 1417              	.LVL67:
 1418              	.L92:
 455:Task/Task_Control.c ****                     {
 1419              		.loc 1 455 40 is_stmt 1 discriminator 1 view .LVU389
 455:Task/Task_Control.c ****                     {
 1420              		.loc 1 455 21 is_stmt 0 discriminator 1 view .LVU390
 1421 03c4 022B     		cmp	r3, #2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 37


 1422 03c6 E6D9     		bls	.L94
 1423 03c8 E0E7     		b	.L72
 1424              	.L104:
 1425 03ca 00BF     		.align	2
 1426              	.L103:
 1427 03cc 00000000 		.word	.LANCHOR0
 1428 03d0 00000000 		.word	Controller
 1429 03d4 00000000 		.word	SrvDataHub
 1430 03d8 00000000 		.word	.LANCHOR4
 1431 03dc 00000000 		.word	SrvActuator
 1432              		.cfi_endproc
 1433              	.LFE2080:
 1435              		.section	.rodata.TaskControl_CLI_Polling.str1.4,"aMS",%progbits,1
 1436              		.align	2
 1437              	.LC3:
 1438 0000 6D6F746F 		.ascii	"moto spin dir set done\015\012\000"
 1438      20737069 
 1438      6E206469 
 1438      72207365 
 1438      7420646F 
 1439 0019 000000   		.align	2
 1440              	.LC4:
 1441 001c 6D6F746F 		.ascii	"moto spin dir set error\015\012\000"
 1441      20737069 
 1441      6E206469 
 1441      72207365 
 1441      74206572 
 1442              		.section	.text.TaskControl_CLI_Polling,"ax",%progbits
 1443              		.align	1
 1444              		.syntax unified
 1445              		.thumb
 1446              		.thumb_func
 1448              	TaskControl_CLI_Polling:
 1449              	.LFB2081:
 470:Task/Task_Control.c **** 
 471:Task/Task_Control.c **** /****************************************************** CLI Section *******************************
 472:Task/Task_Control.c **** static void TaskControl_CLI_Polling(void)
 473:Task/Task_Control.c **** {
 1450              		.loc 1 473 1 is_stmt 1 view -0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 32
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454 0000 30B5     		push	{r4, r5, lr}
 1455              	.LCFI13:
 1456              		.cfi_def_cfa_offset 12
 1457              		.cfi_offset 4, -12
 1458              		.cfi_offset 5, -8
 1459              		.cfi_offset 14, -4
 1460 0002 89B0     		sub	sp, sp, #36
 1461              	.LCFI14:
 1462              		.cfi_def_cfa_offset 48
 474:Task/Task_Control.c ****     osEvent event;
 1463              		.loc 1 474 5 view .LVU392
 475:Task/Task_Control.c ****     static TaskControl_CLIData_TypeDef CLIData;
 1464              		.loc 1 475 5 view .LVU393
 476:Task/Task_Control.c ****     static uint16_t moto_ctl_buff[8] = {0};
 1465              		.loc 1 476 5 view .LVU394
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 38


 477:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 1466              		.loc 1 477 5 view .LVU395
 1467              		.loc 1 477 24 is_stmt 0 view .LVU396
 1468 0004 FFF7FEFF 		bl	Shell_GetInstence
 1469              	.LVL68:
 478:Task/Task_Control.c **** 
 479:Task/Task_Control.c ****     if ((shell_obj == NULL) || \
 1470              		.loc 1 479 5 is_stmt 1 view .LVU397
 1471              		.loc 1 479 8 is_stmt 0 view .LVU398
 1472 0008 C8B1     		cbz	r0, .L105
 1473 000a 0446     		mov	r4, r0
 480:Task/Task_Control.c ****         (SrvActuator.lock == NULL) || \
 1474              		.loc 1 480 21 discriminator 1 view .LVU399
 1475 000c 5E4B     		ldr	r3, .L131
 1476 000e DB68     		ldr	r3, [r3, #12]
 479:Task/Task_Control.c ****         (SrvActuator.lock == NULL) || \
 1477              		.loc 1 479 29 discriminator 1 view .LVU400
 1478 0010 ABB1     		cbz	r3, .L105
 481:Task/Task_Control.c ****         (SrvActuator.moto_direct_drive == NULL))
 1479              		.loc 1 481 21 view .LVU401
 1480 0012 5D4B     		ldr	r3, .L131
 1481 0014 1B6B     		ldr	r3, [r3, #48]
 480:Task/Task_Control.c ****         (SrvActuator.lock == NULL) || \
 1482              		.loc 1 480 36 view .LVU402
 1483 0016 93B1     		cbz	r3, .L105
 482:Task/Task_Control.c ****         return;
 483:Task/Task_Control.c **** 
 484:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID)
 1484              		.loc 1 484 5 is_stmt 1 view .LVU403
 1485              		.loc 1 484 27 is_stmt 0 view .LVU404
 1486 0018 5C4B     		ldr	r3, .L131+4
 1487 001a D3F81C11 		ldr	r1, [r3, #284]
 1488              		.loc 1 484 7 view .LVU405
 1489 001e 31B1     		cbz	r1, .L107
 485:Task/Task_Control.c ****     {
 486:Task/Task_Control.c ****         event = osMessageGet(TaskControl_Monitor.CLIMessage_ID, CLI_MESSAGE_OPEARATE_TIMEOUT);
 1490              		.loc 1 486 9 is_stmt 1 view .LVU406
 1491              		.loc 1 486 17 is_stmt 0 view .LVU407
 1492 0020 0122     		movs	r2, #1
 1493 0022 01A8     		add	r0, sp, #4
 1494              	.LVL69:
 1495              		.loc 1 486 17 view .LVU408
 1496 0024 FFF7FEFF 		bl	osMessageGet
 1497              	.LVL70:
 487:Task/Task_Control.c ****         if (event.status == osEventMessage)
 1498              		.loc 1 487 9 is_stmt 1 view .LVU409
 1499              		.loc 1 487 18 is_stmt 0 view .LVU410
 1500 0028 019B     		ldr	r3, [sp, #4]
 1501              		.loc 1 487 12 view .LVU411
 1502 002a 102B     		cmp	r3, #16
 1503 002c 09D0     		beq	.L127
 1504              	.LVL71:
 1505              	.L107:
 488:Task/Task_Control.c ****         {
 489:Task/Task_Control.c ****             if (event.value.p == NULL)
 490:Task/Task_Control.c ****             {
 491:Task/Task_Control.c ****                 SrvActuator.lock();
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 39


 492:Task/Task_Control.c ****                 return;
 493:Task/Task_Control.c ****             }
 494:Task/Task_Control.c **** 
 495:Task/Task_Control.c ****             CLIData = *(TaskControl_CLIData_TypeDef *)(event.value.p);
 496:Task/Task_Control.c ****             switch((uint8_t)CLIData.cli_type)
 497:Task/Task_Control.c ****             {
 498:Task/Task_Control.c ****                 case TaskControl_Moto_Set_SpinDir:
 499:Task/Task_Control.c ****                     memset(moto_ctl_buff, 0, sizeof(moto_ctl_buff));
 500:Task/Task_Control.c ****                     if(SrvActuator.set_spin_dir(CLIData.index, (uint8_t)CLIData.value))
 501:Task/Task_Control.c ****                     {
 502:Task/Task_Control.c ****                         shellPrint(shell_obj, "moto spin dir set done\r\n");
 503:Task/Task_Control.c ****                         SrvActuator.save(CLIData.index);
 504:Task/Task_Control.c ****                     }
 505:Task/Task_Control.c ****                     else
 506:Task/Task_Control.c ****                         shellPrint(shell_obj, "moto spin dir set error\r\n");
 507:Task/Task_Control.c ****                     break;
 508:Task/Task_Control.c **** 
 509:Task/Task_Control.c ****                 case TaskControl_Moto_Set_Spin:
 510:Task/Task_Control.c ****                     if(CLIData.index < SrvActuator.get_cnt().moto_cnt)
 511:Task/Task_Control.c ****                     {
 512:Task/Task_Control.c ****                         for(uint8_t i = 0; i < SrvActuator.get_cnt().moto_cnt; i++)
 513:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 514:Task/Task_Control.c **** 
 515:Task/Task_Control.c ****                         moto_ctl_buff[CLIData.index] = CLIData.value;
 516:Task/Task_Control.c ****                     }
 517:Task/Task_Control.c ****                     else
 518:Task/Task_Control.c ****                     {
 519:Task/Task_Control.c ****                         for(uint8_t i = 0; i < SrvActuator.get_cnt().moto_cnt; i++)
 520:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 521:Task/Task_Control.c ****                     }
 522:Task/Task_Control.c ****                     break;
 523:Task/Task_Control.c **** 
 524:Task/Task_Control.c ****                 case TaskControl_Moto_CliDisable:
 525:Task/Task_Control.c ****                     memset(moto_ctl_buff, 0, sizeof(moto_ctl_buff));
 526:Task/Task_Control.c ****                     TaskControl_Monitor.CLI_enable = false;
 527:Task/Task_Control.c ****                     break;
 528:Task/Task_Control.c **** 
 529:Task/Task_Control.c ****                 default: break;
 530:Task/Task_Control.c ****             }
 531:Task/Task_Control.c **** 
 532:Task/Task_Control.c ****             SrvOsCommon.free(event.value.p);
 533:Task/Task_Control.c ****         }
 534:Task/Task_Control.c ****     }
 535:Task/Task_Control.c **** 
 536:Task/Task_Control.c ****     if(CLIData.cli_type == TaskControl_Moto_Set_Spin)
 1506              		.loc 1 536 5 is_stmt 1 view .LVU412
 1507              		.loc 1 536 15 is_stmt 0 view .LVU413
 1508 002e 584B     		ldr	r3, .L131+8
 1509 0030 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1510              		.loc 1 536 7 view .LVU414
 1511 0032 012B     		cmp	r3, #1
 1512 0034 00F0A680 		beq	.L128
 537:Task/Task_Control.c ****     {
 538:Task/Task_Control.c ****         /* set moto spin */
 539:Task/Task_Control.c ****         for (uint8_t i = 0; i < SrvActuator.get_cnt().moto_cnt; i++)
 540:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 541:Task/Task_Control.c ****     }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 40


 542:Task/Task_Control.c ****     else
 543:Task/Task_Control.c ****         SrvActuator.lock();
 1513              		.loc 1 543 9 is_stmt 1 view .LVU415
 1514              		.loc 1 543 20 is_stmt 0 view .LVU416
 1515 0038 534B     		ldr	r3, .L131
 1516 003a DB68     		ldr	r3, [r3, #12]
 1517              		.loc 1 543 9 view .LVU417
 1518 003c 9847     		blx	r3
 1519              	.LVL72:
 1520              	.L105:
 544:Task/Task_Control.c **** }
 1521              		.loc 1 544 1 view .LVU418
 1522 003e 09B0     		add	sp, sp, #36
 1523              	.LCFI15:
 1524              		.cfi_remember_state
 1525              		.cfi_def_cfa_offset 12
 1526              		@ sp needed
 1527 0040 30BD     		pop	{r4, r5, pc}
 1528              	.LVL73:
 1529              	.L127:
 1530              	.LCFI16:
 1531              		.cfi_restore_state
 489:Task/Task_Control.c ****             {
 1532              		.loc 1 489 13 is_stmt 1 view .LVU419
 489:Task/Task_Control.c ****             {
 1533              		.loc 1 489 28 is_stmt 0 view .LVU420
 1534 0042 029D     		ldr	r5, [sp, #8]
 489:Task/Task_Control.c ****             {
 1535              		.loc 1 489 16 view .LVU421
 1536 0044 85B1     		cbz	r5, .L129
 495:Task/Task_Control.c ****             switch((uint8_t)CLIData.cli_type)
 1537              		.loc 1 495 13 is_stmt 1 view .LVU422
 495:Task/Task_Control.c ****             switch((uint8_t)CLIData.cli_type)
 1538              		.loc 1 495 21 is_stmt 0 view .LVU423
 1539 0046 524B     		ldr	r3, .L131+8
 1540 0048 95E80300 		ldm	r5, {r0, r1}
 1541 004c 83E80300 		stm	r3, {r0, r1}
 496:Task/Task_Control.c ****             {
 1542              		.loc 1 496 13 is_stmt 1 view .LVU424
 496:Task/Task_Control.c ****             {
 1543              		.loc 1 496 36 is_stmt 0 view .LVU425
 1544 0050 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 496:Task/Task_Control.c ****             {
 1545              		.loc 1 496 13 view .LVU426
 1546 0052 012B     		cmp	r3, #1
 1547 0054 28D0     		beq	.L109
 1548 0056 022B     		cmp	r3, #2
 1549 0058 0AD0     		beq	.L110
 1550 005a 002B     		cmp	r3, #0
 1551 005c 6FD0     		beq	.L130
 1552              	.LVL74:
 1553              	.L112:
 532:Task/Task_Control.c ****         }
 1554              		.loc 1 532 13 is_stmt 1 view .LVU427
 532:Task/Task_Control.c ****         }
 1555              		.loc 1 532 24 is_stmt 0 view .LVU428
 1556 005e 4D4B     		ldr	r3, .L131+12
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 41


 1557 0060 DB6A     		ldr	r3, [r3, #44]
 532:Task/Task_Control.c ****         }
 1558              		.loc 1 532 13 view .LVU429
 1559 0062 2846     		mov	r0, r5
 1560 0064 9847     		blx	r3
 1561              	.LVL75:
 1562 0066 E2E7     		b	.L107
 1563              	.LVL76:
 1564              	.L129:
 491:Task/Task_Control.c ****                 return;
 1565              		.loc 1 491 17 is_stmt 1 view .LVU430
 491:Task/Task_Control.c ****                 return;
 1566              		.loc 1 491 28 is_stmt 0 view .LVU431
 1567 0068 474B     		ldr	r3, .L131
 1568 006a DB68     		ldr	r3, [r3, #12]
 491:Task/Task_Control.c ****                 return;
 1569              		.loc 1 491 17 view .LVU432
 1570 006c 9847     		blx	r3
 1571              	.LVL77:
 492:Task/Task_Control.c ****             }
 1572              		.loc 1 492 17 is_stmt 1 view .LVU433
 1573 006e E6E7     		b	.L105
 1574              	.L110:
 499:Task/Task_Control.c ****                     if(SrvActuator.set_spin_dir(CLIData.index, (uint8_t)CLIData.value))
 1575              		.loc 1 499 21 view .LVU434
 1576 0070 494B     		ldr	r3, .L131+16
 1577 0072 0022     		movs	r2, #0
 1578 0074 1A60     		str	r2, [r3]
 1579 0076 5A60     		str	r2, [r3, #4]
 1580 0078 9A60     		str	r2, [r3, #8]
 1581 007a DA60     		str	r2, [r3, #12]
 500:Task/Task_Control.c ****                     {
 1582              		.loc 1 500 21 view .LVU435
 500:Task/Task_Control.c ****                     {
 1583              		.loc 1 500 35 is_stmt 0 view .LVU436
 1584 007c 424B     		ldr	r3, .L131
 1585 007e DA69     		ldr	r2, [r3, #28]
 500:Task/Task_Control.c ****                     {
 1586              		.loc 1 500 80 view .LVU437
 1587 0080 434B     		ldr	r3, .L131+8
 500:Task/Task_Control.c ****                     {
 1588              		.loc 1 500 24 view .LVU438
 1589 0082 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 1590 0084 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 1591 0086 9047     		blx	r2
 1592              	.LVL78:
 500:Task/Task_Control.c ****                     {
 1593              		.loc 1 500 23 view .LVU439
 1594 0088 48B1     		cbz	r0, .L113
 502:Task/Task_Control.c ****                         SrvActuator.save(CLIData.index);
 1595              		.loc 1 502 25 is_stmt 1 view .LVU440
 1596 008a 4449     		ldr	r1, .L131+20
 1597 008c 2046     		mov	r0, r4
 1598 008e FFF7FEFF 		bl	shellPrint
 1599              	.LVL79:
 503:Task/Task_Control.c ****                     }
 1600              		.loc 1 503 25 view .LVU441
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 42


 503:Task/Task_Control.c ****                     }
 1601              		.loc 1 503 36 is_stmt 0 view .LVU442
 1602 0092 3D4B     		ldr	r3, .L131
 1603 0094 9B6B     		ldr	r3, [r3, #56]
 503:Task/Task_Control.c ****                     }
 1604              		.loc 1 503 25 view .LVU443
 1605 0096 3E4A     		ldr	r2, .L131+8
 1606 0098 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
 1607 009a 9847     		blx	r3
 1608              	.LVL80:
 1609 009c DFE7     		b	.L112
 1610              	.L113:
 506:Task/Task_Control.c ****                     break;
 1611              		.loc 1 506 25 is_stmt 1 view .LVU444
 1612 009e 4049     		ldr	r1, .L131+24
 1613 00a0 2046     		mov	r0, r4
 1614 00a2 FFF7FEFF 		bl	shellPrint
 1615              	.LVL81:
 1616 00a6 DAE7     		b	.L112
 1617              	.L109:
 510:Task/Task_Control.c ****                     {
 1618              		.loc 1 510 21 view .LVU445
 510:Task/Task_Control.c ****                     {
 1619              		.loc 1 510 31 is_stmt 0 view .LVU446
 1620 00a8 394B     		ldr	r3, .L131+8
 1621 00aa 5C79     		ldrb	r4, [r3, #5]	@ zero_extendqisi2
 1622              	.LVL82:
 510:Task/Task_Control.c ****                     {
 1623              		.loc 1 510 51 view .LVU447
 1624 00ac 364B     		ldr	r3, .L131
 1625 00ae 9B6A     		ldr	r3, [r3, #40]
 510:Task/Task_Control.c ****                     {
 1626              		.loc 1 510 40 view .LVU448
 1627 00b0 9847     		blx	r3
 1628              	.LVL83:
 1629 00b2 8DF81000 		strb	r0, [sp, #16]
 1630 00b6 C0F30723 		ubfx	r3, r0, #8, #8
 1631 00ba 8DF81130 		strb	r3, [sp, #17]
 1632 00be C0F30740 		ubfx	r0, r0, #16, #8
 1633 00c2 8DF81200 		strb	r0, [sp, #18]
 510:Task/Task_Control.c ****                     {
 1634              		.loc 1 510 61 view .LVU449
 1635 00c6 DBB2     		uxtb	r3, r3
 510:Task/Task_Control.c ****                     {
 1636              		.loc 1 510 23 view .LVU450
 1637 00c8 9C42     		cmp	r4, r3
 1638 00ca 1ED3     		bcc	.L123
 1639              	.LBB4:
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1640              		.loc 1 519 37 view .LVU451
 1641 00cc 0024     		movs	r4, #0
 1642 00ce 25E0     		b	.L115
 1643              	.LVL84:
 1644              	.L116:
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1645              		.loc 1 519 37 view .LVU452
 1646              	.LBE4:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 43


 1647              	.LBB5:
 513:Task/Task_Control.c **** 
 1648              		.loc 1 513 29 is_stmt 1 discriminator 3 view .LVU453
 513:Task/Task_Control.c **** 
 1649              		.loc 1 513 46 is_stmt 0 discriminator 3 view .LVU454
 1650 00d0 314B     		ldr	r3, .L131+16
 1651 00d2 0022     		movs	r2, #0
 1652 00d4 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1653              		.loc 1 512 80 is_stmt 1 discriminator 3 view .LVU455
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1654              		.loc 1 512 81 is_stmt 0 discriminator 3 view .LVU456
 1655 00d8 0134     		adds	r4, r4, #1
 1656              	.LVL85:
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1657              		.loc 1 512 81 discriminator 3 view .LVU457
 1658 00da E4B2     		uxtb	r4, r4
 1659              	.LVL86:
 1660              	.L114:
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1661              		.loc 1 512 44 is_stmt 1 discriminator 1 view .LVU458
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1662              		.loc 1 512 59 is_stmt 0 discriminator 1 view .LVU459
 1663 00dc 2A4B     		ldr	r3, .L131
 1664 00de 9B6A     		ldr	r3, [r3, #40]
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1665              		.loc 1 512 48 discriminator 1 view .LVU460
 1666 00e0 9847     		blx	r3
 1667              	.LVL87:
 1668 00e2 8DF81400 		strb	r0, [sp, #20]
 1669 00e6 C0F30723 		ubfx	r3, r0, #8, #8
 1670 00ea 8DF81530 		strb	r3, [sp, #21]
 1671 00ee C0F30740 		ubfx	r0, r0, #16, #8
 1672 00f2 8DF81600 		strb	r0, [sp, #22]
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1673              		.loc 1 512 69 discriminator 1 view .LVU461
 1674 00f6 DBB2     		uxtb	r3, r3
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1675              		.loc 1 512 25 discriminator 1 view .LVU462
 1676 00f8 A342     		cmp	r3, r4
 1677 00fa E9D8     		bhi	.L116
 1678              	.LBE5:
 515:Task/Task_Control.c ****                     }
 1679              		.loc 1 515 25 is_stmt 1 view .LVU463
 515:Task/Task_Control.c ****                     }
 1680              		.loc 1 515 46 is_stmt 0 view .LVU464
 1681 00fc 244B     		ldr	r3, .L131+8
 1682 00fe 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 515:Task/Task_Control.c ****                     }
 1683              		.loc 1 515 63 view .LVU465
 1684 0100 D988     		ldrh	r1, [r3, #6]
 515:Task/Task_Control.c ****                     }
 1685              		.loc 1 515 54 view .LVU466
 1686 0102 254B     		ldr	r3, .L131+16
 1687 0104 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 1688 0108 A9E7     		b	.L112
 1689              	.LVL88:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 44


 1690              	.L123:
 1691              	.LBB6:
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1692              		.loc 1 512 37 view .LVU467
 1693 010a 0024     		movs	r4, #0
 1694 010c E6E7     		b	.L114
 1695              	.LVL89:
 1696              	.L117:
 512:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1697              		.loc 1 512 37 view .LVU468
 1698              	.LBE6:
 1699              	.LBB7:
 520:Task/Task_Control.c ****                     }
 1700              		.loc 1 520 29 is_stmt 1 discriminator 3 view .LVU469
 520:Task/Task_Control.c ****                     }
 1701              		.loc 1 520 55 is_stmt 0 discriminator 3 view .LVU470
 1702 010e 204B     		ldr	r3, .L131+8
 1703 0110 DA88     		ldrh	r2, [r3, #6]
 520:Task/Task_Control.c ****                     }
 1704              		.loc 1 520 46 discriminator 3 view .LVU471
 1705 0112 214B     		ldr	r3, .L131+16
 1706 0114 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1707              		.loc 1 519 80 is_stmt 1 discriminator 3 view .LVU472
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1708              		.loc 1 519 81 is_stmt 0 discriminator 3 view .LVU473
 1709 0118 0134     		adds	r4, r4, #1
 1710              	.LVL90:
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1711              		.loc 1 519 81 discriminator 3 view .LVU474
 1712 011a E4B2     		uxtb	r4, r4
 1713              	.LVL91:
 1714              	.L115:
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1715              		.loc 1 519 44 is_stmt 1 discriminator 1 view .LVU475
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1716              		.loc 1 519 59 is_stmt 0 discriminator 1 view .LVU476
 1717 011c 1A4B     		ldr	r3, .L131
 1718 011e 9B6A     		ldr	r3, [r3, #40]
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1719              		.loc 1 519 48 discriminator 1 view .LVU477
 1720 0120 9847     		blx	r3
 1721              	.LVL92:
 1722 0122 8DF81800 		strb	r0, [sp, #24]
 1723 0126 C0F30723 		ubfx	r3, r0, #8, #8
 1724 012a 8DF81930 		strb	r3, [sp, #25]
 1725 012e C0F30740 		ubfx	r0, r0, #16, #8
 1726 0132 8DF81A00 		strb	r0, [sp, #26]
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1727              		.loc 1 519 69 discriminator 1 view .LVU478
 1728 0136 DBB2     		uxtb	r3, r3
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1729              		.loc 1 519 25 discriminator 1 view .LVU479
 1730 0138 A342     		cmp	r3, r4
 1731 013a E8D8     		bhi	.L117
 1732 013c 8FE7     		b	.L112
 1733              	.LVL93:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 45


 1734              	.L130:
 519:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1735              		.loc 1 519 25 discriminator 1 view .LVU480
 1736              	.LBE7:
 525:Task/Task_Control.c ****                     TaskControl_Monitor.CLI_enable = false;
 1737              		.loc 1 525 21 is_stmt 1 view .LVU481
 1738 013e 164A     		ldr	r2, .L131+16
 1739 0140 0023     		movs	r3, #0
 1740 0142 1360     		str	r3, [r2]
 1741 0144 5360     		str	r3, [r2, #4]
 1742 0146 9360     		str	r3, [r2, #8]
 1743 0148 D360     		str	r3, [r2, #12]
 526:Task/Task_Control.c ****                     break;
 1744              		.loc 1 526 21 view .LVU482
 526:Task/Task_Control.c ****                     break;
 1745              		.loc 1 526 52 is_stmt 0 view .LVU483
 1746 014a 104A     		ldr	r2, .L131+4
 1747 014c 9371     		strb	r3, [r2, #6]
 527:Task/Task_Control.c **** 
 1748              		.loc 1 527 21 is_stmt 1 view .LVU484
 1749 014e 86E7     		b	.L112
 1750              	.LVL94:
 1751              	.L120:
 1752              	.LBB8:
 540:Task/Task_Control.c ****     }
 1753              		.loc 1 540 13 discriminator 3 view .LVU485
 540:Task/Task_Control.c ****     }
 1754              		.loc 1 540 24 is_stmt 0 discriminator 3 view .LVU486
 1755 0150 0D4B     		ldr	r3, .L131
 1756 0152 1B6B     		ldr	r3, [r3, #48]
 540:Task/Task_Control.c ****     }
 1757              		.loc 1 540 13 discriminator 3 view .LVU487
 1758 0154 104A     		ldr	r2, .L131+16
 1759 0156 32F81410 		ldrh	r1, [r2, r4, lsl #1]
 1760 015a 2046     		mov	r0, r4
 1761 015c 9847     		blx	r3
 1762              	.LVL95:
 539:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1763              		.loc 1 539 65 is_stmt 1 discriminator 3 view .LVU488
 539:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1764              		.loc 1 539 66 is_stmt 0 discriminator 3 view .LVU489
 1765 015e 0134     		adds	r4, r4, #1
 1766              	.LVL96:
 539:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1767              		.loc 1 539 66 discriminator 3 view .LVU490
 1768 0160 E4B2     		uxtb	r4, r4
 1769              	.LVL97:
 1770              	.L118:
 539:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1771              		.loc 1 539 29 is_stmt 1 discriminator 1 view .LVU491
 539:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1772              		.loc 1 539 44 is_stmt 0 discriminator 1 view .LVU492
 1773 0162 094B     		ldr	r3, .L131
 1774 0164 9B6A     		ldr	r3, [r3, #40]
 539:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1775              		.loc 1 539 33 discriminator 1 view .LVU493
 1776 0166 9847     		blx	r3
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 46


 1777              	.LVL98:
 1778 0168 8DF81C00 		strb	r0, [sp, #28]
 1779 016c C0F30723 		ubfx	r3, r0, #8, #8
 1780 0170 8DF81D30 		strb	r3, [sp, #29]
 1781 0174 C0F30740 		ubfx	r0, r0, #16, #8
 1782 0178 8DF81E00 		strb	r0, [sp, #30]
 539:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1783              		.loc 1 539 54 discriminator 1 view .LVU494
 1784 017c DBB2     		uxtb	r3, r3
 539:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1785              		.loc 1 539 9 discriminator 1 view .LVU495
 1786 017e A342     		cmp	r3, r4
 1787 0180 E6D8     		bhi	.L120
 1788 0182 5CE7     		b	.L105
 1789              	.LVL99:
 1790              	.L128:
 539:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1791              		.loc 1 539 22 view .LVU496
 1792 0184 0024     		movs	r4, #0
 1793 0186 ECE7     		b	.L118
 1794              	.L132:
 1795              		.align	2
 1796              	.L131:
 1797 0188 00000000 		.word	SrvActuator
 1798 018c 00000000 		.word	.LANCHOR0
 1799 0190 00000000 		.word	.LANCHOR8
 1800 0194 00000000 		.word	SrvOsCommon
 1801 0198 00000000 		.word	.LANCHOR9
 1802 019c 00000000 		.word	.LC3
 1803 01a0 1C000000 		.word	.LC4
 1804              	.LBE8:
 1805              		.cfi_endproc
 1806              	.LFE2081:
 1808              		.section	.rodata.TaskControl_CLI_MotoSpinTest.str1.4,"aMS",%progbits,1
 1809              		.align	2
 1810              	.LC5:
 1811 0000 5461736B 		.ascii	"TaskControl semaphore create failed\015\012\000"
 1811      436F6E74 
 1811      726F6C20 
 1811      73656D61 
 1811      70686F72 
 1812 0026 0000     		.align	2
 1813              	.LC6:
 1814 0028 53657420 		.ascii	"Set drone in ARM state first\015\012\000"
 1814      64726F6E 
 1814      6520696E 
 1814      2041524D 
 1814      20737461 
 1815 0047 00       		.align	2
 1816              	.LC7:
 1817 0048 6D616B65 		.ascii	"make sure all propeller is already disassmabled\015"
 1817      20737572 
 1817      6520616C 
 1817      6C207072 
 1817      6F70656C 
 1818 0078 0A00     		.ascii	"\012\000"
 1819 007a 0000     		.align	2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 47


 1820              	.LC8:
 1821 007c 6D6F746F 		.ascii	"moto count : %d\015\012\000"
 1821      20636F75 
 1821      6E74203A 
 1821      2025640D 
 1821      0A00
 1822 008e 0000     		.align	2
 1823              	.LC9:
 1824 0090 616C6C20 		.ascii	"all moto selected\015\012\000"
 1824      6D6F746F 
 1824      2073656C 
 1824      65637465 
 1824      640D0A00 
 1825              		.align	2
 1826              	.LC10:
 1827 00a4 6D6F746F 		.ascii	"moto %d control range down below\015\012\000"
 1827      20256420 
 1827      636F6E74 
 1827      726F6C20 
 1827      72616E67 
 1828 00c7 00       		.align	2
 1829              	.LC11:
 1830 00c8 096D6178 		.ascii	"\011max  : %d\015\012\000"
 1830      20203A20 
 1830      25640D0A 
 1830      00
 1831 00d5 000000   		.align	2
 1832              	.LC12:
 1833 00d8 0969646C 		.ascii	"\011idle : %d\015\012\000"
 1833      65203A20 
 1833      25640D0A 
 1833      00
 1834 00e5 000000   		.align	2
 1835              	.LC13:
 1836 00e8 096D696E 		.ascii	"\011min  : %d\015\012\000"
 1836      20203A20 
 1836      25640D0A 
 1836      00
 1837 00f5 000000   		.align	2
 1838              	.LC14:
 1839 00f8 6D6F746F 		.ascii	"moto %d is selected\015\012\000"
 1839      20256420 
 1839      69732073 
 1839      656C6563 
 1839      7465640D 
 1840 010e 0000     		.align	2
 1841              	.LC15:
 1842 0110 636F6E74 		.ascii	"control range down below\015\012\000"
 1842      726F6C20 
 1842      72616E67 
 1842      6520646F 
 1842      776E2062 
 1843 012b 00       		.align	2
 1844              	.LC16:
 1845 012c 47657420 		.ascii	"Get moto control data range failed\015\012\000"
 1845      6D6F746F 
 1845      20636F6E 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 48


 1845      74726F6C 
 1845      20646174 
 1846 0151 000000   		.align	2
 1847              	.LC17:
 1848 0154 696E7075 		.ascii	"input value [%d] is bigger than max [%d] value\000"
 1848      74207661 
 1848      6C756520 
 1848      5B25645D 
 1848      20697320 
 1849 0183 00       		.align	2
 1850              	.LC18:
 1851 0184 696E7075 		.ascii	"input value [%d] is lower than min [%d] value\000"
 1851      74207661 
 1851      6C756520 
 1851      5B25645D 
 1851      20697320 
 1852 01b2 0000     		.align	2
 1853              	.LC19:
 1854 01b4 63757272 		.ascii	"current control value %d\015\012\000"
 1854      656E7420 
 1854      636F6E74 
 1854      726F6C20 
 1854      76616C75 
 1855 01cf 00       		.align	2
 1856              	.LC20:
 1857 01d0 5461736B 		.ascii	"TaskControl CLI set failed\015\012\000"
 1857      436F6E74 
 1857      726F6C20 
 1857      434C4920 
 1857      73657420 
 1858 01ed 000000   		.align	2
 1859              	.LC21:
 1860 01f0 4D6F746F 		.ascii	"Moto control test data malloc failed\015\012\000"
 1860      20636F6E 
 1860      74726F6C 
 1860      20746573 
 1860      74206461 
 1861              		.section	.text.TaskControl_CLI_MotoSpinTest,"ax",%progbits
 1862              		.align	1
 1863              		.syntax unified
 1864              		.thumb
 1865              		.thumb_func
 1867              	TaskControl_CLI_MotoSpinTest:
 1868              	.LVL100:
 1869              	.LFB2082:
 545:Task/Task_Control.c **** 
 546:Task/Task_Control.c **** static void TaskControl_CLI_MotoSpinTest(uint8_t moto_index, uint16_t test_val)
 547:Task/Task_Control.c **** {
 1870              		.loc 1 547 1 is_stmt 1 view -0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 16
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874              		.loc 1 547 1 is_stmt 0 view .LVU498
 1875 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1876              	.LCFI17:
 1877              		.cfi_def_cfa_offset 32
 1878              		.cfi_offset 4, -32
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 49


 1879              		.cfi_offset 5, -28
 1880              		.cfi_offset 6, -24
 1881              		.cfi_offset 7, -20
 1882              		.cfi_offset 8, -16
 1883              		.cfi_offset 9, -12
 1884              		.cfi_offset 10, -8
 1885              		.cfi_offset 14, -4
 1886 0004 84B0     		sub	sp, sp, #16
 1887              	.LCFI18:
 1888              		.cfi_def_cfa_offset 48
 1889 0006 0746     		mov	r7, r0
 1890 0008 0E46     		mov	r6, r1
 548:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 1891              		.loc 1 548 5 is_stmt 1 view .LVU499
 1892              		.loc 1 548 35 is_stmt 0 view .LVU500
 1893 000a 734B     		ldr	r3, .L153
 1894 000c 9B6A     		ldr	r3, [r3, #40]
 1895              		.loc 1 548 24 view .LVU501
 1896 000e 9847     		blx	r3
 1897              	.LVL101:
 1898              		.loc 1 548 24 view .LVU502
 1899 0010 8DF80C00 		strb	r0, [sp, #12]
 1900 0014 C0F30723 		ubfx	r3, r0, #8, #8
 1901 0018 8DF80D30 		strb	r3, [sp, #13]
 1902 001c C0F30743 		ubfx	r3, r0, #16, #8
 1903 0020 8DF80E30 		strb	r3, [sp, #14]
 1904              		.loc 1 548 13 view .LVU503
 1905 0024 9DF80D90 		ldrb	r9, [sp, #13]	@ zero_extendqisi2
 1906              	.LVL102:
 549:Task/Task_Control.c ****     bool arm_state = false;
 1907              		.loc 1 549 5 is_stmt 1 view .LVU504
 1908              		.loc 1 549 10 is_stmt 0 view .LVU505
 1909 0028 0023     		movs	r3, #0
 1910 002a 8DF80B30 		strb	r3, [sp, #11]
 550:Task/Task_Control.c ****     int16_t moto_max = 0;
 1911              		.loc 1 550 5 is_stmt 1 view .LVU506
 1912              		.loc 1 550 13 is_stmt 0 view .LVU507
 1913 002e ADF80830 		strh	r3, [sp, #8]	@ movhi
 551:Task/Task_Control.c ****     int16_t moto_idle = 0;
 1914              		.loc 1 551 5 is_stmt 1 view .LVU508
 1915              		.loc 1 551 13 is_stmt 0 view .LVU509
 1916 0032 ADF80630 		strh	r3, [sp, #6]	@ movhi
 552:Task/Task_Control.c ****     int16_t moto_min = 0;
 1917              		.loc 1 552 5 is_stmt 1 view .LVU510
 1918              		.loc 1 552 13 is_stmt 0 view .LVU511
 1919 0036 ADF80430 		strh	r3, [sp, #4]	@ movhi
 553:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 1920              		.loc 1 553 5 is_stmt 1 view .LVU512
 1921              		.loc 1 553 24 is_stmt 0 view .LVU513
 1922 003a FFF7FEFF 		bl	Shell_GetInstence
 1923              	.LVL103:
 554:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 1924              		.loc 1 554 5 is_stmt 1 view .LVU514
 555:Task/Task_Control.c ****     bool ctl_enable = true;
 1925              		.loc 1 555 5 view .LVU515
 556:Task/Task_Control.c **** 
 557:Task/Task_Control.c ****     if(shell_obj == NULL)
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 50


 1926              		.loc 1 557 5 view .LVU516
 1927              		.loc 1 557 7 is_stmt 0 view .LVU517
 1928 003e 0028     		cmp	r0, #0
 1929 0040 55D0     		beq	.L133
 1930 0042 0546     		mov	r5, r0
 558:Task/Task_Control.c ****         return;
 559:Task/Task_Control.c **** 
 560:Task/Task_Control.c ****     SrvDataHub.get_arm_state(&arm_state);
 1931              		.loc 1 560 5 is_stmt 1 view .LVU518
 1932              		.loc 1 560 15 is_stmt 0 view .LVU519
 1933 0044 654B     		ldr	r3, .L153+4
 1934 0046 5B6D     		ldr	r3, [r3, #84]
 1935              		.loc 1 560 5 view .LVU520
 1936 0048 0DF10B00 		add	r0, sp, #11
 1937              	.LVL104:
 1938              		.loc 1 560 5 view .LVU521
 1939 004c 9847     		blx	r3
 1940              	.LVL105:
 561:Task/Task_Control.c **** 
 562:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 1941              		.loc 1 562 5 is_stmt 1 view .LVU522
 1942              		.loc 1 562 27 is_stmt 0 view .LVU523
 1943 004e 644B     		ldr	r3, .L153+8
 1944 0050 D3F81C31 		ldr	r3, [r3, #284]
 1945              		.loc 1 562 7 view .LVU524
 1946 0054 002B     		cmp	r3, #0
 1947 0056 3ED0     		beq	.L149
 563:Task/Task_Control.c ****     {
 564:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl semaphore create failed\r\n");
 565:Task/Task_Control.c ****         return;
 566:Task/Task_Control.c ****     }
 567:Task/Task_Control.c **** 
 568:Task/Task_Control.c ****     if(arm_state == DRONE_DISARM)
 1948              		.loc 1 568 5 is_stmt 1 view .LVU525
 1949              		.loc 1 568 18 is_stmt 0 view .LVU526
 1950 0058 9DF80BA0 		ldrb	r10, [sp, #11]	@ zero_extendqisi2
 1951              		.loc 1 568 7 view .LVU527
 1952 005c BAF1000F 		cmp	r10, #0
 1953 0060 3ED0     		beq	.L150
 569:Task/Task_Control.c ****     {
 570:Task/Task_Control.c ****         TaskControl_Monitor.CLI_enable = false;
 571:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 572:Task/Task_Control.c ****         return;
 573:Task/Task_Control.c ****     }
 574:Task/Task_Control.c **** 
 575:Task/Task_Control.c ****     TaskControl_Monitor.CLI_enable = true;
 1954              		.loc 1 575 5 is_stmt 1 view .LVU528
 1955              		.loc 1 575 36 is_stmt 0 view .LVU529
 1956 0062 5F4B     		ldr	r3, .L153+8
 1957 0064 0122     		movs	r2, #1
 1958 0066 9A71     		strb	r2, [r3, #6]
 576:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 1959              		.loc 1 576 5 is_stmt 1 view .LVU530
 1960 0068 5E49     		ldr	r1, .L153+12
 1961 006a 2846     		mov	r0, r5
 1962 006c FFF7FEFF 		bl	shellPrint
 1963              	.LVL106:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 51


 577:Task/Task_Control.c **** 
 578:Task/Task_Control.c ****     shellPrint(shell_obj, "moto count : %d\r\n", moto_num);
 1964              		.loc 1 578 5 view .LVU531
 1965 0070 4A46     		mov	r2, r9
 1966 0072 5D49     		ldr	r1, .L153+16
 1967 0074 2846     		mov	r0, r5
 1968 0076 FFF7FEFF 		bl	shellPrint
 1969              	.LVL107:
 579:Task/Task_Control.c ****     if(moto_index >= moto_num)
 1970              		.loc 1 579 5 view .LVU532
 1971              		.loc 1 579 7 is_stmt 0 view .LVU533
 1972 007a B945     		cmp	r9, r7
 1973 007c 3AD8     		bhi	.L137
 580:Task/Task_Control.c ****     {
 581:Task/Task_Control.c ****         shellPrint(shell_obj, "all moto selected\r\n");
 1974              		.loc 1 581 9 is_stmt 1 view .LVU534
 1975 007e 5B49     		ldr	r1, .L153+20
 1976 0080 2846     		mov	r0, r5
 1977 0082 FFF7FEFF 		bl	shellPrint
 1978              	.LVL108:
 582:Task/Task_Control.c ****         for (uint8_t i = 0; i < moto_num; i ++)
 1979              		.loc 1 582 9 view .LVU535
 1980              	.LBB9:
 1981              		.loc 1 582 14 view .LVU536
 1982              		.loc 1 582 22 is_stmt 0 view .LVU537
 1983 0086 0024     		movs	r4, #0
 1984              	.LVL109:
 1985              	.L138:
 1986              		.loc 1 582 29 is_stmt 1 discriminator 1 view .LVU538
 1987              		.loc 1 582 9 is_stmt 0 discriminator 1 view .LVU539
 1988 0088 4C45     		cmp	r4, r9
 1989 008a 57D2     		bcs	.L139
 583:Task/Task_Control.c ****         {
 584:Task/Task_Control.c ****             if (!SrvActuator.get_moto_control_range(i, &moto_min, &moto_idle, &moto_max))
 1990              		.loc 1 584 13 is_stmt 1 view .LVU540
 1991              		.loc 1 584 29 is_stmt 0 view .LVU541
 1992 008c 524B     		ldr	r3, .L153
 1993 008e D3F82080 		ldr	r8, [r3, #32]
 1994              		.loc 1 584 18 view .LVU542
 1995 0092 02AB     		add	r3, sp, #8
 1996 0094 0DF10602 		add	r2, sp, #6
 1997 0098 01A9     		add	r1, sp, #4
 1998 009a 2046     		mov	r0, r4
 1999 009c C047     		blx	r8
 2000              	.LVL110:
 2001              		.loc 1 584 16 view .LVU543
 2002 009e 0028     		cmp	r0, #0
 2003 00a0 5DD0     		beq	.L147
 585:Task/Task_Control.c ****             {
 586:Task/Task_Control.c ****                 ctl_enable = false;
 587:Task/Task_Control.c ****                 break;
 588:Task/Task_Control.c ****             }
 589:Task/Task_Control.c ****             
 590:Task/Task_Control.c ****             shellPrint(shell_obj, "moto %d control range down below\r\n", i);
 2004              		.loc 1 590 13 is_stmt 1 discriminator 2 view .LVU544
 2005 00a2 2246     		mov	r2, r4
 2006 00a4 5249     		ldr	r1, .L153+24
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 52


 2007 00a6 2846     		mov	r0, r5
 2008 00a8 FFF7FEFF 		bl	shellPrint
 2009              	.LVL111:
 591:Task/Task_Control.c ****             shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 2010              		.loc 1 591 13 discriminator 2 view .LVU545
 2011 00ac BDF90820 		ldrsh	r2, [sp, #8]
 2012 00b0 5049     		ldr	r1, .L153+28
 2013 00b2 2846     		mov	r0, r5
 2014 00b4 FFF7FEFF 		bl	shellPrint
 2015              	.LVL112:
 592:Task/Task_Control.c ****             shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 2016              		.loc 1 592 13 discriminator 2 view .LVU546
 2017 00b8 BDF90620 		ldrsh	r2, [sp, #6]
 2018 00bc 4E49     		ldr	r1, .L153+32
 2019 00be 2846     		mov	r0, r5
 2020 00c0 FFF7FEFF 		bl	shellPrint
 2021              	.LVL113:
 593:Task/Task_Control.c ****             shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 2022              		.loc 1 593 13 discriminator 2 view .LVU547
 2023 00c4 BDF90420 		ldrsh	r2, [sp, #4]
 2024 00c8 4C49     		ldr	r1, .L153+36
 2025 00ca 2846     		mov	r0, r5
 2026 00cc FFF7FEFF 		bl	shellPrint
 2027              	.LVL114:
 582:Task/Task_Control.c ****         {
 2028              		.loc 1 582 43 discriminator 2 view .LVU548
 582:Task/Task_Control.c ****         {
 2029              		.loc 1 582 45 is_stmt 0 discriminator 2 view .LVU549
 2030 00d0 0134     		adds	r4, r4, #1
 2031              	.LVL115:
 582:Task/Task_Control.c ****         {
 2032              		.loc 1 582 45 discriminator 2 view .LVU550
 2033 00d2 E4B2     		uxtb	r4, r4
 2034              	.LVL116:
 582:Task/Task_Control.c ****         {
 2035              		.loc 1 582 45 discriminator 2 view .LVU551
 2036 00d4 D8E7     		b	.L138
 2037              	.LVL117:
 2038              	.L149:
 582:Task/Task_Control.c ****         {
 2039              		.loc 1 582 45 discriminator 2 view .LVU552
 2040              	.LBE9:
 564:Task/Task_Control.c ****         return;
 2041              		.loc 1 564 9 is_stmt 1 view .LVU553
 2042 00d6 4A49     		ldr	r1, .L153+40
 2043 00d8 2846     		mov	r0, r5
 2044 00da FFF7FEFF 		bl	shellPrint
 2045              	.LVL118:
 565:Task/Task_Control.c ****     }
 2046              		.loc 1 565 9 view .LVU554
 2047 00de 06E0     		b	.L133
 2048              	.L150:
 570:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 2049              		.loc 1 570 9 view .LVU555
 570:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 2050              		.loc 1 570 40 is_stmt 0 view .LVU556
 2051 00e0 3F4B     		ldr	r3, .L153+8
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 53


 2052 00e2 0022     		movs	r2, #0
 2053 00e4 9A71     		strb	r2, [r3, #6]
 571:Task/Task_Control.c ****         return;
 2054              		.loc 1 571 9 is_stmt 1 view .LVU557
 2055 00e6 4749     		ldr	r1, .L153+44
 2056 00e8 2846     		mov	r0, r5
 2057 00ea FFF7FEFF 		bl	shellPrint
 2058              	.LVL119:
 572:Task/Task_Control.c ****     }
 2059              		.loc 1 572 9 view .LVU558
 2060              	.L133:
 594:Task/Task_Control.c ****         }
 595:Task/Task_Control.c ****     }
 596:Task/Task_Control.c ****     else
 597:Task/Task_Control.c ****     {
 598:Task/Task_Control.c ****         shellPrint(shell_obj, "moto %d is selected\r\n", moto_index);
 599:Task/Task_Control.c ****         if(!SrvActuator.get_moto_control_range(moto_index, &moto_min, &moto_idle, &moto_max))
 600:Task/Task_Control.c ****             ctl_enable = false;
 601:Task/Task_Control.c **** 
 602:Task/Task_Control.c ****         shellPrint(shell_obj, "control range down below\r\n");
 603:Task/Task_Control.c ****         shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 604:Task/Task_Control.c ****         shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 605:Task/Task_Control.c ****         shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 606:Task/Task_Control.c ****     }
 607:Task/Task_Control.c **** 
 608:Task/Task_Control.c ****     if (!ctl_enable)
 609:Task/Task_Control.c ****     {
 610:Task/Task_Control.c ****         shellPrint(shell_obj, "Get moto control data range failed\r\n");
 611:Task/Task_Control.c ****         return;
 612:Task/Task_Control.c ****     }
 613:Task/Task_Control.c **** 
 614:Task/Task_Control.c ****     if(test_val > moto_max)
 615:Task/Task_Control.c ****     {
 616:Task/Task_Control.c ****         shellPrint(shell_obj, "input value [%d] is bigger than max [%d] value", test_val, moto_max)
 617:Task/Task_Control.c ****     }
 618:Task/Task_Control.c ****     else if(test_val < moto_min)
 619:Task/Task_Control.c ****     {
 620:Task/Task_Control.c ****         shellPrint(shell_obj, "input value [%d] is lower than min [%d] value", test_val, moto_min);
 621:Task/Task_Control.c ****     }
 622:Task/Task_Control.c ****     else
 623:Task/Task_Control.c ****     {
 624:Task/Task_Control.c ****         shellPrint(shell_obj, "current control value %d\r\n", test_val);
 625:Task/Task_Control.c **** 
 626:Task/Task_Control.c ****         p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 627:Task/Task_Control.c ****         if(p_CLIData)
 628:Task/Task_Control.c ****         {
 629:Task/Task_Control.c ****             p_CLIData->cli_type = TaskControl_Moto_Set_Spin;
 630:Task/Task_Control.c ****             p_CLIData->index = moto_index;
 631:Task/Task_Control.c ****             p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 632:Task/Task_Control.c ****             p_CLIData->value = test_val;
 633:Task/Task_Control.c **** 
 634:Task/Task_Control.c ****             if(osMessagePut(TaskControl_Monitor.CLIMessage_ID, (uint32_t)p_CLIData, CLI_MESSAGE_OPE
 635:Task/Task_Control.c ****             {
 636:Task/Task_Control.c ****                 SrvOsCommon.free(p_CLIData);
 637:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 638:Task/Task_Control.c ****             }
 639:Task/Task_Control.c ****         }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 54


 640:Task/Task_Control.c ****         else
 641:Task/Task_Control.c ****         {
 642:Task/Task_Control.c ****             shellPrint(shell_obj, "Moto control test data malloc failed\r\n");
 643:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 644:Task/Task_Control.c ****         }
 645:Task/Task_Control.c ****     }
 646:Task/Task_Control.c **** }
 2061              		.loc 1 646 1 is_stmt 0 view .LVU559
 2062 00ee 04B0     		add	sp, sp, #16
 2063              	.LCFI19:
 2064              		.cfi_remember_state
 2065              		.cfi_def_cfa_offset 32
 2066              		@ sp needed
 2067 00f0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2068              	.LVL120:
 2069              	.L137:
 2070              	.LCFI20:
 2071              		.cfi_restore_state
 598:Task/Task_Control.c ****         if(!SrvActuator.get_moto_control_range(moto_index, &moto_min, &moto_idle, &moto_max))
 2072              		.loc 1 598 9 is_stmt 1 view .LVU560
 2073 00f4 3A46     		mov	r2, r7
 2074 00f6 4449     		ldr	r1, .L153+48
 2075 00f8 2846     		mov	r0, r5
 2076 00fa FFF7FEFF 		bl	shellPrint
 2077              	.LVL121:
 599:Task/Task_Control.c ****             ctl_enable = false;
 2078              		.loc 1 599 9 view .LVU561
 599:Task/Task_Control.c ****             ctl_enable = false;
 2079              		.loc 1 599 24 is_stmt 0 view .LVU562
 2080 00fe 364B     		ldr	r3, .L153
 2081 0100 1C6A     		ldr	r4, [r3, #32]
 599:Task/Task_Control.c ****             ctl_enable = false;
 2082              		.loc 1 599 13 view .LVU563
 2083 0102 02AB     		add	r3, sp, #8
 2084 0104 0DF10602 		add	r2, sp, #6
 2085 0108 01A9     		add	r1, sp, #4
 2086 010a 3846     		mov	r0, r7
 2087 010c A047     		blx	r4
 2088              	.LVL122:
 2089 010e 8246     		mov	r10, r0
 2090              	.LVL123:
 602:Task/Task_Control.c ****         shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 2091              		.loc 1 602 9 is_stmt 1 view .LVU564
 2092 0110 3E49     		ldr	r1, .L153+52
 2093 0112 2846     		mov	r0, r5
 2094 0114 FFF7FEFF 		bl	shellPrint
 2095              	.LVL124:
 603:Task/Task_Control.c ****         shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 2096              		.loc 1 603 9 view .LVU565
 2097 0118 BDF90820 		ldrsh	r2, [sp, #8]
 2098 011c 3549     		ldr	r1, .L153+28
 2099 011e 2846     		mov	r0, r5
 2100 0120 FFF7FEFF 		bl	shellPrint
 2101              	.LVL125:
 604:Task/Task_Control.c ****         shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 2102              		.loc 1 604 9 view .LVU566
 2103 0124 BDF90620 		ldrsh	r2, [sp, #6]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 55


 2104 0128 3349     		ldr	r1, .L153+32
 2105 012a 2846     		mov	r0, r5
 2106 012c FFF7FEFF 		bl	shellPrint
 2107              	.LVL126:
 605:Task/Task_Control.c ****     }
 2108              		.loc 1 605 9 view .LVU567
 2109 0130 BDF90420 		ldrsh	r2, [sp, #4]
 2110 0134 3149     		ldr	r1, .L153+36
 2111 0136 2846     		mov	r0, r5
 2112 0138 FFF7FEFF 		bl	shellPrint
 2113              	.LVL127:
 2114              	.L139:
 608:Task/Task_Control.c ****     {
 2115              		.loc 1 608 5 view .LVU568
 608:Task/Task_Control.c ****     {
 2116              		.loc 1 608 8 is_stmt 0 view .LVU569
 2117 013c BAF1000F 		cmp	r10, #0
 2118 0140 0FD0     		beq	.L151
 614:Task/Task_Control.c ****     {
 2119              		.loc 1 614 5 is_stmt 1 view .LVU570
 614:Task/Task_Control.c ****     {
 2120              		.loc 1 614 17 is_stmt 0 view .LVU571
 2121 0142 BDF90830 		ldrsh	r3, [sp, #8]
 614:Task/Task_Control.c ****     {
 2122              		.loc 1 614 7 view .LVU572
 2123 0146 9E42     		cmp	r6, r3
 2124 0148 10DC     		bgt	.L152
 618:Task/Task_Control.c ****     {
 2125              		.loc 1 618 10 is_stmt 1 view .LVU573
 618:Task/Task_Control.c ****     {
 2126              		.loc 1 618 22 is_stmt 0 view .LVU574
 2127 014a BDF90430 		ldrsh	r3, [sp, #4]
 618:Task/Task_Control.c ****     {
 2128              		.loc 1 618 12 view .LVU575
 2129 014e 9E42     		cmp	r6, r3
 2130 0150 12DA     		bge	.L144
 620:Task/Task_Control.c ****     }
 2131              		.loc 1 620 9 is_stmt 1 view .LVU576
 2132 0152 3246     		mov	r2, r6
 2133 0154 2E49     		ldr	r1, .L153+56
 2134 0156 2846     		mov	r0, r5
 2135 0158 FFF7FEFF 		bl	shellPrint
 2136              	.LVL128:
 2137 015c C7E7     		b	.L133
 2138              	.LVL129:
 2139              	.L147:
 2140              	.LBB10:
 586:Task/Task_Control.c ****                 break;
 2141              		.loc 1 586 28 is_stmt 0 view .LVU577
 2142 015e 8246     		mov	r10, r0
 2143 0160 ECE7     		b	.L139
 2144              	.LVL130:
 2145              	.L151:
 586:Task/Task_Control.c ****                 break;
 2146              		.loc 1 586 28 view .LVU578
 2147              	.LBE10:
 610:Task/Task_Control.c ****         return;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 56


 2148              		.loc 1 610 9 is_stmt 1 view .LVU579
 2149 0162 2C49     		ldr	r1, .L153+60
 2150 0164 2846     		mov	r0, r5
 2151 0166 FFF7FEFF 		bl	shellPrint
 2152              	.LVL131:
 611:Task/Task_Control.c ****     }
 2153              		.loc 1 611 9 view .LVU580
 2154 016a C0E7     		b	.L133
 2155              	.L152:
 616:Task/Task_Control.c ****     }
 2156              		.loc 1 616 9 view .LVU581
 2157 016c 3246     		mov	r2, r6
 2158 016e 2A49     		ldr	r1, .L153+64
 2159 0170 2846     		mov	r0, r5
 2160 0172 FFF7FEFF 		bl	shellPrint
 2161              	.LVL132:
 2162 0176 BAE7     		b	.L133
 2163              	.L144:
 624:Task/Task_Control.c **** 
 2164              		.loc 1 624 9 view .LVU582
 2165 0178 3246     		mov	r2, r6
 2166 017a 2849     		ldr	r1, .L153+68
 2167 017c 2846     		mov	r0, r5
 2168 017e FFF7FEFF 		bl	shellPrint
 2169              	.LVL133:
 626:Task/Task_Control.c ****         if(p_CLIData)
 2170              		.loc 1 626 9 view .LVU583
 626:Task/Task_Control.c ****         if(p_CLIData)
 2171              		.loc 1 626 32 is_stmt 0 view .LVU584
 2172 0182 274B     		ldr	r3, .L153+72
 2173 0184 9B6A     		ldr	r3, [r3, #40]
 626:Task/Task_Control.c ****         if(p_CLIData)
 2174              		.loc 1 626 21 view .LVU585
 2175 0186 0820     		movs	r0, #8
 2176 0188 9847     		blx	r3
 2177              	.LVL134:
 627:Task/Task_Control.c ****         {
 2178              		.loc 1 627 9 is_stmt 1 view .LVU586
 627:Task/Task_Control.c ****         {
 2179              		.loc 1 627 11 is_stmt 0 view .LVU587
 2180 018a 0446     		mov	r4, r0
 2181 018c D8B1     		cbz	r0, .L145
 629:Task/Task_Control.c ****             p_CLIData->index = moto_index;
 2182              		.loc 1 629 13 is_stmt 1 view .LVU588
 629:Task/Task_Control.c ****             p_CLIData->index = moto_index;
 2183              		.loc 1 629 33 is_stmt 0 view .LVU589
 2184 018e 4FF00108 		mov	r8, #1
 2185 0192 80F80480 		strb	r8, [r0, #4]
 630:Task/Task_Control.c ****             p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 2186              		.loc 1 630 13 is_stmt 1 view .LVU590
 630:Task/Task_Control.c ****             p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 2187              		.loc 1 630 30 is_stmt 0 view .LVU591
 2188 0196 4771     		strb	r7, [r0, #5]
 631:Task/Task_Control.c ****             p_CLIData->value = test_val;
 2189              		.loc 1 631 13 is_stmt 1 view .LVU592
 631:Task/Task_Control.c ****             p_CLIData->value = test_val;
 2190              		.loc 1 631 47 is_stmt 0 view .LVU593
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 57


 2191 0198 214B     		ldr	r3, .L153+72
 2192 019a 1B68     		ldr	r3, [r3]
 631:Task/Task_Control.c ****             p_CLIData->value = test_val;
 2193              		.loc 1 631 36 view .LVU594
 2194 019c 9847     		blx	r3
 2195              	.LVL135:
 631:Task/Task_Control.c ****             p_CLIData->value = test_val;
 2196              		.loc 1 631 34 view .LVU595
 2197 019e 2060     		str	r0, [r4]
 632:Task/Task_Control.c **** 
 2198              		.loc 1 632 13 is_stmt 1 view .LVU596
 632:Task/Task_Control.c **** 
 2199              		.loc 1 632 30 is_stmt 0 view .LVU597
 2200 01a0 E680     		strh	r6, [r4, #6]	@ movhi
 634:Task/Task_Control.c ****             {
 2201              		.loc 1 634 13 is_stmt 1 view .LVU598
 634:Task/Task_Control.c ****             {
 2202              		.loc 1 634 16 is_stmt 0 view .LVU599
 2203 01a2 4246     		mov	r2, r8
 2204 01a4 2146     		mov	r1, r4
 2205 01a6 0E4B     		ldr	r3, .L153+8
 2206 01a8 D3F81C01 		ldr	r0, [r3, #284]
 2207 01ac FFF7FEFF 		bl	osMessagePut
 2208              	.LVL136:
 634:Task/Task_Control.c ****             {
 2209              		.loc 1 634 15 view .LVU600
 2210 01b0 0028     		cmp	r0, #0
 2211 01b2 9CD0     		beq	.L133
 636:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 2212              		.loc 1 636 17 is_stmt 1 view .LVU601
 636:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 2213              		.loc 1 636 28 is_stmt 0 view .LVU602
 2214 01b4 1A4B     		ldr	r3, .L153+72
 2215 01b6 DB6A     		ldr	r3, [r3, #44]
 636:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 2216              		.loc 1 636 17 view .LVU603
 2217 01b8 2046     		mov	r0, r4
 2218 01ba 9847     		blx	r3
 2219              	.LVL137:
 637:Task/Task_Control.c ****             }
 2220              		.loc 1 637 17 is_stmt 1 view .LVU604
 2221 01bc 1949     		ldr	r1, .L153+76
 2222 01be 2846     		mov	r0, r5
 2223 01c0 FFF7FEFF 		bl	shellPrint
 2224              	.LVL138:
 2225 01c4 93E7     		b	.L133
 2226              	.LVL139:
 2227              	.L145:
 642:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 2228              		.loc 1 642 13 view .LVU605
 2229 01c6 1849     		ldr	r1, .L153+80
 2230 01c8 2846     		mov	r0, r5
 2231              	.LVL140:
 642:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 2232              		.loc 1 642 13 is_stmt 0 view .LVU606
 2233 01ca FFF7FEFF 		bl	shellPrint
 2234              	.LVL141:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 58


 643:Task/Task_Control.c ****         }
 2235              		.loc 1 643 13 is_stmt 1 view .LVU607
 643:Task/Task_Control.c ****         }
 2236              		.loc 1 643 24 is_stmt 0 view .LVU608
 2237 01ce 144B     		ldr	r3, .L153+72
 2238 01d0 DB6A     		ldr	r3, [r3, #44]
 643:Task/Task_Control.c ****         }
 2239              		.loc 1 643 13 view .LVU609
 2240 01d2 2046     		mov	r0, r4
 2241 01d4 9847     		blx	r3
 2242              	.LVL142:
 2243 01d6 8AE7     		b	.L133
 2244              	.L154:
 2245              		.align	2
 2246              	.L153:
 2247 01d8 00000000 		.word	SrvActuator
 2248 01dc 00000000 		.word	SrvDataHub
 2249 01e0 00000000 		.word	.LANCHOR0
 2250 01e4 48000000 		.word	.LC7
 2251 01e8 7C000000 		.word	.LC8
 2252 01ec 90000000 		.word	.LC9
 2253 01f0 A4000000 		.word	.LC10
 2254 01f4 C8000000 		.word	.LC11
 2255 01f8 D8000000 		.word	.LC12
 2256 01fc E8000000 		.word	.LC13
 2257 0200 00000000 		.word	.LC5
 2258 0204 28000000 		.word	.LC6
 2259 0208 F8000000 		.word	.LC14
 2260 020c 10010000 		.word	.LC15
 2261 0210 84010000 		.word	.LC18
 2262 0214 2C010000 		.word	.LC16
 2263 0218 54010000 		.word	.LC17
 2264 021c B4010000 		.word	.LC19
 2265 0220 00000000 		.word	SrvOsCommon
 2266 0224 D0010000 		.word	.LC20
 2267 0228 F0010000 		.word	.LC21
 2268              		.cfi_endproc
 2269              	.LFE2082:
 2271              		.section	.rodata.TaskControl_Reverse_SpinDir.str1.4,"aMS",%progbits,1
 2272              		.align	2
 2273              	.LC22:
 2274 0000 70617261 		.ascii	"parameter error\015\012\000"
 2274      6D657465 
 2274      72206572 
 2274      726F720D 
 2274      0A00
 2275 0012 0000     		.align	2
 2276              	.LC23:
 2277 0014 6D6F746F 		.ascii	"moto %d is selected dir %d\015\012\000"
 2277      20256420 
 2277      69732073 
 2277      656C6563 
 2277      74656420 
 2278              		.section	.text.TaskControl_Reverse_SpinDir,"ax",%progbits
 2279              		.align	1
 2280              		.syntax unified
 2281              		.thumb
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 59


 2282              		.thumb_func
 2284              	TaskControl_Reverse_SpinDir:
 2285              	.LVL143:
 2286              	.LFB2083:
 647:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 648:Task/Task_Control.c **** 
 649:Task/Task_Control.c **** static void TaskControl_Reverse_SpinDir(uint8_t moto_index, uint8_t dir)
 650:Task/Task_Control.c **** {
 2287              		.loc 1 650 1 is_stmt 1 view -0
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 8
 2290              		@ frame_needed = 0, uses_anonymous_args = 0
 2291              		.loc 1 650 1 is_stmt 0 view .LVU611
 2292 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2293              	.LCFI21:
 2294              		.cfi_def_cfa_offset 20
 2295              		.cfi_offset 4, -20
 2296              		.cfi_offset 5, -16
 2297              		.cfi_offset 6, -12
 2298              		.cfi_offset 7, -8
 2299              		.cfi_offset 14, -4
 2300 0002 83B0     		sub	sp, sp, #12
 2301              	.LCFI22:
 2302              		.cfi_def_cfa_offset 32
 2303 0004 0546     		mov	r5, r0
 2304 0006 0E46     		mov	r6, r1
 651:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 2305              		.loc 1 651 5 is_stmt 1 view .LVU612
 2306              		.loc 1 651 24 is_stmt 0 view .LVU613
 2307 0008 FFF7FEFF 		bl	Shell_GetInstence
 2308              	.LVL144:
 2309              		.loc 1 651 24 view .LVU614
 2310 000c 0446     		mov	r4, r0
 2311              	.LVL145:
 652:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 2312              		.loc 1 652 5 is_stmt 1 view .LVU615
 2313              		.loc 1 652 35 is_stmt 0 view .LVU616
 2314 000e 354B     		ldr	r3, .L167
 2315 0010 9B6A     		ldr	r3, [r3, #40]
 2316              		.loc 1 652 24 view .LVU617
 2317 0012 9847     		blx	r3
 2318              	.LVL146:
 2319              		.loc 1 652 24 view .LVU618
 2320 0014 8DF80400 		strb	r0, [sp, #4]
 2321 0018 C0F30723 		ubfx	r3, r0, #8, #8
 2322 001c 8DF80530 		strb	r3, [sp, #5]
 2323 0020 C0F3074C 		ubfx	ip, r0, #16, #8
 2324 0024 8DF806C0 		strb	ip, [sp, #6]
 2325              		.loc 1 652 13 view .LVU619
 2326 0028 DFB2     		uxtb	r7, r3
 2327              	.LVL147:
 653:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 2328              		.loc 1 653 5 is_stmt 1 view .LVU620
 654:Task/Task_Control.c ****     bool arm_state = false;
 2329              		.loc 1 654 5 view .LVU621
 2330              		.loc 1 654 10 is_stmt 0 view .LVU622
 2331 002a 0023     		movs	r3, #0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 60


 2332 002c 8DF80330 		strb	r3, [sp, #3]
 655:Task/Task_Control.c **** 
 656:Task/Task_Control.c ****     if (shell_obj == NULL)
 2333              		.loc 1 656 5 is_stmt 1 view .LVU623
 2334              		.loc 1 656 8 is_stmt 0 view .LVU624
 2335 0030 D4B1     		cbz	r4, .L155
 657:Task/Task_Control.c ****         return;
 658:Task/Task_Control.c ****     
 659:Task/Task_Control.c ****     SrvDataHub.get_arm_state(&arm_state);
 2336              		.loc 1 659 5 is_stmt 1 view .LVU625
 2337              		.loc 1 659 15 is_stmt 0 view .LVU626
 2338 0032 2D4B     		ldr	r3, .L167+4
 2339 0034 5B6D     		ldr	r3, [r3, #84]
 2340              		.loc 1 659 5 view .LVU627
 2341 0036 0DF10300 		add	r0, sp, #3
 2342 003a 9847     		blx	r3
 2343              	.LVL148:
 660:Task/Task_Control.c **** 
 661:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 2344              		.loc 1 661 5 is_stmt 1 view .LVU628
 2345              		.loc 1 661 27 is_stmt 0 view .LVU629
 2346 003c 2B4B     		ldr	r3, .L167+8
 2347 003e D3F81C31 		ldr	r3, [r3, #284]
 2348              		.loc 1 661 7 view .LVU630
 2349 0042 9BB1     		cbz	r3, .L165
 662:Task/Task_Control.c ****     {
 663:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl semaphore create failed\r\n");
 664:Task/Task_Control.c ****         return;
 665:Task/Task_Control.c ****     }
 666:Task/Task_Control.c **** 
 667:Task/Task_Control.c ****     if(arm_state == DRONE_DISARM)
 2350              		.loc 1 667 5 is_stmt 1 view .LVU631
 2351              		.loc 1 667 18 is_stmt 0 view .LVU632
 2352 0044 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 2353              		.loc 1 667 7 view .LVU633
 2354 0048 ABB1     		cbz	r3, .L166
 668:Task/Task_Control.c ****     {
 669:Task/Task_Control.c ****         TaskControl_Monitor.CLI_enable = false;
 670:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 671:Task/Task_Control.c ****         return;
 672:Task/Task_Control.c ****     }
 673:Task/Task_Control.c **** 
 674:Task/Task_Control.c ****     TaskControl_Monitor.CLI_enable = true;
 2355              		.loc 1 674 5 is_stmt 1 view .LVU634
 2356              		.loc 1 674 36 is_stmt 0 view .LVU635
 2357 004a 284B     		ldr	r3, .L167+8
 2358 004c 0122     		movs	r2, #1
 2359 004e 9A71     		strb	r2, [r3, #6]
 675:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 2360              		.loc 1 675 5 is_stmt 1 view .LVU636
 2361 0050 2749     		ldr	r1, .L167+12
 2362 0052 2046     		mov	r0, r4
 2363 0054 FFF7FEFF 		bl	shellPrint
 2364              	.LVL149:
 676:Task/Task_Control.c **** 
 677:Task/Task_Control.c ****     if((moto_index >= moto_num) || (dir > 2))
 2365              		.loc 1 677 5 view .LVU637
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 61


 2366              		.loc 1 677 7 is_stmt 0 view .LVU638
 2367 0058 AF42     		cmp	r7, r5
 2368 005a 01D9     		bls	.L159
 2369              		.loc 1 677 33 discriminator 1 view .LVU639
 2370 005c 022E     		cmp	r6, #2
 2371 005e 12D9     		bls	.L160
 2372              	.L159:
 678:Task/Task_Control.c ****     {
 679:Task/Task_Control.c ****         shellPrint(shell_obj, "parameter error\r\n");
 2373              		.loc 1 679 9 is_stmt 1 view .LVU640
 2374 0060 2449     		ldr	r1, .L167+16
 2375 0062 2046     		mov	r0, r4
 2376 0064 FFF7FEFF 		bl	shellPrint
 2377              	.LVL150:
 680:Task/Task_Control.c ****         return;
 2378              		.loc 1 680 9 view .LVU641
 2379              	.L155:
 681:Task/Task_Control.c ****     }
 682:Task/Task_Control.c **** 
 683:Task/Task_Control.c ****     shellPrint(shell_obj, "moto %d is selected dir %d\r\n", moto_index, dir);
 684:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 685:Task/Task_Control.c ****     if(p_CLIData)
 686:Task/Task_Control.c ****     {
 687:Task/Task_Control.c ****         p_CLIData->cli_type = TaskControl_Moto_Set_SpinDir;
 688:Task/Task_Control.c ****         p_CLIData->index = moto_index;
 689:Task/Task_Control.c ****         p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 690:Task/Task_Control.c ****         p_CLIData->value = dir;
 691:Task/Task_Control.c **** 
 692:Task/Task_Control.c ****         if(osMessagePut(TaskControl_Monitor.CLIMessage_ID, (uint32_t)p_CLIData, CLI_MESSAGE_OPEARAT
 693:Task/Task_Control.c ****         {
 694:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 695:Task/Task_Control.c ****             shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 696:Task/Task_Control.c ****         }
 697:Task/Task_Control.c ****     }
 698:Task/Task_Control.c ****     else
 699:Task/Task_Control.c ****     {
 700:Task/Task_Control.c ****         shellPrint(shell_obj, "Moto control test data malloc failed\r\n");
 701:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 702:Task/Task_Control.c ****     }
 703:Task/Task_Control.c **** }
 2380              		.loc 1 703 1 is_stmt 0 view .LVU642
 2381 0068 03B0     		add	sp, sp, #12
 2382              	.LCFI23:
 2383              		.cfi_remember_state
 2384              		.cfi_def_cfa_offset 20
 2385              		@ sp needed
 2386 006a F0BD     		pop	{r4, r5, r6, r7, pc}
 2387              	.LVL151:
 2388              	.L165:
 2389              	.LCFI24:
 2390              		.cfi_restore_state
 663:Task/Task_Control.c ****         return;
 2391              		.loc 1 663 9 is_stmt 1 view .LVU643
 2392 006c 2249     		ldr	r1, .L167+20
 2393 006e 2046     		mov	r0, r4
 2394 0070 FFF7FEFF 		bl	shellPrint
 2395              	.LVL152:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 62


 664:Task/Task_Control.c ****     }
 2396              		.loc 1 664 9 view .LVU644
 2397 0074 F8E7     		b	.L155
 2398              	.L166:
 669:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 2399              		.loc 1 669 9 view .LVU645
 669:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 2400              		.loc 1 669 40 is_stmt 0 view .LVU646
 2401 0076 1D4B     		ldr	r3, .L167+8
 2402 0078 0022     		movs	r2, #0
 2403 007a 9A71     		strb	r2, [r3, #6]
 670:Task/Task_Control.c ****         return;
 2404              		.loc 1 670 9 is_stmt 1 view .LVU647
 2405 007c 1F49     		ldr	r1, .L167+24
 2406 007e 2046     		mov	r0, r4
 2407 0080 FFF7FEFF 		bl	shellPrint
 2408              	.LVL153:
 671:Task/Task_Control.c ****     }
 2409              		.loc 1 671 9 view .LVU648
 2410 0084 F0E7     		b	.L155
 2411              	.L160:
 683:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 2412              		.loc 1 683 5 view .LVU649
 2413 0086 3346     		mov	r3, r6
 2414 0088 2A46     		mov	r2, r5
 2415 008a 1D49     		ldr	r1, .L167+28
 2416 008c 2046     		mov	r0, r4
 2417 008e FFF7FEFF 		bl	shellPrint
 2418              	.LVL154:
 684:Task/Task_Control.c ****     if(p_CLIData)
 2419              		.loc 1 684 5 view .LVU650
 684:Task/Task_Control.c ****     if(p_CLIData)
 2420              		.loc 1 684 28 is_stmt 0 view .LVU651
 2421 0092 1C4B     		ldr	r3, .L167+32
 2422 0094 9B6A     		ldr	r3, [r3, #40]
 684:Task/Task_Control.c ****     if(p_CLIData)
 2423              		.loc 1 684 17 view .LVU652
 2424 0096 0820     		movs	r0, #8
 2425 0098 9847     		blx	r3
 2426              	.LVL155:
 685:Task/Task_Control.c ****     {
 2427              		.loc 1 685 5 is_stmt 1 view .LVU653
 685:Task/Task_Control.c ****     {
 2428              		.loc 1 685 7 is_stmt 0 view .LVU654
 2429 009a 0746     		mov	r7, r0
 2430              	.LVL156:
 685:Task/Task_Control.c ****     {
 2431              		.loc 1 685 7 view .LVU655
 2432 009c C8B1     		cbz	r0, .L161
 687:Task/Task_Control.c ****         p_CLIData->index = moto_index;
 2433              		.loc 1 687 9 is_stmt 1 view .LVU656
 687:Task/Task_Control.c ****         p_CLIData->index = moto_index;
 2434              		.loc 1 687 29 is_stmt 0 view .LVU657
 2435 009e 0223     		movs	r3, #2
 2436 00a0 0371     		strb	r3, [r0, #4]
 688:Task/Task_Control.c ****         p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 2437              		.loc 1 688 9 is_stmt 1 view .LVU658
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 63


 688:Task/Task_Control.c ****         p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 2438              		.loc 1 688 26 is_stmt 0 view .LVU659
 2439 00a2 4571     		strb	r5, [r0, #5]
 689:Task/Task_Control.c ****         p_CLIData->value = dir;
 2440              		.loc 1 689 9 is_stmt 1 view .LVU660
 689:Task/Task_Control.c ****         p_CLIData->value = dir;
 2441              		.loc 1 689 43 is_stmt 0 view .LVU661
 2442 00a4 174B     		ldr	r3, .L167+32
 2443 00a6 1B68     		ldr	r3, [r3]
 689:Task/Task_Control.c ****         p_CLIData->value = dir;
 2444              		.loc 1 689 32 view .LVU662
 2445 00a8 9847     		blx	r3
 2446              	.LVL157:
 689:Task/Task_Control.c ****         p_CLIData->value = dir;
 2447              		.loc 1 689 30 view .LVU663
 2448 00aa 3860     		str	r0, [r7]
 690:Task/Task_Control.c **** 
 2449              		.loc 1 690 9 is_stmt 1 view .LVU664
 690:Task/Task_Control.c **** 
 2450              		.loc 1 690 26 is_stmt 0 view .LVU665
 2451 00ac FE80     		strh	r6, [r7, #6]	@ movhi
 692:Task/Task_Control.c ****         {
 2452              		.loc 1 692 9 is_stmt 1 view .LVU666
 692:Task/Task_Control.c ****         {
 2453              		.loc 1 692 12 is_stmt 0 view .LVU667
 2454 00ae 0122     		movs	r2, #1
 2455 00b0 3946     		mov	r1, r7
 2456 00b2 0E4B     		ldr	r3, .L167+8
 2457 00b4 D3F81C01 		ldr	r0, [r3, #284]
 2458 00b8 FFF7FEFF 		bl	osMessagePut
 2459              	.LVL158:
 692:Task/Task_Control.c ****         {
 2460              		.loc 1 692 11 view .LVU668
 2461 00bc 0028     		cmp	r0, #0
 2462 00be D3D0     		beq	.L155
 694:Task/Task_Control.c ****             shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 2463              		.loc 1 694 13 is_stmt 1 view .LVU669
 694:Task/Task_Control.c ****             shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 2464              		.loc 1 694 24 is_stmt 0 view .LVU670
 2465 00c0 104B     		ldr	r3, .L167+32
 2466 00c2 DB6A     		ldr	r3, [r3, #44]
 694:Task/Task_Control.c ****             shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 2467              		.loc 1 694 13 view .LVU671
 2468 00c4 3846     		mov	r0, r7
 2469 00c6 9847     		blx	r3
 2470              	.LVL159:
 695:Task/Task_Control.c ****         }
 2471              		.loc 1 695 13 is_stmt 1 view .LVU672
 2472 00c8 0F49     		ldr	r1, .L167+36
 2473 00ca 2046     		mov	r0, r4
 2474 00cc FFF7FEFF 		bl	shellPrint
 2475              	.LVL160:
 2476 00d0 CAE7     		b	.L155
 2477              	.LVL161:
 2478              	.L161:
 700:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 2479              		.loc 1 700 9 view .LVU673
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 64


 2480 00d2 0E49     		ldr	r1, .L167+40
 2481 00d4 2046     		mov	r0, r4
 2482              	.LVL162:
 700:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 2483              		.loc 1 700 9 is_stmt 0 view .LVU674
 2484 00d6 FFF7FEFF 		bl	shellPrint
 2485              	.LVL163:
 701:Task/Task_Control.c ****     }
 2486              		.loc 1 701 9 is_stmt 1 view .LVU675
 701:Task/Task_Control.c ****     }
 2487              		.loc 1 701 20 is_stmt 0 view .LVU676
 2488 00da 0A4B     		ldr	r3, .L167+32
 2489 00dc DB6A     		ldr	r3, [r3, #44]
 701:Task/Task_Control.c ****     }
 2490              		.loc 1 701 9 view .LVU677
 2491 00de 3846     		mov	r0, r7
 2492 00e0 9847     		blx	r3
 2493              	.LVL164:
 2494 00e2 C1E7     		b	.L155
 2495              	.L168:
 2496              		.align	2
 2497              	.L167:
 2498 00e4 00000000 		.word	SrvActuator
 2499 00e8 00000000 		.word	SrvDataHub
 2500 00ec 00000000 		.word	.LANCHOR0
 2501 00f0 48000000 		.word	.LC7
 2502 00f4 00000000 		.word	.LC22
 2503 00f8 00000000 		.word	.LC5
 2504 00fc 28000000 		.word	.LC6
 2505 0100 14000000 		.word	.LC23
 2506 0104 00000000 		.word	SrvOsCommon
 2507 0108 D0010000 		.word	.LC20
 2508 010c F0010000 		.word	.LC21
 2509              		.cfi_endproc
 2510              	.LFE2083:
 2512              		.section	.rodata.TaskControl_Close_CLI.str1.4,"aMS",%progbits,1
 2513              		.align	2
 2514              	.LC24:
 2515 0000 5461736B 		.ascii	"TaskControl CLI disable\015\012\000"
 2515      436F6E74 
 2515      726F6C20 
 2515      434C4920 
 2515      64697361 
 2516              		.section	.text.TaskControl_Close_CLI,"ax",%progbits
 2517              		.align	1
 2518              		.syntax unified
 2519              		.thumb
 2520              		.thumb_func
 2522              	TaskControl_Close_CLI:
 2523              	.LFB2084:
 704:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 705:Task/Task_Control.c **** 
 706:Task/Task_Control.c **** static void TaskControl_Close_CLI(void)
 707:Task/Task_Control.c **** {
 2524              		.loc 1 707 1 is_stmt 1 view -0
 2525              		.cfi_startproc
 2526              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 65


 2527              		@ frame_needed = 0, uses_anonymous_args = 0
 2528 0000 70B5     		push	{r4, r5, r6, lr}
 2529              	.LCFI25:
 2530              		.cfi_def_cfa_offset 16
 2531              		.cfi_offset 4, -16
 2532              		.cfi_offset 5, -12
 2533              		.cfi_offset 6, -8
 2534              		.cfi_offset 14, -4
 708:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 2535              		.loc 1 708 5 view .LVU679
 2536              		.loc 1 708 24 is_stmt 0 view .LVU680
 2537 0002 FFF7FEFF 		bl	Shell_GetInstence
 2538              	.LVL165:
 2539 0006 0446     		mov	r4, r0
 2540              	.LVL166:
 709:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 2541              		.loc 1 709 5 is_stmt 1 view .LVU681
 710:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 2542              		.loc 1 710 5 view .LVU682
 2543              		.loc 1 710 38 is_stmt 0 view .LVU683
 2544 0008 1B4B     		ldr	r3, .L177
 2545 000a 1B68     		ldr	r3, [r3]
 2546              		.loc 1 710 27 view .LVU684
 2547 000c 9847     		blx	r3
 2548              	.LVL167:
 711:Task/Task_Control.c **** 
 712:Task/Task_Control.c ****     if(shell_obj == NULL)
 2549              		.loc 1 712 5 is_stmt 1 view .LVU685
 2550              		.loc 1 712 7 is_stmt 0 view .LVU686
 2551 000e DCB1     		cbz	r4, .L169
 2552 0010 0646     		mov	r6, r0
 713:Task/Task_Control.c ****         return;
 714:Task/Task_Control.c **** 
 715:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 2553              		.loc 1 715 5 is_stmt 1 view .LVU687
 2554              		.loc 1 715 27 is_stmt 0 view .LVU688
 2555 0012 1A4B     		ldr	r3, .L177+4
 2556 0014 D3F81C31 		ldr	r3, [r3, #284]
 2557              		.loc 1 715 7 view .LVU689
 2558 0018 BBB1     		cbz	r3, .L174
 716:Task/Task_Control.c ****     {
 717:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl semaphore create failed\r\n");
 718:Task/Task_Control.c ****         return;
 719:Task/Task_Control.c ****     }
 720:Task/Task_Control.c **** 
 721:Task/Task_Control.c ****     shellPrint(shell_obj, "TaskControl CLI disable\r\n");
 2559              		.loc 1 721 5 is_stmt 1 view .LVU690
 2560 001a 1949     		ldr	r1, .L177+8
 2561 001c 2046     		mov	r0, r4
 2562              	.LVL168:
 2563              		.loc 1 721 5 is_stmt 0 view .LVU691
 2564 001e FFF7FEFF 		bl	shellPrint
 2565              	.LVL169:
 722:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 2566              		.loc 1 722 5 is_stmt 1 view .LVU692
 2567              		.loc 1 722 28 is_stmt 0 view .LVU693
 2568 0022 154B     		ldr	r3, .L177
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 66


 2569 0024 9B6A     		ldr	r3, [r3, #40]
 2570              		.loc 1 722 17 view .LVU694
 2571 0026 0820     		movs	r0, #8
 2572 0028 9847     		blx	r3
 2573              	.LVL170:
 723:Task/Task_Control.c ****     if (p_CLIData == NULL)
 2574              		.loc 1 723 5 is_stmt 1 view .LVU695
 2575              		.loc 1 723 8 is_stmt 0 view .LVU696
 2576 002a 0546     		mov	r5, r0
 2577 002c 90B1     		cbz	r0, .L175
 724:Task/Task_Control.c ****     {
 725:Task/Task_Control.c ****         shellPrint(shell_obj, "Moto control test data malloc failed\r\n");
 726:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 727:Task/Task_Control.c ****         return;
 728:Task/Task_Control.c ****     }
 729:Task/Task_Control.c **** 
 730:Task/Task_Control.c ****     p_CLIData->cli_type = TaskControl_Moto_CliDisable;
 2578              		.loc 1 730 5 is_stmt 1 view .LVU697
 2579              		.loc 1 730 25 is_stmt 0 view .LVU698
 2580 002e 0023     		movs	r3, #0
 2581 0030 0371     		strb	r3, [r0, #4]
 731:Task/Task_Control.c ****     p_CLIData->timestamp = time_stamp;
 2582              		.loc 1 731 5 is_stmt 1 view .LVU699
 2583              		.loc 1 731 26 is_stmt 0 view .LVU700
 2584 0032 0660     		str	r6, [r0]
 732:Task/Task_Control.c ****     p_CLIData->index = 0;
 2585              		.loc 1 732 5 is_stmt 1 view .LVU701
 2586              		.loc 1 732 22 is_stmt 0 view .LVU702
 2587 0034 4371     		strb	r3, [r0, #5]
 733:Task/Task_Control.c ****     p_CLIData->value = 0;
 2588              		.loc 1 733 5 is_stmt 1 view .LVU703
 2589              		.loc 1 733 22 is_stmt 0 view .LVU704
 2590 0036 C380     		strh	r3, [r0, #6]	@ movhi
 734:Task/Task_Control.c **** 
 735:Task/Task_Control.c ****     if(osMessagePut(TaskControl_Monitor.CLIMessage_ID, (uint32_t)p_CLIData, CLI_MESSAGE_OPEARATE_TI
 2591              		.loc 1 735 5 is_stmt 1 view .LVU705
 2592              		.loc 1 735 8 is_stmt 0 view .LVU706
 2593 0038 0122     		movs	r2, #1
 2594 003a 0146     		mov	r1, r0
 2595 003c 0F4B     		ldr	r3, .L177+4
 2596 003e D3F81C01 		ldr	r0, [r3, #284]
 2597              	.LVL171:
 2598              		.loc 1 735 8 view .LVU707
 2599 0042 FFF7FEFF 		bl	osMessagePut
 2600              	.LVL172:
 2601              		.loc 1 735 7 view .LVU708
 2602 0046 70B9     		cbnz	r0, .L176
 2603              	.LVL173:
 2604              	.L169:
 736:Task/Task_Control.c ****     {
 737:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 738:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 739:Task/Task_Control.c ****     }
 740:Task/Task_Control.c **** }
 2605              		.loc 1 740 1 view .LVU709
 2606 0048 70BD     		pop	{r4, r5, r6, pc}
 2607              	.LVL174:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 67


 2608              	.L174:
 717:Task/Task_Control.c ****         return;
 2609              		.loc 1 717 9 is_stmt 1 view .LVU710
 2610 004a 0E49     		ldr	r1, .L177+12
 2611 004c 2046     		mov	r0, r4
 2612              	.LVL175:
 717:Task/Task_Control.c ****         return;
 2613              		.loc 1 717 9 is_stmt 0 view .LVU711
 2614 004e FFF7FEFF 		bl	shellPrint
 2615              	.LVL176:
 718:Task/Task_Control.c ****     }
 2616              		.loc 1 718 9 is_stmt 1 view .LVU712
 2617 0052 F9E7     		b	.L169
 2618              	.LVL177:
 2619              	.L175:
 725:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 2620              		.loc 1 725 9 view .LVU713
 2621 0054 0C49     		ldr	r1, .L177+16
 2622 0056 2046     		mov	r0, r4
 2623              	.LVL178:
 725:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 2624              		.loc 1 725 9 is_stmt 0 view .LVU714
 2625 0058 FFF7FEFF 		bl	shellPrint
 2626              	.LVL179:
 726:Task/Task_Control.c ****         return;
 2627              		.loc 1 726 9 is_stmt 1 view .LVU715
 726:Task/Task_Control.c ****         return;
 2628              		.loc 1 726 20 is_stmt 0 view .LVU716
 2629 005c 064B     		ldr	r3, .L177
 2630 005e DB6A     		ldr	r3, [r3, #44]
 726:Task/Task_Control.c ****         return;
 2631              		.loc 1 726 9 view .LVU717
 2632 0060 2846     		mov	r0, r5
 2633 0062 9847     		blx	r3
 2634              	.LVL180:
 727:Task/Task_Control.c ****     }
 2635              		.loc 1 727 9 is_stmt 1 view .LVU718
 2636 0064 F0E7     		b	.L169
 2637              	.L176:
 737:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 2638              		.loc 1 737 9 view .LVU719
 2639 0066 0949     		ldr	r1, .L177+20
 2640 0068 2046     		mov	r0, r4
 2641 006a FFF7FEFF 		bl	shellPrint
 2642              	.LVL181:
 738:Task/Task_Control.c ****     }
 2643              		.loc 1 738 9 view .LVU720
 738:Task/Task_Control.c ****     }
 2644              		.loc 1 738 20 is_stmt 0 view .LVU721
 2645 006e 024B     		ldr	r3, .L177
 2646 0070 DB6A     		ldr	r3, [r3, #44]
 738:Task/Task_Control.c ****     }
 2647              		.loc 1 738 9 view .LVU722
 2648 0072 2846     		mov	r0, r5
 2649 0074 9847     		blx	r3
 2650              	.LVL182:
 2651 0076 E7E7     		b	.L169
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 68


 2652              	.L178:
 2653              		.align	2
 2654              	.L177:
 2655 0078 00000000 		.word	SrvOsCommon
 2656 007c 00000000 		.word	.LANCHOR0
 2657 0080 00000000 		.word	.LC24
 2658 0084 00000000 		.word	.LC5
 2659 0088 F0010000 		.word	.LC21
 2660 008c D0010000 		.word	.LC20
 2661              		.cfi_endproc
 2662              	.LFE2084:
 2664              		.section	.text.TaskControl_Init,"ax",%progbits
 2665              		.align	1
 2666              		.global	TaskControl_Init
 2667              		.syntax unified
 2668              		.thumb
 2669              		.thumb_func
 2671              	TaskControl_Init:
 2672              	.LVL183:
 2673              	.LFB2074:
  75:Task/Task_Control.c ****     /* init monitor */
 2674              		.loc 1 75 1 is_stmt 1 view -0
 2675              		.cfi_startproc
 2676              		@ args = 0, pretend = 0, frame = 16
 2677              		@ frame_needed = 0, uses_anonymous_args = 0
  75:Task/Task_Control.c ****     /* init monitor */
 2678              		.loc 1 75 1 is_stmt 0 view .LVU724
 2679 0000 70B5     		push	{r4, r5, r6, lr}
 2680              	.LCFI26:
 2681              		.cfi_def_cfa_offset 16
 2682              		.cfi_offset 4, -16
 2683              		.cfi_offset 5, -12
 2684              		.cfi_offset 6, -8
 2685              		.cfi_offset 14, -4
 2686 0002 84B0     		sub	sp, sp, #16
 2687              	.LCFI27:
 2688              		.cfi_def_cfa_offset 32
 2689 0004 0546     		mov	r5, r0
  77:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
 2690              		.loc 1 77 5 is_stmt 1 view .LVU725
 2691 0006 184C     		ldr	r4, .L181
 2692 0008 4FF49072 		mov	r2, #288
 2693 000c 0021     		movs	r1, #0
 2694 000e 2046     		mov	r0, r4
 2695              	.LVL184:
  77:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
 2696              		.loc 1 77 5 is_stmt 0 view .LVU726
 2697 0010 FFF7FEFF 		bl	memset
 2698              	.LVL185:
  78:Task/Task_Control.c **** 
 2699              		.loc 1 78 5 is_stmt 1 view .LVU727
  78:Task/Task_Control.c **** 
 2700              		.loc 1 78 15 is_stmt 0 view .LVU728
 2701 0014 154B     		ldr	r3, .L181+4
 2702 0016 DB69     		ldr	r3, [r3, #28]
  78:Task/Task_Control.c **** 
 2703              		.loc 1 78 5 view .LVU729
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 69


 2704 0018 1548     		ldr	r0, .L181+8
 2705 001a 9847     		blx	r3
 2706              	.LVL186:
  81:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_size = DataPipe_DataSize(ExpCtl);
 2707              		.loc 1 81 5 is_stmt 1 view .LVU730
  81:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_size = DataPipe_DataSize(ExpCtl);
 2708              		.loc 1 81 36 is_stmt 0 view .LVU731
 2709 001c 154B     		ldr	r3, .L181+12
 2710 001e 164A     		ldr	r2, .L181+16
 2711 0020 C3F80D20 		str	r2, [r3, #13]	@ unaligned
  82:Task/Task_Control.c ****     DataPipe_Enable(&CtlData_smp_DataPipe);
 2712              		.loc 1 82 5 is_stmt 1 view .LVU732
  82:Task/Task_Control.c ****     DataPipe_Enable(&CtlData_smp_DataPipe);
 2713              		.loc 1 82 36 is_stmt 0 view .LVU733
 2714 0024 0026     		movs	r6, #0
 2715 0026 1C22     		movs	r2, #28
 2716 0028 5A74     		strb	r2, [r3, #17]
 2717 002a 9E74     		strb	r6, [r3, #18]
  83:Task/Task_Control.c ****     
 2718              		.loc 1 83 5 is_stmt 1 view .LVU734
 2719              	.LVL187:
 2720              	.LBB11:
 2721              	.LBI11:
 2722              		.file 2 "System/DataPipe/DataPipe.h"
   1:System/DataPipe/DataPipe.h **** #ifndef __DATAPIPE_H
   2:System/DataPipe/DataPipe.h **** #define __DATAPIPE_H
   3:System/DataPipe/DataPipe.h **** 
   4:System/DataPipe/DataPipe.h **** #ifdef __cplusplus
   5:System/DataPipe/DataPipe.h **** extern "C" {
   6:System/DataPipe/DataPipe.h **** #endif
   7:System/DataPipe/DataPipe.h **** 
   8:System/DataPipe/DataPipe.h **** #include <stdint.h>
   9:System/DataPipe/DataPipe.h **** #include <string.h>
  10:System/DataPipe/DataPipe.h **** #include <stdbool.h>
  11:System/DataPipe/DataPipe.h **** 
  12:System/DataPipe/DataPipe.h **** typedef void (*Pipe_TransFinish_Callback)(void *pipe_obj);
  13:System/DataPipe/DataPipe.h **** typedef void (*Pipe_TransError_Callback)(void *pipe_obj);
  14:System/DataPipe/DataPipe.h **** typedef void (*Pipe_TimeOutProc_Callback)(void *pipe_obj);
  15:System/DataPipe/DataPipe.h **** 
  16:System/DataPipe/DataPipe.h **** #define DataPipeHandleToObj(x) ((DataPipeObj_TypeDef *)x)
  17:System/DataPipe/DataPipe.h **** #define DataPipe_CreateDataObj(type, name) static type name##_##PipeDataObj __attribute__((section(
  18:System/DataPipe/DataPipe.h **** #define DataPipe_DataObjAddr(name) (&name##_##PipeDataObj)
  19:System/DataPipe/DataPipe.h **** #define DataPipe_DataObj(name) name##_##PipeDataObj
  20:System/DataPipe/DataPipe.h **** #define DataPipe_DataSize(name) sizeof(name##_##PipeDataObj)
  21:System/DataPipe/DataPipe.h **** 
  22:System/DataPipe/DataPipe.h **** typedef enum
  23:System/DataPipe/DataPipe.h **** {
  24:System/DataPipe/DataPipe.h ****     Pipe_UnReady = 0,
  25:System/DataPipe/DataPipe.h ****     Pipe_Ready,
  26:System/DataPipe/DataPipe.h ****     Pipe_Busy,
  27:System/DataPipe/DataPipe.h ****     Pipe_Error,
  28:System/DataPipe/DataPipe.h **** } DataPipe_State_List;
  29:System/DataPipe/DataPipe.h **** 
  30:System/DataPipe/DataPipe.h **** #pragma pack(1)
  31:System/DataPipe/DataPipe.h **** typedef struct
  32:System/DataPipe/DataPipe.h **** {
  33:System/DataPipe/DataPipe.h ****     uint32_t min_rx_interval;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 70


  34:System/DataPipe/DataPipe.h ****     uint32_t detect_interval;
  35:System/DataPipe/DataPipe.h ****     uint32_t rx_ms_rt;
  36:System/DataPipe/DataPipe.h **** 
  37:System/DataPipe/DataPipe.h ****     bool enable;
  38:System/DataPipe/DataPipe.h **** 
  39:System/DataPipe/DataPipe.h ****     uint32_t data_addr;
  40:System/DataPipe/DataPipe.h ****     uint16_t data_size;
  41:System/DataPipe/DataPipe.h **** 
  42:System/DataPipe/DataPipe.h ****     Pipe_TransFinish_Callback trans_finish_cb;
  43:System/DataPipe/DataPipe.h ****     Pipe_TransError_Callback trans_error_cb;
  44:System/DataPipe/DataPipe.h **** 
  45:System/DataPipe/DataPipe.h ****     uint32_t tx_cnt;
  46:System/DataPipe/DataPipe.h ****     uint32_t rx_cnt;
  47:System/DataPipe/DataPipe.h ****     uint32_t er_cnt;
  48:System/DataPipe/DataPipe.h **** } DataPipeObj_TypeDef;
  49:System/DataPipe/DataPipe.h **** #pragma pack()
  50:System/DataPipe/DataPipe.h **** 
  51:System/DataPipe/DataPipe.h **** typedef struct
  52:System/DataPipe/DataPipe.h **** {
  53:System/DataPipe/DataPipe.h ****     DataPipeObj_TypeDef *org;
  54:System/DataPipe/DataPipe.h ****     DataPipeObj_TypeDef *dst;
  55:System/DataPipe/DataPipe.h **** } Data_PlugedPipeObj_TypeDef;
  56:System/DataPipe/DataPipe.h **** 
  57:System/DataPipe/DataPipe.h **** bool DataPipe_Init(void);
  58:System/DataPipe/DataPipe.h **** bool DataPipe_DeInit(void);
  59:System/DataPipe/DataPipe.h **** bool DataPipe_SendTo(DataPipeObj_TypeDef *p_org, DataPipeObj_TypeDef *p_dst);
  60:System/DataPipe/DataPipe.h **** bool DataPipe_DealError(void);
  61:System/DataPipe/DataPipe.h **** 
  62:System/DataPipe/DataPipe.h **** inline bool DataPipe_Enable(DataPipeObj_TypeDef *obj)
 2723              		.loc 2 62 13 view .LVU735
 2724              	.LBB12:
  63:System/DataPipe/DataPipe.h **** {
  64:System/DataPipe/DataPipe.h ****     if (obj == NULL)
 2725              		.loc 2 64 5 view .LVU736
  65:System/DataPipe/DataPipe.h ****         return false;
  66:System/DataPipe/DataPipe.h **** 
  67:System/DataPipe/DataPipe.h ****     obj->enable = true;
 2726              		.loc 2 67 5 view .LVU737
 2727              		.loc 2 67 17 is_stmt 0 view .LVU738
 2728 002c 0122     		movs	r2, #1
 2729 002e 1A73     		strb	r2, [r3, #12]
  68:System/DataPipe/DataPipe.h **** 
  69:System/DataPipe/DataPipe.h ****     return true;
 2730              		.loc 2 69 5 is_stmt 1 view .LVU739
 2731              	.LVL188:
 2732              		.loc 2 69 5 is_stmt 0 view .LVU740
 2733              	.LBE12:
 2734              	.LBE11:
  86:Task/Task_Control.c ****     TaskControl_Monitor.init_state = SrvActuator.init(TaskControl_Monitor.actuator_param);
 2735              		.loc 1 86 5 is_stmt 1 view .LVU741
 2736 0030 FFF7FEFF 		bl	TaskControl_Get_StoreParam
 2737              	.LVL189:
  87:Task/Task_Control.c **** 
 2738              		.loc 1 87 5 view .LVU742
  87:Task/Task_Control.c **** 
 2739              		.loc 1 87 49 is_stmt 0 view .LVU743
 2740 0034 114B     		ldr	r3, .L181+20
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 71


 2741 0036 1B68     		ldr	r3, [r3]
  87:Task/Task_Control.c **** 
 2742              		.loc 1 87 38 view .LVU744
 2743 0038 D4F8B700 		ldr	r0, [r4, #183]	@ unaligned
 2744 003c D4F8BB10 		ldr	r1, [r4, #187]	@ unaligned
 2745 0040 D4F8BF20 		ldr	r2, [r4, #191]	@ unaligned
 2746 0044 9847     		blx	r3
 2747              	.LVL190:
  87:Task/Task_Control.c **** 
 2748              		.loc 1 87 36 view .LVU745
 2749 0046 2070     		strb	r0, [r4]
  89:Task/Task_Control.c ****     TaskControl_Monitor.CLIMessage_ID = osMessageCreate(osMessageQ(MotoCLI_Data), NULL);
 2750              		.loc 1 89 5 is_stmt 1 view .LVU746
 2751 0048 0D4B     		ldr	r3, .L181+24
 2752 004a EC46     		mov	ip, sp
 2753 004c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2754 004e 8CE80F00 		stm	ip, {r0, r1, r2, r3}
  90:Task/Task_Control.c ****     
 2755              		.loc 1 90 5 view .LVU747
  90:Task/Task_Control.c ****     
 2756              		.loc 1 90 41 is_stmt 0 view .LVU748
 2757 0052 3146     		mov	r1, r6
 2758 0054 6046     		mov	r0, ip
 2759 0056 FFF7FEFF 		bl	osMessageCreate
 2760              	.LVL191:
  90:Task/Task_Control.c ****     
 2761              		.loc 1 90 39 view .LVU749
 2762 005a C4F81C01 		str	r0, [r4, #284]
  92:Task/Task_Control.c **** }
 2763              		.loc 1 92 5 is_stmt 1 view .LVU750
  92:Task/Task_Control.c **** }
 2764              		.loc 1 92 24 is_stmt 0 view .LVU751
 2765 005e 094B     		ldr	r3, .L181+28
 2766 0060 1D60     		str	r5, [r3]
  93:Task/Task_Control.c **** 
 2767              		.loc 1 93 1 view .LVU752
 2768 0062 04B0     		add	sp, sp, #16
 2769              	.LCFI28:
 2770              		.cfi_def_cfa_offset 16
 2771              		@ sp needed
 2772 0064 70BD     		pop	{r4, r5, r6, pc}
 2773              	.LVL192:
 2774              	.L182:
  93:Task/Task_Control.c **** 
 2775              		.loc 1 93 1 view .LVU753
 2776 0066 00BF     		.align	2
 2777              	.L181:
 2778 0068 00000000 		.word	.LANCHOR0
 2779 006c 00000000 		.word	SrvDataHub
 2780 0070 00000000 		.word	.LANCHOR5
 2781 0074 00000000 		.word	CtlData_smp_DataPipe
 2782 0078 00000000 		.word	.LANCHOR2
 2783 007c 00000000 		.word	SrvActuator
 2784 0080 00000000 		.word	.LANCHOR10
 2785 0084 00000000 		.word	.LANCHOR11
 2786              		.cfi_endproc
 2787              	.LFE2074:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 72


 2789              		.section	.text.TaskControl_Core,"ax",%progbits
 2790              		.align	1
 2791              		.global	TaskControl_Core
 2792              		.syntax unified
 2793              		.thumb
 2794              		.thumb_func
 2796              	TaskControl_Core:
 2797              	.LVL193:
 2798              	.LFB2077:
 196:Task/Task_Control.c ****     uint32_t sys_time = SrvOsCommon.get_os_ms();
 2799              		.loc 1 196 1 is_stmt 1 view -0
 2800              		.cfi_startproc
 2801              		@ args = 0, pretend = 0, frame = 112
 2802              		@ frame_needed = 0, uses_anonymous_args = 0
 196:Task/Task_Control.c ****     uint32_t sys_time = SrvOsCommon.get_os_ms();
 2803              		.loc 1 196 1 is_stmt 0 view .LVU755
 2804 0000 30B5     		push	{r4, r5, lr}
 2805              	.LCFI29:
 2806              		.cfi_def_cfa_offset 12
 2807              		.cfi_offset 4, -12
 2808              		.cfi_offset 5, -8
 2809              		.cfi_offset 14, -4
 2810 0002 9DB0     		sub	sp, sp, #116
 2811              	.LCFI30:
 2812              		.cfi_def_cfa_offset 128
 197:Task/Task_Control.c ****     uint32_t task_tick = 0;
 2813              		.loc 1 197 5 is_stmt 1 view .LVU756
 197:Task/Task_Control.c ****     uint32_t task_tick = 0;
 2814              		.loc 1 197 36 is_stmt 0 view .LVU757
 2815 0004 184B     		ldr	r3, .L189
 2816 0006 1B68     		ldr	r3, [r3]
 197:Task/Task_Control.c ****     uint32_t task_tick = 0;
 2817              		.loc 1 197 25 view .LVU758
 2818 0008 9847     		blx	r3
 2819              	.LVL194:
 197:Task/Task_Control.c ****     uint32_t task_tick = 0;
 2820              		.loc 1 197 14 view .LVU759
 2821 000a 1B90     		str	r0, [sp, #108]
 198:Task/Task_Control.c ****     bool upgrade_state = false;
 2822              		.loc 1 198 5 is_stmt 1 view .LVU760
 2823              	.LVL195:
 199:Task/Task_Control.c ****     ControlData_TypeDef CtlData;
 2824              		.loc 1 199 5 view .LVU761
 199:Task/Task_Control.c ****     ControlData_TypeDef CtlData;
 2825              		.loc 1 199 10 is_stmt 0 view .LVU762
 2826 000c 0021     		movs	r1, #0
 2827 000e 8DF86B10 		strb	r1, [sp, #107]
 200:Task/Task_Control.c ****     memset(&CtlData, 0, sizeof(ControlData_TypeDef));
 2828              		.loc 1 200 5 is_stmt 1 view .LVU763
 201:Task/Task_Control.c **** 
 2829              		.loc 1 201 5 view .LVU764
 2830 0012 6422     		movs	r2, #100
 2831 0014 01A8     		add	r0, sp, #4
 2832 0016 FFF7FEFF 		bl	memset
 2833              	.LVL196:
 2834 001a 0CE0     		b	.L187
 2835              	.LVL197:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 73


 2836              	.L184:
 217:Task/Task_Control.c ****             {
 2837              		.loc 1 217 13 view .LVU765
 217:Task/Task_Control.c ****             {
 2838              		.loc 1 217 37 is_stmt 0 view .LVU766
 2839 001c 134B     		ldr	r3, .L189+4
 2840 001e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 217:Task/Task_Control.c ****             {
 2841              		.loc 1 217 16 view .LVU767
 2842 0020 FBB9     		cbnz	r3, .L186
 220:Task/Task_Control.c ****             }
 2843              		.loc 1 220 17 is_stmt 1 view .LVU768
 2844 0022 2146     		mov	r1, r4
 2845 0024 01A8     		add	r0, sp, #4
 2846 0026 FFF7FEFF 		bl	TaskControl_FlightControl_Polling
 2847              	.LVL198:
 2848              	.L185:
 234:Task/Task_Control.c ****     }
 2849              		.loc 1 234 9 view .LVU769
 234:Task/Task_Control.c ****     }
 2850              		.loc 1 234 20 is_stmt 0 view .LVU770
 2851 002a 0F4B     		ldr	r3, .L189
 2852 002c 9B68     		ldr	r3, [r3, #8]
 234:Task/Task_Control.c ****     }
 2853              		.loc 1 234 9 view .LVU771
 2854 002e 104A     		ldr	r2, .L189+8
 2855 0030 1168     		ldr	r1, [r2]
 2856 0032 1BA8     		add	r0, sp, #108
 2857 0034 9847     		blx	r3
 2858              	.LVL199:
 203:Task/Task_Control.c ****     {
 2859              		.loc 1 203 10 is_stmt 1 view .LVU772
 2860              	.L187:
 203:Task/Task_Control.c ****     {
 2861              		.loc 1 203 5 view .LVU773
 205:Task/Task_Control.c **** 
 2862              		.loc 1 205 9 view .LVU774
 205:Task/Task_Control.c **** 
 2863              		.loc 1 205 32 is_stmt 0 view .LVU775
 2864 0036 0C4B     		ldr	r3, .L189
 2865 0038 1B68     		ldr	r3, [r3]
 205:Task/Task_Control.c **** 
 2866              		.loc 1 205 21 view .LVU776
 2867 003a 9847     		blx	r3
 2868              	.LVL200:
 2869 003c 0446     		mov	r4, r0
 2870              	.LVL201:
 208:Task/Task_Control.c **** 
 2871              		.loc 1 208 9 is_stmt 1 view .LVU777
 208:Task/Task_Control.c **** 
 2872              		.loc 1 208 19 is_stmt 0 view .LVU778
 2873 003e 0D4D     		ldr	r5, .L189+12
 2874 0040 AB6C     		ldr	r3, [r5, #72]
 208:Task/Task_Control.c **** 
 2875              		.loc 1 208 9 view .LVU779
 2876 0042 01A8     		add	r0, sp, #4
 2877              	.LVL202:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 74


 208:Task/Task_Control.c **** 
 2878              		.loc 1 208 9 view .LVU780
 2879 0044 9847     		blx	r3
 2880              	.LVL203:
 210:Task/Task_Control.c ****         {
 2881              		.loc 1 210 9 is_stmt 1 view .LVU781
 210:Task/Task_Control.c ****         {
 2882              		.loc 1 210 23 is_stmt 0 view .LVU782
 2883 0046 2B69     		ldr	r3, [r5, #16]
 210:Task/Task_Control.c ****         {
 2884              		.loc 1 210 13 view .LVU783
 2885 0048 0DF16B00 		add	r0, sp, #107
 2886 004c 9847     		blx	r3
 2887              	.LVL204:
 210:Task/Task_Control.c ****         {
 2888              		.loc 1 210 12 view .LVU784
 2889 004e 0028     		cmp	r0, #0
 2890 0050 E4D0     		beq	.L184
 210:Task/Task_Control.c ****         {
 2891              		.loc 1 210 58 discriminator 1 view .LVU785
 2892 0052 9DF86B30 		ldrb	r3, [sp, #107]	@ zero_extendqisi2
 2893 0056 002B     		cmp	r3, #0
 2894 0058 E0D0     		beq	.L184
 213:Task/Task_Control.c ****         }
 2895              		.loc 1 213 13 is_stmt 1 view .LVU786
 213:Task/Task_Control.c ****         }
 2896              		.loc 1 213 24 is_stmt 0 view .LVU787
 2897 005a 074B     		ldr	r3, .L189+16
 2898 005c DB68     		ldr	r3, [r3, #12]
 213:Task/Task_Control.c ****         }
 2899              		.loc 1 213 13 view .LVU788
 2900 005e 9847     		blx	r3
 2901              	.LVL205:
 2902 0060 E3E7     		b	.L185
 2903              	.L186:
 224:Task/Task_Control.c ****                 {
 2904              		.loc 1 224 17 is_stmt 1 view .LVU789
 226:Task/Task_Control.c ****                 }
 2905              		.loc 1 226 21 view .LVU790
 2906 0062 FFF7FEFF 		bl	TaskControl_CLI_Polling
 2907              	.LVL206:
 2908 0066 E0E7     		b	.L185
 2909              	.L190:
 2910              		.align	2
 2911              	.L189:
 2912 0068 00000000 		.word	SrvOsCommon
 2913 006c 00000000 		.word	.LANCHOR0
 2914 0070 00000000 		.word	.LANCHOR11
 2915 0074 00000000 		.word	SrvDataHub
 2916 0078 00000000 		.word	SrvActuator
 2917              		.cfi_endproc
 2918              	.LFE2077:
 2920              		.global	shellCommandlock_moto
 2921              		.global	shellDesclock_moto
 2922              		.global	shellCmdlock_moto
 2923              		.global	shellCommandrev_spin
 2924              		.global	shellDescrev_spin
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 75


 2925              		.global	shellCmdrev_spin
 2926              		.global	shellCommandmoto_spin
 2927              		.global	shellDescmoto_spin
 2928              		.global	shellCmdmoto_spin
 2929              		.global	TaskControl_Monitor
 2930              		.section	.rodata
 2931              		.align	2
 2932              		.set	.LANCHOR10,. + 0
 2933              	.LC0:
 2934 0000 40000000 		.word	64
 2935 0004 08000000 		.word	8
 2936 0008 00000000 		.word	0
 2937 000c 00000000 		.word	0
 2938              		.section	.Perph_Section,"aw"
 2939              		.align	2
 2940              		.set	.LANCHOR2,. + 0
 2943              	ExpCtl_PipeDataObj:
 2944 0000 00000000 		.space	28
 2944      00000000 
 2944      00000000 
 2944      00000000 
 2944      00000000 
 2945              		.section	.bss.CLIData.1,"aw",%nobits
 2946              		.align	2
 2947              		.set	.LANCHOR8,. + 0
 2950              	CLIData.1:
 2951 0000 00000000 		.space	8
 2951      00000000 
 2952              		.section	.bss.TaskControl_Period,"aw",%nobits
 2953              		.align	2
 2954              		.set	.LANCHOR11,. + 0
 2957              	TaskControl_Period:
 2958 0000 00000000 		.space	4
 2959              		.section	.bss.att_update,"aw",%nobits
 2960              		.set	.LANCHOR7,. + 0
 2963              	att_update:
 2964 0000 00       		.space	1
 2965              		.section	.bss.att_update_time,"aw",%nobits
 2966              		.align	2
 2967              		.set	.LANCHOR6,. + 0
 2970              	att_update_time:
 2971 0000 00000000 		.space	4
 2972              		.section	.bss.failsafe,"aw",%nobits
 2973              		.set	.LANCHOR1,. + 0
 2976              	failsafe:
 2977 0000 00       		.space	1
 2978              		.section	.bss.imu_err_code,"aw",%nobits
 2979              		.set	.LANCHOR4,. + 0
 2982              	imu_err_code:
 2983 0000 00       		.space	1
 2984              		.section	.bss.imu_init_state,"aw",%nobits
 2985              		.set	.LANCHOR5,. + 0
 2988              	imu_init_state:
 2989 0000 00       		.space	1
 2990              		.section	.bss.imu_update_time,"aw",%nobits
 2991              		.align	2
 2992              		.set	.LANCHOR3,. + 0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 76


 2995              	imu_update_time:
 2996 0000 00000000 		.space	4
 2997              		.section	.bss.moto_ctl_buff.0,"aw",%nobits
 2998              		.align	2
 2999              		.set	.LANCHOR9,. + 0
 3002              	moto_ctl_buff.0:
 3003 0000 00000000 		.space	16
 3003      00000000 
 3003      00000000 
 3003      00000000 
 3004              		.section	.data.TaskControl_Monitor,"aw"
 3005              		.align	2
 3006              		.set	.LANCHOR0,. + 0
 3009              	TaskControl_Monitor:
 3010 0000 00       		.byte	0
 3011 0001 00       		.byte	0
 3012 0002 01       		.byte	1
 3013 0003 00       		.byte	0
 3014 0004 01       		.byte	1
 3015 0005 00       		.byte	0
 3016 0006 00000000 		.space	194
 3016      00000000 
 3016      00000000 
 3016      00000000 
 3016      00000000 
 3017 00c8 00000000 		.word	0
 3018 00cc 00000000 		.space	52
 3018      00000000 
 3018      00000000 
 3018      00000000 
 3018      00000000 
 3019 0100 00       		.byte	0
 3020 0101 00000000 		.space	16
 3020      00000000 
 3020      00000000 
 3020      00000000 
 3021 0111 00       		.byte	0
 3022 0112 00000000 		.space	14
 3022      00000000 
 3022      00000000 
 3022      0000
 3023              		.section	.rodata.shellCmdlock_moto,"a"
 3024              		.align	2
 3027              	shellCmdlock_moto:
 3028 0000 6C6F636B 		.ascii	"lock_moto\000"
 3028      5F6D6F74 
 3028      6F00
 3029              		.section	.rodata.shellCmdmoto_spin,"a"
 3030              		.align	2
 3033              	shellCmdmoto_spin:
 3034 0000 6D6F746F 		.ascii	"moto_spin\000"
 3034      5F737069 
 3034      6E00
 3035              		.section	.rodata.shellCmdrev_spin,"a"
 3036              		.align	2
 3039              	shellCmdrev_spin:
 3040 0000 7265765F 		.ascii	"rev_spin\000"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 77


 3040      7370696E 
 3040      00
 3041              		.section	.rodata.shellDesclock_moto,"a"
 3042              		.align	2
 3045              	shellDesclock_moto:
 3046 0000 64697361 		.ascii	"disable actuator test\000"
 3046      626C6520 
 3046      61637475 
 3046      61746F72 
 3046      20746573 
 3047              		.section	.rodata.shellDescmoto_spin,"a"
 3048              		.align	2
 3051              	shellDescmoto_spin:
 3052 0000 53696E67 		.ascii	"Single Moto Spin\000"
 3052      6C65204D 
 3052      6F746F20 
 3052      5370696E 
 3052      00
 3053              		.section	.rodata.shellDescrev_spin,"a"
 3054              		.align	2
 3057              	shellDescrev_spin:
 3058 0000 72657665 		.ascii	"reverse moto Spin\000"
 3058      72736520 
 3058      6D6F746F 
 3058      20537069 
 3058      6E00
 3059              		.section	shellCommand,"a"
 3060              		.align	2
 3063              	shellCommandlock_moto:
 3064 0000 00210000 		.word	8448
 3065 0004 00000000 		.word	shellCmdlock_moto
 3066 0008 00000000 		.word	TaskControl_Close_CLI
 3067 000c 00000000 		.word	shellDesclock_moto
 3070              	shellCommandrev_spin:
 3071 0010 00210000 		.word	8448
 3072 0014 00000000 		.word	shellCmdrev_spin
 3073 0018 00000000 		.word	TaskControl_Reverse_SpinDir
 3074 001c 00000000 		.word	shellDescrev_spin
 3077              	shellCommandmoto_spin:
 3078 0020 00210000 		.word	8448
 3079 0024 00000000 		.word	shellCmdmoto_spin
 3080 0028 00000000 		.word	TaskControl_CLI_MotoSpinTest
 3081 002c 00000000 		.word	shellDescmoto_spin
 3082              		.text
 3083              	.Letext0:
 3084              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 3085              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 3086              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\
 3087              		.file 6 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
 3088              		.file 7 "System/FreeRTOS/include/portable.h"
 3089              		.file 8 "System/FreeRTOS/include/FreeRTOS.h"
 3090              		.file 9 "System/FreeRTOS/include/queue.h"
 3091              		.file 10 "common/gen_physic_def/imu_data.h"
 3092              		.file 11 "System/FreeRTOS/CMSIS_RTOS/cmsis_os.h"
 3093              		.file 12 "Service/Srv_OsCommon.h"
 3094              		.file 13 "HW_Lib/AT32F435/drivers/inc/at32f435_437_tmr.h"
 3095              		.file 14 "Device/Dev_Dshot.h"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 78


 3096              		.file 15 "Service/Srv_Actuator.h"
 3097              		.file 16 "Service/Srv_IMUSample.h"
 3098              		.file 17 "Service/control_data.h"
 3099              		.file 18 "Service/Srv_DataHub.h"
 3100              		.file 19 "Task/../System/storage/Storage_Bus_Port.h"
 3101              		.file 20 "Task/../System/storage/Storage.h"
 3102              		.file 21 "Algorithm/Control_Dep/Attitude/Att_Control_Base.h"
 3103              		.file 22 "Algorithm/Control_Dep/controller.h"
 3104              		.file 23 "Task/Task_Control.h"
 3105              		.file 24 "System/shell/shell.h"
 3106              		.file 25 "System/FreeRTOS/FreeRTOSConfig.h"
 3107              		.file 26 "System/shell/shell_port.h"
 3108              		.file 27 "<built-in>"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 79


DEFINED SYMBOLS
                            *ABS*:00000000 Task_Control.c
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:20     .text.TaskControl_disarm_check:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:25     .text.TaskControl_disarm_check:00000000 TaskControl_disarm_check
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:123    .text.TaskControl_disarm_check:0000007c $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:128    .text.TaskControl_Actuator_ControlValue_Update:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:133    .text.TaskControl_Actuator_ControlValue_Update:00000000 TaskControl_Actuator_ControlValue_Update
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:196    .text.TaskControl_Actuator_ControlValue_Update:00000040 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:201    .text.TaskControl_Convert_CtlData:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:206    .text.TaskControl_Convert_CtlData:00000000 TaskControl_Convert_CtlData
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:254    .text.TaskControl_Convert_CtlData:00000034 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:260    .rodata.TaskControl_Get_StoreParam.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:267    .text.TaskControl_Get_StoreParam:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:272    .text.TaskControl_Get_StoreParam:00000000 TaskControl_Get_StoreParam
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:681    .text.TaskControl_Get_StoreParam:00000324 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:693    .text.TaskControl_Get_StoreParam:00000350 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:756    .text.TaskControl_Get_StoreParam:000003e0 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:761    .text.TaskControl_FlightControl_Polling:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:766    .text.TaskControl_FlightControl_Polling:00000000 TaskControl_FlightControl_Polling
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1082   .text.TaskControl_FlightControl_Polling:000001ea $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1089   .text.TaskControl_FlightControl_Polling:000001f0 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1246   .text.TaskControl_FlightControl_Polling:000002b8 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1261   .text.TaskControl_FlightControl_Polling:000002e8 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1427   .text.TaskControl_FlightControl_Polling:000003cc $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1436   .rodata.TaskControl_CLI_Polling.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1443   .text.TaskControl_CLI_Polling:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1448   .text.TaskControl_CLI_Polling:00000000 TaskControl_CLI_Polling
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1797   .text.TaskControl_CLI_Polling:00000188 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1809   .rodata.TaskControl_CLI_MotoSpinTest.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1862   .text.TaskControl_CLI_MotoSpinTest:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:1867   .text.TaskControl_CLI_MotoSpinTest:00000000 TaskControl_CLI_MotoSpinTest
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2247   .text.TaskControl_CLI_MotoSpinTest:000001d8 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2272   .rodata.TaskControl_Reverse_SpinDir.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2279   .text.TaskControl_Reverse_SpinDir:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2284   .text.TaskControl_Reverse_SpinDir:00000000 TaskControl_Reverse_SpinDir
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2498   .text.TaskControl_Reverse_SpinDir:000000e4 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2513   .rodata.TaskControl_Close_CLI.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2517   .text.TaskControl_Close_CLI:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2522   .text.TaskControl_Close_CLI:00000000 TaskControl_Close_CLI
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2655   .text.TaskControl_Close_CLI:00000078 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2665   .text.TaskControl_Init:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2671   .text.TaskControl_Init:00000000 TaskControl_Init
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2778   .text.TaskControl_Init:00000068 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2790   .text.TaskControl_Core:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2796   .text.TaskControl_Core:00000000 TaskControl_Core
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2912   .text.TaskControl_Core:00000068 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3063   shellCommand:00000000 shellCommandlock_moto
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3045   .rodata.shellDesclock_moto:00000000 shellDesclock_moto
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3027   .rodata.shellCmdlock_moto:00000000 shellCmdlock_moto
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3070   shellCommand:00000010 shellCommandrev_spin
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3057   .rodata.shellDescrev_spin:00000000 shellDescrev_spin
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3039   .rodata.shellCmdrev_spin:00000000 shellCmdrev_spin
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3077   shellCommand:00000020 shellCommandmoto_spin
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3051   .rodata.shellDescmoto_spin:00000000 shellDescmoto_spin
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3033   .rodata.shellCmdmoto_spin:00000000 shellCmdmoto_spin
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3009   .data.TaskControl_Monitor:00000000 TaskControl_Monitor
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2931   .rodata:00000000 $d
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s 			page 80


C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2939   .Perph_Section:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2943   .Perph_Section:00000000 ExpCtl_PipeDataObj
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2946   .bss.CLIData.1:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2950   .bss.CLIData.1:00000000 CLIData.1
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2953   .bss.TaskControl_Period:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2957   .bss.TaskControl_Period:00000000 TaskControl_Period
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2963   .bss.att_update:00000000 att_update
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2964   .bss.att_update:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2966   .bss.att_update_time:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2970   .bss.att_update_time:00000000 att_update_time
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2976   .bss.failsafe:00000000 failsafe
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2977   .bss.failsafe:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2982   .bss.imu_err_code:00000000 imu_err_code
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2983   .bss.imu_err_code:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2988   .bss.imu_init_state:00000000 imu_init_state
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2989   .bss.imu_init_state:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2991   .bss.imu_update_time:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2995   .bss.imu_update_time:00000000 imu_update_time
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:2998   .bss.moto_ctl_buff.0:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3002   .bss.moto_ctl_buff.0:00000000 moto_ctl_buff.0
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3005   .data.TaskControl_Monitor:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3024   .rodata.shellCmdlock_moto:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3030   .rodata.shellCmdmoto_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3036   .rodata.shellCmdrev_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3042   .rodata.shellDesclock_moto:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3048   .rodata.shellDescmoto_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3054   .rodata.shellDescrev_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccNxV3b7.s:3060   shellCommand:00000000 $d

UNDEFINED SYMBOLS
SrvActuator
memset
memcpy
Controller
Storage
DataPipe_SendTo
CtlData_smp_DataPipe
CtlData_hub_DataPipe
CtlData_Log_DataPipe
SrvDataHub
Shell_GetInstence
osMessageGet
shellPrint
SrvOsCommon
osMessagePut
osMessageCreate
