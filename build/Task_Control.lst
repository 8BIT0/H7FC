ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Task_Control.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TaskControl_disarm_check,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	TaskControl_disarm_check:
  26              	.LVL0:
  27              	.LFB2076:
  28              		.file 1 "Task/Task_Control.c"
   1:Task/Task_Control.c **** /*
   2:Task/Task_Control.c ****  *  Auther : 8_B!T0
   3:Task/Task_Control.c ****  *  this file use for moto & servo control
   4:Task/Task_Control.c ****  *  (but currently none servo)
   5:Task/Task_Control.c ****  */
   6:Task/Task_Control.c **** #include "Task_Control.h"
   7:Task/Task_Control.c **** #include "Srv_OsCommon.h"
   8:Task/Task_Control.c **** #include "Task_Telemetry.h"
   9:Task/Task_Control.c **** #include "Srv_DataHub.h"
  10:Task/Task_Control.c **** #include "Srv_Actuator.h"
  11:Task/Task_Control.c **** #include "shell_port.h"
  12:Task/Task_Control.c **** 
  13:Task/Task_Control.c **** #define CONTROL_STORAGE_SECTION_NAME "Control_Para"
  14:Task/Task_Control.c **** 
  15:Task/Task_Control.c **** #define DEFAULT_ATTITUDE_CONTROLLER_MODE CtlM_PID
  16:Task/Task_Control.c **** #define DEFAULT_ALTITUDE_CONTROLLER_MODE CtlM_PID
  17:Task/Task_Control.c **** 
  18:Task/Task_Control.c **** #define DEFAULT_CONTROL_RATE        1.0f
  19:Task/Task_Control.c **** 
  20:Task/Task_Control.c **** #define ATTITUDE_DISARM_RANGE_MAX   10.0f
  21:Task/Task_Control.c **** #define ATTITUDE_DISARM_RANGE_MIN   -10.0f
  22:Task/Task_Control.c **** 
  23:Task/Task_Control.c **** #define THROTTLE_CHANGE_RATE        50   /* unit value per ms */
  24:Task/Task_Control.c **** 
  25:Task/Task_Control.c **** #define DEFAULT_CONTROL_ATT_RANGE   25.0f
  26:Task/Task_Control.c **** #define DEFAULT_CONTROL_GYR_RANGE   500.0f
  27:Task/Task_Control.c **** 
  28:Task/Task_Control.c **** #define MAX_CONTROL_RATE            1.5f
  29:Task/Task_Control.c **** #define MIN_CONTROL_RATE            0.5f
  30:Task/Task_Control.c **** #define MAX_CONTROL_ATT_RANGE       45.0f
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 2


  31:Task/Task_Control.c **** #define MIN_CONTROL_ATT_RANGE       15.0f
  32:Task/Task_Control.c **** #define MAX_CONTROL_GYR_RANGE       800.0f
  33:Task/Task_Control.c **** #define MIN_CONTROL_GYR_RANGE       200.0f
  34:Task/Task_Control.c **** 
  35:Task/Task_Control.c **** #define Check_Control_Rate(x)       ((x > MAX_CONTROL_RATE) ? MAX_CONTROL_RATE : ((x < MIN_CONTROL_
  36:Task/Task_Control.c **** #define Check_AttControl_Range(x)   ((x > MAX_CONTROL_ATT_RANGE) ? MAX_CONTROL_ATT_RANGE : ((x < MI
  37:Task/Task_Control.c **** #define Check_GyrControl_Range(x)   ((x > MAX_CONTROL_GYR_RANGE) ? MAX_CONTROL_GYR_RANGE : ((x < MI
  38:Task/Task_Control.c **** 
  39:Task/Task_Control.c **** static uint32_t imu_update_time = 0;
  40:Task/Task_Control.c **** static uint32_t att_update_time = 0;
  41:Task/Task_Control.c **** static uint8_t imu_err_code;
  42:Task/Task_Control.c **** static bool failsafe = false;
  43:Task/Task_Control.c **** static bool imu_init_state = false;
  44:Task/Task_Control.c **** static bool att_update = false;
  45:Task/Task_Control.c **** 
  46:Task/Task_Control.c **** DataPipe_CreateDataObj(ExpControlData_TypeDef, ExpCtl);
  47:Task/Task_Control.c **** 
  48:Task/Task_Control.c **** TaskControl_Monitor_TypeDef TaskControl_Monitor = {
  49:Task/Task_Control.c ****     .init_state = false,
  50:Task/Task_Control.c ****     .control_abort = false,
  51:Task/Task_Control.c **** 
  52:Task/Task_Control.c ****     /* on test mode use angular_speed over rate threshold protect */
  53:Task/Task_Control.c ****     .angular_protect_enable = true,
  54:Task/Task_Control.c ****     .angular_protect = false,
  55:Task/Task_Control.c **** 
  56:Task/Task_Control.c ****     /* on test mode for throttle control value mutation protect */
  57:Task/Task_Control.c ****     .throttle_protect_enable = true,
  58:Task/Task_Control.c ****     .throttle_protect = false,
  59:Task/Task_Control.c ****     .throttle_percent = 0,
  60:Task/Task_Control.c **** 
  61:Task/Task_Control.c ****     .dynamic_disarm_enable = false,
  62:Task/Task_Control.c ****     .IMU_Rt = 0,
  63:Task/Task_Control.c **** };
  64:Task/Task_Control.c **** 
  65:Task/Task_Control.c **** /* internal function */
  66:Task/Task_Control.c **** static void TaskControl_FlightControl_Polling(ControlData_TypeDef *exp_ctl_val, uint32_t sys_ms);
  67:Task/Task_Control.c **** static void TaskControl_Actuator_ControlValue_Update(uint16_t throttle, float GX_Ctl_Out, float GY_
  68:Task/Task_Control.c **** static void TaskControl_CLI_Polling(void);
  69:Task/Task_Control.c **** static void TaskControl_Get_StoreParam(void);
  70:Task/Task_Control.c **** 
  71:Task/Task_Control.c **** /* internal var */
  72:Task/Task_Control.c **** static uint32_t TaskControl_Period = 0;
  73:Task/Task_Control.c **** 
  74:Task/Task_Control.c **** void TaskControl_Init(uint32_t period)
  75:Task/Task_Control.c **** {
  76:Task/Task_Control.c ****     /* init monitor */
  77:Task/Task_Control.c ****     memset(&TaskControl_Monitor, 0, sizeof(TaskControl_Monitor));
  78:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
  79:Task/Task_Control.c **** 
  80:Task/Task_Control.c ****     /* pipe init */
  81:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_addr = (uint32_t)DataPipe_DataObjAddr(ExpCtl);
  82:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_size = DataPipe_DataSize(ExpCtl);
  83:Task/Task_Control.c ****     DataPipe_Enable(&CtlData_smp_DataPipe);
  84:Task/Task_Control.c ****     
  85:Task/Task_Control.c ****     /* Parametet Init */
  86:Task/Task_Control.c ****     TaskControl_Get_StoreParam();
  87:Task/Task_Control.c ****     TaskControl_Monitor.init_state = SrvActuator.init(TaskControl_Monitor.actuator_param);
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 3


  88:Task/Task_Control.c **** 
  89:Task/Task_Control.c ****     osMessageQDef(MotoCLI_Data, 64, TaskControl_CLIData_TypeDef);
  90:Task/Task_Control.c ****     TaskControl_Monitor.CLIMessage_ID = osMessageCreate(osMessageQ(MotoCLI_Data), NULL);
  91:Task/Task_Control.c ****     
  92:Task/Task_Control.c ****     TaskControl_Period = period;
  93:Task/Task_Control.c **** }
  94:Task/Task_Control.c **** 
  95:Task/Task_Control.c **** /* read param from storage */
  96:Task/Task_Control.c **** static void TaskControl_Get_StoreParam(void)
  97:Task/Task_Control.c **** {
  98:Task/Task_Control.c ****     SrvActuator_Setting_TypeDef Actuator_Param;
  99:Task/Task_Control.c ****     TaskControl_CtlPara_TypeDef Ctl_Param;
 100:Task/Task_Control.c **** 
 101:Task/Task_Control.c ****     /* search storage section first */
 102:Task/Task_Control.c ****     memset(&Ctl_Param, 0, sizeof(TaskControl_CtlPara_TypeDef));
 103:Task/Task_Control.c ****     memset(&Actuator_Param, 0, sizeof(SrvActuator_Setting_TypeDef));
 104:Task/Task_Control.c ****     memset(&TaskControl_Monitor.controller_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 105:Task/Task_Control.c ****     memset(&TaskControl_Monitor.actuator_store_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 106:Task/Task_Control.c **** 
 107:Task/Task_Control.c ****     TaskControl_Monitor.controller_info = Storage.search(Para_User, CONTROL_STORAGE_SECTION_NAME);
 108:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 109:Task/Task_Control.c **** 
 110:Task/Task_Control.c ****     /* set Ctl Parameter as default */
 111:Task/Task_Control.c ****     Ctl_Param.att_mode = DEFAULT_ATTITUDE_CONTROLLER_MODE;
 112:Task/Task_Control.c ****     Ctl_Param.alt_mode = DEFAULT_ATTITUDE_CONTROLLER_MODE;
 113:Task/Task_Control.c ****     Ctl_Param.att_rate = DEFAULT_CONTROL_RATE;
 114:Task/Task_Control.c ****     Ctl_Param.gx_rate = DEFAULT_CONTROL_RATE;
 115:Task/Task_Control.c ****     Ctl_Param.gy_rate = DEFAULT_CONTROL_RATE;
 116:Task/Task_Control.c ****     Ctl_Param.gz_rate = DEFAULT_CONTROL_RATE;
 117:Task/Task_Control.c ****     Ctl_Param.pitch_range = DEFAULT_CONTROL_ATT_RANGE;
 118:Task/Task_Control.c ****     Ctl_Param.roll_range = DEFAULT_CONTROL_ATT_RANGE;
 119:Task/Task_Control.c ****     Ctl_Param.gx_range = DEFAULT_CONTROL_GYR_RANGE;
 120:Task/Task_Control.c ****     Ctl_Param.gy_range = DEFAULT_CONTROL_GYR_RANGE;
 121:Task/Task_Control.c ****     Ctl_Param.gz_range = DEFAULT_CONTROL_GYR_RANGE;
 122:Task/Task_Control.c ****     memcpy(&TaskControl_Monitor.ctl_para, &Ctl_Param, sizeof(TaskControl_CtlPara_TypeDef));
 123:Task/Task_Control.c **** 
 124:Task/Task_Control.c ****     if (TaskControl_Monitor.controller_info.item_addr == 0)
 125:Task/Task_Control.c ****     {
 126:Task/Task_Control.c ****         /* section create */
 127:Task/Task_Control.c ****         Storage.create(Para_User, CONTROL_STORAGE_SECTION_NAME, (uint8_t *)&Ctl_Param, sizeof(TaskC
 128:Task/Task_Control.c ****     }
 129:Task/Task_Control.c ****     else if (Storage.get(Para_User, TaskControl_Monitor.controller_info.item, (uint8_t *)&Ctl_Param
 130:Task/Task_Control.c ****     {
 131:Task/Task_Control.c ****         /* check rate parameter validation */
 132:Task/Task_Control.c ****         Ctl_Param.att_rate = Check_Control_Rate(Ctl_Param.att_rate);
 133:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 134:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 135:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 136:Task/Task_Control.c **** 
 137:Task/Task_Control.c ****         /* check range parameter validation */
 138:Task/Task_Control.c ****         Ctl_Param.pitch_range = Check_AttControl_Range(Ctl_Param.pitch_range);
 139:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 140:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 141:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 142:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 143:Task/Task_Control.c **** 
 144:Task/Task_Control.c ****         memcpy(&TaskControl_Monitor.ctl_para, &Ctl_Param, sizeof(TaskControl_CtlPara_TypeDef));
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 4


 145:Task/Task_Control.c ****     }
 146:Task/Task_Control.c ****     
 147:Task/Task_Control.c ****     /* controller load parameter from storage */
 148:Task/Task_Control.c ****     Controller.att_ctl_init(TaskControl_Monitor.ctl_para.att_mode);
 149:Task/Task_Control.c ****     Controller.alt_ctl_init(TaskControl_Monitor.ctl_para.alt_mode);
 150:Task/Task_Control.c **** 
 151:Task/Task_Control.c ****     /* get actuator parameter */
 152:Task/Task_Control.c ****     /* set as default */
 153:Task/Task_Control.c ****     TaskControl_Monitor.actuator_param = SrvActuator.default_param();
 154:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr == 0)
 155:Task/Task_Control.c ****     {
 156:Task/Task_Control.c ****         Storage.create(Para_User, ACTUATOR_STORAGE_SECTION_NAME, (uint8_t *)&TaskControl_Monitor.ac
 157:Task/Task_Control.c ****     }
 158:Task/Task_Control.c ****     else if (TaskControl_Monitor.actuator_store_info.item_addr && \
 159:Task/Task_Control.c ****              (Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actu
 160:Task/Task_Control.c ****         TaskControl_Monitor.actuator_param = Actuator_Param;
 161:Task/Task_Control.c **** }
 162:Task/Task_Control.c **** 
 163:Task/Task_Control.c **** static bool TaskControl_disarm_check(bool telemetry_arm, float pitch, float roll)
 164:Task/Task_Control.c **** {
  29              		.loc 1 164 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 165:Task/Task_Control.c ****     if (telemetry_arm == DRONE_ARM)
  34              		.loc 1 165 5 view .LVU1
  35              		.loc 1 165 8 is_stmt 0 view .LVU2
  36 0000 58BB     		cbnz	r0, .L10
 166:Task/Task_Control.c ****     {
 167:Task/Task_Control.c ****         TaskControl_Monitor.moto_unlock = Moto_Lock;
 168:Task/Task_Control.c ****         return false;
 169:Task/Task_Control.c ****     }
 170:Task/Task_Control.c **** 
 171:Task/Task_Control.c ****     if (TaskControl_Monitor.dynamic_disarm_enable)
  37              		.loc 1 171 5 is_stmt 1 view .LVU3
  38              		.loc 1 171 28 is_stmt 0 view .LVU4
  39 0002 1E4B     		ldr	r3, .L12
  40 0004 93F81101 		ldrb	r0, [r3, #273]	@ zero_extendqisi2
  41              	.LVL1:
  42              		.loc 1 171 8 view .LVU5
  43 0008 60BB     		cbnz	r0, .L11
 172:Task/Task_Control.c ****     {
 173:Task/Task_Control.c ****         TaskControl_Monitor.moto_unlock = Moto_Unlock;
 174:Task/Task_Control.c ****         return true;
 175:Task/Task_Control.c ****     }
 176:Task/Task_Control.c **** 
 177:Task/Task_Control.c ****     if (TaskControl_Monitor.moto_unlock != Moto_Unlock)
  44              		.loc 1 177 5 is_stmt 1 view .LVU6
  45              		.loc 1 177 28 is_stmt 0 view .LVU7
  46 000a 1C4B     		ldr	r3, .L12
  47 000c 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
  48              		.loc 1 177 8 view .LVU8
  49 0010 012B     		cmp	r3, #1
  50 0012 30D0     		beq	.L8
 178:Task/Task_Control.c ****     {
 179:Task/Task_Control.c ****         if (TaskControl_Monitor.moto_unlock == Moto_Unlock_Err)
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 5


  51              		.loc 1 179 9 is_stmt 1 view .LVU9
  52              		.loc 1 179 12 is_stmt 0 view .LVU10
  53 0014 022B     		cmp	r3, #2
  54 0016 2FD0     		beq	.L3
 180:Task/Task_Control.c ****             return false;
 181:Task/Task_Control.c **** 
 182:Task/Task_Control.c ****         /* attitude pitch check */
 183:Task/Task_Control.c ****         if ((pitch > ATTITUDE_DISARM_RANGE_MAX) || \
  55              		.loc 1 183 9 is_stmt 1 view .LVU11
  56              		.loc 1 183 12 is_stmt 0 view .LVU12
  57 0018 F2EE047A 		vmov.f32	s15, #1.0e+1
  58 001c B4EEE70A 		vcmpe.f32	s0, s15
  59 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  60 0024 14DC     		bgt	.L5
  61              		.loc 1 183 49 discriminator 1 view .LVU13
  62 0026 FAEE047A 		vmov.f32	s15, #-1.0e+1
  63 002a B4EEE70A 		vcmpe.f32	s0, s15
  64 002e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  65 0032 0DD4     		bmi	.L5
 184:Task/Task_Control.c ****             (pitch < ATTITUDE_DISARM_RANGE_MIN) || \
  66              		.loc 1 184 49 view .LVU14
  67 0034 F2EE047A 		vmov.f32	s15, #1.0e+1
  68 0038 F4EEE70A 		vcmpe.f32	s1, s15
  69 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  70 0040 06DC     		bgt	.L5
 185:Task/Task_Control.c ****             (roll > ATTITUDE_DISARM_RANGE_MAX) || \
  71              		.loc 1 185 48 view .LVU15
  72 0042 FAEE047A 		vmov.f32	s15, #-1.0e+1
  73 0046 F4EEE70A 		vcmpe.f32	s1, s15
  74 004a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  75 004e 0DD5     		bpl	.L9
  76              	.L5:
 186:Task/Task_Control.c ****             (roll < ATTITUDE_DISARM_RANGE_MIN))
 187:Task/Task_Control.c ****         {
 188:Task/Task_Control.c ****             TaskControl_Monitor.moto_unlock = Moto_Unlock_Err;
  77              		.loc 1 188 13 is_stmt 1 view .LVU16
  78              		.loc 1 188 45 is_stmt 0 view .LVU17
  79 0050 0A4B     		ldr	r3, .L12
  80 0052 0222     		movs	r2, #2
  81 0054 83F81221 		strb	r2, [r3, #274]
 189:Task/Task_Control.c ****             return false;
  82              		.loc 1 189 13 is_stmt 1 view .LVU18
  83              		.loc 1 189 20 is_stmt 0 view .LVU19
  84 0058 7047     		bx	lr
  85              	.LVL2:
  86              	.L10:
 167:Task/Task_Control.c ****         return false;
  87              		.loc 1 167 9 is_stmt 1 view .LVU20
 167:Task/Task_Control.c ****         return false;
  88              		.loc 1 167 41 is_stmt 0 view .LVU21
  89 005a 0020     		movs	r0, #0
  90              	.LVL3:
 167:Task/Task_Control.c ****         return false;
  91              		.loc 1 167 41 view .LVU22
  92 005c 074B     		ldr	r3, .L12
  93 005e 83F81201 		strb	r0, [r3, #274]
 168:Task/Task_Control.c ****     }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 6


  94              		.loc 1 168 9 is_stmt 1 view .LVU23
 168:Task/Task_Control.c ****     }
  95              		.loc 1 168 16 is_stmt 0 view .LVU24
  96 0062 7047     		bx	lr
  97              	.L11:
 173:Task/Task_Control.c ****         return true;
  98              		.loc 1 173 9 is_stmt 1 view .LVU25
 173:Task/Task_Control.c ****         return true;
  99              		.loc 1 173 41 is_stmt 0 view .LVU26
 100 0064 0122     		movs	r2, #1
 101 0066 83F81221 		strb	r2, [r3, #274]
 174:Task/Task_Control.c ****     }
 102              		.loc 1 174 9 is_stmt 1 view .LVU27
 174:Task/Task_Control.c ****     }
 103              		.loc 1 174 16 is_stmt 0 view .LVU28
 104 006a 7047     		bx	lr
 105              	.L9:
 190:Task/Task_Control.c ****         }
 191:Task/Task_Control.c **** 
 192:Task/Task_Control.c ****         TaskControl_Monitor.moto_unlock = Moto_Unlock;
 106              		.loc 1 192 9 is_stmt 1 view .LVU29
 107              		.loc 1 192 41 is_stmt 0 view .LVU30
 108 006c 0120     		movs	r0, #1
 109 006e 034B     		ldr	r3, .L12
 110 0070 83F81201 		strb	r0, [r3, #274]
 193:Task/Task_Control.c ****         return true;
 111              		.loc 1 193 9 is_stmt 1 view .LVU31
 112              		.loc 1 193 16 is_stmt 0 view .LVU32
 113 0074 7047     		bx	lr
 114              	.L8:
 194:Task/Task_Control.c ****     }
 195:Task/Task_Control.c **** 
 196:Task/Task_Control.c ****     return true;
 115              		.loc 1 196 12 view .LVU33
 116 0076 0120     		movs	r0, #1
 117              	.L3:
 197:Task/Task_Control.c **** }
 118              		.loc 1 197 1 view .LVU34
 119 0078 7047     		bx	lr
 120              	.L13:
 121 007a 00BF     		.align	2
 122              	.L12:
 123 007c 00000000 		.word	.LANCHOR0
 124              		.cfi_endproc
 125              	.LFE2076:
 127              		.section	.text.TaskControl_Actuator_ControlValue_Update,"ax",%progbits
 128              		.align	1
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 133              	TaskControl_Actuator_ControlValue_Update:
 134              	.LVL4:
 135              	.LFB2078:
 198:Task/Task_Control.c **** 
 199:Task/Task_Control.c **** void TaskControl_Core(void const *arg)
 200:Task/Task_Control.c **** {
 201:Task/Task_Control.c ****     uint32_t sys_time = SrvOsCommon.get_os_ms();
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 7


 202:Task/Task_Control.c ****     uint32_t task_tick = 0;
 203:Task/Task_Control.c ****     bool upgrade_state = false;
 204:Task/Task_Control.c ****     ControlData_TypeDef CtlData;
 205:Task/Task_Control.c ****     memset(&CtlData, 0, sizeof(ControlData_TypeDef));
 206:Task/Task_Control.c **** 
 207:Task/Task_Control.c ****     while(1)
 208:Task/Task_Control.c ****     {
 209:Task/Task_Control.c ****         task_tick = SrvOsCommon.get_os_ms();
 210:Task/Task_Control.c **** 
 211:Task/Task_Control.c ****         /* get control data from data hub */
 212:Task/Task_Control.c ****         SrvDataHub.get_rc_control_data(&CtlData);
 213:Task/Task_Control.c **** 
 214:Task/Task_Control.c ****         if (SrvDataHub.get_upgrade_state(&upgrade_state) && upgrade_state)
 215:Task/Task_Control.c ****         {
 216:Task/Task_Control.c ****             /* lock all actuator when upgrading */
 217:Task/Task_Control.c ****             SrvActuator.lock();
 218:Task/Task_Control.c ****         }
 219:Task/Task_Control.c ****         else
 220:Task/Task_Control.c ****         {
 221:Task/Task_Control.c ****             if (!TaskControl_Monitor.CLI_enable)
 222:Task/Task_Control.c ****             {
 223:Task/Task_Control.c ****                 /* debug set control to angular speed control */
 224:Task/Task_Control.c ****                 TaskControl_FlightControl_Polling(&CtlData, task_tick);
 225:Task/Task_Control.c ****             }
 226:Task/Task_Control.c ****             else
 227:Task/Task_Control.c ****             {
 228:Task/Task_Control.c ****                 if(TaskControl_Monitor.CLI_enable)
 229:Task/Task_Control.c ****                 {
 230:Task/Task_Control.c ****                     TaskControl_CLI_Polling();
 231:Task/Task_Control.c ****                 }
 232:Task/Task_Control.c ****                 else
 233:Task/Task_Control.c ****                     /* lock all moto */
 234:Task/Task_Control.c ****                     SrvActuator.lock();
 235:Task/Task_Control.c ****             }
 236:Task/Task_Control.c ****         }
 237:Task/Task_Control.c **** 
 238:Task/Task_Control.c ****         SrvOsCommon.precise_delay(&sys_time, TaskControl_Period);
 239:Task/Task_Control.c ****     }
 240:Task/Task_Control.c **** }
 241:Task/Task_Control.c **** 
 242:Task/Task_Control.c **** static void TaskControl_Actuator_ControlValue_Update(uint16_t throttle, float GX_Ctl_Out, float GY_
 243:Task/Task_Control.c **** {
 136              		.loc 1 243 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 243 1 is_stmt 0 view .LVU36
 141 0000 00B5     		push	{lr}
 142              	.LCFI0:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 14, -4
 145 0002 83B0     		sub	sp, sp, #12
 146              	.LCFI1:
 147              		.cfi_def_cfa_offset 16
 244:Task/Task_Control.c ****     int16_t ctl_buf[Actuator_Ctl_Sum] = {0};
 148              		.loc 1 244 5 is_stmt 1 view .LVU37
 149              		.loc 1 244 13 is_stmt 0 view .LVU38
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 8


 150 0004 0023     		movs	r3, #0
 151 0006 0093     		str	r3, [sp]
 152 0008 0193     		str	r3, [sp, #4]
 245:Task/Task_Control.c **** 
 246:Task/Task_Control.c ****     /* idle spin when disarm */
 247:Task/Task_Control.c ****     ctl_buf[Actuator_Ctl_Throttle] = throttle;
 153              		.loc 1 247 5 is_stmt 1 view .LVU39
 154              		.loc 1 247 36 is_stmt 0 view .LVU40
 155 000a ADF80000 		strh	r0, [sp]	@ movhi
 248:Task/Task_Control.c **** 
 249:Task/Task_Control.c ****     ctl_buf[Actuator_Ctl_GyrX] = (int16_t)GX_Ctl_Out;
 156              		.loc 1 249 5 is_stmt 1 view .LVU41
 157              		.loc 1 249 34 is_stmt 0 view .LVU42
 158 000e BDEEC00A 		vcvt.s32.f32	s0, s0
 159              	.LVL5:
 160              		.loc 1 249 32 view .LVU43
 161 0012 10EE103A 		vmov	r3, s0	@ int
 162 0016 ADF80230 		strh	r3, [sp, #2]	@ movhi
 250:Task/Task_Control.c ****     ctl_buf[Actuator_Ctl_GyrY] = (int16_t)GY_Ctl_Out;
 163              		.loc 1 250 5 is_stmt 1 view .LVU44
 164              		.loc 1 250 34 is_stmt 0 view .LVU45
 165 001a FDEEE00A 		vcvt.s32.f32	s1, s1
 166              	.LVL6:
 167              		.loc 1 250 32 view .LVU46
 168 001e 10EE903A 		vmov	r3, s1	@ int
 169 0022 ADF80430 		strh	r3, [sp, #4]	@ movhi
 251:Task/Task_Control.c ****     ctl_buf[Actuator_Ctl_GyrZ] = (int16_t)GZ_Ctl_Out;
 170              		.loc 1 251 5 is_stmt 1 view .LVU47
 171              		.loc 1 251 34 is_stmt 0 view .LVU48
 172 0026 BDEEC11A 		vcvt.s32.f32	s2, s2
 173              	.LVL7:
 174              		.loc 1 251 32 view .LVU49
 175 002a 11EE103A 		vmov	r3, s2	@ int
 176 002e ADF80630 		strh	r3, [sp, #6]	@ movhi
 252:Task/Task_Control.c **** 
 253:Task/Task_Control.c ****     SrvActuator.moto_control(ctl_buf);
 177              		.loc 1 253 5 is_stmt 1 view .LVU50
 178              		.loc 1 253 16 is_stmt 0 view .LVU51
 179 0032 034B     		ldr	r3, .L16
 180 0034 1B69     		ldr	r3, [r3, #16]
 181              		.loc 1 253 5 view .LVU52
 182 0036 6846     		mov	r0, sp
 183              	.LVL8:
 184              		.loc 1 253 5 view .LVU53
 185 0038 9847     		blx	r3
 186              	.LVL9:
 254:Task/Task_Control.c **** }
 187              		.loc 1 254 1 view .LVU54
 188 003a 03B0     		add	sp, sp, #12
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 4
 191              		@ sp needed
 192 003c 5DF804FB 		ldr	pc, [sp], #4
 193              	.L17:
 194              		.align	2
 195              	.L16:
 196 0040 00000000 		.word	SrvActuator
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 9


 197              		.cfi_endproc
 198              	.LFE2078:
 200              		.section	.text.TaskControl_Convert_CtlData,"ax",%progbits
 201              		.align	1
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	TaskControl_Convert_CtlData:
 207              	.LVL10:
 208              	.LFB2079:
 255:Task/Task_Control.c **** 
 256:Task/Task_Control.c **** /****************************************************** Flight Control Section ********************
 257:Task/Task_Control.c **** static float TaskControl_Convert_CtlData(uint8_t gimbal_percent, float range, float rate)
 258:Task/Task_Control.c **** {
 209              		.loc 1 258 1 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              		.loc 1 258 1 is_stmt 0 view .LVU56
 215 0000 07EE900A 		vmov	s15, r0	@ int
 259:Task/Task_Control.c ****     float exp = 0.0f;
 216              		.loc 1 259 5 is_stmt 1 view .LVU57
 217              	.LVL11:
 260:Task/Task_Control.c **** 
 261:Task/Task_Control.c ****     exp = (gimbal_percent - 50.0f) / 50.0f;
 218              		.loc 1 261 5 view .LVU58
 219              		.loc 1 261 27 is_stmt 0 view .LVU59
 220 0004 F8EEE77A 		vcvt.f32.s32	s15, s15
 221 0008 DFED096A 		vldr.32	s13, .L24
 222 000c 77EEE67A 		vsub.f32	s15, s15, s13
 223              		.loc 1 261 9 view .LVU60
 224 0010 87EEA67A 		vdiv.f32	s14, s15, s13
 225              	.LVL12:
 262:Task/Task_Control.c ****     if (exp >= 0)
 226              		.loc 1 262 5 is_stmt 1 view .LVU61
 227              		.loc 1 262 8 is_stmt 0 view .LVU62
 228 0014 B5EEC07A 		vcmpe.f32	s14, #0
 229 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 230 001c 04DB     		blt	.L23
 263:Task/Task_Control.c ****     {
 264:Task/Task_Control.c ****         exp *= range;
 231              		.loc 1 264 9 is_stmt 1 view .LVU63
 232              		.loc 1 264 13 is_stmt 0 view .LVU64
 233 001e 27EE000A 		vmul.f32	s0, s14, s0
 234              	.LVL13:
 235              	.L21:
 265:Task/Task_Control.c ****     }
 266:Task/Task_Control.c ****     else
 267:Task/Task_Control.c ****         exp *= -range;
 268:Task/Task_Control.c ****     
 269:Task/Task_Control.c ****     return exp *= rate;
 236              		.loc 1 269 5 is_stmt 1 view .LVU65
 270:Task/Task_Control.c **** }
 237              		.loc 1 270 1 is_stmt 0 view .LVU66
 238 0022 20EE200A 		vmul.f32	s0, s0, s1
 239              	.LVL14:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 10


 240              		.loc 1 270 1 view .LVU67
 241 0026 7047     		bx	lr
 242              	.LVL15:
 243              	.L23:
 267:Task/Task_Control.c ****     
 244              		.loc 1 267 9 is_stmt 1 view .LVU68
 267:Task/Task_Control.c ****     
 245              		.loc 1 267 13 is_stmt 0 view .LVU69
 246 0028 20EE470A 		vnmul.f32	s0, s0, s14
 247              	.LVL16:
 267:Task/Task_Control.c ****     
 248              		.loc 1 267 13 view .LVU70
 249 002c F9E7     		b	.L21
 250              	.L25:
 251 002e 00BF     		.align	2
 252              	.L24:
 253 0030 00004842 		.word	1112014848
 254              		.cfi_endproc
 255              	.LFE2079:
 257              		.section	.rodata.TaskControl_Get_StoreParam.str1.4,"aMS",%progbits,1
 258              		.align	2
 259              	.LC1:
 260 0000 436F6E74 		.ascii	"Control_Para\000"
 260      726F6C5F 
 260      50617261 
 260      00
 261 000d 000000   		.align	2
 262              	.LC2:
 263 0010 41637475 		.ascii	"Actuator_Para\000"
 263      61746F72 
 263      5F506172 
 263      6100
 264              		.section	.text.TaskControl_Get_StoreParam,"ax",%progbits
 265              		.align	1
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 270              	TaskControl_Get_StoreParam:
 271              	.LFB2075:
  97:Task/Task_Control.c ****     SrvActuator_Setting_TypeDef Actuator_Param;
 272              		.loc 1 97 1 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 128
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 277              	.LCFI3:
 278              		.cfi_def_cfa_offset 28
 279              		.cfi_offset 4, -28
 280              		.cfi_offset 5, -24
 281              		.cfi_offset 6, -20
 282              		.cfi_offset 7, -16
 283              		.cfi_offset 8, -12
 284              		.cfi_offset 9, -8
 285              		.cfi_offset 14, -4
 286 0004 B1B0     		sub	sp, sp, #196
 287              	.LCFI4:
 288              		.cfi_def_cfa_offset 224
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 11


  98:Task/Task_Control.c ****     TaskControl_CtlPara_TypeDef Ctl_Param;
 289              		.loc 1 98 5 view .LVU72
  99:Task/Task_Control.c **** 
 290              		.loc 1 99 5 view .LVU73
 102:Task/Task_Control.c ****     memset(&Actuator_Param, 0, sizeof(SrvActuator_Setting_TypeDef));
 291              		.loc 1 102 5 view .LVU74
 292 0006 2622     		movs	r2, #38
 293 0008 0021     		movs	r1, #0
 294 000a 23A8     		add	r0, sp, #140
 295 000c FFF7FEFF 		bl	memset
 296              	.LVL17:
 103:Task/Task_Control.c ****     memset(&TaskControl_Monitor.controller_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 297              		.loc 1 103 5 view .LVU75
 298 0010 0024     		movs	r4, #0
 299 0012 2D94     		str	r4, [sp, #180]
 300 0014 2E94     		str	r4, [sp, #184]
 301 0016 2F94     		str	r4, [sp, #188]
 104:Task/Task_Control.c ****     memset(&TaskControl_Monitor.actuator_store_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 302              		.loc 1 104 5 view .LVU76
 303 0018 C94D     		ldr	r5, .L69
 304 001a 05F10709 		add	r9, r5, #7
 305 001e 4526     		movs	r6, #69
 306 0020 3246     		mov	r2, r6
 307 0022 2146     		mov	r1, r4
 308 0024 4846     		mov	r0, r9
 309 0026 FFF7FEFF 		bl	memset
 310              	.LVL18:
 105:Task/Task_Control.c **** 
 311              		.loc 1 105 5 view .LVU77
 312 002a 05F17207 		add	r7, r5, #114
 313 002e 3246     		mov	r2, r6
 314 0030 2146     		mov	r1, r4
 315 0032 3846     		mov	r0, r7
 316 0034 FFF7FEFF 		bl	memset
 317              	.LVL19:
 107:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 318              		.loc 1 107 5 view .LVU78
 107:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 319              		.loc 1 107 50 is_stmt 0 view .LVU79
 320 0038 DFF82083 		ldr	r8, .L69+28
 321 003c D8F80430 		ldr	r3, [r8, #4]
 107:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 322              		.loc 1 107 43 view .LVU80
 323 0040 C04A     		ldr	r2, .L69+4
 324 0042 0221     		movs	r1, #2
 325 0044 10A8     		add	r0, sp, #64
 326 0046 9847     		blx	r3
 327              	.LVL20:
 328 0048 3246     		mov	r2, r6
 329 004a 10A9     		add	r1, sp, #64
 330 004c 4846     		mov	r0, r9
 331 004e FFF7FEFF 		bl	memcpy
 332              	.LVL21:
 108:Task/Task_Control.c **** 
 333              		.loc 1 108 5 is_stmt 1 view .LVU81
 108:Task/Task_Control.c **** 
 334              		.loc 1 108 54 is_stmt 0 view .LVU82
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 12


 335 0052 D8F80430 		ldr	r3, [r8, #4]
 108:Task/Task_Control.c **** 
 336              		.loc 1 108 47 view .LVU83
 337 0056 BC4A     		ldr	r2, .L69+8
 338 0058 0221     		movs	r1, #2
 339 005a 10A8     		add	r0, sp, #64
 340 005c 9847     		blx	r3
 341              	.LVL22:
 342 005e 3246     		mov	r2, r6
 343 0060 10A9     		add	r1, sp, #64
 344 0062 3846     		mov	r0, r7
 345 0064 FFF7FEFF 		bl	memcpy
 346              	.LVL23:
 111:Task/Task_Control.c ****     Ctl_Param.alt_mode = DEFAULT_ATTITUDE_CONTROLLER_MODE;
 347              		.loc 1 111 5 is_stmt 1 view .LVU84
 111:Task/Task_Control.c ****     Ctl_Param.alt_mode = DEFAULT_ATTITUDE_CONTROLLER_MODE;
 348              		.loc 1 111 24 is_stmt 0 view .LVU85
 349 0068 8DF88C40 		strb	r4, [sp, #140]
 112:Task/Task_Control.c ****     Ctl_Param.att_rate = DEFAULT_CONTROL_RATE;
 350              		.loc 1 112 5 is_stmt 1 view .LVU86
 112:Task/Task_Control.c ****     Ctl_Param.att_rate = DEFAULT_CONTROL_RATE;
 351              		.loc 1 112 24 is_stmt 0 view .LVU87
 352 006c 8DF88D40 		strb	r4, [sp, #141]
 113:Task/Task_Control.c ****     Ctl_Param.gx_rate = DEFAULT_CONTROL_RATE;
 353              		.loc 1 113 5 is_stmt 1 view .LVU88
 113:Task/Task_Control.c ****     Ctl_Param.gx_rate = DEFAULT_CONTROL_RATE;
 354              		.loc 1 113 24 is_stmt 0 view .LVU89
 355 0070 4FF07E53 		mov	r3, #1065353216
 356 0074 CDF88E30 		str	r3, [sp, #142]	@ unaligned
 114:Task/Task_Control.c ****     Ctl_Param.gy_rate = DEFAULT_CONTROL_RATE;
 357              		.loc 1 114 5 is_stmt 1 view .LVU90
 114:Task/Task_Control.c ****     Ctl_Param.gy_rate = DEFAULT_CONTROL_RATE;
 358              		.loc 1 114 23 is_stmt 0 view .LVU91
 359 0078 CDF89A30 		str	r3, [sp, #154]	@ unaligned
 115:Task/Task_Control.c ****     Ctl_Param.gz_rate = DEFAULT_CONTROL_RATE;
 360              		.loc 1 115 5 is_stmt 1 view .LVU92
 115:Task/Task_Control.c ****     Ctl_Param.gz_rate = DEFAULT_CONTROL_RATE;
 361              		.loc 1 115 23 is_stmt 0 view .LVU93
 362 007c CDF8A230 		str	r3, [sp, #162]	@ unaligned
 116:Task/Task_Control.c ****     Ctl_Param.pitch_range = DEFAULT_CONTROL_ATT_RANGE;
 363              		.loc 1 116 5 is_stmt 1 view .LVU94
 116:Task/Task_Control.c ****     Ctl_Param.pitch_range = DEFAULT_CONTROL_ATT_RANGE;
 364              		.loc 1 116 23 is_stmt 0 view .LVU95
 365 0080 CDF8AA30 		str	r3, [sp, #170]	@ unaligned
 117:Task/Task_Control.c ****     Ctl_Param.roll_range = DEFAULT_CONTROL_ATT_RANGE;
 366              		.loc 1 117 5 is_stmt 1 view .LVU96
 117:Task/Task_Control.c ****     Ctl_Param.roll_range = DEFAULT_CONTROL_ATT_RANGE;
 367              		.loc 1 117 27 is_stmt 0 view .LVU97
 368 0084 B14B     		ldr	r3, .L69+12
 369 0086 CDF89230 		str	r3, [sp, #146]	@ unaligned
 118:Task/Task_Control.c ****     Ctl_Param.gx_range = DEFAULT_CONTROL_GYR_RANGE;
 370              		.loc 1 118 5 is_stmt 1 view .LVU98
 118:Task/Task_Control.c ****     Ctl_Param.gx_range = DEFAULT_CONTROL_GYR_RANGE;
 371              		.loc 1 118 26 is_stmt 0 view .LVU99
 372 008a CDF89630 		str	r3, [sp, #150]	@ unaligned
 119:Task/Task_Control.c ****     Ctl_Param.gy_range = DEFAULT_CONTROL_GYR_RANGE;
 373              		.loc 1 119 5 is_stmt 1 view .LVU100
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 13


 119:Task/Task_Control.c ****     Ctl_Param.gy_range = DEFAULT_CONTROL_GYR_RANGE;
 374              		.loc 1 119 24 is_stmt 0 view .LVU101
 375 008e B04B     		ldr	r3, .L69+16
 376 0090 CDF89E30 		str	r3, [sp, #158]	@ unaligned
 120:Task/Task_Control.c ****     Ctl_Param.gz_range = DEFAULT_CONTROL_GYR_RANGE;
 377              		.loc 1 120 5 is_stmt 1 view .LVU102
 120:Task/Task_Control.c ****     Ctl_Param.gz_range = DEFAULT_CONTROL_GYR_RANGE;
 378              		.loc 1 120 24 is_stmt 0 view .LVU103
 379 0094 CDF8A630 		str	r3, [sp, #166]	@ unaligned
 121:Task/Task_Control.c ****     memcpy(&TaskControl_Monitor.ctl_para, &Ctl_Param, sizeof(TaskControl_CtlPara_TypeDef));
 380              		.loc 1 121 5 is_stmt 1 view .LVU104
 121:Task/Task_Control.c ****     memcpy(&TaskControl_Monitor.ctl_para, &Ctl_Param, sizeof(TaskControl_CtlPara_TypeDef));
 381              		.loc 1 121 24 is_stmt 0 view .LVU105
 382 0098 CDF8AE30 		str	r3, [sp, #174]	@ unaligned
 122:Task/Task_Control.c **** 
 383              		.loc 1 122 5 is_stmt 1 view .LVU106
 384 009c 05F14C0E 		add	lr, r5, #76
 385 00a0 0DF18C0C 		add	ip, sp, #140
 386 00a4 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 387 00a8 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 388 00ac BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 389 00b0 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 390 00b4 9CE80300 		ldm	ip, {r0, r1}
 391 00b8 4EF8040B 		str	r0, [lr], #4
 392 00bc AEF80010 		strh	r1, [lr]	@ movhi
 124:Task/Task_Control.c ****     {
 393              		.loc 1 124 5 view .LVU107
 124:Task/Task_Control.c ****     {
 394              		.loc 1 124 44 is_stmt 0 view .LVU108
 395 00c0 D5F80730 		ldr	r3, [r5, #7]	@ unaligned
 124:Task/Task_Control.c ****     {
 396              		.loc 1 124 8 view .LVU109
 397 00c4 002B     		cmp	r3, #0
 398 00c6 2CD1     		bne	.L27
 127:Task/Task_Control.c ****     }
 399              		.loc 1 127 9 is_stmt 1 view .LVU110
 127:Task/Task_Control.c ****     }
 400              		.loc 1 127 16 is_stmt 0 view .LVU111
 401 00c8 D8F80840 		ldr	r4, [r8, #8]
 127:Task/Task_Control.c ****     }
 402              		.loc 1 127 9 view .LVU112
 403 00cc 2623     		movs	r3, #38
 404 00ce 23AA     		add	r2, sp, #140
 405 00d0 9C49     		ldr	r1, .L69+4
 406 00d2 0220     		movs	r0, #2
 407 00d4 A047     		blx	r4
 408              	.LVL24:
 409              	.L28:
 148:Task/Task_Control.c ****     Controller.alt_ctl_init(TaskControl_Monitor.ctl_para.alt_mode);
 410              		.loc 1 148 5 is_stmt 1 view .LVU113
 148:Task/Task_Control.c ****     Controller.alt_ctl_init(TaskControl_Monitor.ctl_para.alt_mode);
 411              		.loc 1 148 15 is_stmt 0 view .LVU114
 412 00d6 9F4D     		ldr	r5, .L69+20
 413 00d8 2B68     		ldr	r3, [r5]
 148:Task/Task_Control.c ****     Controller.alt_ctl_init(TaskControl_Monitor.ctl_para.alt_mode);
 414              		.loc 1 148 5 view .LVU115
 415 00da 994C     		ldr	r4, .L69
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 14


 416 00dc 94F84C00 		ldrb	r0, [r4, #76]	@ zero_extendqisi2
 417 00e0 9847     		blx	r3
 418              	.LVL25:
 149:Task/Task_Control.c **** 
 419              		.loc 1 149 5 is_stmt 1 view .LVU116
 149:Task/Task_Control.c **** 
 420              		.loc 1 149 15 is_stmt 0 view .LVU117
 421 00e2 6B68     		ldr	r3, [r5, #4]
 149:Task/Task_Control.c **** 
 422              		.loc 1 149 5 view .LVU118
 423 00e4 94F84D00 		ldrb	r0, [r4, #77]	@ zero_extendqisi2
 424 00e8 9847     		blx	r3
 425              	.LVL26:
 153:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr == 0)
 426              		.loc 1 153 5 is_stmt 1 view .LVU119
 153:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr == 0)
 427              		.loc 1 153 53 is_stmt 0 view .LVU120
 428 00ea 9B4B     		ldr	r3, .L69+24
 429 00ec 9B68     		ldr	r3, [r3, #8]
 153:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr == 0)
 430              		.loc 1 153 42 view .LVU121
 431 00ee 10A8     		add	r0, sp, #64
 432 00f0 9847     		blx	r3
 433              	.LVL27:
 434 00f2 1099     		ldr	r1, [sp, #64]	@ unaligned
 435 00f4 119A     		ldr	r2, [sp, #68]	@ unaligned
 436 00f6 129B     		ldr	r3, [sp, #72]	@ unaligned
 437 00f8 C4F8B710 		str	r1, [r4, #183]	@ unaligned
 438 00fc C4F8BB20 		str	r2, [r4, #187]	@ unaligned
 439 0100 C4F8BF30 		str	r3, [r4, #191]	@ unaligned
 154:Task/Task_Control.c ****     {
 440              		.loc 1 154 5 is_stmt 1 view .LVU122
 154:Task/Task_Control.c ****     {
 441              		.loc 1 154 48 is_stmt 0 view .LVU123
 442 0104 D4F87230 		ldr	r3, [r4, #114]	@ unaligned
 154:Task/Task_Control.c ****     {
 443              		.loc 1 154 8 view .LVU124
 444 0108 002B     		cmp	r3, #0
 445 010a 40F04381 		bne	.L47
 156:Task/Task_Control.c ****     }
 446              		.loc 1 156 9 is_stmt 1 view .LVU125
 156:Task/Task_Control.c ****     }
 447              		.loc 1 156 16 is_stmt 0 view .LVU126
 448 010e 934B     		ldr	r3, .L69+28
 449 0110 9C68     		ldr	r4, [r3, #8]
 156:Task/Task_Control.c ****     }
 450              		.loc 1 156 9 view .LVU127
 451 0112 0C23     		movs	r3, #12
 452 0114 924A     		ldr	r2, .L69+32
 453 0116 8C49     		ldr	r1, .L69+8
 454 0118 0220     		movs	r0, #2
 455 011a A047     		blx	r4
 456              	.LVL28:
 457              	.L26:
 161:Task/Task_Control.c **** 
 458              		.loc 1 161 1 view .LVU128
 459 011c 31B0     		add	sp, sp, #196
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 15


 460              	.LCFI5:
 461              		.cfi_remember_state
 462              		.cfi_def_cfa_offset 28
 463              		@ sp needed
 464 011e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 465              	.L27:
 466              	.LCFI6:
 467              		.cfi_restore_state
 129:Task/Task_Control.c ****     {
 468              		.loc 1 129 10 is_stmt 1 view .LVU129
 129:Task/Task_Control.c ****     {
 469              		.loc 1 129 21 is_stmt 0 view .LVU130
 470 0122 8E4B     		ldr	r3, .L69+28
 471 0124 1D69     		ldr	r5, [r3, #16]
 129:Task/Task_Control.c ****     {
 472              		.loc 1 129 14 view .LVU131
 473 0126 864C     		ldr	r4, .L69
 474 0128 2623     		movs	r3, #38
 475 012a 0E93     		str	r3, [sp, #56]
 476 012c 23AB     		add	r3, sp, #140
 477 012e 0D93     		str	r3, [sp, #52]
 478 0130 EC46     		mov	ip, sp
 479 0132 04F1180E 		add	lr, r4, #24
 480 0136 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 481 013a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 482 013e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 483 0142 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 484 0146 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 485 014a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 486 014e DEF80030 		ldr	r3, [lr]
 487 0152 CCF80030 		str	r3, [ip]
 488 0156 04F10C03 		add	r3, r4, #12
 489 015a 0ECB     		ldm	r3, {r1, r2, r3}
 490 015c 0220     		movs	r0, #2
 491 015e A847     		blx	r5
 492              	.LVL29:
 129:Task/Task_Control.c ****     {
 493              		.loc 1 129 13 view .LVU132
 494 0160 0028     		cmp	r0, #0
 495 0162 B8D1     		bne	.L28
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 496              		.loc 1 132 9 is_stmt 1 view .LVU133
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 497              		.loc 1 132 30 is_stmt 0 view .LVU134
 498 0164 DDF88E30 		ldr	r3, [sp, #142]	@ unaligned
 499 0168 07EE903A 		vmov	s15, r3	@ int
 500 016c B7EE087A 		vmov.f32	s14, #1.5e+0
 501 0170 F4EEC77A 		vcmpe.f32	s15, s14
 502 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 503 0178 09DC     		bgt	.L50
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 504              		.loc 1 132 30 discriminator 2 view .LVU135
 505 017a B6EE007A 		vmov.f32	s14, #5.0e-1
 506 017e F4EEC77A 		vcmpe.f32	s15, s14
 507 0182 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 508 0186 04D5     		bpl	.L29
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 16


 509              		.loc 1 132 30 view .LVU136
 510 0188 F0EE477A 		vmov.f32	s15, s14
 511 018c 01E0     		b	.L29
 512              	.L50:
 513 018e F7EE087A 		vmov.f32	s15, #1.5e+0
 514              	.L29:
 132:Task/Task_Control.c ****         Ctl_Param.gx_rate = Check_Control_Rate(Ctl_Param.gx_rate);
 515              		.loc 1 132 28 discriminator 8 view .LVU137
 516 0192 17EE903A 		vmov	r3, s15
 517 0196 CDF88E30 		str	r3, [sp, #142]	@ unaligned
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 518              		.loc 1 133 9 is_stmt 1 discriminator 8 view .LVU138
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 519              		.loc 1 133 29 is_stmt 0 discriminator 8 view .LVU139
 520 019a DDF89A30 		ldr	r3, [sp, #154]	@ unaligned
 521 019e 07EE903A 		vmov	s15, r3	@ int
 522 01a2 B7EE087A 		vmov.f32	s14, #1.5e+0
 523 01a6 F4EEC77A 		vcmpe.f32	s15, s14
 524 01aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 525 01ae 09DC     		bgt	.L51
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 526              		.loc 1 133 29 discriminator 2 view .LVU140
 527 01b0 B6EE007A 		vmov.f32	s14, #5.0e-1
 528 01b4 F4EEC77A 		vcmpe.f32	s15, s14
 529 01b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 530 01bc 04D5     		bpl	.L31
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 531              		.loc 1 133 29 view .LVU141
 532 01be F0EE477A 		vmov.f32	s15, s14
 533 01c2 01E0     		b	.L31
 534              	.L51:
 535 01c4 F7EE087A 		vmov.f32	s15, #1.5e+0
 536              	.L31:
 133:Task/Task_Control.c ****         Ctl_Param.gy_rate = Check_Control_Rate(Ctl_Param.gy_rate);
 537              		.loc 1 133 27 discriminator 8 view .LVU142
 538 01c8 17EE903A 		vmov	r3, s15
 539 01cc CDF89A30 		str	r3, [sp, #154]	@ unaligned
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 540              		.loc 1 134 9 is_stmt 1 discriminator 8 view .LVU143
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 541              		.loc 1 134 29 is_stmt 0 discriminator 8 view .LVU144
 542 01d0 DDF8A230 		ldr	r3, [sp, #162]	@ unaligned
 543 01d4 07EE903A 		vmov	s15, r3	@ int
 544 01d8 B7EE087A 		vmov.f32	s14, #1.5e+0
 545 01dc F4EEC77A 		vcmpe.f32	s15, s14
 546 01e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 547 01e4 09DC     		bgt	.L52
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 548              		.loc 1 134 29 discriminator 2 view .LVU145
 549 01e6 B6EE007A 		vmov.f32	s14, #5.0e-1
 550 01ea F4EEC77A 		vcmpe.f32	s15, s14
 551 01ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 552 01f2 04D5     		bpl	.L33
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 553              		.loc 1 134 29 view .LVU146
 554 01f4 F0EE477A 		vmov.f32	s15, s14
 555 01f8 01E0     		b	.L33
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 17


 556              	.L52:
 557 01fa F7EE087A 		vmov.f32	s15, #1.5e+0
 558              	.L33:
 134:Task/Task_Control.c ****         Ctl_Param.gz_rate = Check_Control_Rate(Ctl_Param.gz_rate);
 559              		.loc 1 134 27 discriminator 8 view .LVU147
 560 01fe 17EE903A 		vmov	r3, s15
 561 0202 CDF8A230 		str	r3, [sp, #162]	@ unaligned
 135:Task/Task_Control.c **** 
 562              		.loc 1 135 9 is_stmt 1 discriminator 8 view .LVU148
 135:Task/Task_Control.c **** 
 563              		.loc 1 135 29 is_stmt 0 discriminator 8 view .LVU149
 564 0206 DDF8AA30 		ldr	r3, [sp, #170]	@ unaligned
 565 020a 07EE903A 		vmov	s15, r3	@ int
 566 020e B7EE087A 		vmov.f32	s14, #1.5e+0
 567 0212 F4EEC77A 		vcmpe.f32	s15, s14
 568 0216 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 569 021a 09DC     		bgt	.L53
 135:Task/Task_Control.c **** 
 570              		.loc 1 135 29 discriminator 2 view .LVU150
 571 021c B6EE007A 		vmov.f32	s14, #5.0e-1
 572 0220 F4EEC77A 		vcmpe.f32	s15, s14
 573 0224 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 574 0228 04D5     		bpl	.L35
 135:Task/Task_Control.c **** 
 575              		.loc 1 135 29 view .LVU151
 576 022a F0EE477A 		vmov.f32	s15, s14
 577 022e 01E0     		b	.L35
 578              	.L53:
 579 0230 F7EE087A 		vmov.f32	s15, #1.5e+0
 580              	.L35:
 135:Task/Task_Control.c **** 
 581              		.loc 1 135 27 discriminator 8 view .LVU152
 582 0234 17EE903A 		vmov	r3, s15
 583 0238 CDF8AA30 		str	r3, [sp, #170]	@ unaligned
 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 584              		.loc 1 138 9 is_stmt 1 discriminator 8 view .LVU153
 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 585              		.loc 1 138 33 is_stmt 0 discriminator 8 view .LVU154
 586 023c DDF89230 		ldr	r3, [sp, #146]	@ unaligned
 587 0240 07EE903A 		vmov	s15, r3	@ int
 588 0244 9FED477A 		vldr.32	s14, .L69+36
 589 0248 F4EEC77A 		vcmpe.f32	s15, s14
 590 024c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 591 0250 09DC     		bgt	.L54
 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 592              		.loc 1 138 33 discriminator 2 view .LVU155
 593 0252 B2EE0E7A 		vmov.f32	s14, #1.5e+1
 594 0256 F4EEC77A 		vcmpe.f32	s15, s14
 595 025a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 596 025e 04D5     		bpl	.L37
 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 597              		.loc 1 138 33 view .LVU156
 598 0260 F0EE477A 		vmov.f32	s15, s14
 599 0264 01E0     		b	.L37
 600              	.L54:
 601 0266 DFED3F7A 		vldr.32	s15, .L69+36
 602              	.L37:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 18


 138:Task/Task_Control.c ****         Ctl_Param.roll_range = Check_AttControl_Range(Ctl_Param.roll_range);
 603              		.loc 1 138 31 discriminator 8 view .LVU157
 604 026a 17EE903A 		vmov	r3, s15
 605 026e CDF89230 		str	r3, [sp, #146]	@ unaligned
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 606              		.loc 1 139 9 is_stmt 1 discriminator 8 view .LVU158
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 607              		.loc 1 139 32 is_stmt 0 discriminator 8 view .LVU159
 608 0272 DDF89630 		ldr	r3, [sp, #150]	@ unaligned
 609 0276 07EE903A 		vmov	s15, r3	@ int
 610 027a 9FED3A7A 		vldr.32	s14, .L69+36
 611 027e F4EEC77A 		vcmpe.f32	s15, s14
 612 0282 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 613 0286 09DC     		bgt	.L55
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 614              		.loc 1 139 32 discriminator 2 view .LVU160
 615 0288 B2EE0E7A 		vmov.f32	s14, #1.5e+1
 616 028c F4EEC77A 		vcmpe.f32	s15, s14
 617 0290 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 618 0294 04D5     		bpl	.L39
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 619              		.loc 1 139 32 view .LVU161
 620 0296 F0EE477A 		vmov.f32	s15, s14
 621 029a 01E0     		b	.L39
 622              	.L55:
 623 029c DFED317A 		vldr.32	s15, .L69+36
 624              	.L39:
 139:Task/Task_Control.c ****         Ctl_Param.gx_range = Check_GyrControl_Range(Ctl_Param.gx_range);
 625              		.loc 1 139 30 discriminator 8 view .LVU162
 626 02a0 17EE903A 		vmov	r3, s15
 627 02a4 CDF89630 		str	r3, [sp, #150]	@ unaligned
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 628              		.loc 1 140 9 is_stmt 1 discriminator 8 view .LVU163
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 629              		.loc 1 140 30 is_stmt 0 discriminator 8 view .LVU164
 630 02a8 DDF89E30 		ldr	r3, [sp, #158]	@ unaligned
 631 02ac 07EE903A 		vmov	s15, r3	@ int
 632 02b0 9FED2E7A 		vldr.32	s14, .L69+44
 633 02b4 F4EEC77A 		vcmpe.f32	s15, s14
 634 02b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 635 02bc 09DC     		bgt	.L56
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 636              		.loc 1 140 30 discriminator 2 view .LVU165
 637 02be 9FED2A7A 		vldr.32	s14, .L69+40
 638 02c2 F4EEC77A 		vcmpe.f32	s15, s14
 639 02c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 640 02ca 04D5     		bpl	.L41
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 641              		.loc 1 140 30 view .LVU166
 642 02cc F0EE477A 		vmov.f32	s15, s14
 643 02d0 01E0     		b	.L41
 644              	.L56:
 645 02d2 DFED267A 		vldr.32	s15, .L69+44
 646              	.L41:
 140:Task/Task_Control.c ****         Ctl_Param.gy_range = Check_GyrControl_Range(Ctl_Param.gy_range);
 647              		.loc 1 140 28 discriminator 8 view .LVU167
 648 02d6 17EE903A 		vmov	r3, s15
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 19


 649 02da CDF89E30 		str	r3, [sp, #158]	@ unaligned
 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 650              		.loc 1 141 9 is_stmt 1 discriminator 8 view .LVU168
 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 651              		.loc 1 141 30 is_stmt 0 discriminator 8 view .LVU169
 652 02de DDF8A630 		ldr	r3, [sp, #166]	@ unaligned
 653 02e2 07EE903A 		vmov	s15, r3	@ int
 654 02e6 9FED217A 		vldr.32	s14, .L69+44
 655 02ea F4EEC77A 		vcmpe.f32	s15, s14
 656 02ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 657 02f2 09DC     		bgt	.L57
 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 658              		.loc 1 141 30 discriminator 2 view .LVU170
 659 02f4 9FED1C7A 		vldr.32	s14, .L69+40
 660 02f8 F4EEC77A 		vcmpe.f32	s15, s14
 661 02fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 662 0300 04D5     		bpl	.L43
 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 663              		.loc 1 141 30 view .LVU171
 664 0302 F0EE477A 		vmov.f32	s15, s14
 665 0306 01E0     		b	.L43
 666              	.L57:
 667 0308 DFED187A 		vldr.32	s15, .L69+44
 668              	.L43:
 141:Task/Task_Control.c ****         Ctl_Param.gz_range = Check_GyrControl_Range(Ctl_Param.gz_range);
 669              		.loc 1 141 28 discriminator 8 view .LVU172
 670 030c 17EE903A 		vmov	r3, s15
 671 0310 CDF8A630 		str	r3, [sp, #166]	@ unaligned
 142:Task/Task_Control.c **** 
 672              		.loc 1 142 9 is_stmt 1 discriminator 8 view .LVU173
 142:Task/Task_Control.c **** 
 673              		.loc 1 142 30 is_stmt 0 discriminator 8 view .LVU174
 674 0314 DDF8AE30 		ldr	r3, [sp, #174]	@ unaligned
 675 0318 07EE903A 		vmov	s15, r3	@ int
 676 031c 9FED137A 		vldr.32	s14, .L69+44
 677 0320 F4EEC77A 		vcmpe.f32	s15, s14
 678 0324 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 679 0328 22DC     		bgt	.L58
 142:Task/Task_Control.c **** 
 680              		.loc 1 142 30 discriminator 2 view .LVU175
 681 032a 9FED0F7A 		vldr.32	s14, .L69+40
 682 032e F4EEC77A 		vcmpe.f32	s15, s14
 683 0332 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 684 0336 1DD5     		bpl	.L45
 142:Task/Task_Control.c **** 
 685              		.loc 1 142 30 view .LVU176
 686 0338 F0EE477A 		vmov.f32	s15, s14
 687 033c 1AE0     		b	.L45
 688              	.L70:
 689 033e 00BF     		.align	2
 690              	.L69:
 691 0340 00000000 		.word	.LANCHOR0
 692 0344 00000000 		.word	.LC1
 693 0348 10000000 		.word	.LC2
 694 034c 0000C841 		.word	1103626240
 695 0350 0000FA43 		.word	1140457472
 696 0354 00000000 		.word	Controller
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 20


 697 0358 00000000 		.word	SrvActuator
 698 035c 00000000 		.word	Storage
 699 0360 B7000000 		.word	.LANCHOR0+183
 700 0364 00003442 		.word	1110704128
 701 0368 00004843 		.word	1128792064
 702 036c 00004844 		.word	1145569280
 703              	.L58:
 704 0370 5FED027A 		vldr.32	s15, .L69+44
 705              	.L45:
 142:Task/Task_Control.c **** 
 706              		.loc 1 142 28 discriminator 8 view .LVU177
 707 0374 17EE903A 		vmov	r3, s15
 708 0378 CDF8AE30 		str	r3, [sp, #174]	@ unaligned
 144:Task/Task_Control.c ****     }
 709              		.loc 1 144 9 is_stmt 1 discriminator 8 view .LVU178
 710 037c 204C     		ldr	r4, .L71
 711 037e 23AD     		add	r5, sp, #140
 712 0380 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 713 0382 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 714 0384 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 715 0386 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 716 0388 95E80300 		ldm	r5, {r0, r1}
 717 038c 44F8040B 		str	r0, [r4], #4
 718 0390 2180     		strh	r1, [r4]	@ movhi
 719 0392 A0E6     		b	.L28
 720              	.L47:
 158:Task/Task_Control.c ****              (Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actu
 721              		.loc 1 158 10 discriminator 1 view .LVU179
 159:Task/Task_Control.c ****         TaskControl_Monitor.actuator_param = Actuator_Param;
 722              		.loc 1 159 22 is_stmt 0 discriminator 1 view .LVU180
 723 0394 1B4B     		ldr	r3, .L71+4
 724 0396 1F69     		ldr	r7, [r3, #16]
 159:Task/Task_Control.c ****         TaskControl_Monitor.actuator_param = Actuator_Param;
 725              		.loc 1 159 15 discriminator 1 view .LVU181
 726 0398 1B4D     		ldr	r5, .L71+8
 727 039a 0C22     		movs	r2, #12
 728 039c 0E92     		str	r2, [sp, #56]
 729 039e 2DAA     		add	r2, sp, #180
 730 03a0 0D92     		str	r2, [sp, #52]
 731 03a2 D5F87790 		ldr	r9, [r5, #119]	@ unaligned
 732 03a6 D5F87B80 		ldr	r8, [r5, #123]	@ unaligned
 733 03aa D5F87FE0 		ldr	lr, [r5, #127]	@ unaligned
 734 03ae 05F1830C 		add	ip, r5, #131
 735 03b2 6E46     		mov	r6, sp
 736 03b4 B335     		adds	r5, r5, #179
 737              	.L49:
 738 03b6 3446     		mov	r4, r6
 739 03b8 DCF80000 		ldr	r0, [ip]	@ unaligned
 740 03bc DCF80410 		ldr	r1, [ip, #4]	@ unaligned
 741 03c0 DCF80820 		ldr	r2, [ip, #8]	@ unaligned
 742 03c4 DCF80C30 		ldr	r3, [ip, #12]	@ unaligned
 743 03c8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 744 03ca 0CF1100C 		add	ip, ip, #16
 745 03ce 2646     		mov	r6, r4
 746 03d0 AC45     		cmp	ip, r5
 747 03d2 F0D1     		bne	.L49
 748 03d4 DCF80000 		ldr	r0, [ip]	@ unaligned
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 21


 749 03d8 2060     		str	r0, [r4]
 750 03da 4946     		mov	r1, r9
 751 03dc 4246     		mov	r2, r8
 752 03de 7346     		mov	r3, lr
 753 03e0 0220     		movs	r0, #2
 754 03e2 B847     		blx	r7
 755              	.LVL30:
 158:Task/Task_Control.c ****              (Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actu
 756              		.loc 1 158 64 discriminator 1 view .LVU182
 757 03e4 0028     		cmp	r0, #0
 758 03e6 7FF499AE 		bne	.L26
 160:Task/Task_Control.c **** }
 759              		.loc 1 160 9 is_stmt 1 view .LVU183
 160:Task/Task_Control.c **** }
 760              		.loc 1 160 44 is_stmt 0 view .LVU184
 761 03ea 074C     		ldr	r4, .L71+8
 762 03ec 2DAB     		add	r3, sp, #180
 763 03ee 07CB     		ldmia	r3!, {r0, r1, r2}
 764 03f0 C4F8B700 		str	r0, [r4, #183]	@ unaligned
 765 03f4 C4F8BB10 		str	r1, [r4, #187]	@ unaligned
 766 03f8 C4F8BF20 		str	r2, [r4, #191]	@ unaligned
 161:Task/Task_Control.c **** 
 767              		.loc 1 161 1 view .LVU185
 768 03fc 8EE6     		b	.L26
 769              	.L72:
 770 03fe 00BF     		.align	2
 771              	.L71:
 772 0400 4C000000 		.word	.LANCHOR0+76
 773 0404 00000000 		.word	Storage
 774 0408 00000000 		.word	.LANCHOR0
 775              		.cfi_endproc
 776              	.LFE2075:
 778              		.section	.text.TaskControl_FlightControl_Polling,"ax",%progbits
 779              		.align	1
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 784              	TaskControl_FlightControl_Polling:
 785              	.LVL31:
 786              	.LFB2080:
 271:Task/Task_Control.c **** 
 272:Task/Task_Control.c **** /* need to be optmize */
 273:Task/Task_Control.c **** static void TaskControl_FlightControl_Polling(ControlData_TypeDef *exp_ctl_val, uint32_t sys_ms)
 274:Task/Task_Control.c **** {
 787              		.loc 1 274 1 is_stmt 1 view -0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 56
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		.loc 1 274 1 is_stmt 0 view .LVU187
 792 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 793              	.LCFI7:
 794              		.cfi_def_cfa_offset 36
 795              		.cfi_offset 4, -36
 796              		.cfi_offset 5, -32
 797              		.cfi_offset 6, -28
 798              		.cfi_offset 7, -24
 799              		.cfi_offset 8, -20
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 22


 800              		.cfi_offset 9, -16
 801              		.cfi_offset 10, -12
 802              		.cfi_offset 11, -8
 803              		.cfi_offset 14, -4
 804 0004 2DED028B 		vpush.64	{d8}
 805              	.LCFI8:
 806              		.cfi_def_cfa_offset 44
 807              		.cfi_offset 80, -44
 808              		.cfi_offset 81, -40
 809 0008 99B0     		sub	sp, sp, #100
 810              	.LCFI9:
 811              		.cfi_def_cfa_offset 144
 275:Task/Task_Control.c ****     uint8_t axis = Axis_X;
 812              		.loc 1 275 5 is_stmt 1 view .LVU188
 813              	.LVL32:
 276:Task/Task_Control.c ****     bool arm_state = false;
 814              		.loc 1 276 5 view .LVU189
 277:Task/Task_Control.c ****     bool USB_Attach = false;
 815              		.loc 1 277 5 view .LVU190
 816              		.loc 1 277 10 is_stmt 0 view .LVU191
 817 000a 0023     		movs	r3, #0
 818 000c 8DF85F30 		strb	r3, [sp, #95]
 278:Task/Task_Control.c ****     AngControl_Out_TypeDef att_ctl_out;
 819              		.loc 1 278 5 is_stmt 1 view .LVU192
 279:Task/Task_Control.c ****     AttControl_In_TypeDef att_ctl_exp;
 820              		.loc 1 279 5 view .LVU193
 280:Task/Task_Control.c ****     AttControl_In_TypeDef att_ctl_mea;
 821              		.loc 1 280 5 view .LVU194
 281:Task/Task_Control.c ****     bool ang_ctl_only = false;
 822              		.loc 1 281 5 view .LVU195
 823              	.LVL33:
 282:Task/Task_Control.c **** 
 283:Task/Task_Control.c ****     memset(&att_ctl_exp, 0, sizeof(AttControl_In_TypeDef));
 824              		.loc 1 283 5 view .LVU196
 825 0010 0F93     		str	r3, [sp, #60]
 826 0012 1093     		str	r3, [sp, #64]
 827 0014 1193     		str	r3, [sp, #68]
 828 0016 1293     		str	r3, [sp, #72]
 829 0018 1393     		str	r3, [sp, #76]
 284:Task/Task_Control.c ****     memset(&att_ctl_out, 0, sizeof(AngControl_Out_TypeDef));
 830              		.loc 1 284 5 view .LVU197
 831 001a 1493     		str	r3, [sp, #80]
 832 001c 1593     		str	r3, [sp, #84]
 833 001e 1693     		str	r3, [sp, #88]
 285:Task/Task_Control.c **** 
 286:Task/Task_Control.c ****     if (TaskControl_Monitor.init_state && exp_ctl_val)
 834              		.loc 1 286 5 view .LVU198
 835              		.loc 1 286 28 is_stmt 0 view .LVU199
 836 0020 AC4B     		ldr	r3, .L102
 837 0022 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 838              		.loc 1 286 8 view .LVU200
 839 0024 002E     		cmp	r6, #0
 840 0026 00F0BC81 		beq	.L74
 841 002a 0446     		mov	r4, r0
 842 002c 8B46     		mov	fp, r1
 843              		.loc 1 286 40 discriminator 1 view .LVU201
 844 002e 0028     		cmp	r0, #0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 23


 845 0030 00F0B781 		beq	.L74
 287:Task/Task_Control.c ****     {
 288:Task/Task_Control.c ****         if (exp_ctl_val->update_time_stamp && !exp_ctl_val->fail_safe)
 846              		.loc 1 288 9 is_stmt 1 view .LVU202
 847              		.loc 1 288 24 is_stmt 0 view .LVU203
 848 0034 0368     		ldr	r3, [r0]
 849              		.loc 1 288 12 view .LVU204
 850 0036 002B     		cmp	r3, #0
 851 0038 51D0     		beq	.L97
 852              		.loc 1 288 59 discriminator 1 view .LVU205
 853 003a 90F85F70 		ldrb	r7, [r0, #95]	@ zero_extendqisi2
 854              		.loc 1 288 44 discriminator 1 view .LVU206
 855 003e 002F     		cmp	r7, #0
 856 0040 40F0E380 		bne	.L98
 289:Task/Task_Control.c ****         {
 290:Task/Task_Control.c ****             att_ctl_exp.pitch  = TaskControl_Convert_CtlData(exp_ctl_val->pitch_percent, TaskContro
 857              		.loc 1 290 13 is_stmt 1 view .LVU207
 858              		.loc 1 290 34 is_stmt 0 view .LVU208
 859 0044 90F84F90 		ldrb	r9, [r0, #79]	@ zero_extendqisi2
 860 0048 A24D     		ldr	r5, .L102
 861 004a D5F84E30 		ldr	r3, [r5, #78]	@ unaligned
 862 004e 08EE103A 		vmov	s16, r3	@ int
 863 0052 D5F85230 		ldr	r3, [r5, #82]	@ unaligned
 864 0056 00EE103A 		vmov	s0, r3	@ int
 865 005a F0EE480A 		vmov.f32	s1, s16
 866 005e 4846     		mov	r0, r9
 867              	.LVL34:
 868              		.loc 1 290 34 view .LVU209
 869 0060 FFF7FEFF 		bl	TaskControl_Convert_CtlData
 870              	.LVL35:
 871              		.loc 1 290 32 view .LVU210
 872 0064 8DED0F0A 		vstr.32	s0, [sp, #60]
 291:Task/Task_Control.c ****             att_ctl_exp.roll   = TaskControl_Convert_CtlData(exp_ctl_val->roll_percent,  TaskContro
 873              		.loc 1 291 13 is_stmt 1 view .LVU211
 874              		.loc 1 291 34 is_stmt 0 view .LVU212
 875 0068 94F850A0 		ldrb	r10, [r4, #80]	@ zero_extendqisi2
 876 006c D5F85630 		ldr	r3, [r5, #86]	@ unaligned
 877 0070 00EE103A 		vmov	s0, r3	@ int
 878 0074 F0EE480A 		vmov.f32	s1, s16
 879 0078 5046     		mov	r0, r10
 880 007a FFF7FEFF 		bl	TaskControl_Convert_CtlData
 881              	.LVL36:
 882              		.loc 1 291 32 view .LVU213
 883 007e 8DED100A 		vstr.32	s0, [sp, #64]
 292:Task/Task_Control.c ****             att_ctl_exp.gyro_x = TaskControl_Convert_CtlData(exp_ctl_val->roll_percent, TaskControl
 884              		.loc 1 292 13 is_stmt 1 view .LVU214
 885              		.loc 1 292 34 is_stmt 0 view .LVU215
 886 0082 D5F85A30 		ldr	r3, [r5, #90]	@ unaligned
 887 0086 00EE903A 		vmov	s1, r3	@ int
 888 008a D5F85E30 		ldr	r3, [r5, #94]	@ unaligned
 889 008e 00EE103A 		vmov	s0, r3	@ int
 890 0092 5046     		mov	r0, r10
 891 0094 FFF7FEFF 		bl	TaskControl_Convert_CtlData
 892              	.LVL37:
 893              		.loc 1 292 32 view .LVU216
 894 0098 8DED110A 		vstr.32	s0, [sp, #68]
 293:Task/Task_Control.c ****             att_ctl_exp.gyro_y = TaskControl_Convert_CtlData(exp_ctl_val->pitch_percent,  TaskContr
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 24


 895              		.loc 1 293 13 is_stmt 1 view .LVU217
 896              		.loc 1 293 34 is_stmt 0 view .LVU218
 897 009c D5F86230 		ldr	r3, [r5, #98]	@ unaligned
 898 00a0 00EE903A 		vmov	s1, r3	@ int
 899 00a4 D5F86630 		ldr	r3, [r5, #102]	@ unaligned
 900 00a8 00EE103A 		vmov	s0, r3	@ int
 901 00ac 4846     		mov	r0, r9
 902 00ae FFF7FEFF 		bl	TaskControl_Convert_CtlData
 903              	.LVL38:
 904              		.loc 1 293 32 view .LVU219
 905 00b2 8DED120A 		vstr.32	s0, [sp, #72]
 294:Task/Task_Control.c ****             att_ctl_exp.gyro_z = TaskControl_Convert_CtlData(exp_ctl_val->yaw_percent,   TaskContro
 906              		.loc 1 294 13 is_stmt 1 view .LVU220
 907              		.loc 1 294 34 is_stmt 0 view .LVU221
 908 00b6 D5F86A30 		ldr	r3, [r5, #106]	@ unaligned
 909 00ba 00EE903A 		vmov	s1, r3	@ int
 910 00be D5F86E30 		ldr	r3, [r5, #110]	@ unaligned
 911 00c2 00EE103A 		vmov	s0, r3	@ int
 912 00c6 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 913 00ca FFF7FEFF 		bl	TaskControl_Convert_CtlData
 914              	.LVL39:
 915              		.loc 1 294 32 view .LVU222
 916 00ce 8DED130A 		vstr.32	s0, [sp, #76]
 295:Task/Task_Control.c **** 
 296:Task/Task_Control.c ****             if (exp_ctl_val->control_mode == AngularSpeed_Control)
 917              		.loc 1 296 13 is_stmt 1 view .LVU223
 918              		.loc 1 296 28 is_stmt 0 view .LVU224
 919 00d2 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 920              		.loc 1 296 16 view .LVU225
 921 00d6 012B     		cmp	r3, #1
 922 00d8 02D0     		beq	.L75
 281:Task/Task_Control.c **** 
 923              		.loc 1 281 10 view .LVU226
 924 00da 3E46     		mov	r6, r7
 925 00dc 00E0     		b	.L75
 926              	.LVL40:
 927              	.L97:
 281:Task/Task_Control.c **** 
 928              		.loc 1 281 10 view .LVU227
 929 00de 0026     		movs	r6, #0
 930              	.LVL41:
 931              	.L75:
 297:Task/Task_Control.c ****                 ang_ctl_only = true;
 298:Task/Task_Control.c ****         }
 299:Task/Task_Control.c **** 
 300:Task/Task_Control.c ****         arm_state = exp_ctl_val->arm_state;
 932              		.loc 1 300 9 is_stmt 1 view .LVU228
 933              		.loc 1 300 19 is_stmt 0 view .LVU229
 934 00e0 94F85E90 		ldrb	r9, [r4, #94]	@ zero_extendqisi2
 935              	.LVL42:
 301:Task/Task_Control.c ****         failsafe = exp_ctl_val->fail_safe;
 936              		.loc 1 301 9 is_stmt 1 view .LVU230
 937              		.loc 1 301 31 is_stmt 0 view .LVU231
 938 00e4 94F85F20 		ldrb	r2, [r4, #95]	@ zero_extendqisi2
 939              		.loc 1 301 18 view .LVU232
 940 00e8 7B4B     		ldr	r3, .L102+4
 941 00ea 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 25


 302:Task/Task_Control.c ****         TaskControl_Monitor.control_abort = false;
 942              		.loc 1 302 9 is_stmt 1 view .LVU233
 943              		.loc 1 302 43 is_stmt 0 view .LVU234
 944 00ec 794D     		ldr	r5, .L102
 945 00ee 4FF00008 		mov	r8, #0
 946 00f2 85F80180 		strb	r8, [r5, #1]
 303:Task/Task_Control.c **** 
 304:Task/Task_Control.c ****         /* pipe converted control data to data hub */
 305:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).arm = arm_state;
 947              		.loc 1 305 9 is_stmt 1 view .LVU235
 948              		.loc 1 305 38 is_stmt 0 view .LVU236
 949 00f6 794B     		ldr	r3, .L102+8
 950 00f8 83F80490 		strb	r9, [r3, #4]
 306:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).failsafe = failsafe;
 951              		.loc 1 306 9 is_stmt 1 view .LVU237
 952              		.loc 1 306 43 is_stmt 0 view .LVU238
 953 00fc 5A71     		strb	r2, [r3, #5]
 307:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).throttle_percent = exp_ctl_val->throttle_percent;
 954              		.loc 1 307 9 is_stmt 1 view .LVU239
 955              		.loc 1 307 64 is_stmt 0 view .LVU240
 956 00fe 94F84E20 		ldrb	r2, [r4, #78]	@ zero_extendqisi2
 957              		.loc 1 307 51 view .LVU241
 958 0102 DA71     		strb	r2, [r3, #7]
 308:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).control_mode = exp_ctl_val->control_mode;
 959              		.loc 1 308 9 is_stmt 1 view .LVU242
 960              		.loc 1 308 60 is_stmt 0 view .LVU243
 961 0104 94F85820 		ldrb	r2, [r4, #88]	@ zero_extendqisi2
 962              		.loc 1 308 47 view .LVU244
 963 0108 9A71     		strb	r2, [r3, #6]
 309:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).pitch = att_ctl_exp.pitch;
 964              		.loc 1 309 9 is_stmt 1 view .LVU245
 965              		.loc 1 309 53 is_stmt 0 view .LVU246
 966 010a 0F9A     		ldr	r2, [sp, #60]	@ float
 967              		.loc 1 309 40 view .LVU247
 968 010c 9A60     		str	r2, [r3, #8]	@ float
 310:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).roll  = att_ctl_exp.roll;
 969              		.loc 1 310 9 is_stmt 1 view .LVU248
 970              		.loc 1 310 53 is_stmt 0 view .LVU249
 971 010e 109A     		ldr	r2, [sp, #64]	@ float
 972              		.loc 1 310 40 view .LVU250
 973 0110 DA60     		str	r2, [r3, #12]	@ float
 311:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_x = att_ctl_exp.gyro_x;
 974              		.loc 1 311 9 is_stmt 1 view .LVU251
 975              		.loc 1 311 53 is_stmt 0 view .LVU252
 976 0112 119A     		ldr	r2, [sp, #68]	@ float
 977              		.loc 1 311 40 view .LVU253
 978 0114 1A61     		str	r2, [r3, #16]	@ float
 312:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_y = att_ctl_exp.gyro_y;
 979              		.loc 1 312 9 is_stmt 1 view .LVU254
 980              		.loc 1 312 53 is_stmt 0 view .LVU255
 981 0116 129A     		ldr	r2, [sp, #72]	@ float
 982              		.loc 1 312 40 view .LVU256
 983 0118 5A61     		str	r2, [r3, #20]	@ float
 313:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_z = att_ctl_exp.gyro_z;
 984              		.loc 1 313 9 is_stmt 1 view .LVU257
 985              		.loc 1 313 53 is_stmt 0 view .LVU258
 986 011a 139A     		ldr	r2, [sp, #76]	@ float
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 26


 987              		.loc 1 313 40 view .LVU259
 988 011c 9A61     		str	r2, [r3, #24]	@ float
 314:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_hub_DataPipe);
 989              		.loc 1 314 9 is_stmt 1 view .LVU260
 990 011e 704F     		ldr	r7, .L102+12
 991 0120 7049     		ldr	r1, .L102+16
 992 0122 3846     		mov	r0, r7
 993 0124 FFF7FEFF 		bl	DataPipe_SendTo
 994              	.LVL43:
 315:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_Log_DataPipe);
 995              		.loc 1 315 9 view .LVU261
 996 0128 6F49     		ldr	r1, .L102+20
 997 012a 3846     		mov	r0, r7
 998 012c FFF7FEFF 		bl	DataPipe_SendTo
 999              	.LVL44:
 316:Task/Task_Control.c **** 
 317:Task/Task_Control.c ****         // check imu filter gyro data update or not
 318:Task/Task_Control.c ****         if(!SrvDataHub.get_scaled_imu(&imu_update_time,
 1000              		.loc 1 318 9 view .LVU262
 1001              		.loc 1 318 23 is_stmt 0 view .LVU263
 1002 0130 6E4B     		ldr	r3, .L102+24
 1003 0132 9F6B     		ldr	r7, [r3, #56]
 1004              		.loc 1 318 13 view .LVU264
 1005 0134 6E4B     		ldr	r3, .L102+28
 1006 0136 0693     		str	r3, [sp, #24]
 1007 0138 CDF81480 		str	r8, [sp, #20]
 1008 013c 05F1E403 		add	r3, r5, #228
 1009 0140 0493     		str	r3, [sp, #16]
 1010 0142 05F1E003 		add	r3, r5, #224
 1011 0146 0393     		str	r3, [sp, #12]
 1012 0148 05F1DC03 		add	r3, r5, #220
 1013 014c 0293     		str	r3, [sp, #8]
 1014 014e 05F1D803 		add	r3, r5, #216
 1015 0152 0193     		str	r3, [sp, #4]
 1016 0154 05F1D403 		add	r3, r5, #212
 1017 0158 0093     		str	r3, [sp]
 1018 015a 05F1D003 		add	r3, r5, #208
 1019 015e 4246     		mov	r2, r8
 1020 0160 4146     		mov	r1, r8
 1021 0162 6448     		ldr	r0, .L102+32
 1022 0164 B847     		blx	r7
 1023              	.LVL45:
 1024              		.loc 1 318 11 view .LVU265
 1025 0166 0028     		cmp	r0, #0
 1026 0168 00F01B81 		beq	.L74
 319:Task/Task_Control.c ****                                       NULL, NULL,
 320:Task/Task_Control.c ****                                       &TaskControl_Monitor.acc[Axis_X],
 321:Task/Task_Control.c ****                                       &TaskControl_Monitor.acc[Axis_Y],
 322:Task/Task_Control.c ****                                       &TaskControl_Monitor.acc[Axis_Z],
 323:Task/Task_Control.c ****                                       &TaskControl_Monitor.gyr[Axis_X],
 324:Task/Task_Control.c ****                                       &TaskControl_Monitor.gyr[Axis_Y],
 325:Task/Task_Control.c ****                                       &TaskControl_Monitor.gyr[Axis_Z],
 326:Task/Task_Control.c ****                                       NULL, &imu_err_code) || !imu_init_state)
 1027              		.loc 1 326 63 view .LVU266
 1028 016c 624B     		ldr	r3, .L102+36
 1029 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1030              		.loc 1 326 60 view .LVU267
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 27


 1031 0170 002B     		cmp	r3, #0
 1032 0172 00F01681 		beq	.L74
 327:Task/Task_Control.c ****             goto lock_moto;
 328:Task/Task_Control.c **** 
 329:Task/Task_Control.c ****         /* if angular speed over ride then lock the moto and set drone as arm */
 330:Task/Task_Control.c **** 
 331:Task/Task_Control.c ****         // get attitude
 332:Task/Task_Control.c ****         att_update = SrvDataHub.get_attitude(&att_update_time,
 1033              		.loc 1 332 9 is_stmt 1 view .LVU268
 1034              		.loc 1 332 32 is_stmt 0 view .LVU269
 1035 0176 5D4B     		ldr	r3, .L102+24
 1036 0178 D3F84480 		ldr	r8, [r3, #68]
 1037              		.loc 1 332 22 view .LVU270
 1038 017c 05F58873 		add	r3, r5, #272
 1039 0180 0493     		str	r3, [sp, #16]
 1040 0182 0023     		movs	r3, #0
 1041 0184 0393     		str	r3, [sp, #12]
 1042 0186 0293     		str	r3, [sp, #8]
 1043 0188 0193     		str	r3, [sp, #4]
 1044 018a 0093     		str	r3, [sp]
 1045 018c 05F58673 		add	r3, r5, #268
 1046 0190 05F58472 		add	r2, r5, #264
 1047 0194 05F58271 		add	r1, r5, #260
 1048 0198 5848     		ldr	r0, .L102+40
 1049 019a C047     		blx	r8
 1050              	.LVL46:
 1051              		.loc 1 332 20 view .LVU271
 1052 019c 584B     		ldr	r3, .L102+44
 1053 019e 1870     		strb	r0, [r3]
 333:Task/Task_Control.c ****                                              &TaskControl_Monitor.pitch,
 334:Task/Task_Control.c ****                                              &TaskControl_Monitor.roll,
 335:Task/Task_Control.c ****                                              &TaskControl_Monitor.yaw,
 336:Task/Task_Control.c ****                                              NULL, NULL, NULL, NULL,
 337:Task/Task_Control.c ****                                              &TaskControl_Monitor.flip_over);
 338:Task/Task_Control.c **** 
 339:Task/Task_Control.c ****         att_ctl_mea.pitch  = TaskControl_Monitor.pitch;
 1054              		.loc 1 339 9 is_stmt 1 view .LVU272
 1055              		.loc 1 339 49 is_stmt 0 view .LVU273
 1056 01a0 95ED410A 		vldr.32	s0, [r5, #260]
 1057              		.loc 1 339 28 view .LVU274
 1058 01a4 8DED0A0A 		vstr.32	s0, [sp, #40]
 340:Task/Task_Control.c ****         att_ctl_mea.roll   = TaskControl_Monitor.roll;
 1059              		.loc 1 340 9 is_stmt 1 view .LVU275
 1060              		.loc 1 340 49 is_stmt 0 view .LVU276
 1061 01a8 D5ED420A 		vldr.32	s1, [r5, #264]
 1062              		.loc 1 340 28 view .LVU277
 1063 01ac CDED0B0A 		vstr.32	s1, [sp, #44]
 341:Task/Task_Control.c ****         att_ctl_mea.gyro_x = TaskControl_Monitor.gyr[Axis_X];
 1064              		.loc 1 341 9 is_stmt 1 view .LVU278
 1065              		.loc 1 341 53 is_stmt 0 view .LVU279
 1066 01b0 D5F8DC30 		ldr	r3, [r5, #220]	@ float
 1067              		.loc 1 341 28 view .LVU280
 1068 01b4 0C93     		str	r3, [sp, #48]	@ float
 342:Task/Task_Control.c ****         att_ctl_mea.gyro_y = TaskControl_Monitor.gyr[Axis_Y];
 1069              		.loc 1 342 9 is_stmt 1 view .LVU281
 1070              		.loc 1 342 53 is_stmt 0 view .LVU282
 1071 01b6 D5F8E030 		ldr	r3, [r5, #224]	@ float
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 28


 1072              		.loc 1 342 28 view .LVU283
 1073 01ba 0D93     		str	r3, [sp, #52]	@ float
 343:Task/Task_Control.c ****         att_ctl_mea.gyro_z = TaskControl_Monitor.gyr[Axis_Z];
 1074              		.loc 1 343 9 is_stmt 1 view .LVU284
 1075              		.loc 1 343 53 is_stmt 0 view .LVU285
 1076 01bc D5F8E430 		ldr	r3, [r5, #228]	@ float
 1077              		.loc 1 343 28 view .LVU286
 1078 01c0 0E93     		str	r3, [sp, #56]	@ float
 344:Task/Task_Control.c **** 
 345:Task/Task_Control.c ****         TaskControl_disarm_check(arm_state, TaskControl_Monitor.pitch, TaskControl_Monitor.roll);
 1079              		.loc 1 345 9 is_stmt 1 view .LVU287
 1080 01c2 4846     		mov	r0, r9
 1081 01c4 FFF7FEFF 		bl	TaskControl_disarm_check
 1082              	.LVL47:
 346:Task/Task_Control.c **** 
 347:Task/Task_Control.c ****         /* if armed or usb attached then lock moto */
 348:Task/Task_Control.c ****         if (TaskControl_Monitor.moto_unlock != Moto_Unlock)
 1083              		.loc 1 348 9 view .LVU288
 1084              		.loc 1 348 32 is_stmt 0 view .LVU289
 1085 01c8 95F81231 		ldrb	r3, [r5, #274]	@ zero_extendqisi2
 1086              		.loc 1 348 12 view .LVU290
 1087 01cc 012B     		cmp	r3, #1
 1088 01ce 40F0E880 		bne	.L74
 349:Task/Task_Control.c ****             goto lock_moto;
 350:Task/Task_Control.c **** 
 351:Task/Task_Control.c ****         if (imu_update_time)
 1089              		.loc 1 351 9 is_stmt 1 view .LVU291
 1090              		.loc 1 351 13 is_stmt 0 view .LVU292
 1091 01d2 484B     		ldr	r3, .L102+32
 1092 01d4 1B68     		ldr	r3, [r3]
 1093              		.loc 1 351 12 view .LVU293
 1094 01d6 002B     		cmp	r3, #0
 1095 01d8 00F0D780 		beq	.L76
 352:Task/Task_Control.c ****         {
 353:Task/Task_Control.c ****             if (imu_update_time > TaskControl_Monitor.IMU_Rt)
 1096              		.loc 1 353 13 is_stmt 1 view .LVU294
 1097              		.loc 1 353 54 is_stmt 0 view .LVU295
 1098 01dc D5F8C820 		ldr	r2, [r5, #200]
 1099              		.loc 1 353 16 view .LVU296
 1100 01e0 9342     		cmp	r3, r2
 1101 01e2 14D9     		bls	.L77
 354:Task/Task_Control.c ****             {
 355:Task/Task_Control.c ****                 TaskControl_Monitor.imu_update_error_cnt = 0;
 1102              		.loc 1 355 17 is_stmt 1 view .LVU297
 1103              		.loc 1 355 58 is_stmt 0 view .LVU298
 1104 01e4 0021     		movs	r1, #0
 1105 01e6 85F8C410 		strb	r1, [r5, #196]
 356:Task/Task_Control.c ****                 TaskControl_Monitor.IMU_Rt = imu_update_time;
 1106              		.loc 1 356 17 is_stmt 1 view .LVU299
 1107              		.loc 1 356 44 is_stmt 0 view .LVU300
 1108 01ea C5F8C830 		str	r3, [r5, #200]
 1109              	.L78:
 357:Task/Task_Control.c ****             }
 358:Task/Task_Control.c ****             else if (imu_update_time <= TaskControl_Monitor.IMU_Rt)
 359:Task/Task_Control.c ****             {
 360:Task/Task_Control.c ****                 TaskControl_Monitor.imu_update_error_cnt++;
 361:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 29


 362:Task/Task_Control.c ****                 {
 363:Task/Task_Control.c ****                     TaskControl_Monitor.control_abort = true;
 364:Task/Task_Control.c ****                     goto lock_moto;
 365:Task/Task_Control.c ****                 }
 366:Task/Task_Control.c ****             }
 367:Task/Task_Control.c **** 
 368:Task/Task_Control.c ****             if(imu_err_code != SrvIMU_Sample_NoError)
 1110              		.loc 1 368 13 is_stmt 1 view .LVU301
 1111              		.loc 1 368 29 is_stmt 0 view .LVU302
 1112 01ee 404B     		ldr	r3, .L102+28
 1113 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1114              		.loc 1 368 15 view .LVU303
 1115 01f2 002B     		cmp	r3, #0
 1116 01f4 00F08680 		beq	.L79
 369:Task/Task_Control.c ****             {
 370:Task/Task_Control.c ****                 switch(imu_err_code)
 1117              		.loc 1 370 17 is_stmt 1 view .LVU304
 1118 01f8 013B     		subs	r3, r3, #1
 1119 01fa 052B     		cmp	r3, #5
 1120 01fc 00F28680 		bhi	.L80
 1121 0200 DFE803F0 		tbb	[pc, r3]
 1122              	.L82:
 1123 0204 16       		.byte	(.L84-.L82)/2
 1124 0205 84       		.byte	(.L80-.L82)/2
 1125 0206 12       		.byte	(.L83-.L82)/2
 1126 0207 84       		.byte	(.L80-.L82)/2
 1127 0208 12       		.byte	(.L83-.L82)/2
 1128 0209 3E       		.byte	(.L81-.L82)/2
 1129              	.LVL48:
 1130              		.p2align 1
 1131              	.L98:
 281:Task/Task_Control.c **** 
 1132              		.loc 1 281 10 is_stmt 0 view .LVU305
 1133 020a 0026     		movs	r6, #0
 1134 020c 68E7     		b	.L75
 1135              	.LVL49:
 1136              	.L77:
 358:Task/Task_Control.c ****             {
 1137              		.loc 1 358 18 is_stmt 1 view .LVU306
 360:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 1138              		.loc 1 360 17 view .LVU307
 360:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 1139              		.loc 1 360 36 is_stmt 0 view .LVU308
 1140 020e 314A     		ldr	r2, .L102
 1141 0210 92F8C430 		ldrb	r3, [r2, #196]	@ zero_extendqisi2
 360:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 1142              		.loc 1 360 57 view .LVU309
 1143 0214 0133     		adds	r3, r3, #1
 1144 0216 DBB2     		uxtb	r3, r3
 1145 0218 82F8C430 		strb	r3, [r2, #196]
 361:Task/Task_Control.c ****                 {
 1146              		.loc 1 361 17 is_stmt 1 view .LVU310
 361:Task/Task_Control.c ****                 {
 1147              		.loc 1 361 20 is_stmt 0 view .LVU311
 1148 021c 092B     		cmp	r3, #9
 1149 021e E6D9     		bls	.L78
 363:Task/Task_Control.c ****                     goto lock_moto;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 30


 1150              		.loc 1 363 21 is_stmt 1 view .LVU312
 363:Task/Task_Control.c ****                     goto lock_moto;
 1151              		.loc 1 363 55 is_stmt 0 view .LVU313
 1152 0220 1346     		mov	r3, r2
 1153 0222 0122     		movs	r2, #1
 1154 0224 5A70     		strb	r2, [r3, #1]
 364:Task/Task_Control.c ****                 }
 1155              		.loc 1 364 21 is_stmt 1 view .LVU314
 1156 0226 BCE0     		b	.L74
 1157              	.L83:
 371:Task/Task_Control.c ****                 {
 372:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Acc_Blunt:
 373:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Acc_OverRange:
 374:Task/Task_Control.c ****                         /* still can use gyro loop control quad */
 375:Task/Task_Control.c ****                         /* switch into manul control */
 376:Task/Task_Control.c ****                         break;
 377:Task/Task_Control.c ****                     
 378:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Gyr_Blunt:
 379:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Gyr_OverRange:
 380:Task/Task_Control.c ****                         /* totally waste */
 381:Task/Task_Control.c ****                         /* bye drone see u in another world */
 382:Task/Task_Control.c ****                         TaskControl_Monitor.control_abort = true;
 1158              		.loc 1 382 25 view .LVU315
 1159              		.loc 1 382 59 is_stmt 0 view .LVU316
 1160 0228 2A4B     		ldr	r3, .L102
 1161 022a 0122     		movs	r2, #1
 1162 022c 5A70     		strb	r2, [r3, #1]
 383:Task/Task_Control.c ****                         goto lock_moto;
 1163              		.loc 1 383 25 is_stmt 1 view .LVU317
 1164 022e B8E0     		b	.L74
 1165              	.L84:
 384:Task/Task_Control.c ****                         break;
 1166              		.loc 1 384 25 view .LVU318
 385:Task/Task_Control.c **** 
 386:Task/Task_Control.c ****                     case SrvIMU_Sample_Module_UnReady:
 387:Task/Task_Control.c ****                         TaskControl_Monitor.imu_none_update_cnt++;
 1167              		.loc 1 387 25 view .LVU319
 1168              		.loc 1 387 44 is_stmt 0 view .LVU320
 1169 0230 284A     		ldr	r2, .L102
 1170 0232 92F81831 		ldrb	r3, [r2, #280]	@ zero_extendqisi2
 1171              		.loc 1 387 64 view .LVU321
 1172 0236 0133     		adds	r3, r3, #1
 1173 0238 DBB2     		uxtb	r3, r3
 1174 023a 82F81831 		strb	r3, [r2, #280]
 388:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 1175              		.loc 1 388 25 is_stmt 1 view .LVU322
 1176              		.loc 1 388 27 is_stmt 0 view .LVU323
 1177 023e 092B     		cmp	r3, #9
 1178 0240 1AD8     		bhi	.L101
 389:Task/Task_Control.c ****                         {
 390:Task/Task_Control.c ****                             TaskControl_Monitor.control_abort = true;
 391:Task/Task_Control.c ****                             goto lock_moto;
 392:Task/Task_Control.c ****                         }
 393:Task/Task_Control.c ****                         else
 394:Task/Task_Control.c ****                         {
 395:Task/Task_Control.c ****                             /* use last time sample imu data for control */
 396:Task/Task_Control.c ****                             for(axis = Axis_X; axis < Axis_Sum; axis++)
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 31


 1179              		.loc 1 396 38 view .LVU324
 1180 0242 0023     		movs	r3, #0
 1181              	.LVL50:
 1182              	.L85:
 1183              		.loc 1 396 48 is_stmt 1 discriminator 1 view .LVU325
 1184              		.loc 1 396 29 is_stmt 0 discriminator 1 view .LVU326
 1185 0244 022B     		cmp	r3, #2
 1186 0246 61D8     		bhi	.L80
 397:Task/Task_Control.c ****                             {
 398:Task/Task_Control.c ****                                 TaskControl_Monitor.acc[axis] = TaskControl_Monitor.acc_lst[axis];
 1187              		.loc 1 398 33 is_stmt 1 discriminator 3 view .LVU327
 1188              		.loc 1 398 92 is_stmt 0 discriminator 3 view .LVU328
 1189 0248 224A     		ldr	r2, .L102
 1190 024a 03F13A01 		add	r1, r3, #58
 1191 024e 02EB8101 		add	r1, r2, r1, lsl #2
 1192 0252 0868     		ldr	r0, [r1]	@ float
 1193              		.loc 1 398 63 discriminator 3 view .LVU329
 1194 0254 03F13401 		add	r1, r3, #52
 1195 0258 02EB8101 		add	r1, r2, r1, lsl #2
 1196 025c 0860     		str	r0, [r1]	@ float
 399:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 1197              		.loc 1 399 33 is_stmt 1 discriminator 3 view .LVU330
 1198              		.loc 1 399 92 is_stmt 0 discriminator 3 view .LVU331
 1199 025e 03F13C01 		add	r1, r3, #60
 1200 0262 02EB8101 		add	r1, r2, r1, lsl #2
 1201 0266 4968     		ldr	r1, [r1, #4]	@ float
 1202              		.loc 1 399 63 discriminator 3 view .LVU332
 1203 0268 03F13600 		add	r0, r3, #54
 1204 026c 02EB8002 		add	r2, r2, r0, lsl #2
 1205 0270 5160     		str	r1, [r2, #4]	@ float
 396:Task/Task_Control.c ****                             {
 1206              		.loc 1 396 65 is_stmt 1 discriminator 3 view .LVU333
 396:Task/Task_Control.c ****                             {
 1207              		.loc 1 396 69 is_stmt 0 discriminator 3 view .LVU334
 1208 0272 0133     		adds	r3, r3, #1
 1209              	.LVL51:
 396:Task/Task_Control.c ****                             {
 1210              		.loc 1 396 69 discriminator 3 view .LVU335
 1211 0274 DBB2     		uxtb	r3, r3
 1212              	.LVL52:
 396:Task/Task_Control.c ****                             {
 1213              		.loc 1 396 69 discriminator 3 view .LVU336
 1214 0276 E5E7     		b	.L85
 1215              	.LVL53:
 1216              	.L101:
 390:Task/Task_Control.c ****                             goto lock_moto;
 1217              		.loc 1 390 29 is_stmt 1 view .LVU337
 390:Task/Task_Control.c ****                             goto lock_moto;
 1218              		.loc 1 390 63 is_stmt 0 view .LVU338
 1219 0278 1346     		mov	r3, r2
 1220 027a 0122     		movs	r2, #1
 1221 027c 5A70     		strb	r2, [r3, #1]
 391:Task/Task_Control.c ****                         }
 1222              		.loc 1 391 29 is_stmt 1 view .LVU339
 1223 027e 90E0     		b	.L74
 1224              	.L81:
 400:Task/Task_Control.c ****                             }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 32


 401:Task/Task_Control.c ****                         }
 402:Task/Task_Control.c ****                         break;
 403:Task/Task_Control.c **** 
 404:Task/Task_Control.c ****                     case SrvIMU_Sample_Over_Angular_Accelerate:
 405:Task/Task_Control.c ****                         if(TaskControl_Monitor.angular_warning_cnt < OVER_ANGULAR_ACCELERATE_COUNT)
 1225              		.loc 1 405 25 view .LVU340
 1226              		.loc 1 405 47 is_stmt 0 view .LVU341
 1227 0280 144B     		ldr	r3, .L102
 1228 0282 93F8C330 		ldrb	r3, [r3, #195]	@ zero_extendqisi2
 1229              		.loc 1 405 27 view .LVU342
 1230 0286 042B     		cmp	r3, #4
 1231 0288 1FD8     		bhi	.L87
 406:Task/Task_Control.c ****                         {
 407:Task/Task_Control.c ****                             TaskControl_Monitor.angular_warning_cnt++;
 1232              		.loc 1 407 29 is_stmt 1 view .LVU343
 1233              		.loc 1 407 68 is_stmt 0 view .LVU344
 1234 028a 0133     		adds	r3, r3, #1
 1235 028c 114A     		ldr	r2, .L102
 1236 028e 82F8C330 		strb	r3, [r2, #195]
 408:Task/Task_Control.c **** 
 409:Task/Task_Control.c ****                             for(axis = Axis_X; axis < Axis_Sum; axis++)
 1237              		.loc 1 409 29 is_stmt 1 view .LVU345
 1238              		.loc 1 409 38 is_stmt 0 view .LVU346
 1239 0292 0023     		movs	r3, #0
 1240              		.loc 1 409 29 view .LVU347
 1241 0294 16E0     		b	.L88
 1242              	.LVL54:
 1243              	.L89:
 410:Task/Task_Control.c ****                             {
 411:Task/Task_Control.c ****                                 TaskControl_Monitor.acc[axis] = TaskControl_Monitor.acc_lst[axis];
 1244              		.loc 1 411 33 is_stmt 1 discriminator 3 view .LVU348
 1245              		.loc 1 411 92 is_stmt 0 discriminator 3 view .LVU349
 1246 0296 0F4A     		ldr	r2, .L102
 1247 0298 03F13A01 		add	r1, r3, #58
 1248 029c 02EB8101 		add	r1, r2, r1, lsl #2
 1249 02a0 0868     		ldr	r0, [r1]	@ float
 1250              		.loc 1 411 63 discriminator 3 view .LVU350
 1251 02a2 03F13401 		add	r1, r3, #52
 1252 02a6 02EB8101 		add	r1, r2, r1, lsl #2
 1253 02aa 0860     		str	r0, [r1]	@ float
 412:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 1254              		.loc 1 412 33 is_stmt 1 discriminator 3 view .LVU351
 1255              		.loc 1 412 92 is_stmt 0 discriminator 3 view .LVU352
 1256 02ac 03F13C01 		add	r1, r3, #60
 1257 02b0 02EB8101 		add	r1, r2, r1, lsl #2
 1258 02b4 4968     		ldr	r1, [r1, #4]	@ float
 1259              		.loc 1 412 63 discriminator 3 view .LVU353
 1260 02b6 03F13600 		add	r0, r3, #54
 1261 02ba 02EB8002 		add	r2, r2, r0, lsl #2
 1262 02be 5160     		str	r1, [r2, #4]	@ float
 409:Task/Task_Control.c ****                             {
 1263              		.loc 1 409 65 is_stmt 1 discriminator 3 view .LVU354
 409:Task/Task_Control.c ****                             {
 1264              		.loc 1 409 69 is_stmt 0 discriminator 3 view .LVU355
 1265 02c0 0133     		adds	r3, r3, #1
 1266              	.LVL55:
 409:Task/Task_Control.c ****                             {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 33


 1267              		.loc 1 409 69 discriminator 3 view .LVU356
 1268 02c2 DBB2     		uxtb	r3, r3
 1269              	.LVL56:
 1270              	.L88:
 409:Task/Task_Control.c ****                             {
 1271              		.loc 1 409 48 is_stmt 1 discriminator 1 view .LVU357
 409:Task/Task_Control.c ****                             {
 1272              		.loc 1 409 29 is_stmt 0 discriminator 1 view .LVU358
 1273 02c4 022B     		cmp	r3, #2
 1274 02c6 E6D9     		bls	.L89
 1275 02c8 20E0     		b	.L80
 1276              	.LVL57:
 1277              	.L87:
 413:Task/Task_Control.c ****                             }
 414:Task/Task_Control.c ****                         }
 415:Task/Task_Control.c ****                         else
 416:Task/Task_Control.c ****                             TaskControl_Monitor.angular_protect = true;
 1278              		.loc 1 416 29 is_stmt 1 view .LVU359
 1279              		.loc 1 416 65 is_stmt 0 view .LVU360
 1280 02ca 024B     		ldr	r3, .L102
 1281 02cc 0122     		movs	r2, #1
 1282 02ce DA70     		strb	r2, [r3, #3]
 1283 02d0 1CE0     		b	.L80
 1284              	.L103:
 1285 02d2 00BF     		.align	2
 1286              	.L102:
 1287 02d4 00000000 		.word	.LANCHOR0
 1288 02d8 00000000 		.word	.LANCHOR1
 1289 02dc 00000000 		.word	.LANCHOR2
 1290 02e0 00000000 		.word	CtlData_smp_DataPipe
 1291 02e4 00000000 		.word	CtlData_hub_DataPipe
 1292 02e8 00000000 		.word	CtlData_Log_DataPipe
 1293 02ec 00000000 		.word	SrvDataHub
 1294 02f0 00000000 		.word	.LANCHOR4
 1295 02f4 00000000 		.word	.LANCHOR3
 1296 02f8 00000000 		.word	.LANCHOR5
 1297 02fc 00000000 		.word	.LANCHOR6
 1298 0300 00000000 		.word	.LANCHOR7
 1299              	.L79:
 417:Task/Task_Control.c ****                         break;
 418:Task/Task_Control.c ****                 }
 419:Task/Task_Control.c ****             }
 420:Task/Task_Control.c ****             else
 421:Task/Task_Control.c ****                 TaskControl_Monitor.imu_none_update_cnt = 0;
 1300              		.loc 1 421 17 is_stmt 1 view .LVU361
 1301              		.loc 1 421 57 is_stmt 0 view .LVU362
 1302 0304 384B     		ldr	r3, .L104
 1303 0306 0022     		movs	r2, #0
 1304 0308 83F81821 		strb	r2, [r3, #280]
 1305              	.LVL58:
 1306              	.L80:
 422:Task/Task_Control.c ****         }
 423:Task/Task_Control.c ****         else
 424:Task/Task_Control.c ****         {
 425:Task/Task_Control.c ****             /* check keep time to abort drone control */
 426:Task/Task_Control.c ****             TaskControl_Monitor.imu_none_update_cnt ++;
 427:Task/Task_Control.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 34


 428:Task/Task_Control.c ****             if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 429:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 430:Task/Task_Control.c **** 
 431:Task/Task_Control.c ****             goto lock_moto;
 432:Task/Task_Control.c ****         }
 433:Task/Task_Control.c ****         
 434:Task/Task_Control.c ****         if(TaskControl_Monitor.angular_protect_enable && TaskControl_Monitor.angular_protect)
 1307              		.loc 1 434 9 is_stmt 1 view .LVU363
 1308              		.loc 1 434 31 is_stmt 0 view .LVU364
 1309 030c 364B     		ldr	r3, .L104
 1310 030e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1311              		.loc 1 434 11 view .LVU365
 1312 0310 1BB1     		cbz	r3, .L91
 1313              		.loc 1 434 77 discriminator 1 view .LVU366
 1314 0312 354B     		ldr	r3, .L104
 1315 0314 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1316              		.loc 1 434 55 discriminator 1 view .LVU367
 1317 0316 002B     		cmp	r3, #0
 1318 0318 43D1     		bne	.L74
 1319              	.L91:
 435:Task/Task_Control.c ****             goto lock_moto;
 436:Task/Task_Control.c **** 
 437:Task/Task_Control.c ****         if(TaskControl_Monitor.flip_over)
 1320              		.loc 1 437 9 is_stmt 1 view .LVU368
 1321              		.loc 1 437 31 is_stmt 0 view .LVU369
 1322 031a 334B     		ldr	r3, .L104
 1323 031c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 1324              		.loc 1 437 11 view .LVU370
 1325 0320 002B     		cmp	r3, #0
 1326 0322 3ED1     		bne	.L74
 438:Task/Task_Control.c ****         {
 439:Task/Task_Control.c ****             if (!exp_ctl_val->aux.bit.flip_over)
 440:Task/Task_Control.c ****                 goto lock_moto;
 441:Task/Task_Control.c **** 
 442:Task/Task_Control.c ****             /* when drone is up side down and we want to flip over it by telemetry */
 443:Task/Task_Control.c ****             /* reverse propeller spin dir to reverse the drone */
 444:Task/Task_Control.c ****         }
 445:Task/Task_Control.c ****         else
 446:Task/Task_Control.c ****         {
 447:Task/Task_Control.c ****             /* do drone control algorithm down below */
 448:Task/Task_Control.c ****             TaskControl_Monitor.throttle_percent = exp_ctl_val->throttle_percent;
 1327              		.loc 1 448 13 is_stmt 1 view .LVU371
 1328              		.loc 1 448 63 is_stmt 0 view .LVU372
 1329 0324 94F84E30 		ldrb	r3, [r4, #78]	@ zero_extendqisi2
 1330              		.loc 1 448 50 view .LVU373
 1331 0328 DFF8BCC0 		ldr	ip, .L104
 1332 032c 8CF80031 		strb	r3, [ip, #256]
 449:Task/Task_Control.c **** 
 450:Task/Task_Control.c ****             /* Controller Update */
 451:Task/Task_Control.c ****             /* altitude control update */
 452:Task/Task_Control.c ****             /* attitude control update */
 453:Task/Task_Control.c ****             Controller.att_ctl(TaskControl_Monitor.ctl_para.att_mode, sys_ms, ang_ctl_only, att_ctl
 1333              		.loc 1 453 13 is_stmt 1 view .LVU374
 1334              		.loc 1 453 23 is_stmt 0 view .LVU375
 1335 0330 2E4B     		ldr	r3, .L104+4
 1336 0332 D3F80880 		ldr	r8, [r3, #8]
 1337              		.loc 1 453 13 view .LVU376
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 35


 1338 0336 14AB     		add	r3, sp, #80
 1339 0338 0993     		str	r3, [sp, #36]
 1340 033a 04AC     		add	r4, sp, #16
 1341              	.LVL59:
 1342              		.loc 1 453 13 view .LVU377
 1343 033c 0AAD     		add	r5, sp, #40
 1344 033e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1345 0340 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1346 0342 2B68     		ldr	r3, [r5]
 1347 0344 2360     		str	r3, [r4]
 1348 0346 10AB     		add	r3, sp, #64
 1349 0348 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1350 034a 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1351 034e 0F9B     		ldr	r3, [sp, #60]
 1352 0350 3246     		mov	r2, r6
 1353 0352 5946     		mov	r1, fp
 1354 0354 9CF84C00 		ldrb	r0, [ip, #76]	@ zero_extendqisi2
 1355 0358 C047     		blx	r8
 1356              	.LVL60:
 454:Task/Task_Control.c **** 
 455:Task/Task_Control.c ****             /* when when usb attached lock moto */
 456:Task/Task_Control.c ****             if (SrvDataHub.get_vcp_attach_state(&USB_Attach) || !USB_Attach)
 1357              		.loc 1 456 13 is_stmt 1 view .LVU378
 1358              		.loc 1 456 27 is_stmt 0 view .LVU379
 1359 035a 254B     		ldr	r3, .L104+8
 1360 035c 9B69     		ldr	r3, [r3, #24]
 1361              		.loc 1 456 17 view .LVU380
 1362 035e 0DF15F00 		add	r0, sp, #95
 1363 0362 9847     		blx	r3
 1364              	.LVL61:
 1365              		.loc 1 456 16 view .LVU381
 1366 0364 10B9     		cbnz	r0, .L92
 1367              		.loc 1 456 65 discriminator 1 view .LVU382
 1368 0366 9DF85F30 		ldrb	r3, [sp, #95]	@ zero_extendqisi2
 1369              		.loc 1 456 62 discriminator 1 view .LVU383
 1370 036a D3B9     		cbnz	r3, .L74
 1371              	.L92:
 457:Task/Task_Control.c ****             {
 458:Task/Task_Control.c ****                 TaskControl_Actuator_ControlValue_Update(TaskControl_Monitor.throttle_percent, \
 1372              		.loc 1 458 17 is_stmt 1 view .LVU384
 1373 036c 9DED161A 		vldr.32	s2, [sp, #88]
 1374 0370 DDED150A 		vldr.32	s1, [sp, #84]
 1375 0374 9DED140A 		vldr.32	s0, [sp, #80]
 1376 0378 1B4B     		ldr	r3, .L104
 1377 037a 93F80001 		ldrb	r0, [r3, #256]	@ zero_extendqisi2
 1378 037e FFF7FEFF 		bl	TaskControl_Actuator_ControlValue_Update
 1379              	.LVL62:
 459:Task/Task_Control.c ****                                                          att_ctl_out.gyro_x, \
 460:Task/Task_Control.c ****                                                          att_ctl_out.gyro_y, \
 461:Task/Task_Control.c ****                                                          att_ctl_out.gyro_z);
 462:Task/Task_Control.c **** 
 463:Task/Task_Control.c ****                 if(imu_err_code == SrvIMU_Sample_NoError)
 1380              		.loc 1 463 17 view .LVU385
 1381              		.loc 1 463 33 is_stmt 0 view .LVU386
 1382 0382 1C4B     		ldr	r3, .L104+12
 1383 0384 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1384              		.loc 1 463 19 view .LVU387
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 36


 1385 0386 5BB3     		cbz	r3, .L93
 1386 0388 0EE0     		b	.L73
 1387              	.LVL63:
 1388              	.L76:
 426:Task/Task_Control.c **** 
 1389              		.loc 1 426 13 is_stmt 1 view .LVU388
 426:Task/Task_Control.c **** 
 1390              		.loc 1 426 32 is_stmt 0 view .LVU389
 1391 038a 174A     		ldr	r2, .L104
 1392 038c 92F81831 		ldrb	r3, [r2, #280]	@ zero_extendqisi2
 426:Task/Task_Control.c **** 
 1393              		.loc 1 426 53 view .LVU390
 1394 0390 0133     		adds	r3, r3, #1
 1395 0392 DBB2     		uxtb	r3, r3
 1396 0394 82F81831 		strb	r3, [r2, #280]
 428:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 1397              		.loc 1 428 13 is_stmt 1 view .LVU391
 428:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 1398              		.loc 1 428 15 is_stmt 0 view .LVU392
 1399 0398 092B     		cmp	r3, #9
 1400 039a 02D9     		bls	.L74
 429:Task/Task_Control.c **** 
 1401              		.loc 1 429 17 is_stmt 1 view .LVU393
 429:Task/Task_Control.c **** 
 1402              		.loc 1 429 51 is_stmt 0 view .LVU394
 1403 039c 1346     		mov	r3, r2
 1404 039e 0122     		movs	r2, #1
 1405 03a0 5A70     		strb	r2, [r3, #1]
 431:Task/Task_Control.c ****         }
 1406              		.loc 1 431 13 is_stmt 1 view .LVU395
 1407              	.LVL64:
 1408              	.L74:
 464:Task/Task_Control.c ****                 {
 465:Task/Task_Control.c ****                     for(axis = Axis_X; axis < Axis_Sum; axis ++)
 466:Task/Task_Control.c ****                     {
 467:Task/Task_Control.c ****                         TaskControl_Monitor.acc_lst[axis] = TaskControl_Monitor.acc[axis];
 468:Task/Task_Control.c ****                         TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 469:Task/Task_Control.c ****                     }
 470:Task/Task_Control.c ****                 }
 471:Task/Task_Control.c ****             
 472:Task/Task_Control.c ****                 return;
 473:Task/Task_Control.c ****             }
 474:Task/Task_Control.c ****         }
 475:Task/Task_Control.c ****     }
 476:Task/Task_Control.c **** 
 477:Task/Task_Control.c **** lock_moto:
 478:Task/Task_Control.c ****     SrvActuator.lock();
 1409              		.loc 1 478 5 discriminator 2 view .LVU396
 1410              		.loc 1 478 16 is_stmt 0 discriminator 2 view .LVU397
 1411 03a2 154B     		ldr	r3, .L104+16
 1412 03a4 DB68     		ldr	r3, [r3, #12]
 1413              		.loc 1 478 5 discriminator 2 view .LVU398
 1414 03a6 9847     		blx	r3
 1415              	.LVL65:
 1416              	.L73:
 479:Task/Task_Control.c **** }
 1417              		.loc 1 479 1 view .LVU399
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 37


 1418 03a8 19B0     		add	sp, sp, #100
 1419              	.LCFI10:
 1420              		.cfi_remember_state
 1421              		.cfi_def_cfa_offset 44
 1422              		@ sp needed
 1423 03aa BDEC028B 		vldm	sp!, {d8}
 1424              	.LCFI11:
 1425              		.cfi_restore 80
 1426              		.cfi_restore 81
 1427              		.cfi_def_cfa_offset 36
 1428 03ae BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1429              	.LVL66:
 1430              	.L95:
 1431              	.LCFI12:
 1432              		.cfi_restore_state
 467:Task/Task_Control.c ****                         TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 1433              		.loc 1 467 25 is_stmt 1 discriminator 3 view .LVU400
 467:Task/Task_Control.c ****                         TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 1434              		.loc 1 467 84 is_stmt 0 discriminator 3 view .LVU401
 1435 03b2 0D4A     		ldr	r2, .L104
 1436 03b4 03F13401 		add	r1, r3, #52
 1437 03b8 02EB8101 		add	r1, r2, r1, lsl #2
 1438 03bc 0868     		ldr	r0, [r1]	@ float
 467:Task/Task_Control.c ****                         TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 1439              		.loc 1 467 59 discriminator 3 view .LVU402
 1440 03be 03F13A01 		add	r1, r3, #58
 1441 03c2 02EB8101 		add	r1, r2, r1, lsl #2
 1442 03c6 0860     		str	r0, [r1]	@ float
 468:Task/Task_Control.c ****                     }
 1443              		.loc 1 468 25 is_stmt 1 discriminator 3 view .LVU403
 468:Task/Task_Control.c ****                     }
 1444              		.loc 1 468 84 is_stmt 0 discriminator 3 view .LVU404
 1445 03c8 03F13601 		add	r1, r3, #54
 1446 03cc 02EB8101 		add	r1, r2, r1, lsl #2
 1447 03d0 4968     		ldr	r1, [r1, #4]	@ float
 468:Task/Task_Control.c ****                     }
 1448              		.loc 1 468 59 discriminator 3 view .LVU405
 1449 03d2 03F13C00 		add	r0, r3, #60
 1450 03d6 02EB8002 		add	r2, r2, r0, lsl #2
 1451 03da 5160     		str	r1, [r2, #4]	@ float
 465:Task/Task_Control.c ****                     {
 1452              		.loc 1 465 57 is_stmt 1 discriminator 3 view .LVU406
 465:Task/Task_Control.c ****                     {
 1453              		.loc 1 465 62 is_stmt 0 discriminator 3 view .LVU407
 1454 03dc 0133     		adds	r3, r3, #1
 1455              	.LVL67:
 465:Task/Task_Control.c ****                     {
 1456              		.loc 1 465 62 discriminator 3 view .LVU408
 1457 03de DBB2     		uxtb	r3, r3
 1458              	.LVL68:
 1459              	.L93:
 465:Task/Task_Control.c ****                     {
 1460              		.loc 1 465 40 is_stmt 1 discriminator 1 view .LVU409
 465:Task/Task_Control.c ****                     {
 1461              		.loc 1 465 21 is_stmt 0 discriminator 1 view .LVU410
 1462 03e0 022B     		cmp	r3, #2
 1463 03e2 E6D9     		bls	.L95
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 38


 1464 03e4 E0E7     		b	.L73
 1465              	.L105:
 1466 03e6 00BF     		.align	2
 1467              	.L104:
 1468 03e8 00000000 		.word	.LANCHOR0
 1469 03ec 00000000 		.word	Controller
 1470 03f0 00000000 		.word	SrvDataHub
 1471 03f4 00000000 		.word	.LANCHOR4
 1472 03f8 00000000 		.word	SrvActuator
 1473              		.cfi_endproc
 1474              	.LFE2080:
 1476              		.section	.rodata.TaskControl_CLI_Polling.str1.4,"aMS",%progbits,1
 1477              		.align	2
 1478              	.LC3:
 1479 0000 6D6F746F 		.ascii	"moto spin dir set done\015\012\000"
 1479      20737069 
 1479      6E206469 
 1479      72207365 
 1479      7420646F 
 1480 0019 000000   		.align	2
 1481              	.LC4:
 1482 001c 6D6F746F 		.ascii	"moto spin dir set error\015\012\000"
 1482      20737069 
 1482      6E206469 
 1482      72207365 
 1482      74206572 
 1483              		.section	.text.TaskControl_CLI_Polling,"ax",%progbits
 1484              		.align	1
 1485              		.syntax unified
 1486              		.thumb
 1487              		.thumb_func
 1489              	TaskControl_CLI_Polling:
 1490              	.LFB2081:
 480:Task/Task_Control.c **** 
 481:Task/Task_Control.c **** /****************************************************** CLI Section *******************************
 482:Task/Task_Control.c **** static void TaskControl_CLI_Polling(void)
 483:Task/Task_Control.c **** {
 1491              		.loc 1 483 1 is_stmt 1 view -0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 32
 1494              		@ frame_needed = 0, uses_anonymous_args = 0
 1495 0000 30B5     		push	{r4, r5, lr}
 1496              	.LCFI13:
 1497              		.cfi_def_cfa_offset 12
 1498              		.cfi_offset 4, -12
 1499              		.cfi_offset 5, -8
 1500              		.cfi_offset 14, -4
 1501 0002 89B0     		sub	sp, sp, #36
 1502              	.LCFI14:
 1503              		.cfi_def_cfa_offset 48
 484:Task/Task_Control.c ****     osEvent event;
 1504              		.loc 1 484 5 view .LVU412
 485:Task/Task_Control.c ****     static TaskControl_CLIData_TypeDef CLIData;
 1505              		.loc 1 485 5 view .LVU413
 486:Task/Task_Control.c ****     static uint16_t moto_ctl_buff[8] = {0};
 1506              		.loc 1 486 5 view .LVU414
 487:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 39


 1507              		.loc 1 487 5 view .LVU415
 1508              		.loc 1 487 24 is_stmt 0 view .LVU416
 1509 0004 FFF7FEFF 		bl	Shell_GetInstence
 1510              	.LVL69:
 488:Task/Task_Control.c **** 
 489:Task/Task_Control.c ****     if ((shell_obj == NULL) || \
 1511              		.loc 1 489 5 is_stmt 1 view .LVU417
 1512              		.loc 1 489 8 is_stmt 0 view .LVU418
 1513 0008 C8B1     		cbz	r0, .L106
 1514 000a 0446     		mov	r4, r0
 490:Task/Task_Control.c ****         (SrvActuator.lock == NULL) || \
 1515              		.loc 1 490 21 discriminator 1 view .LVU419
 1516 000c 5E4B     		ldr	r3, .L132
 1517 000e DB68     		ldr	r3, [r3, #12]
 489:Task/Task_Control.c ****         (SrvActuator.lock == NULL) || \
 1518              		.loc 1 489 29 discriminator 1 view .LVU420
 1519 0010 ABB1     		cbz	r3, .L106
 491:Task/Task_Control.c ****         (SrvActuator.moto_direct_drive == NULL))
 1520              		.loc 1 491 21 view .LVU421
 1521 0012 5D4B     		ldr	r3, .L132
 1522 0014 1B6B     		ldr	r3, [r3, #48]
 490:Task/Task_Control.c ****         (SrvActuator.lock == NULL) || \
 1523              		.loc 1 490 36 view .LVU422
 1524 0016 93B1     		cbz	r3, .L106
 492:Task/Task_Control.c ****         return;
 493:Task/Task_Control.c **** 
 494:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID)
 1525              		.loc 1 494 5 is_stmt 1 view .LVU423
 1526              		.loc 1 494 27 is_stmt 0 view .LVU424
 1527 0018 5C4B     		ldr	r3, .L132+4
 1528 001a D3F81C11 		ldr	r1, [r3, #284]
 1529              		.loc 1 494 7 view .LVU425
 1530 001e 31B1     		cbz	r1, .L108
 495:Task/Task_Control.c ****     {
 496:Task/Task_Control.c ****         event = osMessageGet(TaskControl_Monitor.CLIMessage_ID, CLI_MESSAGE_OPEARATE_TIMEOUT);
 1531              		.loc 1 496 9 is_stmt 1 view .LVU426
 1532              		.loc 1 496 17 is_stmt 0 view .LVU427
 1533 0020 0122     		movs	r2, #1
 1534 0022 01A8     		add	r0, sp, #4
 1535              	.LVL70:
 1536              		.loc 1 496 17 view .LVU428
 1537 0024 FFF7FEFF 		bl	osMessageGet
 1538              	.LVL71:
 497:Task/Task_Control.c ****         if (event.status == osEventMessage)
 1539              		.loc 1 497 9 is_stmt 1 view .LVU429
 1540              		.loc 1 497 18 is_stmt 0 view .LVU430
 1541 0028 019B     		ldr	r3, [sp, #4]
 1542              		.loc 1 497 12 view .LVU431
 1543 002a 102B     		cmp	r3, #16
 1544 002c 09D0     		beq	.L128
 1545              	.LVL72:
 1546              	.L108:
 498:Task/Task_Control.c ****         {
 499:Task/Task_Control.c ****             if (event.value.p == NULL)
 500:Task/Task_Control.c ****             {
 501:Task/Task_Control.c ****                 SrvActuator.lock();
 502:Task/Task_Control.c ****                 return;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 40


 503:Task/Task_Control.c ****             }
 504:Task/Task_Control.c **** 
 505:Task/Task_Control.c ****             CLIData = *(TaskControl_CLIData_TypeDef *)(event.value.p);
 506:Task/Task_Control.c ****             switch((uint8_t)CLIData.cli_type)
 507:Task/Task_Control.c ****             {
 508:Task/Task_Control.c ****                 case TaskControl_Moto_Set_SpinDir:
 509:Task/Task_Control.c ****                     memset(moto_ctl_buff, 0, sizeof(moto_ctl_buff));
 510:Task/Task_Control.c ****                     if(SrvActuator.set_spin_dir(CLIData.index, (uint8_t)CLIData.value))
 511:Task/Task_Control.c ****                     {
 512:Task/Task_Control.c ****                         shellPrint(shell_obj, "moto spin dir set done\r\n");
 513:Task/Task_Control.c ****                         SrvActuator.save(CLIData.index);
 514:Task/Task_Control.c ****                     }
 515:Task/Task_Control.c ****                     else
 516:Task/Task_Control.c ****                         shellPrint(shell_obj, "moto spin dir set error\r\n");
 517:Task/Task_Control.c ****                     break;
 518:Task/Task_Control.c **** 
 519:Task/Task_Control.c ****                 case TaskControl_Moto_Set_Spin:
 520:Task/Task_Control.c ****                     if(CLIData.index < SrvActuator.get_cnt().moto_cnt)
 521:Task/Task_Control.c ****                     {
 522:Task/Task_Control.c ****                         for(uint8_t i = 0; i < SrvActuator.get_cnt().moto_cnt; i++)
 523:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 524:Task/Task_Control.c **** 
 525:Task/Task_Control.c ****                         moto_ctl_buff[CLIData.index] = CLIData.value;
 526:Task/Task_Control.c ****                     }
 527:Task/Task_Control.c ****                     else
 528:Task/Task_Control.c ****                     {
 529:Task/Task_Control.c ****                         for(uint8_t i = 0; i < SrvActuator.get_cnt().moto_cnt; i++)
 530:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 531:Task/Task_Control.c ****                     }
 532:Task/Task_Control.c ****                     break;
 533:Task/Task_Control.c **** 
 534:Task/Task_Control.c ****                 case TaskControl_Moto_CliDisable:
 535:Task/Task_Control.c ****                     memset(moto_ctl_buff, 0, sizeof(moto_ctl_buff));
 536:Task/Task_Control.c ****                     TaskControl_Monitor.CLI_enable = false;
 537:Task/Task_Control.c ****                     break;
 538:Task/Task_Control.c **** 
 539:Task/Task_Control.c ****                 default: break;
 540:Task/Task_Control.c ****             }
 541:Task/Task_Control.c **** 
 542:Task/Task_Control.c ****             SrvOsCommon.free(event.value.p);
 543:Task/Task_Control.c ****         }
 544:Task/Task_Control.c ****     }
 545:Task/Task_Control.c **** 
 546:Task/Task_Control.c ****     if(CLIData.cli_type == TaskControl_Moto_Set_Spin)
 1547              		.loc 1 546 5 is_stmt 1 view .LVU432
 1548              		.loc 1 546 15 is_stmt 0 view .LVU433
 1549 002e 584B     		ldr	r3, .L132+8
 1550 0030 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1551              		.loc 1 546 7 view .LVU434
 1552 0032 012B     		cmp	r3, #1
 1553 0034 00F0A680 		beq	.L129
 547:Task/Task_Control.c ****     {
 548:Task/Task_Control.c ****         /* set moto spin */
 549:Task/Task_Control.c ****         for (uint8_t i = 0; i < SrvActuator.get_cnt().moto_cnt; i++)
 550:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 551:Task/Task_Control.c ****     }
 552:Task/Task_Control.c ****     else
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 41


 553:Task/Task_Control.c ****         SrvActuator.lock();
 1554              		.loc 1 553 9 is_stmt 1 view .LVU435
 1555              		.loc 1 553 20 is_stmt 0 view .LVU436
 1556 0038 534B     		ldr	r3, .L132
 1557 003a DB68     		ldr	r3, [r3, #12]
 1558              		.loc 1 553 9 view .LVU437
 1559 003c 9847     		blx	r3
 1560              	.LVL73:
 1561              	.L106:
 554:Task/Task_Control.c **** }
 1562              		.loc 1 554 1 view .LVU438
 1563 003e 09B0     		add	sp, sp, #36
 1564              	.LCFI15:
 1565              		.cfi_remember_state
 1566              		.cfi_def_cfa_offset 12
 1567              		@ sp needed
 1568 0040 30BD     		pop	{r4, r5, pc}
 1569              	.LVL74:
 1570              	.L128:
 1571              	.LCFI16:
 1572              		.cfi_restore_state
 499:Task/Task_Control.c ****             {
 1573              		.loc 1 499 13 is_stmt 1 view .LVU439
 499:Task/Task_Control.c ****             {
 1574              		.loc 1 499 28 is_stmt 0 view .LVU440
 1575 0042 029D     		ldr	r5, [sp, #8]
 499:Task/Task_Control.c ****             {
 1576              		.loc 1 499 16 view .LVU441
 1577 0044 85B1     		cbz	r5, .L130
 505:Task/Task_Control.c ****             switch((uint8_t)CLIData.cli_type)
 1578              		.loc 1 505 13 is_stmt 1 view .LVU442
 505:Task/Task_Control.c ****             switch((uint8_t)CLIData.cli_type)
 1579              		.loc 1 505 21 is_stmt 0 view .LVU443
 1580 0046 524B     		ldr	r3, .L132+8
 1581 0048 95E80300 		ldm	r5, {r0, r1}
 1582 004c 83E80300 		stm	r3, {r0, r1}
 506:Task/Task_Control.c ****             {
 1583              		.loc 1 506 13 is_stmt 1 view .LVU444
 506:Task/Task_Control.c ****             {
 1584              		.loc 1 506 36 is_stmt 0 view .LVU445
 1585 0050 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 506:Task/Task_Control.c ****             {
 1586              		.loc 1 506 13 view .LVU446
 1587 0052 012B     		cmp	r3, #1
 1588 0054 28D0     		beq	.L110
 1589 0056 022B     		cmp	r3, #2
 1590 0058 0AD0     		beq	.L111
 1591 005a 002B     		cmp	r3, #0
 1592 005c 6FD0     		beq	.L131
 1593              	.LVL75:
 1594              	.L113:
 542:Task/Task_Control.c ****         }
 1595              		.loc 1 542 13 is_stmt 1 view .LVU447
 542:Task/Task_Control.c ****         }
 1596              		.loc 1 542 24 is_stmt 0 view .LVU448
 1597 005e 4D4B     		ldr	r3, .L132+12
 1598 0060 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 42


 542:Task/Task_Control.c ****         }
 1599              		.loc 1 542 13 view .LVU449
 1600 0062 2846     		mov	r0, r5
 1601 0064 9847     		blx	r3
 1602              	.LVL76:
 1603 0066 E2E7     		b	.L108
 1604              	.LVL77:
 1605              	.L130:
 501:Task/Task_Control.c ****                 return;
 1606              		.loc 1 501 17 is_stmt 1 view .LVU450
 501:Task/Task_Control.c ****                 return;
 1607              		.loc 1 501 28 is_stmt 0 view .LVU451
 1608 0068 474B     		ldr	r3, .L132
 1609 006a DB68     		ldr	r3, [r3, #12]
 501:Task/Task_Control.c ****                 return;
 1610              		.loc 1 501 17 view .LVU452
 1611 006c 9847     		blx	r3
 1612              	.LVL78:
 502:Task/Task_Control.c ****             }
 1613              		.loc 1 502 17 is_stmt 1 view .LVU453
 1614 006e E6E7     		b	.L106
 1615              	.L111:
 509:Task/Task_Control.c ****                     if(SrvActuator.set_spin_dir(CLIData.index, (uint8_t)CLIData.value))
 1616              		.loc 1 509 21 view .LVU454
 1617 0070 494B     		ldr	r3, .L132+16
 1618 0072 0022     		movs	r2, #0
 1619 0074 1A60     		str	r2, [r3]
 1620 0076 5A60     		str	r2, [r3, #4]
 1621 0078 9A60     		str	r2, [r3, #8]
 1622 007a DA60     		str	r2, [r3, #12]
 510:Task/Task_Control.c ****                     {
 1623              		.loc 1 510 21 view .LVU455
 510:Task/Task_Control.c ****                     {
 1624              		.loc 1 510 35 is_stmt 0 view .LVU456
 1625 007c 424B     		ldr	r3, .L132
 1626 007e DA69     		ldr	r2, [r3, #28]
 510:Task/Task_Control.c ****                     {
 1627              		.loc 1 510 80 view .LVU457
 1628 0080 434B     		ldr	r3, .L132+8
 510:Task/Task_Control.c ****                     {
 1629              		.loc 1 510 24 view .LVU458
 1630 0082 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 1631 0084 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 1632 0086 9047     		blx	r2
 1633              	.LVL79:
 510:Task/Task_Control.c ****                     {
 1634              		.loc 1 510 23 view .LVU459
 1635 0088 48B1     		cbz	r0, .L114
 512:Task/Task_Control.c ****                         SrvActuator.save(CLIData.index);
 1636              		.loc 1 512 25 is_stmt 1 view .LVU460
 1637 008a 4449     		ldr	r1, .L132+20
 1638 008c 2046     		mov	r0, r4
 1639 008e FFF7FEFF 		bl	shellPrint
 1640              	.LVL80:
 513:Task/Task_Control.c ****                     }
 1641              		.loc 1 513 25 view .LVU461
 513:Task/Task_Control.c ****                     }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 43


 1642              		.loc 1 513 36 is_stmt 0 view .LVU462
 1643 0092 3D4B     		ldr	r3, .L132
 1644 0094 9B6B     		ldr	r3, [r3, #56]
 513:Task/Task_Control.c ****                     }
 1645              		.loc 1 513 25 view .LVU463
 1646 0096 3E4A     		ldr	r2, .L132+8
 1647 0098 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
 1648 009a 9847     		blx	r3
 1649              	.LVL81:
 1650 009c DFE7     		b	.L113
 1651              	.L114:
 516:Task/Task_Control.c ****                     break;
 1652              		.loc 1 516 25 is_stmt 1 view .LVU464
 1653 009e 4049     		ldr	r1, .L132+24
 1654 00a0 2046     		mov	r0, r4
 1655 00a2 FFF7FEFF 		bl	shellPrint
 1656              	.LVL82:
 1657 00a6 DAE7     		b	.L113
 1658              	.L110:
 520:Task/Task_Control.c ****                     {
 1659              		.loc 1 520 21 view .LVU465
 520:Task/Task_Control.c ****                     {
 1660              		.loc 1 520 31 is_stmt 0 view .LVU466
 1661 00a8 394B     		ldr	r3, .L132+8
 1662 00aa 5C79     		ldrb	r4, [r3, #5]	@ zero_extendqisi2
 1663              	.LVL83:
 520:Task/Task_Control.c ****                     {
 1664              		.loc 1 520 51 view .LVU467
 1665 00ac 364B     		ldr	r3, .L132
 1666 00ae 9B6A     		ldr	r3, [r3, #40]
 520:Task/Task_Control.c ****                     {
 1667              		.loc 1 520 40 view .LVU468
 1668 00b0 9847     		blx	r3
 1669              	.LVL84:
 1670 00b2 8DF81000 		strb	r0, [sp, #16]
 1671 00b6 C0F30723 		ubfx	r3, r0, #8, #8
 1672 00ba 8DF81130 		strb	r3, [sp, #17]
 1673 00be C0F30740 		ubfx	r0, r0, #16, #8
 1674 00c2 8DF81200 		strb	r0, [sp, #18]
 520:Task/Task_Control.c ****                     {
 1675              		.loc 1 520 61 view .LVU469
 1676 00c6 DBB2     		uxtb	r3, r3
 520:Task/Task_Control.c ****                     {
 1677              		.loc 1 520 23 view .LVU470
 1678 00c8 9C42     		cmp	r4, r3
 1679 00ca 1ED3     		bcc	.L124
 1680              	.LBB4:
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1681              		.loc 1 529 37 view .LVU471
 1682 00cc 0024     		movs	r4, #0
 1683 00ce 25E0     		b	.L116
 1684              	.LVL85:
 1685              	.L117:
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1686              		.loc 1 529 37 view .LVU472
 1687              	.LBE4:
 1688              	.LBB5:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 44


 523:Task/Task_Control.c **** 
 1689              		.loc 1 523 29 is_stmt 1 discriminator 3 view .LVU473
 523:Task/Task_Control.c **** 
 1690              		.loc 1 523 46 is_stmt 0 discriminator 3 view .LVU474
 1691 00d0 314B     		ldr	r3, .L132+16
 1692 00d2 0022     		movs	r2, #0
 1693 00d4 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1694              		.loc 1 522 80 is_stmt 1 discriminator 3 view .LVU475
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1695              		.loc 1 522 81 is_stmt 0 discriminator 3 view .LVU476
 1696 00d8 0134     		adds	r4, r4, #1
 1697              	.LVL86:
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1698              		.loc 1 522 81 discriminator 3 view .LVU477
 1699 00da E4B2     		uxtb	r4, r4
 1700              	.LVL87:
 1701              	.L115:
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1702              		.loc 1 522 44 is_stmt 1 discriminator 1 view .LVU478
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1703              		.loc 1 522 59 is_stmt 0 discriminator 1 view .LVU479
 1704 00dc 2A4B     		ldr	r3, .L132
 1705 00de 9B6A     		ldr	r3, [r3, #40]
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1706              		.loc 1 522 48 discriminator 1 view .LVU480
 1707 00e0 9847     		blx	r3
 1708              	.LVL88:
 1709 00e2 8DF81400 		strb	r0, [sp, #20]
 1710 00e6 C0F30723 		ubfx	r3, r0, #8, #8
 1711 00ea 8DF81530 		strb	r3, [sp, #21]
 1712 00ee C0F30740 		ubfx	r0, r0, #16, #8
 1713 00f2 8DF81600 		strb	r0, [sp, #22]
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1714              		.loc 1 522 69 discriminator 1 view .LVU481
 1715 00f6 DBB2     		uxtb	r3, r3
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1716              		.loc 1 522 25 discriminator 1 view .LVU482
 1717 00f8 A342     		cmp	r3, r4
 1718 00fa E9D8     		bhi	.L117
 1719              	.LBE5:
 525:Task/Task_Control.c ****                     }
 1720              		.loc 1 525 25 is_stmt 1 view .LVU483
 525:Task/Task_Control.c ****                     }
 1721              		.loc 1 525 46 is_stmt 0 view .LVU484
 1722 00fc 244B     		ldr	r3, .L132+8
 1723 00fe 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 525:Task/Task_Control.c ****                     }
 1724              		.loc 1 525 63 view .LVU485
 1725 0100 D988     		ldrh	r1, [r3, #6]
 525:Task/Task_Control.c ****                     }
 1726              		.loc 1 525 54 view .LVU486
 1727 0102 254B     		ldr	r3, .L132+16
 1728 0104 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 1729 0108 A9E7     		b	.L113
 1730              	.LVL89:
 1731              	.L124:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 45


 1732              	.LBB6:
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1733              		.loc 1 522 37 view .LVU487
 1734 010a 0024     		movs	r4, #0
 1735 010c E6E7     		b	.L115
 1736              	.LVL90:
 1737              	.L118:
 522:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 1738              		.loc 1 522 37 view .LVU488
 1739              	.LBE6:
 1740              	.LBB7:
 530:Task/Task_Control.c ****                     }
 1741              		.loc 1 530 29 is_stmt 1 discriminator 3 view .LVU489
 530:Task/Task_Control.c ****                     }
 1742              		.loc 1 530 55 is_stmt 0 discriminator 3 view .LVU490
 1743 010e 204B     		ldr	r3, .L132+8
 1744 0110 DA88     		ldrh	r2, [r3, #6]
 530:Task/Task_Control.c ****                     }
 1745              		.loc 1 530 46 discriminator 3 view .LVU491
 1746 0112 214B     		ldr	r3, .L132+16
 1747 0114 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1748              		.loc 1 529 80 is_stmt 1 discriminator 3 view .LVU492
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1749              		.loc 1 529 81 is_stmt 0 discriminator 3 view .LVU493
 1750 0118 0134     		adds	r4, r4, #1
 1751              	.LVL91:
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1752              		.loc 1 529 81 discriminator 3 view .LVU494
 1753 011a E4B2     		uxtb	r4, r4
 1754              	.LVL92:
 1755              	.L116:
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1756              		.loc 1 529 44 is_stmt 1 discriminator 1 view .LVU495
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1757              		.loc 1 529 59 is_stmt 0 discriminator 1 view .LVU496
 1758 011c 1A4B     		ldr	r3, .L132
 1759 011e 9B6A     		ldr	r3, [r3, #40]
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1760              		.loc 1 529 48 discriminator 1 view .LVU497
 1761 0120 9847     		blx	r3
 1762              	.LVL93:
 1763 0122 8DF81800 		strb	r0, [sp, #24]
 1764 0126 C0F30723 		ubfx	r3, r0, #8, #8
 1765 012a 8DF81930 		strb	r3, [sp, #25]
 1766 012e C0F30740 		ubfx	r0, r0, #16, #8
 1767 0132 8DF81A00 		strb	r0, [sp, #26]
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1768              		.loc 1 529 69 discriminator 1 view .LVU498
 1769 0136 DBB2     		uxtb	r3, r3
 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1770              		.loc 1 529 25 discriminator 1 view .LVU499
 1771 0138 A342     		cmp	r3, r4
 1772 013a E8D8     		bhi	.L118
 1773 013c 8FE7     		b	.L113
 1774              	.LVL94:
 1775              	.L131:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 46


 529:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 1776              		.loc 1 529 25 discriminator 1 view .LVU500
 1777              	.LBE7:
 535:Task/Task_Control.c ****                     TaskControl_Monitor.CLI_enable = false;
 1778              		.loc 1 535 21 is_stmt 1 view .LVU501
 1779 013e 164A     		ldr	r2, .L132+16
 1780 0140 0023     		movs	r3, #0
 1781 0142 1360     		str	r3, [r2]
 1782 0144 5360     		str	r3, [r2, #4]
 1783 0146 9360     		str	r3, [r2, #8]
 1784 0148 D360     		str	r3, [r2, #12]
 536:Task/Task_Control.c ****                     break;
 1785              		.loc 1 536 21 view .LVU502
 536:Task/Task_Control.c ****                     break;
 1786              		.loc 1 536 52 is_stmt 0 view .LVU503
 1787 014a 104A     		ldr	r2, .L132+4
 1788 014c 9371     		strb	r3, [r2, #6]
 537:Task/Task_Control.c **** 
 1789              		.loc 1 537 21 is_stmt 1 view .LVU504
 1790 014e 86E7     		b	.L113
 1791              	.LVL95:
 1792              	.L121:
 1793              	.LBB8:
 550:Task/Task_Control.c ****     }
 1794              		.loc 1 550 13 discriminator 3 view .LVU505
 550:Task/Task_Control.c ****     }
 1795              		.loc 1 550 24 is_stmt 0 discriminator 3 view .LVU506
 1796 0150 0D4B     		ldr	r3, .L132
 1797 0152 1B6B     		ldr	r3, [r3, #48]
 550:Task/Task_Control.c ****     }
 1798              		.loc 1 550 13 discriminator 3 view .LVU507
 1799 0154 104A     		ldr	r2, .L132+16
 1800 0156 32F81410 		ldrh	r1, [r2, r4, lsl #1]
 1801 015a 2046     		mov	r0, r4
 1802 015c 9847     		blx	r3
 1803              	.LVL96:
 549:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1804              		.loc 1 549 65 is_stmt 1 discriminator 3 view .LVU508
 549:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1805              		.loc 1 549 66 is_stmt 0 discriminator 3 view .LVU509
 1806 015e 0134     		adds	r4, r4, #1
 1807              	.LVL97:
 549:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1808              		.loc 1 549 66 discriminator 3 view .LVU510
 1809 0160 E4B2     		uxtb	r4, r4
 1810              	.LVL98:
 1811              	.L119:
 549:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1812              		.loc 1 549 29 is_stmt 1 discriminator 1 view .LVU511
 549:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1813              		.loc 1 549 44 is_stmt 0 discriminator 1 view .LVU512
 1814 0162 094B     		ldr	r3, .L132
 1815 0164 9B6A     		ldr	r3, [r3, #40]
 549:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1816              		.loc 1 549 33 discriminator 1 view .LVU513
 1817 0166 9847     		blx	r3
 1818              	.LVL99:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 47


 1819 0168 8DF81C00 		strb	r0, [sp, #28]
 1820 016c C0F30723 		ubfx	r3, r0, #8, #8
 1821 0170 8DF81D30 		strb	r3, [sp, #29]
 1822 0174 C0F30740 		ubfx	r0, r0, #16, #8
 1823 0178 8DF81E00 		strb	r0, [sp, #30]
 549:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1824              		.loc 1 549 54 discriminator 1 view .LVU514
 1825 017c DBB2     		uxtb	r3, r3
 549:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1826              		.loc 1 549 9 discriminator 1 view .LVU515
 1827 017e A342     		cmp	r3, r4
 1828 0180 E6D8     		bhi	.L121
 1829 0182 5CE7     		b	.L106
 1830              	.LVL100:
 1831              	.L129:
 549:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 1832              		.loc 1 549 22 view .LVU516
 1833 0184 0024     		movs	r4, #0
 1834 0186 ECE7     		b	.L119
 1835              	.L133:
 1836              		.align	2
 1837              	.L132:
 1838 0188 00000000 		.word	SrvActuator
 1839 018c 00000000 		.word	.LANCHOR0
 1840 0190 00000000 		.word	.LANCHOR8
 1841 0194 00000000 		.word	SrvOsCommon
 1842 0198 00000000 		.word	.LANCHOR9
 1843 019c 00000000 		.word	.LC3
 1844 01a0 1C000000 		.word	.LC4
 1845              	.LBE8:
 1846              		.cfi_endproc
 1847              	.LFE2081:
 1849              		.section	.rodata.TaskControl_CLI_ShowModleInfo.str1.4,"aMS",%progbits,1
 1850              		.align	2
 1851              	.LC5:
 1852 0000 5B20636F 		.ascii	"[ control parameter ]\015\012\000"
 1852      6E74726F 
 1852      6C207061 
 1852      72616D65 
 1852      74657220 
 1853              		.align	2
 1854              	.LC6:
 1855 0018 2D2D2D20 		.ascii	"--- control rate ---\015\012\000"
 1855      636F6E74 
 1855      726F6C20 
 1855      72617465 
 1855      202D2D2D 
 1856              		.global	__aeabi_f2d
 1857 002f 00       		.align	2
 1858              	.LC7:
 1859 0030 20202020 		.ascii	"    attitude        control rate %f\015\012\000"
 1859      61747469 
 1859      74756465 
 1859      20202020 
 1859      20202020 
 1860 0056 0000     		.align	2
 1861              	.LC8:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 48


 1862 0058 20202020 		.ascii	"    X angular speed control rate %f\015\012\000"
 1862      5820616E 
 1862      67756C61 
 1862      72207370 
 1862      65656420 
 1863 007e 0000     		.align	2
 1864              	.LC9:
 1865 0080 20202020 		.ascii	"    Y angular speed control rate %f\015\012\000"
 1865      5920616E 
 1865      67756C61 
 1865      72207370 
 1865      65656420 
 1866 00a6 0000     		.align	2
 1867              	.LC10:
 1868 00a8 20202020 		.ascii	"    Z angular speed control rate %f\015\012\000"
 1868      5A20616E 
 1868      67756C61 
 1868      72207370 
 1868      65656420 
 1869 00ce 0000     		.align	2
 1870              	.LC11:
 1871 00d0 2D2D2D20 		.ascii	"--- control range ---\015\012\000"
 1871      636F6E74 
 1871      726F6C20 
 1871      72616E67 
 1871      65202D2D 
 1872              		.align	2
 1873              	.LC12:
 1874 00e8 20202020 		.ascii	"    pitch           range \302\261%d\015\012\000"
 1874      70697463 
 1874      68202020 
 1874      20202020 
 1874      20202020 
 1875 0109 000000   		.align	2
 1876              	.LC13:
 1877 010c 20202020 		.ascii	"    roll            range \302\261%d\015\012\000"
 1877      726F6C6C 
 1877      20202020 
 1877      20202020 
 1877      20202020 
 1878 012d 000000   		.align	2
 1879              	.LC14:
 1880 0130 20202020 		.ascii	"    X angular speed range \302\261%d\015\012\000"
 1880      5820616E 
 1880      67756C61 
 1880      72207370 
 1880      65656420 
 1881 0151 000000   		.align	2
 1882              	.LC15:
 1883 0154 20202020 		.ascii	"    Y angular speed range \302\261%d\015\012\000"
 1883      5920616E 
 1883      67756C61 
 1883      72207370 
 1883      65656420 
 1884 0175 000000   		.align	2
 1885              	.LC16:
 1886 0178 20202020 		.ascii	"    Z angular speed range \302\261%d\015\012\000"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 49


 1886      5A20616E 
 1886      67756C61 
 1886      72207370 
 1886      65656420 
 1887 0199 000000   		.align	2
 1888              	.LC17:
 1889 019c 2D2D2D20 		.ascii	"--- attitude control mode ---\015\012\000"
 1889      61747469 
 1889      74756465 
 1889      20636F6E 
 1889      74726F6C 
 1890              		.align	2
 1891              	.LC18:
 1892 01bc 202D2D2D 		.ascii	" ---- pid\015\012\000"
 1892      2D207069 
 1892      640D0A00 
 1893              		.align	2
 1894              	.LC19:
 1895 01c8 202D2D2D 		.ascii	" ---- ladrc\015\012\000"
 1895      2D206C61 
 1895      6472630D 
 1895      0A00
 1896 01d6 0000     		.align	2
 1897              	.LC20:
 1898 01d8 202D2D2D 		.ascii	" ---- mude\015\012\000"
 1898      2D206D75 
 1898      64650D0A 
 1898      00
 1899 01e5 000000   		.align	2
 1900              	.LC21:
 1901 01e8 202D2D2D 		.ascii	" ---- unknow control mode\015\012\000"
 1901      2D20756E 
 1901      6B6E6F77 
 1901      20636F6E 
 1901      74726F6C 
 1902              		.align	2
 1903              	.LC22:
 1904 0204 2D2D2D20 		.ascii	"--- altitude control mode ---\015\012\000"
 1904      616C7469 
 1904      74756465 
 1904      20636F6E 
 1904      74726F6C 
 1905              		.align	2
 1906              	.LC23:
 1907 0224 5B206163 		.ascii	"[ actuator parameter ]\015\012\000"
 1907      74756174 
 1907      6F722070 
 1907      6172616D 
 1907      65746572 
 1908 023d 000000   		.align	2
 1909              	.LC24:
 1910 0240 20202020 		.ascii	"    moto  num %d\015\012\000"
 1910      6D6F746F 
 1910      20206E75 
 1910      6D202564 
 1910      0D0A00
 1911 0253 00       		.align	2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 50


 1912              	.LC25:
 1913 0254 20202020 		.ascii	"    servo num %d\015\012\000"
 1913      73657276 
 1913      6F206E75 
 1913      6D202564 
 1913      0D0A00
 1914 0267 00       		.align	2
 1915              	.LC26:
 1916 0268 202D2D2D 		.ascii	" ---- ESC DShot_150\015\012\000"
 1916      2D204553 
 1916      43204453 
 1916      686F745F 
 1916      3135300D 
 1917 027e 0000     		.align	2
 1918              	.LC27:
 1919 0280 202D2D2D 		.ascii	" ---- ESC DShot_300\015\012\000"
 1919      2D204553 
 1919      43204453 
 1919      686F745F 
 1919      3330300D 
 1920 0296 0000     		.align	2
 1921              	.LC28:
 1922 0298 202D2D2D 		.ascii	" ---- ESC DShot_600\015\012\000"
 1922      2D204553 
 1922      43204453 
 1922      686F745F 
 1922      3630300D 
 1923 02ae 0000     		.align	2
 1924              	.LC29:
 1925 02b0 202D2D2D 		.ascii	" ---- ESC Brush\015\012\000"
 1925      2D204553 
 1925      43204272 
 1925      7573680D 
 1925      0A00
 1926 02c2 0000     		.align	2
 1927              	.LC30:
 1928 02c4 202D2D2D 		.ascii	" ---- QUAD\015\012\000"
 1928      2D205155 
 1928      41440D0A 
 1928      00
 1929 02d1 000000   		.align	2
 1930              	.LC31:
 1931 02d4 202D2D2D 		.ascii	" ---- HEX\015\012\000"
 1931      2D204845 
 1931      580D0A00 
 1932              		.align	2
 1933              	.LC32:
 1934 02e0 202D2D2D 		.ascii	" ---- Y6\015\012\000"
 1934      2D205936 
 1934      0D0A00
 1935 02eb 00       		.align	2
 1936              	.LC33:
 1937 02ec 202D2D2D 		.ascii	" ---- TRI\015\012\000"
 1937      2D205452 
 1937      490D0A00 
 1938              		.align	2
 1939              	.LC34:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 51


 1940 02f8 202D2D2D 		.ascii	" ---- TDrone\015\012\000"
 1940      2D205444 
 1940      726F6E65 
 1940      0D0A00
 1941 0307 00       		.align	2
 1942              	.LC35:
 1943 0308 2D2D2D2D 		.ascii	"---- moto mapping relationship ----\015\012\000"
 1943      206D6F74 
 1943      6F206D61 
 1943      7070696E 
 1943      67207265 
 1944 032e 0000     		.align	2
 1945              	.LC36:
 1946 0330 20202020 		.ascii	"    moto list index %d -> map to phy rotor %d\015\012"
 1946      6D6F746F 
 1946      206C6973 
 1946      7420696E 
 1946      64657820 
 1947 035f 00       		.ascii	"\000"
 1948              		.section	.text.TaskControl_CLI_ShowModleInfo,"ax",%progbits
 1949              		.align	1
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1954              	TaskControl_CLI_ShowModleInfo:
 1955              	.LFB2082:
 555:Task/Task_Control.c **** 
 556:Task/Task_Control.c **** static void TaskControl_CLI_ShowModleInfo(void)
 557:Task/Task_Control.c **** {
 1956              		.loc 1 557 1 is_stmt 1 view -0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960 0000 38B5     		push	{r3, r4, r5, lr}
 1961              	.LCFI17:
 1962              		.cfi_def_cfa_offset 16
 1963              		.cfi_offset 3, -16
 1964              		.cfi_offset 4, -12
 1965              		.cfi_offset 5, -8
 1966              		.cfi_offset 14, -4
 558:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 1967              		.loc 1 558 5 view .LVU518
 1968              		.loc 1 558 24 is_stmt 0 view .LVU519
 1969 0002 FFF7FEFF 		bl	Shell_GetInstence
 1970              	.LVL101:
 559:Task/Task_Control.c ****     if (shell_obj == NULL)
 1971              		.loc 1 559 5 is_stmt 1 view .LVU520
 1972              		.loc 1 559 8 is_stmt 0 view .LVU521
 1973 0006 0028     		cmp	r0, #0
 1974 0008 00F00981 		beq	.L134
 1975 000c 0546     		mov	r5, r0
 560:Task/Task_Control.c ****         return;
 561:Task/Task_Control.c **** 
 562:Task/Task_Control.c ****     shellPrint(shell_obj, "[ control parameter ]\r\n");
 1976              		.loc 1 562 5 is_stmt 1 view .LVU522
 1977 000e 8449     		ldr	r1, .L162
 1978 0010 FFF7FEFF 		bl	shellPrint
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 52


 1979              	.LVL102:
 563:Task/Task_Control.c ****     shellPrint(shell_obj, "--- control rate ---\r\n");
 1980              		.loc 1 563 5 view .LVU523
 1981 0014 8349     		ldr	r1, .L162+4
 1982 0016 2846     		mov	r0, r5
 1983 0018 FFF7FEFF 		bl	shellPrint
 1984              	.LVL103:
 564:Task/Task_Control.c ****     shellPrint(shell_obj, "    attitude        control rate %f\r\n", TaskControl_Monitor.ctl_para.a
 1985              		.loc 1 564 5 view .LVU524
 1986              		.loc 1 564 98 is_stmt 0 view .LVU525
 1987 001c 824C     		ldr	r4, .L162+8
 1988 001e D4F84E00 		ldr	r0, [r4, #78]	@ unaligned
 1989              		.loc 1 564 5 view .LVU526
 1990 0022 FFF7FEFF 		bl	__aeabi_f2d
 1991              	.LVL104:
 1992 0026 0246     		mov	r2, r0
 1993 0028 0B46     		mov	r3, r1
 1994 002a 8049     		ldr	r1, .L162+12
 1995 002c 2846     		mov	r0, r5
 1996 002e FFF7FEFF 		bl	shellPrint
 1997              	.LVL105:
 565:Task/Task_Control.c ****     shellPrint(shell_obj, "    X angular speed control rate %f\r\n", TaskControl_Monitor.ctl_para.g
 1998              		.loc 1 565 5 is_stmt 1 view .LVU527
 1999              		.loc 1 565 98 is_stmt 0 view .LVU528
 2000 0032 D4F85A00 		ldr	r0, [r4, #90]	@ unaligned
 2001              		.loc 1 565 5 view .LVU529
 2002 0036 FFF7FEFF 		bl	__aeabi_f2d
 2003              	.LVL106:
 2004 003a 0246     		mov	r2, r0
 2005 003c 0B46     		mov	r3, r1
 2006 003e 7C49     		ldr	r1, .L162+16
 2007 0040 2846     		mov	r0, r5
 2008 0042 FFF7FEFF 		bl	shellPrint
 2009              	.LVL107:
 566:Task/Task_Control.c ****     shellPrint(shell_obj, "    Y angular speed control rate %f\r\n", TaskControl_Monitor.ctl_para.g
 2010              		.loc 1 566 5 is_stmt 1 view .LVU530
 2011              		.loc 1 566 98 is_stmt 0 view .LVU531
 2012 0046 D4F86200 		ldr	r0, [r4, #98]	@ unaligned
 2013              		.loc 1 566 5 view .LVU532
 2014 004a FFF7FEFF 		bl	__aeabi_f2d
 2015              	.LVL108:
 2016 004e 0246     		mov	r2, r0
 2017 0050 0B46     		mov	r3, r1
 2018 0052 7849     		ldr	r1, .L162+20
 2019 0054 2846     		mov	r0, r5
 2020 0056 FFF7FEFF 		bl	shellPrint
 2021              	.LVL109:
 567:Task/Task_Control.c ****     shellPrint(shell_obj, "    Z angular speed control rate %f\r\n", TaskControl_Monitor.ctl_para.g
 2022              		.loc 1 567 5 is_stmt 1 view .LVU533
 2023              		.loc 1 567 98 is_stmt 0 view .LVU534
 2024 005a D4F86A00 		ldr	r0, [r4, #106]	@ unaligned
 2025              		.loc 1 567 5 view .LVU535
 2026 005e FFF7FEFF 		bl	__aeabi_f2d
 2027              	.LVL110:
 2028 0062 0246     		mov	r2, r0
 2029 0064 0B46     		mov	r3, r1
 2030 0066 7449     		ldr	r1, .L162+24
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 53


 2031 0068 2846     		mov	r0, r5
 2032 006a FFF7FEFF 		bl	shellPrint
 2033              	.LVL111:
 568:Task/Task_Control.c ****     
 569:Task/Task_Control.c ****     shellPrint(shell_obj, "--- control range ---\r\n");
 2034              		.loc 1 569 5 is_stmt 1 view .LVU536
 2035 006e 7349     		ldr	r1, .L162+28
 2036 0070 2846     		mov	r0, r5
 2037 0072 FFF7FEFF 		bl	shellPrint
 2038              	.LVL112:
 570:Task/Task_Control.c ****     shellPrint(shell_obj, "    pitch           range ±%d\r\n", TaskControl_Monitor.ctl_para.pitch_
 2039              		.loc 1 570 5 view .LVU537
 2040              		.loc 1 570 93 is_stmt 0 view .LVU538
 2041 0076 D4F85200 		ldr	r0, [r4, #82]	@ unaligned
 2042              		.loc 1 570 5 view .LVU539
 2043 007a FFF7FEFF 		bl	__aeabi_f2d
 2044              	.LVL113:
 2045 007e 0246     		mov	r2, r0
 2046 0080 0B46     		mov	r3, r1
 2047 0082 6F49     		ldr	r1, .L162+32
 2048 0084 2846     		mov	r0, r5
 2049 0086 FFF7FEFF 		bl	shellPrint
 2050              	.LVL114:
 571:Task/Task_Control.c ****     shellPrint(shell_obj, "    roll            range ±%d\r\n", TaskControl_Monitor.ctl_para.roll_r
 2051              		.loc 1 571 5 is_stmt 1 view .LVU540
 2052              		.loc 1 571 93 is_stmt 0 view .LVU541
 2053 008a D4F85600 		ldr	r0, [r4, #86]	@ unaligned
 2054              		.loc 1 571 5 view .LVU542
 2055 008e FFF7FEFF 		bl	__aeabi_f2d
 2056              	.LVL115:
 2057 0092 0246     		mov	r2, r0
 2058 0094 0B46     		mov	r3, r1
 2059 0096 6B49     		ldr	r1, .L162+36
 2060 0098 2846     		mov	r0, r5
 2061 009a FFF7FEFF 		bl	shellPrint
 2062              	.LVL116:
 572:Task/Task_Control.c ****     shellPrint(shell_obj, "    X angular speed range ±%d\r\n", TaskControl_Monitor.ctl_para.gx_ran
 2063              		.loc 1 572 5 is_stmt 1 view .LVU543
 2064              		.loc 1 572 93 is_stmt 0 view .LVU544
 2065 009e D4F85E00 		ldr	r0, [r4, #94]	@ unaligned
 2066              		.loc 1 572 5 view .LVU545
 2067 00a2 FFF7FEFF 		bl	__aeabi_f2d
 2068              	.LVL117:
 2069 00a6 0246     		mov	r2, r0
 2070 00a8 0B46     		mov	r3, r1
 2071 00aa 6749     		ldr	r1, .L162+40
 2072 00ac 2846     		mov	r0, r5
 2073 00ae FFF7FEFF 		bl	shellPrint
 2074              	.LVL118:
 573:Task/Task_Control.c ****     shellPrint(shell_obj, "    Y angular speed range ±%d\r\n", TaskControl_Monitor.ctl_para.gy_ran
 2075              		.loc 1 573 5 is_stmt 1 view .LVU546
 2076              		.loc 1 573 93 is_stmt 0 view .LVU547
 2077 00b2 D4F86600 		ldr	r0, [r4, #102]	@ unaligned
 2078              		.loc 1 573 5 view .LVU548
 2079 00b6 FFF7FEFF 		bl	__aeabi_f2d
 2080              	.LVL119:
 2081 00ba 0246     		mov	r2, r0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 54


 2082 00bc 0B46     		mov	r3, r1
 2083 00be 6349     		ldr	r1, .L162+44
 2084 00c0 2846     		mov	r0, r5
 2085 00c2 FFF7FEFF 		bl	shellPrint
 2086              	.LVL120:
 574:Task/Task_Control.c ****     shellPrint(shell_obj, "    Z angular speed range ±%d\r\n", TaskControl_Monitor.ctl_para.gz_ran
 2087              		.loc 1 574 5 is_stmt 1 view .LVU549
 2088              		.loc 1 574 93 is_stmt 0 view .LVU550
 2089 00c6 D4F86E00 		ldr	r0, [r4, #110]	@ unaligned
 2090              		.loc 1 574 5 view .LVU551
 2091 00ca FFF7FEFF 		bl	__aeabi_f2d
 2092              	.LVL121:
 2093 00ce 0246     		mov	r2, r0
 2094 00d0 0B46     		mov	r3, r1
 2095 00d2 5F49     		ldr	r1, .L162+48
 2096 00d4 2846     		mov	r0, r5
 2097 00d6 FFF7FEFF 		bl	shellPrint
 2098              	.LVL122:
 575:Task/Task_Control.c ****     shellPrint(shell_obj, "--- attitude control mode ---\r\n");
 2099              		.loc 1 575 5 is_stmt 1 view .LVU552
 2100 00da 5E49     		ldr	r1, .L162+52
 2101 00dc 2846     		mov	r0, r5
 2102 00de FFF7FEFF 		bl	shellPrint
 2103              	.LVL123:
 576:Task/Task_Control.c ****     switch (TaskControl_Monitor.ctl_para.att_mode)
 2104              		.loc 1 576 5 view .LVU553
 2105              		.loc 1 576 41 is_stmt 0 view .LVU554
 2106 00e2 94F84C30 		ldrb	r3, [r4, #76]	@ zero_extendqisi2
 2107              		.loc 1 576 5 view .LVU555
 2108 00e6 012B     		cmp	r3, #1
 2109 00e8 1CD0     		beq	.L136
 2110 00ea 022B     		cmp	r3, #2
 2111 00ec 1FD0     		beq	.L137
 2112 00ee 23B1     		cbz	r3, .L160
 577:Task/Task_Control.c ****     {
 578:Task/Task_Control.c ****         case CtlM_PID:   shellPrint(shell_obj, " ---- pid\r\n"); break;
 579:Task/Task_Control.c ****         case CtlM_LADRC: shellPrint(shell_obj, " ---- ladrc\r\n"); break;
 580:Task/Task_Control.c ****         case CtlM_MUDE:  shellPrint(shell_obj, " ---- mude\r\n"); break;
 581:Task/Task_Control.c ****         default: shellPrint(shell_obj, " ---- unknow control mode\r\n"); break;
 2113              		.loc 1 581 18 is_stmt 1 view .LVU556
 2114 00f0 5949     		ldr	r1, .L162+56
 2115 00f2 2846     		mov	r0, r5
 2116 00f4 FFF7FEFF 		bl	shellPrint
 2117              	.LVL124:
 2118              		.loc 1 581 74 view .LVU557
 2119              		.loc 1 581 9 is_stmt 0 view .LVU558
 2120 00f8 03E0     		b	.L139
 2121              	.L160:
 578:Task/Task_Control.c ****         case CtlM_LADRC: shellPrint(shell_obj, " ---- ladrc\r\n"); break;
 2122              		.loc 1 578 26 is_stmt 1 view .LVU559
 2123 00fa 5849     		ldr	r1, .L162+60
 2124 00fc 2846     		mov	r0, r5
 2125 00fe FFF7FEFF 		bl	shellPrint
 2126              	.LVL125:
 578:Task/Task_Control.c ****         case CtlM_LADRC: shellPrint(shell_obj, " ---- ladrc\r\n"); break;
 2127              		.loc 1 578 66 view .LVU560
 2128              	.L139:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 55


 582:Task/Task_Control.c ****     }
 583:Task/Task_Control.c **** 
 584:Task/Task_Control.c ****     shellPrint(shell_obj, "--- altitude control mode ---\r\n");
 2129              		.loc 1 584 5 view .LVU561
 2130 0102 5749     		ldr	r1, .L162+64
 2131 0104 2846     		mov	r0, r5
 2132 0106 FFF7FEFF 		bl	shellPrint
 2133              	.LVL126:
 585:Task/Task_Control.c ****     switch (TaskControl_Monitor.ctl_para.alt_mode)
 2134              		.loc 1 585 5 view .LVU562
 2135              		.loc 1 585 41 is_stmt 0 view .LVU563
 2136 010a 474B     		ldr	r3, .L162+8
 2137 010c 93F84D30 		ldrb	r3, [r3, #77]	@ zero_extendqisi2
 2138              		.loc 1 585 5 view .LVU564
 2139 0110 012B     		cmp	r3, #1
 2140 0112 2FD0     		beq	.L140
 2141 0114 022B     		cmp	r3, #2
 2142 0116 32D0     		beq	.L141
 2143 0118 73B1     		cbz	r3, .L161
 586:Task/Task_Control.c ****     {
 587:Task/Task_Control.c ****         case CtlM_PID:   shellPrint(shell_obj, " ---- pid\r\n"); break;
 588:Task/Task_Control.c ****         case CtlM_LADRC: shellPrint(shell_obj, " ---- ladrc\r\n"); break;
 589:Task/Task_Control.c ****         case CtlM_MUDE:  shellPrint(shell_obj, " ---- mude\r\n"); break;
 590:Task/Task_Control.c ****         default: shellPrint(shell_obj, " ---- unknow control mode\r\n"); break;
 2144              		.loc 1 590 18 is_stmt 1 view .LVU565
 2145 011a 4F49     		ldr	r1, .L162+56
 2146 011c 2846     		mov	r0, r5
 2147 011e FFF7FEFF 		bl	shellPrint
 2148              	.LVL127:
 2149              		.loc 1 590 74 view .LVU566
 2150              		.loc 1 590 9 is_stmt 0 view .LVU567
 2151 0122 0DE0     		b	.L143
 2152              	.L136:
 579:Task/Task_Control.c ****         case CtlM_MUDE:  shellPrint(shell_obj, " ---- mude\r\n"); break;
 2153              		.loc 1 579 26 is_stmt 1 view .LVU568
 2154 0124 4F49     		ldr	r1, .L162+68
 2155 0126 2846     		mov	r0, r5
 2156 0128 FFF7FEFF 		bl	shellPrint
 2157              	.LVL128:
 579:Task/Task_Control.c ****         case CtlM_MUDE:  shellPrint(shell_obj, " ---- mude\r\n"); break;
 2158              		.loc 1 579 68 view .LVU569
 579:Task/Task_Control.c ****         case CtlM_MUDE:  shellPrint(shell_obj, " ---- mude\r\n"); break;
 2159              		.loc 1 579 9 is_stmt 0 view .LVU570
 2160 012c E9E7     		b	.L139
 2161              	.L137:
 580:Task/Task_Control.c ****         default: shellPrint(shell_obj, " ---- unknow control mode\r\n"); break;
 2162              		.loc 1 580 26 is_stmt 1 view .LVU571
 2163 012e 4E49     		ldr	r1, .L162+72
 2164 0130 2846     		mov	r0, r5
 2165 0132 FFF7FEFF 		bl	shellPrint
 2166              	.LVL129:
 580:Task/Task_Control.c ****         default: shellPrint(shell_obj, " ---- unknow control mode\r\n"); break;
 2167              		.loc 1 580 67 view .LVU572
 580:Task/Task_Control.c ****         default: shellPrint(shell_obj, " ---- unknow control mode\r\n"); break;
 2168              		.loc 1 580 9 is_stmt 0 view .LVU573
 2169 0136 E4E7     		b	.L139
 2170              	.L161:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 56


 587:Task/Task_Control.c ****         case CtlM_LADRC: shellPrint(shell_obj, " ---- ladrc\r\n"); break;
 2171              		.loc 1 587 26 is_stmt 1 view .LVU574
 2172 0138 4849     		ldr	r1, .L162+60
 2173 013a 2846     		mov	r0, r5
 2174 013c FFF7FEFF 		bl	shellPrint
 2175              	.LVL130:
 587:Task/Task_Control.c ****         case CtlM_LADRC: shellPrint(shell_obj, " ---- ladrc\r\n"); break;
 2176              		.loc 1 587 66 view .LVU575
 2177              	.L143:
 591:Task/Task_Control.c ****     }
 592:Task/Task_Control.c **** 
 593:Task/Task_Control.c ****     shellPrint(shell_obj, "[ actuator parameter ]\r\n");
 2178              		.loc 1 593 5 view .LVU576
 2179 0140 4A49     		ldr	r1, .L162+76
 2180 0142 2846     		mov	r0, r5
 2181 0144 FFF7FEFF 		bl	shellPrint
 2182              	.LVL131:
 594:Task/Task_Control.c ****     shellPrint(shell_obj, "    moto  num %d\r\n", TaskControl_Monitor.actuator_param.moto_num);
 2183              		.loc 1 594 5 view .LVU577
 2184              		.loc 1 594 85 is_stmt 0 view .LVU578
 2185 0148 374C     		ldr	r4, .L162+8
 2186              		.loc 1 594 5 view .LVU579
 2187 014a 94F8B820 		ldrb	r2, [r4, #184]	@ zero_extendqisi2
 2188 014e 4849     		ldr	r1, .L162+80
 2189 0150 2846     		mov	r0, r5
 2190 0152 FFF7FEFF 		bl	shellPrint
 2191              	.LVL132:
 595:Task/Task_Control.c ****     shellPrint(shell_obj, "    servo num %d\r\n", TaskControl_Monitor.actuator_param.servo_num);
 2192              		.loc 1 595 5 is_stmt 1 view .LVU580
 2193 0156 94F8BA20 		ldrb	r2, [r4, #186]	@ zero_extendqisi2
 2194 015a 4649     		ldr	r1, .L162+84
 2195 015c 2846     		mov	r0, r5
 2196 015e FFF7FEFF 		bl	shellPrint
 2197              	.LVL133:
 596:Task/Task_Control.c ****     switch (TaskControl_Monitor.actuator_param.esc_type)
 2198              		.loc 1 596 5 view .LVU581
 2199              		.loc 1 596 47 is_stmt 0 view .LVU582
 2200 0162 94F8B930 		ldrb	r3, [r4, #185]	@ zero_extendqisi2
 2201              		.loc 1 596 5 view .LVU583
 2202 0166 013B     		subs	r3, r3, #1
 2203 0168 032B     		cmp	r3, #3
 2204 016a 11D8     		bhi	.L144
 2205 016c DFE803F0 		tbb	[pc, r3]
 2206              	.L146:
 2207 0170 0C       		.byte	(.L149-.L146)/2
 2208 0171 1A       		.byte	(.L148-.L146)/2
 2209 0172 1F       		.byte	(.L147-.L146)/2
 2210 0173 24       		.byte	(.L145-.L146)/2
 2211              		.p2align 1
 2212              	.L140:
 588:Task/Task_Control.c ****         case CtlM_MUDE:  shellPrint(shell_obj, " ---- mude\r\n"); break;
 2213              		.loc 1 588 26 is_stmt 1 view .LVU584
 2214 0174 3B49     		ldr	r1, .L162+68
 2215 0176 2846     		mov	r0, r5
 2216 0178 FFF7FEFF 		bl	shellPrint
 2217              	.LVL134:
 588:Task/Task_Control.c ****         case CtlM_MUDE:  shellPrint(shell_obj, " ---- mude\r\n"); break;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 57


 2218              		.loc 1 588 68 view .LVU585
 588:Task/Task_Control.c ****         case CtlM_MUDE:  shellPrint(shell_obj, " ---- mude\r\n"); break;
 2219              		.loc 1 588 9 is_stmt 0 view .LVU586
 2220 017c E0E7     		b	.L143
 2221              	.L141:
 589:Task/Task_Control.c ****         default: shellPrint(shell_obj, " ---- unknow control mode\r\n"); break;
 2222              		.loc 1 589 26 is_stmt 1 view .LVU587
 2223 017e 3A49     		ldr	r1, .L162+72
 2224 0180 2846     		mov	r0, r5
 2225 0182 FFF7FEFF 		bl	shellPrint
 2226              	.LVL135:
 589:Task/Task_Control.c ****         default: shellPrint(shell_obj, " ---- unknow control mode\r\n"); break;
 2227              		.loc 1 589 67 view .LVU588
 589:Task/Task_Control.c ****         default: shellPrint(shell_obj, " ---- unknow control mode\r\n"); break;
 2228              		.loc 1 589 9 is_stmt 0 view .LVU589
 2229 0186 DBE7     		b	.L143
 2230              	.L149:
 597:Task/Task_Control.c ****     {
 598:Task/Task_Control.c ****         case Actuator_DevType_DShot150: shellPrint(shell_obj, " ---- ESC DShot_150\r\n"); break;
 2231              		.loc 1 598 41 is_stmt 1 view .LVU590
 2232 0188 3B49     		ldr	r1, .L162+88
 2233 018a 2846     		mov	r0, r5
 2234 018c FFF7FEFF 		bl	shellPrint
 2235              	.LVL136:
 2236              		.loc 1 598 91 view .LVU591
 2237              	.L144:
 599:Task/Task_Control.c ****         case Actuator_DevType_DShot300: shellPrint(shell_obj, " ---- ESC DShot_300\r\n"); break;
 600:Task/Task_Control.c ****         case Actuator_DevType_DShot600: shellPrint(shell_obj, " ---- ESC DShot_600\r\n"); break;
 601:Task/Task_Control.c ****         case Actuator_DevType_Brush:    shellPrint(shell_obj, " ---- ESC Brush\r\n"); break;
 602:Task/Task_Control.c ****         default: break;
 603:Task/Task_Control.c ****     }
 604:Task/Task_Control.c ****     
 605:Task/Task_Control.c ****     switch (TaskControl_Monitor.actuator_param.model)
 2238              		.loc 1 605 5 view .LVU592
 2239              		.loc 1 605 47 is_stmt 0 view .LVU593
 2240 0190 254B     		ldr	r3, .L162+8
 2241 0192 93F8B730 		ldrb	r3, [r3, #183]	@ zero_extendqisi2
 2242              		.loc 1 605 5 view .LVU594
 2243 0196 042B     		cmp	r3, #4
 2244 0198 17D8     		bhi	.L150
 2245 019a DFE803F0 		tbb	[pc, r3]
 2246              	.L152:
 2247 019e 12       		.byte	(.L156-.L152)/2
 2248 019f 1C       		.byte	(.L155-.L152)/2
 2249 01a0 21       		.byte	(.L154-.L152)/2
 2250 01a1 26       		.byte	(.L153-.L152)/2
 2251 01a2 2B       		.byte	(.L151-.L152)/2
 2252 01a3 00       		.p2align 1
 2253              	.L148:
 599:Task/Task_Control.c ****         case Actuator_DevType_DShot300: shellPrint(shell_obj, " ---- ESC DShot_300\r\n"); break;
 2254              		.loc 1 599 41 is_stmt 1 view .LVU595
 2255 01a4 3549     		ldr	r1, .L162+92
 2256 01a6 2846     		mov	r0, r5
 2257 01a8 FFF7FEFF 		bl	shellPrint
 2258              	.LVL137:
 599:Task/Task_Control.c ****         case Actuator_DevType_DShot300: shellPrint(shell_obj, " ---- ESC DShot_300\r\n"); break;
 2259              		.loc 1 599 91 view .LVU596
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 58


 599:Task/Task_Control.c ****         case Actuator_DevType_DShot300: shellPrint(shell_obj, " ---- ESC DShot_300\r\n"); break;
 2260              		.loc 1 599 9 is_stmt 0 view .LVU597
 2261 01ac F0E7     		b	.L144
 2262              	.L147:
 600:Task/Task_Control.c ****         case Actuator_DevType_Brush:    shellPrint(shell_obj, " ---- ESC Brush\r\n"); break;
 2263              		.loc 1 600 41 is_stmt 1 view .LVU598
 2264 01ae 3449     		ldr	r1, .L162+96
 2265 01b0 2846     		mov	r0, r5
 2266 01b2 FFF7FEFF 		bl	shellPrint
 2267              	.LVL138:
 600:Task/Task_Control.c ****         case Actuator_DevType_Brush:    shellPrint(shell_obj, " ---- ESC Brush\r\n"); break;
 2268              		.loc 1 600 91 view .LVU599
 600:Task/Task_Control.c ****         case Actuator_DevType_Brush:    shellPrint(shell_obj, " ---- ESC Brush\r\n"); break;
 2269              		.loc 1 600 9 is_stmt 0 view .LVU600
 2270 01b6 EBE7     		b	.L144
 2271              	.L145:
 601:Task/Task_Control.c ****         default: break;
 2272              		.loc 1 601 41 is_stmt 1 view .LVU601
 2273 01b8 3249     		ldr	r1, .L162+100
 2274 01ba 2846     		mov	r0, r5
 2275 01bc FFF7FEFF 		bl	shellPrint
 2276              	.LVL139:
 601:Task/Task_Control.c ****         default: break;
 2277              		.loc 1 601 87 view .LVU602
 601:Task/Task_Control.c ****         default: break;
 2278              		.loc 1 601 9 is_stmt 0 view .LVU603
 2279 01c0 E6E7     		b	.L144
 2280              	.L156:
 606:Task/Task_Control.c ****     {
 607:Task/Task_Control.c ****         case Model_Quad:   shellPrint(shell_obj, " ---- QUAD\r\n"); break;
 2281              		.loc 1 607 28 is_stmt 1 view .LVU604
 2282 01c2 3149     		ldr	r1, .L162+104
 2283 01c4 2846     		mov	r0, r5
 2284 01c6 FFF7FEFF 		bl	shellPrint
 2285              	.LVL140:
 2286              		.loc 1 607 69 view .LVU605
 2287              	.L150:
 608:Task/Task_Control.c ****         case Model_Hex:    shellPrint(shell_obj, " ---- HEX\r\n"); break;
 609:Task/Task_Control.c ****         case Model_Y6:     shellPrint(shell_obj, " ---- Y6\r\n"); break;
 610:Task/Task_Control.c ****         case Model_Tri:    shellPrint(shell_obj, " ---- TRI\r\n"); break;
 611:Task/Task_Control.c ****         case Model_TDrone: shellPrint(shell_obj, " ---- TDrone\r\n"); break;
 612:Task/Task_Control.c ****         default: break;
 613:Task/Task_Control.c ****     }
 614:Task/Task_Control.c **** 
 615:Task/Task_Control.c ****     shellPrint(shell_obj, "---- moto mapping relationship ----\r\n");
 2288              		.loc 1 615 5 view .LVU606
 2289 01ca 3049     		ldr	r1, .L162+108
 2290 01cc 2846     		mov	r0, r5
 2291 01ce FFF7FEFF 		bl	shellPrint
 2292              	.LVL141:
 616:Task/Task_Control.c ****     for (uint8_t i = 0; i < TaskControl_Monitor.actuator_param.moto_num; i ++)
 2293              		.loc 1 616 5 view .LVU607
 2294              	.LBB9:
 2295              		.loc 1 616 10 view .LVU608
 2296              		.loc 1 616 18 is_stmt 0 view .LVU609
 2297 01d2 0024     		movs	r4, #0
 2298              		.loc 1 616 5 view .LVU610
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 59


 2299 01d4 1EE0     		b	.L157
 2300              	.LVL142:
 2301              	.L155:
 2302              		.loc 1 616 5 view .LVU611
 2303              	.LBE9:
 608:Task/Task_Control.c ****         case Model_Hex:    shellPrint(shell_obj, " ---- HEX\r\n"); break;
 2304              		.loc 1 608 28 is_stmt 1 view .LVU612
 2305 01d6 2E49     		ldr	r1, .L162+112
 2306 01d8 2846     		mov	r0, r5
 2307 01da FFF7FEFF 		bl	shellPrint
 2308              	.LVL143:
 608:Task/Task_Control.c ****         case Model_Hex:    shellPrint(shell_obj, " ---- HEX\r\n"); break;
 2309              		.loc 1 608 68 view .LVU613
 608:Task/Task_Control.c ****         case Model_Hex:    shellPrint(shell_obj, " ---- HEX\r\n"); break;
 2310              		.loc 1 608 9 is_stmt 0 view .LVU614
 2311 01de F4E7     		b	.L150
 2312              	.L154:
 609:Task/Task_Control.c ****         case Model_Tri:    shellPrint(shell_obj, " ---- TRI\r\n"); break;
 2313              		.loc 1 609 28 is_stmt 1 view .LVU615
 2314 01e0 2C49     		ldr	r1, .L162+116
 2315 01e2 2846     		mov	r0, r5
 2316 01e4 FFF7FEFF 		bl	shellPrint
 2317              	.LVL144:
 609:Task/Task_Control.c ****         case Model_Tri:    shellPrint(shell_obj, " ---- TRI\r\n"); break;
 2318              		.loc 1 609 67 view .LVU616
 609:Task/Task_Control.c ****         case Model_Tri:    shellPrint(shell_obj, " ---- TRI\r\n"); break;
 2319              		.loc 1 609 9 is_stmt 0 view .LVU617
 2320 01e8 EFE7     		b	.L150
 2321              	.L153:
 610:Task/Task_Control.c ****         case Model_TDrone: shellPrint(shell_obj, " ---- TDrone\r\n"); break;
 2322              		.loc 1 610 28 is_stmt 1 view .LVU618
 2323 01ea 2B49     		ldr	r1, .L162+120
 2324 01ec 2846     		mov	r0, r5
 2325 01ee FFF7FEFF 		bl	shellPrint
 2326              	.LVL145:
 610:Task/Task_Control.c ****         case Model_TDrone: shellPrint(shell_obj, " ---- TDrone\r\n"); break;
 2327              		.loc 1 610 68 view .LVU619
 610:Task/Task_Control.c ****         case Model_TDrone: shellPrint(shell_obj, " ---- TDrone\r\n"); break;
 2328              		.loc 1 610 9 is_stmt 0 view .LVU620
 2329 01f2 EAE7     		b	.L150
 2330              	.L151:
 611:Task/Task_Control.c ****         default: break;
 2331              		.loc 1 611 28 is_stmt 1 view .LVU621
 2332 01f4 2949     		ldr	r1, .L162+124
 2333 01f6 2846     		mov	r0, r5
 2334 01f8 FFF7FEFF 		bl	shellPrint
 2335              	.LVL146:
 611:Task/Task_Control.c ****         default: break;
 2336              		.loc 1 611 71 view .LVU622
 611:Task/Task_Control.c ****         default: break;
 2337              		.loc 1 611 9 is_stmt 0 view .LVU623
 2338 01fc E5E7     		b	.L150
 2339              	.LVL147:
 2340              	.L158:
 2341              	.LBB10:
 617:Task/Task_Control.c ****     {
 618:Task/Task_Control.c ****         shellPrint(shell_obj, "    moto list index %d -> map to phy rotor %d\r\n", i, TaskControl_M
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 60


 2342              		.loc 1 618 9 is_stmt 1 discriminator 3 view .LVU624
 2343              		.loc 1 618 130 is_stmt 0 discriminator 3 view .LVU625
 2344 01fe 0A4B     		ldr	r3, .L162+8
 2345 0200 2344     		add	r3, r3, r4
 2346              		.loc 1 618 9 discriminator 3 view .LVU626
 2347 0202 93F8BB30 		ldrb	r3, [r3, #187]	@ zero_extendqisi2
 2348 0206 2246     		mov	r2, r4
 2349 0208 2549     		ldr	r1, .L162+128
 2350 020a 2846     		mov	r0, r5
 2351 020c FFF7FEFF 		bl	shellPrint
 2352              	.LVL148:
 616:Task/Task_Control.c ****     {
 2353              		.loc 1 616 74 is_stmt 1 discriminator 3 view .LVU627
 616:Task/Task_Control.c ****     {
 2354              		.loc 1 616 76 is_stmt 0 discriminator 3 view .LVU628
 2355 0210 0134     		adds	r4, r4, #1
 2356              	.LVL149:
 616:Task/Task_Control.c ****     {
 2357              		.loc 1 616 76 discriminator 3 view .LVU629
 2358 0212 E4B2     		uxtb	r4, r4
 2359              	.LVL150:
 2360              	.L157:
 616:Task/Task_Control.c ****     {
 2361              		.loc 1 616 25 is_stmt 1 discriminator 1 view .LVU630
 616:Task/Task_Control.c ****     {
 2362              		.loc 1 616 63 is_stmt 0 discriminator 1 view .LVU631
 2363 0214 044B     		ldr	r3, .L162+8
 2364 0216 93F8B830 		ldrb	r3, [r3, #184]	@ zero_extendqisi2
 616:Task/Task_Control.c ****     {
 2365              		.loc 1 616 5 discriminator 1 view .LVU632
 2366 021a A342     		cmp	r3, r4
 2367 021c EFD8     		bhi	.L158
 2368              	.LVL151:
 2369              	.L134:
 616:Task/Task_Control.c ****     {
 2370              		.loc 1 616 5 discriminator 1 view .LVU633
 2371              	.LBE10:
 619:Task/Task_Control.c ****     }
 620:Task/Task_Control.c **** }
 2372              		.loc 1 620 1 view .LVU634
 2373 021e 38BD     		pop	{r3, r4, r5, pc}
 2374              	.L163:
 2375              		.align	2
 2376              	.L162:
 2377 0220 00000000 		.word	.LC5
 2378 0224 18000000 		.word	.LC6
 2379 0228 00000000 		.word	.LANCHOR0
 2380 022c 30000000 		.word	.LC7
 2381 0230 58000000 		.word	.LC8
 2382 0234 80000000 		.word	.LC9
 2383 0238 A8000000 		.word	.LC10
 2384 023c D0000000 		.word	.LC11
 2385 0240 E8000000 		.word	.LC12
 2386 0244 0C010000 		.word	.LC13
 2387 0248 30010000 		.word	.LC14
 2388 024c 54010000 		.word	.LC15
 2389 0250 78010000 		.word	.LC16
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 61


 2390 0254 9C010000 		.word	.LC17
 2391 0258 E8010000 		.word	.LC21
 2392 025c BC010000 		.word	.LC18
 2393 0260 04020000 		.word	.LC22
 2394 0264 C8010000 		.word	.LC19
 2395 0268 D8010000 		.word	.LC20
 2396 026c 24020000 		.word	.LC23
 2397 0270 40020000 		.word	.LC24
 2398 0274 54020000 		.word	.LC25
 2399 0278 68020000 		.word	.LC26
 2400 027c 80020000 		.word	.LC27
 2401 0280 98020000 		.word	.LC28
 2402 0284 B0020000 		.word	.LC29
 2403 0288 C4020000 		.word	.LC30
 2404 028c 08030000 		.word	.LC35
 2405 0290 D4020000 		.word	.LC31
 2406 0294 E0020000 		.word	.LC32
 2407 0298 EC020000 		.word	.LC33
 2408 029c F8020000 		.word	.LC34
 2409 02a0 30030000 		.word	.LC36
 2410              		.cfi_endproc
 2411              	.LFE2082:
 2413              		.section	.rodata.TaskControl_CLI_SetMotoType.str1.4,"aMS",%progbits,1
 2414              		.align	2
 2415              	.LC37:
 2416 0000 45534320 		.ascii	"ESC type list\015\012\000"
 2416      74797065 
 2416      206C6973 
 2416      740D0A00 
 2417              		.align	2
 2418              	.LC38:
 2419 0010 20256420 		.ascii	" %d ---- DShot150 \015\012\000"
 2419      2D2D2D2D 
 2419      20445368 
 2419      6F743135 
 2419      30200D0A 
 2420 0025 000000   		.align	2
 2421              	.LC39:
 2422 0028 20256420 		.ascii	" %d ---- DShot300 \015\012\000"
 2422      2D2D2D2D 
 2422      20445368 
 2422      6F743330 
 2422      30200D0A 
 2423 003d 000000   		.align	2
 2424              	.LC40:
 2425 0040 20256420 		.ascii	" %d ---- DShot600 \015\012\000"
 2425      2D2D2D2D 
 2425      20445368 
 2425      6F743630 
 2425      30200D0A 
 2426 0055 000000   		.align	2
 2427              	.LC41:
 2428 0058 20256420 		.ascii	" %d ---- Brush \015\012\000"
 2428      2D2D2D2D 
 2428      20427275 
 2428      7368200D 
 2428      0A00
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 62


 2429 006a 0000     		.align	2
 2430              	.LC42:
 2431 006c 20202020 		.ascii	"    DShot300 Selected\015\012\000"
 2431      4453686F 
 2431      74333030 
 2431      2053656C 
 2431      65637465 
 2432              		.align	2
 2433              	.LC43:
 2434 0084 20202020 		.ascii	"    BrushMoto Selected\015\012\000"
 2434      42727573 
 2434      684D6F74 
 2434      6F205365 
 2434      6C656374 
 2435 009d 000000   		.align	2
 2436              	.LC44:
 2437 00a0 4572726F 		.ascii	"Error ESC type or none support ESC type input\015\012"
 2437      72204553 
 2437      43207479 
 2437      7065206F 
 2437      72206E6F 
 2438 00cf 00       		.ascii	"\000"
 2439              		.align	2
 2440              	.LC45:
 2441 00d0 50617261 		.ascii	"Parameter update failed\015\012\000"
 2441      6D657465 
 2441      72207570 
 2441      64617465 
 2441      20666169 
 2442 00ea 0000     		.align	2
 2443              	.LC46:
 2444 00ec 50617261 		.ascii	"Parameter update done\015\012\000"
 2444      6D657465 
 2444      72207570 
 2444      64617465 
 2444      20646F6E 
 2445              		.align	2
 2446              	.LC47:
 2447 0104 7265626F 		.ascii	"rebooting\015\012\000"
 2447      6F74696E 
 2447      670D0A00 
 2448              		.section	.text.TaskControl_CLI_SetMotoType,"ax",%progbits
 2449              		.align	1
 2450              		.syntax unified
 2451              		.thumb
 2452              		.thumb_func
 2454              	TaskControl_CLI_SetMotoType:
 2455              	.LVL152:
 2456              	.LFB2083:
 621:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 622:Task/Task_Control.c **** 
 623:Task/Task_Control.c **** static void TaskControl_CLI_SetMotoType(uint8_t type)
 624:Task/Task_Control.c **** {
 2457              		.loc 1 624 1 is_stmt 1 view -0
 2458              		.cfi_startproc
 2459              		@ args = 0, pretend = 0, frame = 16
 2460              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 63


 2461              		.loc 1 624 1 is_stmt 0 view .LVU636
 2462 0000 70B5     		push	{r4, r5, r6, lr}
 2463              	.LCFI18:
 2464              		.cfi_def_cfa_offset 16
 2465              		.cfi_offset 4, -16
 2466              		.cfi_offset 5, -12
 2467              		.cfi_offset 6, -8
 2468              		.cfi_offset 14, -4
 2469 0002 84B0     		sub	sp, sp, #16
 2470              	.LCFI19:
 2471              		.cfi_def_cfa_offset 32
 2472 0004 0546     		mov	r5, r0
 625:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 2473              		.loc 1 625 5 is_stmt 1 view .LVU637
 2474              		.loc 1 625 24 is_stmt 0 view .LVU638
 2475 0006 FFF7FEFF 		bl	Shell_GetInstence
 2476              	.LVL153:
 2477              		.loc 1 625 24 view .LVU639
 2478 000a 0646     		mov	r6, r0
 2479              	.LVL154:
 626:Task/Task_Control.c ****     SrvActuator_Setting_TypeDef actuator_para_tmp = TaskControl_Monitor.actuator_param;
 2480              		.loc 1 626 5 is_stmt 1 view .LVU640
 2481              		.loc 1 626 33 is_stmt 0 view .LVU641
 2482 000c 2B4A     		ldr	r2, .L175
 2483 000e 01AB     		add	r3, sp, #4
 2484 0010 D2F8B700 		ldr	r0, [r2, #183]	@ unaligned
 2485              	.LVL155:
 2486              		.loc 1 626 33 view .LVU642
 2487 0014 D2F8BB10 		ldr	r1, [r2, #187]	@ unaligned
 2488 0018 D2F8BF20 		ldr	r2, [r2, #191]	@ unaligned
 2489 001c 07C3     		stmia	r3!, {r0, r1, r2}
 627:Task/Task_Control.c **** 
 628:Task/Task_Control.c ****     if (shell_obj == NULL)
 2490              		.loc 1 628 5 is_stmt 1 view .LVU643
 2491              		.loc 1 628 8 is_stmt 0 view .LVU644
 2492 001e 002E     		cmp	r6, #0
 2493 0020 3FD0     		beq	.L164
 2494 0022 3446     		mov	r4, r6
 629:Task/Task_Control.c ****         return;
 630:Task/Task_Control.c **** 
 631:Task/Task_Control.c ****     shellPrint(shell_obj, "ESC type list\r\n");
 2495              		.loc 1 631 5 is_stmt 1 view .LVU645
 2496 0024 2649     		ldr	r1, .L175+4
 2497 0026 3046     		mov	r0, r6
 2498 0028 FFF7FEFF 		bl	shellPrint
 2499              	.LVL156:
 632:Task/Task_Control.c ****     shellPrint(shell_obj, " %d ---- DShot150 \r\n", Actuator_DevType_DShot150);
 2500              		.loc 1 632 5 view .LVU646
 2501 002c 0122     		movs	r2, #1
 2502 002e 2549     		ldr	r1, .L175+8
 2503 0030 3046     		mov	r0, r6
 2504 0032 FFF7FEFF 		bl	shellPrint
 2505              	.LVL157:
 633:Task/Task_Control.c ****     shellPrint(shell_obj, " %d ---- DShot300 \r\n", Actuator_DevType_DShot300);
 2506              		.loc 1 633 5 view .LVU647
 2507 0036 0222     		movs	r2, #2
 2508 0038 2349     		ldr	r1, .L175+12
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 64


 2509 003a 3046     		mov	r0, r6
 2510 003c FFF7FEFF 		bl	shellPrint
 2511              	.LVL158:
 634:Task/Task_Control.c ****     shellPrint(shell_obj, " %d ---- DShot600 \r\n", Actuator_DevType_DShot600);
 2512              		.loc 1 634 5 view .LVU648
 2513 0040 0322     		movs	r2, #3
 2514 0042 2249     		ldr	r1, .L175+16
 2515 0044 3046     		mov	r0, r6
 2516 0046 FFF7FEFF 		bl	shellPrint
 2517              	.LVL159:
 635:Task/Task_Control.c ****     shellPrint(shell_obj, " %d ---- Brush \r\n", Actuator_DevType_Brush);
 2518              		.loc 1 635 5 view .LVU649
 2519 004a 0422     		movs	r2, #4
 2520 004c 2049     		ldr	r1, .L175+20
 2521 004e 3046     		mov	r0, r6
 2522 0050 FFF7FEFF 		bl	shellPrint
 2523              	.LVL160:
 636:Task/Task_Control.c **** 
 637:Task/Task_Control.c ****     switch (type)
 2524              		.loc 1 637 5 view .LVU650
 2525 0054 022D     		cmp	r5, #2
 2526 0056 06D0     		beq	.L166
 2527 0058 042D     		cmp	r5, #4
 2528 005a 24D0     		beq	.L167
 638:Task/Task_Control.c ****     {
 639:Task/Task_Control.c ****         case Actuator_DevType_DShot300: shellPrint(shell_obj, "    DShot300 Selected\r\n"); break;
 640:Task/Task_Control.c ****         case Actuator_DevType_Brush:    shellPrint(shell_obj, "    BrushMoto Selected\r\n"); break;
 641:Task/Task_Control.c ****         default: shellPrint(shell_obj, "Error ESC type or none support ESC type input\r\n"); return
 2529              		.loc 1 641 18 view .LVU651
 2530 005c 1D49     		ldr	r1, .L175+24
 2531 005e 3046     		mov	r0, r6
 2532 0060 FFF7FEFF 		bl	shellPrint
 2533              	.LVL161:
 2534              		.loc 1 641 94 view .LVU652
 2535 0064 1DE0     		b	.L164
 2536              	.L166:
 639:Task/Task_Control.c ****         case Actuator_DevType_Brush:    shellPrint(shell_obj, "    BrushMoto Selected\r\n"); break;
 2537              		.loc 1 639 41 view .LVU653
 2538 0066 1C49     		ldr	r1, .L175+28
 2539 0068 3046     		mov	r0, r6
 2540 006a FFF7FEFF 		bl	shellPrint
 2541              	.LVL162:
 639:Task/Task_Control.c ****         case Actuator_DevType_Brush:    shellPrint(shell_obj, "    BrushMoto Selected\r\n"); break;
 2542              		.loc 1 639 93 view .LVU654
 2543              	.L169:
 642:Task/Task_Control.c ****     }
 643:Task/Task_Control.c **** 
 644:Task/Task_Control.c ****     actuator_para_tmp.esc_type = type;
 2544              		.loc 1 644 5 view .LVU655
 2545              		.loc 1 644 32 is_stmt 0 view .LVU656
 2546 006e 8DF80650 		strb	r5, [sp, #6]
 645:Task/Task_Control.c ****     if (Storage.update(Para_User, TaskControl_Monitor.actuator_store_info.item_addr, (uint8_t *)&ac
 2547              		.loc 1 645 5 is_stmt 1 view .LVU657
 2548              		.loc 1 645 16 is_stmt 0 view .LVU658
 2549 0072 1A4B     		ldr	r3, .L175+32
 2550 0074 DD68     		ldr	r5, [r3, #12]
 2551              		.loc 1 645 9 view .LVU659
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 65


 2552 0076 0C23     		movs	r3, #12
 2553 0078 01AA     		add	r2, sp, #4
 2554 007a 1049     		ldr	r1, .L175
 2555 007c D1F87210 		ldr	r1, [r1, #114]	@ unaligned
 2556 0080 0220     		movs	r0, #2
 2557 0082 A847     		blx	r5
 2558              	.LVL163:
 2559              		.loc 1 645 8 view .LVU660
 2560 0084 A0B9     		cbnz	r0, .L174
 646:Task/Task_Control.c ****     {
 647:Task/Task_Control.c ****         shellPrint(shell_obj, "Parameter update failed\r\n");
 648:Task/Task_Control.c ****         return;
 649:Task/Task_Control.c ****     }
 650:Task/Task_Control.c **** 
 651:Task/Task_Control.c ****     /* after setting reboot is required */
 652:Task/Task_Control.c ****     shellPrint(shell_obj, "Parameter update done\r\n");
 2561              		.loc 1 652 5 is_stmt 1 view .LVU661
 2562 0086 1649     		ldr	r1, .L175+36
 2563 0088 2046     		mov	r0, r4
 2564 008a FFF7FEFF 		bl	shellPrint
 2565              	.LVL164:
 653:Task/Task_Control.c ****     shellPrint(shell_obj, "rebooting\r\n");
 2566              		.loc 1 653 5 view .LVU662
 2567 008e 1549     		ldr	r1, .L175+40
 2568 0090 2046     		mov	r0, r4
 2569 0092 FFF7FEFF 		bl	shellPrint
 2570              	.LVL165:
 654:Task/Task_Control.c **** 
 655:Task/Task_Control.c ****     SrvOsCommon.delay_ms(200);
 2571              		.loc 1 655 5 view .LVU663
 2572              		.loc 1 655 16 is_stmt 0 view .LVU664
 2573 0096 144C     		ldr	r4, .L175+44
 2574              	.LVL166:
 2575              		.loc 1 655 16 view .LVU665
 2576 0098 A368     		ldr	r3, [r4, #8]
 2577              		.loc 1 655 5 view .LVU666
 2578 009a C820     		movs	r0, #200
 2579 009c 9847     		blx	r3
 2580              	.LVL167:
 656:Task/Task_Control.c ****     SrvOsCommon.reboot();
 2581              		.loc 1 656 5 is_stmt 1 view .LVU667
 2582              		.loc 1 656 16 is_stmt 0 view .LVU668
 2583 009e A36C     		ldr	r3, [r4, #72]
 2584              		.loc 1 656 5 view .LVU669
 2585 00a0 9847     		blx	r3
 2586              	.LVL168:
 2587              	.L164:
 657:Task/Task_Control.c **** }
 2588              		.loc 1 657 1 view .LVU670
 2589 00a2 04B0     		add	sp, sp, #16
 2590              	.LCFI20:
 2591              		.cfi_remember_state
 2592              		.cfi_def_cfa_offset 16
 2593              		@ sp needed
 2594 00a4 70BD     		pop	{r4, r5, r6, pc}
 2595              	.LVL169:
 2596              	.L167:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 66


 2597              	.LCFI21:
 2598              		.cfi_restore_state
 640:Task/Task_Control.c ****         default: shellPrint(shell_obj, "Error ESC type or none support ESC type input\r\n"); return
 2599              		.loc 1 640 41 is_stmt 1 view .LVU671
 2600 00a6 1149     		ldr	r1, .L175+48
 2601 00a8 3046     		mov	r0, r6
 2602 00aa FFF7FEFF 		bl	shellPrint
 2603              	.LVL170:
 640:Task/Task_Control.c ****         default: shellPrint(shell_obj, "Error ESC type or none support ESC type input\r\n"); return
 2604              		.loc 1 640 94 view .LVU672
 640:Task/Task_Control.c ****         default: shellPrint(shell_obj, "Error ESC type or none support ESC type input\r\n"); return
 2605              		.loc 1 640 9 is_stmt 0 view .LVU673
 2606 00ae DEE7     		b	.L169
 2607              	.L174:
 647:Task/Task_Control.c ****         return;
 2608              		.loc 1 647 9 is_stmt 1 view .LVU674
 2609 00b0 0F49     		ldr	r1, .L175+52
 2610 00b2 2046     		mov	r0, r4
 2611 00b4 FFF7FEFF 		bl	shellPrint
 2612              	.LVL171:
 648:Task/Task_Control.c ****     }
 2613              		.loc 1 648 9 view .LVU675
 2614 00b8 F3E7     		b	.L164
 2615              	.L176:
 2616 00ba 00BF     		.align	2
 2617              	.L175:
 2618 00bc 00000000 		.word	.LANCHOR0
 2619 00c0 00000000 		.word	.LC37
 2620 00c4 10000000 		.word	.LC38
 2621 00c8 28000000 		.word	.LC39
 2622 00cc 40000000 		.word	.LC40
 2623 00d0 58000000 		.word	.LC41
 2624 00d4 A0000000 		.word	.LC44
 2625 00d8 6C000000 		.word	.LC42
 2626 00dc 00000000 		.word	Storage
 2627 00e0 EC000000 		.word	.LC46
 2628 00e4 04010000 		.word	.LC47
 2629 00e8 00000000 		.word	SrvOsCommon
 2630 00ec 84000000 		.word	.LC43
 2631 00f0 D0000000 		.word	.LC45
 2632              		.cfi_endproc
 2633              	.LFE2083:
 2635              		.section	.rodata.TaskControl_CLI_MotoSpinTest.str1.4,"aMS",%progbits,1
 2636              		.align	2
 2637              	.LC48:
 2638 0000 5461736B 		.ascii	"TaskControl semaphore create failed\015\012\000"
 2638      436F6E74 
 2638      726F6C20 
 2638      73656D61 
 2638      70686F72 
 2639 0026 0000     		.align	2
 2640              	.LC49:
 2641 0028 53657420 		.ascii	"Set drone in ARM state first\015\012\000"
 2641      64726F6E 
 2641      6520696E 
 2641      2041524D 
 2641      20737461 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 67


 2642 0047 00       		.align	2
 2643              	.LC50:
 2644 0048 6D616B65 		.ascii	"make sure all propeller is already disassmabled\015"
 2644      20737572 
 2644      6520616C 
 2644      6C207072 
 2644      6F70656C 
 2645 0078 0A00     		.ascii	"\012\000"
 2646 007a 0000     		.align	2
 2647              	.LC51:
 2648 007c 6D6F746F 		.ascii	"moto count : %d\015\012\000"
 2648      20636F75 
 2648      6E74203A 
 2648      2025640D 
 2648      0A00
 2649 008e 0000     		.align	2
 2650              	.LC52:
 2651 0090 616C6C20 		.ascii	"all moto selected\015\012\000"
 2651      6D6F746F 
 2651      2073656C 
 2651      65637465 
 2651      640D0A00 
 2652              		.align	2
 2653              	.LC53:
 2654 00a4 6D6F746F 		.ascii	"moto %d control range down below\015\012\000"
 2654      20256420 
 2654      636F6E74 
 2654      726F6C20 
 2654      72616E67 
 2655 00c7 00       		.align	2
 2656              	.LC54:
 2657 00c8 096D6178 		.ascii	"\011max  : %d\015\012\000"
 2657      20203A20 
 2657      25640D0A 
 2657      00
 2658 00d5 000000   		.align	2
 2659              	.LC55:
 2660 00d8 0969646C 		.ascii	"\011idle : %d\015\012\000"
 2660      65203A20 
 2660      25640D0A 
 2660      00
 2661 00e5 000000   		.align	2
 2662              	.LC56:
 2663 00e8 096D696E 		.ascii	"\011min  : %d\015\012\000"
 2663      20203A20 
 2663      25640D0A 
 2663      00
 2664 00f5 000000   		.align	2
 2665              	.LC57:
 2666 00f8 6D6F746F 		.ascii	"moto %d is selected\015\012\000"
 2666      20256420 
 2666      69732073 
 2666      656C6563 
 2666      7465640D 
 2667 010e 0000     		.align	2
 2668              	.LC58:
 2669 0110 636F6E74 		.ascii	"control range down below\015\012\000"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 68


 2669      726F6C20 
 2669      72616E67 
 2669      6520646F 
 2669      776E2062 
 2670 012b 00       		.align	2
 2671              	.LC59:
 2672 012c 47657420 		.ascii	"Get moto control data range failed\015\012\000"
 2672      6D6F746F 
 2672      20636F6E 
 2672      74726F6C 
 2672      20646174 
 2673 0151 000000   		.align	2
 2674              	.LC60:
 2675 0154 696E7075 		.ascii	"input value [%d] is bigger than max [%d] value\000"
 2675      74207661 
 2675      6C756520 
 2675      5B25645D 
 2675      20697320 
 2676 0183 00       		.align	2
 2677              	.LC61:
 2678 0184 696E7075 		.ascii	"input value [%d] is lower than min [%d] value\000"
 2678      74207661 
 2678      6C756520 
 2678      5B25645D 
 2678      20697320 
 2679 01b2 0000     		.align	2
 2680              	.LC62:
 2681 01b4 63757272 		.ascii	"current control value %d\015\012\000"
 2681      656E7420 
 2681      636F6E74 
 2681      726F6C20 
 2681      76616C75 
 2682 01cf 00       		.align	2
 2683              	.LC63:
 2684 01d0 5461736B 		.ascii	"TaskControl CLI set failed\015\012\000"
 2684      436F6E74 
 2684      726F6C20 
 2684      434C4920 
 2684      73657420 
 2685 01ed 000000   		.align	2
 2686              	.LC64:
 2687 01f0 4D6F746F 		.ascii	"Moto control test data malloc failed\015\012\000"
 2687      20636F6E 
 2687      74726F6C 
 2687      20746573 
 2687      74206461 
 2688              		.section	.text.TaskControl_CLI_MotoSpinTest,"ax",%progbits
 2689              		.align	1
 2690              		.syntax unified
 2691              		.thumb
 2692              		.thumb_func
 2694              	TaskControl_CLI_MotoSpinTest:
 2695              	.LVL172:
 2696              	.LFB2084:
 658:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 659:Task/Task_Control.c **** 
 660:Task/Task_Control.c **** static void TaskControl_CLI_MotoSpinTest(uint8_t moto_index, uint16_t test_val)
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 69


 661:Task/Task_Control.c **** {
 2697              		.loc 1 661 1 view -0
 2698              		.cfi_startproc
 2699              		@ args = 0, pretend = 0, frame = 16
 2700              		@ frame_needed = 0, uses_anonymous_args = 0
 2701              		.loc 1 661 1 is_stmt 0 view .LVU677
 2702 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2703              	.LCFI22:
 2704              		.cfi_def_cfa_offset 32
 2705              		.cfi_offset 4, -32
 2706              		.cfi_offset 5, -28
 2707              		.cfi_offset 6, -24
 2708              		.cfi_offset 7, -20
 2709              		.cfi_offset 8, -16
 2710              		.cfi_offset 9, -12
 2711              		.cfi_offset 10, -8
 2712              		.cfi_offset 14, -4
 2713 0004 84B0     		sub	sp, sp, #16
 2714              	.LCFI23:
 2715              		.cfi_def_cfa_offset 48
 2716 0006 0746     		mov	r7, r0
 2717 0008 0E46     		mov	r6, r1
 662:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 2718              		.loc 1 662 5 is_stmt 1 view .LVU678
 2719              		.loc 1 662 35 is_stmt 0 view .LVU679
 2720 000a 734B     		ldr	r3, .L197
 2721 000c 9B6A     		ldr	r3, [r3, #40]
 2722              		.loc 1 662 24 view .LVU680
 2723 000e 9847     		blx	r3
 2724              	.LVL173:
 2725              		.loc 1 662 24 view .LVU681
 2726 0010 8DF80C00 		strb	r0, [sp, #12]
 2727 0014 C0F30723 		ubfx	r3, r0, #8, #8
 2728 0018 8DF80D30 		strb	r3, [sp, #13]
 2729 001c C0F30743 		ubfx	r3, r0, #16, #8
 2730 0020 8DF80E30 		strb	r3, [sp, #14]
 2731              		.loc 1 662 13 view .LVU682
 2732 0024 9DF80D90 		ldrb	r9, [sp, #13]	@ zero_extendqisi2
 2733              	.LVL174:
 663:Task/Task_Control.c ****     bool arm_state = false;
 2734              		.loc 1 663 5 is_stmt 1 view .LVU683
 2735              		.loc 1 663 10 is_stmt 0 view .LVU684
 2736 0028 0023     		movs	r3, #0
 2737 002a 8DF80B30 		strb	r3, [sp, #11]
 664:Task/Task_Control.c ****     int16_t moto_max = 0;
 2738              		.loc 1 664 5 is_stmt 1 view .LVU685
 2739              		.loc 1 664 13 is_stmt 0 view .LVU686
 2740 002e ADF80830 		strh	r3, [sp, #8]	@ movhi
 665:Task/Task_Control.c ****     int16_t moto_idle = 0;
 2741              		.loc 1 665 5 is_stmt 1 view .LVU687
 2742              		.loc 1 665 13 is_stmt 0 view .LVU688
 2743 0032 ADF80630 		strh	r3, [sp, #6]	@ movhi
 666:Task/Task_Control.c ****     int16_t moto_min = 0;
 2744              		.loc 1 666 5 is_stmt 1 view .LVU689
 2745              		.loc 1 666 13 is_stmt 0 view .LVU690
 2746 0036 ADF80430 		strh	r3, [sp, #4]	@ movhi
 667:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 70


 2747              		.loc 1 667 5 is_stmt 1 view .LVU691
 2748              		.loc 1 667 24 is_stmt 0 view .LVU692
 2749 003a FFF7FEFF 		bl	Shell_GetInstence
 2750              	.LVL175:
 668:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 2751              		.loc 1 668 5 is_stmt 1 view .LVU693
 669:Task/Task_Control.c ****     bool ctl_enable = true;
 2752              		.loc 1 669 5 view .LVU694
 670:Task/Task_Control.c **** 
 671:Task/Task_Control.c ****     if(shell_obj == NULL)
 2753              		.loc 1 671 5 view .LVU695
 2754              		.loc 1 671 7 is_stmt 0 view .LVU696
 2755 003e 0028     		cmp	r0, #0
 2756 0040 55D0     		beq	.L177
 2757 0042 0546     		mov	r5, r0
 672:Task/Task_Control.c ****         return;
 673:Task/Task_Control.c **** 
 674:Task/Task_Control.c ****     SrvDataHub.get_arm_state(&arm_state);
 2758              		.loc 1 674 5 is_stmt 1 view .LVU697
 2759              		.loc 1 674 15 is_stmt 0 view .LVU698
 2760 0044 654B     		ldr	r3, .L197+4
 2761 0046 5B6D     		ldr	r3, [r3, #84]
 2762              		.loc 1 674 5 view .LVU699
 2763 0048 0DF10B00 		add	r0, sp, #11
 2764              	.LVL176:
 2765              		.loc 1 674 5 view .LVU700
 2766 004c 9847     		blx	r3
 2767              	.LVL177:
 675:Task/Task_Control.c **** 
 676:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 2768              		.loc 1 676 5 is_stmt 1 view .LVU701
 2769              		.loc 1 676 27 is_stmt 0 view .LVU702
 2770 004e 644B     		ldr	r3, .L197+8
 2771 0050 D3F81C31 		ldr	r3, [r3, #284]
 2772              		.loc 1 676 7 view .LVU703
 2773 0054 002B     		cmp	r3, #0
 2774 0056 3ED0     		beq	.L193
 677:Task/Task_Control.c ****     {
 678:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl semaphore create failed\r\n");
 679:Task/Task_Control.c ****         return;
 680:Task/Task_Control.c ****     }
 681:Task/Task_Control.c **** 
 682:Task/Task_Control.c ****     if(arm_state == DRONE_DISARM)
 2775              		.loc 1 682 5 is_stmt 1 view .LVU704
 2776              		.loc 1 682 18 is_stmt 0 view .LVU705
 2777 0058 9DF80BA0 		ldrb	r10, [sp, #11]	@ zero_extendqisi2
 2778              		.loc 1 682 7 view .LVU706
 2779 005c BAF1000F 		cmp	r10, #0
 2780 0060 3ED0     		beq	.L194
 683:Task/Task_Control.c ****     {
 684:Task/Task_Control.c ****         TaskControl_Monitor.CLI_enable = false;
 685:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 686:Task/Task_Control.c ****         return;
 687:Task/Task_Control.c ****     }
 688:Task/Task_Control.c **** 
 689:Task/Task_Control.c ****     TaskControl_Monitor.CLI_enable = true;
 2781              		.loc 1 689 5 is_stmt 1 view .LVU707
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 71


 2782              		.loc 1 689 36 is_stmt 0 view .LVU708
 2783 0062 5F4B     		ldr	r3, .L197+8
 2784 0064 0122     		movs	r2, #1
 2785 0066 9A71     		strb	r2, [r3, #6]
 690:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 2786              		.loc 1 690 5 is_stmt 1 view .LVU709
 2787 0068 5E49     		ldr	r1, .L197+12
 2788 006a 2846     		mov	r0, r5
 2789 006c FFF7FEFF 		bl	shellPrint
 2790              	.LVL178:
 691:Task/Task_Control.c **** 
 692:Task/Task_Control.c ****     shellPrint(shell_obj, "moto count : %d\r\n", moto_num);
 2791              		.loc 1 692 5 view .LVU710
 2792 0070 4A46     		mov	r2, r9
 2793 0072 5D49     		ldr	r1, .L197+16
 2794 0074 2846     		mov	r0, r5
 2795 0076 FFF7FEFF 		bl	shellPrint
 2796              	.LVL179:
 693:Task/Task_Control.c ****     if(moto_index >= moto_num)
 2797              		.loc 1 693 5 view .LVU711
 2798              		.loc 1 693 7 is_stmt 0 view .LVU712
 2799 007a B945     		cmp	r9, r7
 2800 007c 3AD8     		bhi	.L181
 694:Task/Task_Control.c ****     {
 695:Task/Task_Control.c ****         shellPrint(shell_obj, "all moto selected\r\n");
 2801              		.loc 1 695 9 is_stmt 1 view .LVU713
 2802 007e 5B49     		ldr	r1, .L197+20
 2803 0080 2846     		mov	r0, r5
 2804 0082 FFF7FEFF 		bl	shellPrint
 2805              	.LVL180:
 696:Task/Task_Control.c ****         for (uint8_t i = 0; i < moto_num; i ++)
 2806              		.loc 1 696 9 view .LVU714
 2807              	.LBB11:
 2808              		.loc 1 696 14 view .LVU715
 2809              		.loc 1 696 22 is_stmt 0 view .LVU716
 2810 0086 0024     		movs	r4, #0
 2811              	.LVL181:
 2812              	.L182:
 2813              		.loc 1 696 29 is_stmt 1 discriminator 1 view .LVU717
 2814              		.loc 1 696 9 is_stmt 0 discriminator 1 view .LVU718
 2815 0088 4C45     		cmp	r4, r9
 2816 008a 57D2     		bcs	.L183
 697:Task/Task_Control.c ****         {
 698:Task/Task_Control.c ****             if (!SrvActuator.get_moto_control_range(i, &moto_min, &moto_idle, &moto_max))
 2817              		.loc 1 698 13 is_stmt 1 view .LVU719
 2818              		.loc 1 698 29 is_stmt 0 view .LVU720
 2819 008c 524B     		ldr	r3, .L197
 2820 008e D3F82080 		ldr	r8, [r3, #32]
 2821              		.loc 1 698 18 view .LVU721
 2822 0092 02AB     		add	r3, sp, #8
 2823 0094 0DF10602 		add	r2, sp, #6
 2824 0098 01A9     		add	r1, sp, #4
 2825 009a 2046     		mov	r0, r4
 2826 009c C047     		blx	r8
 2827              	.LVL182:
 2828              		.loc 1 698 16 view .LVU722
 2829 009e 0028     		cmp	r0, #0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 72


 2830 00a0 5DD0     		beq	.L191
 699:Task/Task_Control.c ****             {
 700:Task/Task_Control.c ****                 ctl_enable = false;
 701:Task/Task_Control.c ****                 break;
 702:Task/Task_Control.c ****             }
 703:Task/Task_Control.c ****             
 704:Task/Task_Control.c ****             shellPrint(shell_obj, "moto %d control range down below\r\n", i);
 2831              		.loc 1 704 13 is_stmt 1 discriminator 2 view .LVU723
 2832 00a2 2246     		mov	r2, r4
 2833 00a4 5249     		ldr	r1, .L197+24
 2834 00a6 2846     		mov	r0, r5
 2835 00a8 FFF7FEFF 		bl	shellPrint
 2836              	.LVL183:
 705:Task/Task_Control.c ****             shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 2837              		.loc 1 705 13 discriminator 2 view .LVU724
 2838 00ac BDF90820 		ldrsh	r2, [sp, #8]
 2839 00b0 5049     		ldr	r1, .L197+28
 2840 00b2 2846     		mov	r0, r5
 2841 00b4 FFF7FEFF 		bl	shellPrint
 2842              	.LVL184:
 706:Task/Task_Control.c ****             shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 2843              		.loc 1 706 13 discriminator 2 view .LVU725
 2844 00b8 BDF90620 		ldrsh	r2, [sp, #6]
 2845 00bc 4E49     		ldr	r1, .L197+32
 2846 00be 2846     		mov	r0, r5
 2847 00c0 FFF7FEFF 		bl	shellPrint
 2848              	.LVL185:
 707:Task/Task_Control.c ****             shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 2849              		.loc 1 707 13 discriminator 2 view .LVU726
 2850 00c4 BDF90420 		ldrsh	r2, [sp, #4]
 2851 00c8 4C49     		ldr	r1, .L197+36
 2852 00ca 2846     		mov	r0, r5
 2853 00cc FFF7FEFF 		bl	shellPrint
 2854              	.LVL186:
 696:Task/Task_Control.c ****         {
 2855              		.loc 1 696 43 discriminator 2 view .LVU727
 696:Task/Task_Control.c ****         {
 2856              		.loc 1 696 45 is_stmt 0 discriminator 2 view .LVU728
 2857 00d0 0134     		adds	r4, r4, #1
 2858              	.LVL187:
 696:Task/Task_Control.c ****         {
 2859              		.loc 1 696 45 discriminator 2 view .LVU729
 2860 00d2 E4B2     		uxtb	r4, r4
 2861              	.LVL188:
 696:Task/Task_Control.c ****         {
 2862              		.loc 1 696 45 discriminator 2 view .LVU730
 2863 00d4 D8E7     		b	.L182
 2864              	.LVL189:
 2865              	.L193:
 696:Task/Task_Control.c ****         {
 2866              		.loc 1 696 45 discriminator 2 view .LVU731
 2867              	.LBE11:
 678:Task/Task_Control.c ****         return;
 2868              		.loc 1 678 9 is_stmt 1 view .LVU732
 2869 00d6 4A49     		ldr	r1, .L197+40
 2870 00d8 2846     		mov	r0, r5
 2871 00da FFF7FEFF 		bl	shellPrint
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 73


 2872              	.LVL190:
 679:Task/Task_Control.c ****     }
 2873              		.loc 1 679 9 view .LVU733
 2874 00de 06E0     		b	.L177
 2875              	.L194:
 684:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 2876              		.loc 1 684 9 view .LVU734
 684:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 2877              		.loc 1 684 40 is_stmt 0 view .LVU735
 2878 00e0 3F4B     		ldr	r3, .L197+8
 2879 00e2 0022     		movs	r2, #0
 2880 00e4 9A71     		strb	r2, [r3, #6]
 685:Task/Task_Control.c ****         return;
 2881              		.loc 1 685 9 is_stmt 1 view .LVU736
 2882 00e6 4749     		ldr	r1, .L197+44
 2883 00e8 2846     		mov	r0, r5
 2884 00ea FFF7FEFF 		bl	shellPrint
 2885              	.LVL191:
 686:Task/Task_Control.c ****     }
 2886              		.loc 1 686 9 view .LVU737
 2887              	.L177:
 708:Task/Task_Control.c ****         }
 709:Task/Task_Control.c ****     }
 710:Task/Task_Control.c ****     else
 711:Task/Task_Control.c ****     {
 712:Task/Task_Control.c ****         shellPrint(shell_obj, "moto %d is selected\r\n", moto_index);
 713:Task/Task_Control.c ****         if(!SrvActuator.get_moto_control_range(moto_index, &moto_min, &moto_idle, &moto_max))
 714:Task/Task_Control.c ****             ctl_enable = false;
 715:Task/Task_Control.c **** 
 716:Task/Task_Control.c ****         shellPrint(shell_obj, "control range down below\r\n");
 717:Task/Task_Control.c ****         shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 718:Task/Task_Control.c ****         shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 719:Task/Task_Control.c ****         shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 720:Task/Task_Control.c ****     }
 721:Task/Task_Control.c **** 
 722:Task/Task_Control.c ****     if (!ctl_enable)
 723:Task/Task_Control.c ****     {
 724:Task/Task_Control.c ****         shellPrint(shell_obj, "Get moto control data range failed\r\n");
 725:Task/Task_Control.c ****         return;
 726:Task/Task_Control.c ****     }
 727:Task/Task_Control.c **** 
 728:Task/Task_Control.c ****     if(test_val > moto_max)
 729:Task/Task_Control.c ****     {
 730:Task/Task_Control.c ****         shellPrint(shell_obj, "input value [%d] is bigger than max [%d] value", test_val, moto_max)
 731:Task/Task_Control.c ****     }
 732:Task/Task_Control.c ****     else if(test_val < moto_min)
 733:Task/Task_Control.c ****     {
 734:Task/Task_Control.c ****         shellPrint(shell_obj, "input value [%d] is lower than min [%d] value", test_val, moto_min);
 735:Task/Task_Control.c ****     }
 736:Task/Task_Control.c ****     else
 737:Task/Task_Control.c ****     {
 738:Task/Task_Control.c ****         shellPrint(shell_obj, "current control value %d\r\n", test_val);
 739:Task/Task_Control.c **** 
 740:Task/Task_Control.c ****         p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 741:Task/Task_Control.c ****         if(p_CLIData)
 742:Task/Task_Control.c ****         {
 743:Task/Task_Control.c ****             p_CLIData->cli_type = TaskControl_Moto_Set_Spin;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 74


 744:Task/Task_Control.c ****             p_CLIData->index = moto_index;
 745:Task/Task_Control.c ****             p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 746:Task/Task_Control.c ****             p_CLIData->value = test_val;
 747:Task/Task_Control.c **** 
 748:Task/Task_Control.c ****             if(osMessagePut(TaskControl_Monitor.CLIMessage_ID, (uint32_t)p_CLIData, CLI_MESSAGE_OPE
 749:Task/Task_Control.c ****             {
 750:Task/Task_Control.c ****                 SrvOsCommon.free(p_CLIData);
 751:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 752:Task/Task_Control.c ****             }
 753:Task/Task_Control.c ****         }
 754:Task/Task_Control.c ****         else
 755:Task/Task_Control.c ****         {
 756:Task/Task_Control.c ****             shellPrint(shell_obj, "Moto control test data malloc failed\r\n");
 757:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 758:Task/Task_Control.c ****         }
 759:Task/Task_Control.c ****     }
 760:Task/Task_Control.c **** }
 2888              		.loc 1 760 1 is_stmt 0 view .LVU738
 2889 00ee 04B0     		add	sp, sp, #16
 2890              	.LCFI24:
 2891              		.cfi_remember_state
 2892              		.cfi_def_cfa_offset 32
 2893              		@ sp needed
 2894 00f0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2895              	.LVL192:
 2896              	.L181:
 2897              	.LCFI25:
 2898              		.cfi_restore_state
 712:Task/Task_Control.c ****         if(!SrvActuator.get_moto_control_range(moto_index, &moto_min, &moto_idle, &moto_max))
 2899              		.loc 1 712 9 is_stmt 1 view .LVU739
 2900 00f4 3A46     		mov	r2, r7
 2901 00f6 4449     		ldr	r1, .L197+48
 2902 00f8 2846     		mov	r0, r5
 2903 00fa FFF7FEFF 		bl	shellPrint
 2904              	.LVL193:
 713:Task/Task_Control.c ****             ctl_enable = false;
 2905              		.loc 1 713 9 view .LVU740
 713:Task/Task_Control.c ****             ctl_enable = false;
 2906              		.loc 1 713 24 is_stmt 0 view .LVU741
 2907 00fe 364B     		ldr	r3, .L197
 2908 0100 1C6A     		ldr	r4, [r3, #32]
 713:Task/Task_Control.c ****             ctl_enable = false;
 2909              		.loc 1 713 13 view .LVU742
 2910 0102 02AB     		add	r3, sp, #8
 2911 0104 0DF10602 		add	r2, sp, #6
 2912 0108 01A9     		add	r1, sp, #4
 2913 010a 3846     		mov	r0, r7
 2914 010c A047     		blx	r4
 2915              	.LVL194:
 2916 010e 8246     		mov	r10, r0
 2917              	.LVL195:
 716:Task/Task_Control.c ****         shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 2918              		.loc 1 716 9 is_stmt 1 view .LVU743
 2919 0110 3E49     		ldr	r1, .L197+52
 2920 0112 2846     		mov	r0, r5
 2921 0114 FFF7FEFF 		bl	shellPrint
 2922              	.LVL196:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 75


 717:Task/Task_Control.c ****         shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 2923              		.loc 1 717 9 view .LVU744
 2924 0118 BDF90820 		ldrsh	r2, [sp, #8]
 2925 011c 3549     		ldr	r1, .L197+28
 2926 011e 2846     		mov	r0, r5
 2927 0120 FFF7FEFF 		bl	shellPrint
 2928              	.LVL197:
 718:Task/Task_Control.c ****         shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 2929              		.loc 1 718 9 view .LVU745
 2930 0124 BDF90620 		ldrsh	r2, [sp, #6]
 2931 0128 3349     		ldr	r1, .L197+32
 2932 012a 2846     		mov	r0, r5
 2933 012c FFF7FEFF 		bl	shellPrint
 2934              	.LVL198:
 719:Task/Task_Control.c ****     }
 2935              		.loc 1 719 9 view .LVU746
 2936 0130 BDF90420 		ldrsh	r2, [sp, #4]
 2937 0134 3149     		ldr	r1, .L197+36
 2938 0136 2846     		mov	r0, r5
 2939 0138 FFF7FEFF 		bl	shellPrint
 2940              	.LVL199:
 2941              	.L183:
 722:Task/Task_Control.c ****     {
 2942              		.loc 1 722 5 view .LVU747
 722:Task/Task_Control.c ****     {
 2943              		.loc 1 722 8 is_stmt 0 view .LVU748
 2944 013c BAF1000F 		cmp	r10, #0
 2945 0140 0FD0     		beq	.L195
 728:Task/Task_Control.c ****     {
 2946              		.loc 1 728 5 is_stmt 1 view .LVU749
 728:Task/Task_Control.c ****     {
 2947              		.loc 1 728 17 is_stmt 0 view .LVU750
 2948 0142 BDF90830 		ldrsh	r3, [sp, #8]
 728:Task/Task_Control.c ****     {
 2949              		.loc 1 728 7 view .LVU751
 2950 0146 9E42     		cmp	r6, r3
 2951 0148 10DC     		bgt	.L196
 732:Task/Task_Control.c ****     {
 2952              		.loc 1 732 10 is_stmt 1 view .LVU752
 732:Task/Task_Control.c ****     {
 2953              		.loc 1 732 22 is_stmt 0 view .LVU753
 2954 014a BDF90430 		ldrsh	r3, [sp, #4]
 732:Task/Task_Control.c ****     {
 2955              		.loc 1 732 12 view .LVU754
 2956 014e 9E42     		cmp	r6, r3
 2957 0150 12DA     		bge	.L188
 734:Task/Task_Control.c ****     }
 2958              		.loc 1 734 9 is_stmt 1 view .LVU755
 2959 0152 3246     		mov	r2, r6
 2960 0154 2E49     		ldr	r1, .L197+56
 2961 0156 2846     		mov	r0, r5
 2962 0158 FFF7FEFF 		bl	shellPrint
 2963              	.LVL200:
 2964 015c C7E7     		b	.L177
 2965              	.LVL201:
 2966              	.L191:
 2967              	.LBB12:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 76


 700:Task/Task_Control.c ****                 break;
 2968              		.loc 1 700 28 is_stmt 0 view .LVU756
 2969 015e 8246     		mov	r10, r0
 2970 0160 ECE7     		b	.L183
 2971              	.LVL202:
 2972              	.L195:
 700:Task/Task_Control.c ****                 break;
 2973              		.loc 1 700 28 view .LVU757
 2974              	.LBE12:
 724:Task/Task_Control.c ****         return;
 2975              		.loc 1 724 9 is_stmt 1 view .LVU758
 2976 0162 2C49     		ldr	r1, .L197+60
 2977 0164 2846     		mov	r0, r5
 2978 0166 FFF7FEFF 		bl	shellPrint
 2979              	.LVL203:
 725:Task/Task_Control.c ****     }
 2980              		.loc 1 725 9 view .LVU759
 2981 016a C0E7     		b	.L177
 2982              	.L196:
 730:Task/Task_Control.c ****     }
 2983              		.loc 1 730 9 view .LVU760
 2984 016c 3246     		mov	r2, r6
 2985 016e 2A49     		ldr	r1, .L197+64
 2986 0170 2846     		mov	r0, r5
 2987 0172 FFF7FEFF 		bl	shellPrint
 2988              	.LVL204:
 2989 0176 BAE7     		b	.L177
 2990              	.L188:
 738:Task/Task_Control.c **** 
 2991              		.loc 1 738 9 view .LVU761
 2992 0178 3246     		mov	r2, r6
 2993 017a 2849     		ldr	r1, .L197+68
 2994 017c 2846     		mov	r0, r5
 2995 017e FFF7FEFF 		bl	shellPrint
 2996              	.LVL205:
 740:Task/Task_Control.c ****         if(p_CLIData)
 2997              		.loc 1 740 9 view .LVU762
 740:Task/Task_Control.c ****         if(p_CLIData)
 2998              		.loc 1 740 32 is_stmt 0 view .LVU763
 2999 0182 274B     		ldr	r3, .L197+72
 3000 0184 DB6A     		ldr	r3, [r3, #44]
 740:Task/Task_Control.c ****         if(p_CLIData)
 3001              		.loc 1 740 21 view .LVU764
 3002 0186 0820     		movs	r0, #8
 3003 0188 9847     		blx	r3
 3004              	.LVL206:
 741:Task/Task_Control.c ****         {
 3005              		.loc 1 741 9 is_stmt 1 view .LVU765
 741:Task/Task_Control.c ****         {
 3006              		.loc 1 741 11 is_stmt 0 view .LVU766
 3007 018a 0446     		mov	r4, r0
 3008 018c D8B1     		cbz	r0, .L189
 743:Task/Task_Control.c ****             p_CLIData->index = moto_index;
 3009              		.loc 1 743 13 is_stmt 1 view .LVU767
 743:Task/Task_Control.c ****             p_CLIData->index = moto_index;
 3010              		.loc 1 743 33 is_stmt 0 view .LVU768
 3011 018e 4FF00108 		mov	r8, #1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 77


 3012 0192 80F80480 		strb	r8, [r0, #4]
 744:Task/Task_Control.c ****             p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 3013              		.loc 1 744 13 is_stmt 1 view .LVU769
 744:Task/Task_Control.c ****             p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 3014              		.loc 1 744 30 is_stmt 0 view .LVU770
 3015 0196 4771     		strb	r7, [r0, #5]
 745:Task/Task_Control.c ****             p_CLIData->value = test_val;
 3016              		.loc 1 745 13 is_stmt 1 view .LVU771
 745:Task/Task_Control.c ****             p_CLIData->value = test_val;
 3017              		.loc 1 745 47 is_stmt 0 view .LVU772
 3018 0198 214B     		ldr	r3, .L197+72
 3019 019a 5B68     		ldr	r3, [r3, #4]
 745:Task/Task_Control.c ****             p_CLIData->value = test_val;
 3020              		.loc 1 745 36 view .LVU773
 3021 019c 9847     		blx	r3
 3022              	.LVL207:
 745:Task/Task_Control.c ****             p_CLIData->value = test_val;
 3023              		.loc 1 745 34 view .LVU774
 3024 019e 2060     		str	r0, [r4]
 746:Task/Task_Control.c **** 
 3025              		.loc 1 746 13 is_stmt 1 view .LVU775
 746:Task/Task_Control.c **** 
 3026              		.loc 1 746 30 is_stmt 0 view .LVU776
 3027 01a0 E680     		strh	r6, [r4, #6]	@ movhi
 748:Task/Task_Control.c ****             {
 3028              		.loc 1 748 13 is_stmt 1 view .LVU777
 748:Task/Task_Control.c ****             {
 3029              		.loc 1 748 16 is_stmt 0 view .LVU778
 3030 01a2 4246     		mov	r2, r8
 3031 01a4 2146     		mov	r1, r4
 3032 01a6 0E4B     		ldr	r3, .L197+8
 3033 01a8 D3F81C01 		ldr	r0, [r3, #284]
 3034 01ac FFF7FEFF 		bl	osMessagePut
 3035              	.LVL208:
 748:Task/Task_Control.c ****             {
 3036              		.loc 1 748 15 view .LVU779
 3037 01b0 0028     		cmp	r0, #0
 3038 01b2 9CD0     		beq	.L177
 750:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 3039              		.loc 1 750 17 is_stmt 1 view .LVU780
 750:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 3040              		.loc 1 750 28 is_stmt 0 view .LVU781
 3041 01b4 1A4B     		ldr	r3, .L197+72
 3042 01b6 1B6B     		ldr	r3, [r3, #48]
 750:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 3043              		.loc 1 750 17 view .LVU782
 3044 01b8 2046     		mov	r0, r4
 3045 01ba 9847     		blx	r3
 3046              	.LVL209:
 751:Task/Task_Control.c ****             }
 3047              		.loc 1 751 17 is_stmt 1 view .LVU783
 3048 01bc 1949     		ldr	r1, .L197+76
 3049 01be 2846     		mov	r0, r5
 3050 01c0 FFF7FEFF 		bl	shellPrint
 3051              	.LVL210:
 3052 01c4 93E7     		b	.L177
 3053              	.LVL211:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 78


 3054              	.L189:
 756:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 3055              		.loc 1 756 13 view .LVU784
 3056 01c6 1849     		ldr	r1, .L197+80
 3057 01c8 2846     		mov	r0, r5
 3058              	.LVL212:
 756:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 3059              		.loc 1 756 13 is_stmt 0 view .LVU785
 3060 01ca FFF7FEFF 		bl	shellPrint
 3061              	.LVL213:
 757:Task/Task_Control.c ****         }
 3062              		.loc 1 757 13 is_stmt 1 view .LVU786
 757:Task/Task_Control.c ****         }
 3063              		.loc 1 757 24 is_stmt 0 view .LVU787
 3064 01ce 144B     		ldr	r3, .L197+72
 3065 01d0 1B6B     		ldr	r3, [r3, #48]
 757:Task/Task_Control.c ****         }
 3066              		.loc 1 757 13 view .LVU788
 3067 01d2 2046     		mov	r0, r4
 3068 01d4 9847     		blx	r3
 3069              	.LVL214:
 3070 01d6 8AE7     		b	.L177
 3071              	.L198:
 3072              		.align	2
 3073              	.L197:
 3074 01d8 00000000 		.word	SrvActuator
 3075 01dc 00000000 		.word	SrvDataHub
 3076 01e0 00000000 		.word	.LANCHOR0
 3077 01e4 48000000 		.word	.LC50
 3078 01e8 7C000000 		.word	.LC51
 3079 01ec 90000000 		.word	.LC52
 3080 01f0 A4000000 		.word	.LC53
 3081 01f4 C8000000 		.word	.LC54
 3082 01f8 D8000000 		.word	.LC55
 3083 01fc E8000000 		.word	.LC56
 3084 0200 00000000 		.word	.LC48
 3085 0204 28000000 		.word	.LC49
 3086 0208 F8000000 		.word	.LC57
 3087 020c 10010000 		.word	.LC58
 3088 0210 84010000 		.word	.LC61
 3089 0214 2C010000 		.word	.LC59
 3090 0218 54010000 		.word	.LC60
 3091 021c B4010000 		.word	.LC62
 3092 0220 00000000 		.word	SrvOsCommon
 3093 0224 D0010000 		.word	.LC63
 3094 0228 F0010000 		.word	.LC64
 3095              		.cfi_endproc
 3096              	.LFE2084:
 3098              		.section	.rodata.TaskControl_Reverse_SpinDir.str1.4,"aMS",%progbits,1
 3099              		.align	2
 3100              	.LC65:
 3101 0000 70617261 		.ascii	"parameter error\015\012\000"
 3101      6D657465 
 3101      72206572 
 3101      726F720D 
 3101      0A00
 3102 0012 0000     		.align	2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 79


 3103              	.LC66:
 3104 0014 6D6F746F 		.ascii	"moto %d is selected dir %d\015\012\000"
 3104      20256420 
 3104      69732073 
 3104      656C6563 
 3104      74656420 
 3105              		.section	.text.TaskControl_Reverse_SpinDir,"ax",%progbits
 3106              		.align	1
 3107              		.syntax unified
 3108              		.thumb
 3109              		.thumb_func
 3111              	TaskControl_Reverse_SpinDir:
 3112              	.LVL215:
 3113              	.LFB2085:
 761:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 762:Task/Task_Control.c **** 
 763:Task/Task_Control.c **** static void TaskControl_Reverse_SpinDir(uint8_t moto_index, uint8_t dir)
 764:Task/Task_Control.c **** {
 3114              		.loc 1 764 1 is_stmt 1 view -0
 3115              		.cfi_startproc
 3116              		@ args = 0, pretend = 0, frame = 8
 3117              		@ frame_needed = 0, uses_anonymous_args = 0
 3118              		.loc 1 764 1 is_stmt 0 view .LVU790
 3119 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3120              	.LCFI26:
 3121              		.cfi_def_cfa_offset 20
 3122              		.cfi_offset 4, -20
 3123              		.cfi_offset 5, -16
 3124              		.cfi_offset 6, -12
 3125              		.cfi_offset 7, -8
 3126              		.cfi_offset 14, -4
 3127 0002 83B0     		sub	sp, sp, #12
 3128              	.LCFI27:
 3129              		.cfi_def_cfa_offset 32
 3130 0004 0546     		mov	r5, r0
 3131 0006 0E46     		mov	r6, r1
 765:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 3132              		.loc 1 765 5 is_stmt 1 view .LVU791
 3133              		.loc 1 765 24 is_stmt 0 view .LVU792
 3134 0008 FFF7FEFF 		bl	Shell_GetInstence
 3135              	.LVL216:
 3136              		.loc 1 765 24 view .LVU793
 3137 000c 0446     		mov	r4, r0
 3138              	.LVL217:
 766:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 3139              		.loc 1 766 5 is_stmt 1 view .LVU794
 3140              		.loc 1 766 35 is_stmt 0 view .LVU795
 3141 000e 354B     		ldr	r3, .L211
 3142 0010 9B6A     		ldr	r3, [r3, #40]
 3143              		.loc 1 766 24 view .LVU796
 3144 0012 9847     		blx	r3
 3145              	.LVL218:
 3146              		.loc 1 766 24 view .LVU797
 3147 0014 8DF80400 		strb	r0, [sp, #4]
 3148 0018 C0F30723 		ubfx	r3, r0, #8, #8
 3149 001c 8DF80530 		strb	r3, [sp, #5]
 3150 0020 C0F3074C 		ubfx	ip, r0, #16, #8
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 80


 3151 0024 8DF806C0 		strb	ip, [sp, #6]
 3152              		.loc 1 766 13 view .LVU798
 3153 0028 DFB2     		uxtb	r7, r3
 3154              	.LVL219:
 767:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 3155              		.loc 1 767 5 is_stmt 1 view .LVU799
 768:Task/Task_Control.c ****     bool arm_state = false;
 3156              		.loc 1 768 5 view .LVU800
 3157              		.loc 1 768 10 is_stmt 0 view .LVU801
 3158 002a 0023     		movs	r3, #0
 3159 002c 8DF80330 		strb	r3, [sp, #3]
 769:Task/Task_Control.c **** 
 770:Task/Task_Control.c ****     if (shell_obj == NULL)
 3160              		.loc 1 770 5 is_stmt 1 view .LVU802
 3161              		.loc 1 770 8 is_stmt 0 view .LVU803
 3162 0030 D4B1     		cbz	r4, .L199
 771:Task/Task_Control.c ****         return;
 772:Task/Task_Control.c ****     
 773:Task/Task_Control.c ****     SrvDataHub.get_arm_state(&arm_state);
 3163              		.loc 1 773 5 is_stmt 1 view .LVU804
 3164              		.loc 1 773 15 is_stmt 0 view .LVU805
 3165 0032 2D4B     		ldr	r3, .L211+4
 3166 0034 5B6D     		ldr	r3, [r3, #84]
 3167              		.loc 1 773 5 view .LVU806
 3168 0036 0DF10300 		add	r0, sp, #3
 3169 003a 9847     		blx	r3
 3170              	.LVL220:
 774:Task/Task_Control.c **** 
 775:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 3171              		.loc 1 775 5 is_stmt 1 view .LVU807
 3172              		.loc 1 775 27 is_stmt 0 view .LVU808
 3173 003c 2B4B     		ldr	r3, .L211+8
 3174 003e D3F81C31 		ldr	r3, [r3, #284]
 3175              		.loc 1 775 7 view .LVU809
 3176 0042 9BB1     		cbz	r3, .L209
 776:Task/Task_Control.c ****     {
 777:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl semaphore create failed\r\n");
 778:Task/Task_Control.c ****         return;
 779:Task/Task_Control.c ****     }
 780:Task/Task_Control.c **** 
 781:Task/Task_Control.c ****     if(arm_state == DRONE_DISARM)
 3177              		.loc 1 781 5 is_stmt 1 view .LVU810
 3178              		.loc 1 781 18 is_stmt 0 view .LVU811
 3179 0044 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 3180              		.loc 1 781 7 view .LVU812
 3181 0048 ABB1     		cbz	r3, .L210
 782:Task/Task_Control.c ****     {
 783:Task/Task_Control.c ****         TaskControl_Monitor.CLI_enable = false;
 784:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 785:Task/Task_Control.c ****         return;
 786:Task/Task_Control.c ****     }
 787:Task/Task_Control.c **** 
 788:Task/Task_Control.c ****     TaskControl_Monitor.CLI_enable = true;
 3182              		.loc 1 788 5 is_stmt 1 view .LVU813
 3183              		.loc 1 788 36 is_stmt 0 view .LVU814
 3184 004a 284B     		ldr	r3, .L211+8
 3185 004c 0122     		movs	r2, #1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 81


 3186 004e 9A71     		strb	r2, [r3, #6]
 789:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 3187              		.loc 1 789 5 is_stmt 1 view .LVU815
 3188 0050 2749     		ldr	r1, .L211+12
 3189 0052 2046     		mov	r0, r4
 3190 0054 FFF7FEFF 		bl	shellPrint
 3191              	.LVL221:
 790:Task/Task_Control.c **** 
 791:Task/Task_Control.c ****     if((moto_index >= moto_num) || (dir > 2))
 3192              		.loc 1 791 5 view .LVU816
 3193              		.loc 1 791 7 is_stmt 0 view .LVU817
 3194 0058 AF42     		cmp	r7, r5
 3195 005a 01D9     		bls	.L203
 3196              		.loc 1 791 33 discriminator 1 view .LVU818
 3197 005c 022E     		cmp	r6, #2
 3198 005e 12D9     		bls	.L204
 3199              	.L203:
 792:Task/Task_Control.c ****     {
 793:Task/Task_Control.c ****         shellPrint(shell_obj, "parameter error\r\n");
 3200              		.loc 1 793 9 is_stmt 1 view .LVU819
 3201 0060 2449     		ldr	r1, .L211+16
 3202 0062 2046     		mov	r0, r4
 3203 0064 FFF7FEFF 		bl	shellPrint
 3204              	.LVL222:
 794:Task/Task_Control.c ****         return;
 3205              		.loc 1 794 9 view .LVU820
 3206              	.L199:
 795:Task/Task_Control.c ****     }
 796:Task/Task_Control.c **** 
 797:Task/Task_Control.c ****     shellPrint(shell_obj, "moto %d is selected dir %d\r\n", moto_index, dir);
 798:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 799:Task/Task_Control.c ****     if(p_CLIData)
 800:Task/Task_Control.c ****     {
 801:Task/Task_Control.c ****         p_CLIData->cli_type = TaskControl_Moto_Set_SpinDir;
 802:Task/Task_Control.c ****         p_CLIData->index = moto_index;
 803:Task/Task_Control.c ****         p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 804:Task/Task_Control.c ****         p_CLIData->value = dir;
 805:Task/Task_Control.c **** 
 806:Task/Task_Control.c ****         if(osMessagePut(TaskControl_Monitor.CLIMessage_ID, (uint32_t)p_CLIData, CLI_MESSAGE_OPEARAT
 807:Task/Task_Control.c ****         {
 808:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 809:Task/Task_Control.c ****             shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 810:Task/Task_Control.c ****         }
 811:Task/Task_Control.c ****     }
 812:Task/Task_Control.c ****     else
 813:Task/Task_Control.c ****     {
 814:Task/Task_Control.c ****         shellPrint(shell_obj, "Moto control test data malloc failed\r\n");
 815:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 816:Task/Task_Control.c ****     }
 817:Task/Task_Control.c **** }
 3207              		.loc 1 817 1 is_stmt 0 view .LVU821
 3208 0068 03B0     		add	sp, sp, #12
 3209              	.LCFI28:
 3210              		.cfi_remember_state
 3211              		.cfi_def_cfa_offset 20
 3212              		@ sp needed
 3213 006a F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 82


 3214              	.LVL223:
 3215              	.L209:
 3216              	.LCFI29:
 3217              		.cfi_restore_state
 777:Task/Task_Control.c ****         return;
 3218              		.loc 1 777 9 is_stmt 1 view .LVU822
 3219 006c 2249     		ldr	r1, .L211+20
 3220 006e 2046     		mov	r0, r4
 3221 0070 FFF7FEFF 		bl	shellPrint
 3222              	.LVL224:
 778:Task/Task_Control.c ****     }
 3223              		.loc 1 778 9 view .LVU823
 3224 0074 F8E7     		b	.L199
 3225              	.L210:
 783:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 3226              		.loc 1 783 9 view .LVU824
 783:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 3227              		.loc 1 783 40 is_stmt 0 view .LVU825
 3228 0076 1D4B     		ldr	r3, .L211+8
 3229 0078 0022     		movs	r2, #0
 3230 007a 9A71     		strb	r2, [r3, #6]
 784:Task/Task_Control.c ****         return;
 3231              		.loc 1 784 9 is_stmt 1 view .LVU826
 3232 007c 1F49     		ldr	r1, .L211+24
 3233 007e 2046     		mov	r0, r4
 3234 0080 FFF7FEFF 		bl	shellPrint
 3235              	.LVL225:
 785:Task/Task_Control.c ****     }
 3236              		.loc 1 785 9 view .LVU827
 3237 0084 F0E7     		b	.L199
 3238              	.L204:
 797:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 3239              		.loc 1 797 5 view .LVU828
 3240 0086 3346     		mov	r3, r6
 3241 0088 2A46     		mov	r2, r5
 3242 008a 1D49     		ldr	r1, .L211+28
 3243 008c 2046     		mov	r0, r4
 3244 008e FFF7FEFF 		bl	shellPrint
 3245              	.LVL226:
 798:Task/Task_Control.c ****     if(p_CLIData)
 3246              		.loc 1 798 5 view .LVU829
 798:Task/Task_Control.c ****     if(p_CLIData)
 3247              		.loc 1 798 28 is_stmt 0 view .LVU830
 3248 0092 1C4B     		ldr	r3, .L211+32
 3249 0094 DB6A     		ldr	r3, [r3, #44]
 798:Task/Task_Control.c ****     if(p_CLIData)
 3250              		.loc 1 798 17 view .LVU831
 3251 0096 0820     		movs	r0, #8
 3252 0098 9847     		blx	r3
 3253              	.LVL227:
 799:Task/Task_Control.c ****     {
 3254              		.loc 1 799 5 is_stmt 1 view .LVU832
 799:Task/Task_Control.c ****     {
 3255              		.loc 1 799 7 is_stmt 0 view .LVU833
 3256 009a 0746     		mov	r7, r0
 3257              	.LVL228:
 799:Task/Task_Control.c ****     {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 83


 3258              		.loc 1 799 7 view .LVU834
 3259 009c C8B1     		cbz	r0, .L205
 801:Task/Task_Control.c ****         p_CLIData->index = moto_index;
 3260              		.loc 1 801 9 is_stmt 1 view .LVU835
 801:Task/Task_Control.c ****         p_CLIData->index = moto_index;
 3261              		.loc 1 801 29 is_stmt 0 view .LVU836
 3262 009e 0223     		movs	r3, #2
 3263 00a0 0371     		strb	r3, [r0, #4]
 802:Task/Task_Control.c ****         p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 3264              		.loc 1 802 9 is_stmt 1 view .LVU837
 802:Task/Task_Control.c ****         p_CLIData->timestamp = SrvOsCommon.get_os_ms();
 3265              		.loc 1 802 26 is_stmt 0 view .LVU838
 3266 00a2 4571     		strb	r5, [r0, #5]
 803:Task/Task_Control.c ****         p_CLIData->value = dir;
 3267              		.loc 1 803 9 is_stmt 1 view .LVU839
 803:Task/Task_Control.c ****         p_CLIData->value = dir;
 3268              		.loc 1 803 43 is_stmt 0 view .LVU840
 3269 00a4 174B     		ldr	r3, .L211+32
 3270 00a6 5B68     		ldr	r3, [r3, #4]
 803:Task/Task_Control.c ****         p_CLIData->value = dir;
 3271              		.loc 1 803 32 view .LVU841
 3272 00a8 9847     		blx	r3
 3273              	.LVL229:
 803:Task/Task_Control.c ****         p_CLIData->value = dir;
 3274              		.loc 1 803 30 view .LVU842
 3275 00aa 3860     		str	r0, [r7]
 804:Task/Task_Control.c **** 
 3276              		.loc 1 804 9 is_stmt 1 view .LVU843
 804:Task/Task_Control.c **** 
 3277              		.loc 1 804 26 is_stmt 0 view .LVU844
 3278 00ac FE80     		strh	r6, [r7, #6]	@ movhi
 806:Task/Task_Control.c ****         {
 3279              		.loc 1 806 9 is_stmt 1 view .LVU845
 806:Task/Task_Control.c ****         {
 3280              		.loc 1 806 12 is_stmt 0 view .LVU846
 3281 00ae 0122     		movs	r2, #1
 3282 00b0 3946     		mov	r1, r7
 3283 00b2 0E4B     		ldr	r3, .L211+8
 3284 00b4 D3F81C01 		ldr	r0, [r3, #284]
 3285 00b8 FFF7FEFF 		bl	osMessagePut
 3286              	.LVL230:
 806:Task/Task_Control.c ****         {
 3287              		.loc 1 806 11 view .LVU847
 3288 00bc 0028     		cmp	r0, #0
 3289 00be D3D0     		beq	.L199
 808:Task/Task_Control.c ****             shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 3290              		.loc 1 808 13 is_stmt 1 view .LVU848
 808:Task/Task_Control.c ****             shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 3291              		.loc 1 808 24 is_stmt 0 view .LVU849
 3292 00c0 104B     		ldr	r3, .L211+32
 3293 00c2 1B6B     		ldr	r3, [r3, #48]
 808:Task/Task_Control.c ****             shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 3294              		.loc 1 808 13 view .LVU850
 3295 00c4 3846     		mov	r0, r7
 3296 00c6 9847     		blx	r3
 3297              	.LVL231:
 809:Task/Task_Control.c ****         }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 84


 3298              		.loc 1 809 13 is_stmt 1 view .LVU851
 3299 00c8 0F49     		ldr	r1, .L211+36
 3300 00ca 2046     		mov	r0, r4
 3301 00cc FFF7FEFF 		bl	shellPrint
 3302              	.LVL232:
 3303 00d0 CAE7     		b	.L199
 3304              	.LVL233:
 3305              	.L205:
 814:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3306              		.loc 1 814 9 view .LVU852
 3307 00d2 0E49     		ldr	r1, .L211+40
 3308 00d4 2046     		mov	r0, r4
 3309              	.LVL234:
 814:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3310              		.loc 1 814 9 is_stmt 0 view .LVU853
 3311 00d6 FFF7FEFF 		bl	shellPrint
 3312              	.LVL235:
 815:Task/Task_Control.c ****     }
 3313              		.loc 1 815 9 is_stmt 1 view .LVU854
 815:Task/Task_Control.c ****     }
 3314              		.loc 1 815 20 is_stmt 0 view .LVU855
 3315 00da 0A4B     		ldr	r3, .L211+32
 3316 00dc 1B6B     		ldr	r3, [r3, #48]
 815:Task/Task_Control.c ****     }
 3317              		.loc 1 815 9 view .LVU856
 3318 00de 3846     		mov	r0, r7
 3319 00e0 9847     		blx	r3
 3320              	.LVL236:
 3321 00e2 C1E7     		b	.L199
 3322              	.L212:
 3323              		.align	2
 3324              	.L211:
 3325 00e4 00000000 		.word	SrvActuator
 3326 00e8 00000000 		.word	SrvDataHub
 3327 00ec 00000000 		.word	.LANCHOR0
 3328 00f0 48000000 		.word	.LC50
 3329 00f4 00000000 		.word	.LC65
 3330 00f8 00000000 		.word	.LC48
 3331 00fc 28000000 		.word	.LC49
 3332 0100 14000000 		.word	.LC66
 3333 0104 00000000 		.word	SrvOsCommon
 3334 0108 D0010000 		.word	.LC63
 3335 010c F0010000 		.word	.LC64
 3336              		.cfi_endproc
 3337              	.LFE2085:
 3339              		.section	.rodata.TaskControl_Close_CLI.str1.4,"aMS",%progbits,1
 3340              		.align	2
 3341              	.LC67:
 3342 0000 5461736B 		.ascii	"TaskControl CLI disable\015\012\000"
 3342      436F6E74 
 3342      726F6C20 
 3342      434C4920 
 3342      64697361 
 3343              		.section	.text.TaskControl_Close_CLI,"ax",%progbits
 3344              		.align	1
 3345              		.syntax unified
 3346              		.thumb
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 85


 3347              		.thumb_func
 3349              	TaskControl_Close_CLI:
 3350              	.LFB2086:
 818:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 819:Task/Task_Control.c **** 
 820:Task/Task_Control.c **** static void TaskControl_Close_CLI(void)
 821:Task/Task_Control.c **** {
 3351              		.loc 1 821 1 is_stmt 1 view -0
 3352              		.cfi_startproc
 3353              		@ args = 0, pretend = 0, frame = 0
 3354              		@ frame_needed = 0, uses_anonymous_args = 0
 3355 0000 70B5     		push	{r4, r5, r6, lr}
 3356              	.LCFI30:
 3357              		.cfi_def_cfa_offset 16
 3358              		.cfi_offset 4, -16
 3359              		.cfi_offset 5, -12
 3360              		.cfi_offset 6, -8
 3361              		.cfi_offset 14, -4
 822:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 3362              		.loc 1 822 5 view .LVU858
 3363              		.loc 1 822 24 is_stmt 0 view .LVU859
 3364 0002 FFF7FEFF 		bl	Shell_GetInstence
 3365              	.LVL237:
 3366 0006 0446     		mov	r4, r0
 3367              	.LVL238:
 823:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 3368              		.loc 1 823 5 is_stmt 1 view .LVU860
 824:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 3369              		.loc 1 824 5 view .LVU861
 3370              		.loc 1 824 38 is_stmt 0 view .LVU862
 3371 0008 1B4B     		ldr	r3, .L221
 3372 000a 5B68     		ldr	r3, [r3, #4]
 3373              		.loc 1 824 27 view .LVU863
 3374 000c 9847     		blx	r3
 3375              	.LVL239:
 825:Task/Task_Control.c **** 
 826:Task/Task_Control.c ****     if(shell_obj == NULL)
 3376              		.loc 1 826 5 is_stmt 1 view .LVU864
 3377              		.loc 1 826 7 is_stmt 0 view .LVU865
 3378 000e DCB1     		cbz	r4, .L213
 3379 0010 0646     		mov	r6, r0
 827:Task/Task_Control.c ****         return;
 828:Task/Task_Control.c **** 
 829:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 3380              		.loc 1 829 5 is_stmt 1 view .LVU866
 3381              		.loc 1 829 27 is_stmt 0 view .LVU867
 3382 0012 1A4B     		ldr	r3, .L221+4
 3383 0014 D3F81C31 		ldr	r3, [r3, #284]
 3384              		.loc 1 829 7 view .LVU868
 3385 0018 BBB1     		cbz	r3, .L218
 830:Task/Task_Control.c ****     {
 831:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl semaphore create failed\r\n");
 832:Task/Task_Control.c ****         return;
 833:Task/Task_Control.c ****     }
 834:Task/Task_Control.c **** 
 835:Task/Task_Control.c ****     shellPrint(shell_obj, "TaskControl CLI disable\r\n");
 3386              		.loc 1 835 5 is_stmt 1 view .LVU869
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 86


 3387 001a 1949     		ldr	r1, .L221+8
 3388 001c 2046     		mov	r0, r4
 3389              	.LVL240:
 3390              		.loc 1 835 5 is_stmt 0 view .LVU870
 3391 001e FFF7FEFF 		bl	shellPrint
 3392              	.LVL241:
 836:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 3393              		.loc 1 836 5 is_stmt 1 view .LVU871
 3394              		.loc 1 836 28 is_stmt 0 view .LVU872
 3395 0022 154B     		ldr	r3, .L221
 3396 0024 DB6A     		ldr	r3, [r3, #44]
 3397              		.loc 1 836 17 view .LVU873
 3398 0026 0820     		movs	r0, #8
 3399 0028 9847     		blx	r3
 3400              	.LVL242:
 837:Task/Task_Control.c ****     if (p_CLIData == NULL)
 3401              		.loc 1 837 5 is_stmt 1 view .LVU874
 3402              		.loc 1 837 8 is_stmt 0 view .LVU875
 3403 002a 0546     		mov	r5, r0
 3404 002c 90B1     		cbz	r0, .L219
 838:Task/Task_Control.c ****     {
 839:Task/Task_Control.c ****         shellPrint(shell_obj, "Moto control test data malloc failed\r\n");
 840:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 841:Task/Task_Control.c ****         return;
 842:Task/Task_Control.c ****     }
 843:Task/Task_Control.c **** 
 844:Task/Task_Control.c ****     p_CLIData->cli_type = TaskControl_Moto_CliDisable;
 3405              		.loc 1 844 5 is_stmt 1 view .LVU876
 3406              		.loc 1 844 25 is_stmt 0 view .LVU877
 3407 002e 0023     		movs	r3, #0
 3408 0030 0371     		strb	r3, [r0, #4]
 845:Task/Task_Control.c ****     p_CLIData->timestamp = time_stamp;
 3409              		.loc 1 845 5 is_stmt 1 view .LVU878
 3410              		.loc 1 845 26 is_stmt 0 view .LVU879
 3411 0032 0660     		str	r6, [r0]
 846:Task/Task_Control.c ****     p_CLIData->index = 0;
 3412              		.loc 1 846 5 is_stmt 1 view .LVU880
 3413              		.loc 1 846 22 is_stmt 0 view .LVU881
 3414 0034 4371     		strb	r3, [r0, #5]
 847:Task/Task_Control.c ****     p_CLIData->value = 0;
 3415              		.loc 1 847 5 is_stmt 1 view .LVU882
 3416              		.loc 1 847 22 is_stmt 0 view .LVU883
 3417 0036 C380     		strh	r3, [r0, #6]	@ movhi
 848:Task/Task_Control.c **** 
 849:Task/Task_Control.c ****     if(osMessagePut(TaskControl_Monitor.CLIMessage_ID, (uint32_t)p_CLIData, CLI_MESSAGE_OPEARATE_TI
 3418              		.loc 1 849 5 is_stmt 1 view .LVU884
 3419              		.loc 1 849 8 is_stmt 0 view .LVU885
 3420 0038 0122     		movs	r2, #1
 3421 003a 0146     		mov	r1, r0
 3422 003c 0F4B     		ldr	r3, .L221+4
 3423 003e D3F81C01 		ldr	r0, [r3, #284]
 3424              	.LVL243:
 3425              		.loc 1 849 8 view .LVU886
 3426 0042 FFF7FEFF 		bl	osMessagePut
 3427              	.LVL244:
 3428              		.loc 1 849 7 view .LVU887
 3429 0046 70B9     		cbnz	r0, .L220
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 87


 3430              	.LVL245:
 3431              	.L213:
 850:Task/Task_Control.c ****     {
 851:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 852:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 853:Task/Task_Control.c ****     }
 854:Task/Task_Control.c **** }
 3432              		.loc 1 854 1 view .LVU888
 3433 0048 70BD     		pop	{r4, r5, r6, pc}
 3434              	.LVL246:
 3435              	.L218:
 831:Task/Task_Control.c ****         return;
 3436              		.loc 1 831 9 is_stmt 1 view .LVU889
 3437 004a 0E49     		ldr	r1, .L221+12
 3438 004c 2046     		mov	r0, r4
 3439              	.LVL247:
 831:Task/Task_Control.c ****         return;
 3440              		.loc 1 831 9 is_stmt 0 view .LVU890
 3441 004e FFF7FEFF 		bl	shellPrint
 3442              	.LVL248:
 832:Task/Task_Control.c ****     }
 3443              		.loc 1 832 9 is_stmt 1 view .LVU891
 3444 0052 F9E7     		b	.L213
 3445              	.LVL249:
 3446              	.L219:
 839:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3447              		.loc 1 839 9 view .LVU892
 3448 0054 0C49     		ldr	r1, .L221+16
 3449 0056 2046     		mov	r0, r4
 3450              	.LVL250:
 839:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3451              		.loc 1 839 9 is_stmt 0 view .LVU893
 3452 0058 FFF7FEFF 		bl	shellPrint
 3453              	.LVL251:
 840:Task/Task_Control.c ****         return;
 3454              		.loc 1 840 9 is_stmt 1 view .LVU894
 840:Task/Task_Control.c ****         return;
 3455              		.loc 1 840 20 is_stmt 0 view .LVU895
 3456 005c 064B     		ldr	r3, .L221
 3457 005e 1B6B     		ldr	r3, [r3, #48]
 840:Task/Task_Control.c ****         return;
 3458              		.loc 1 840 9 view .LVU896
 3459 0060 2846     		mov	r0, r5
 3460 0062 9847     		blx	r3
 3461              	.LVL252:
 841:Task/Task_Control.c ****     }
 3462              		.loc 1 841 9 is_stmt 1 view .LVU897
 3463 0064 F0E7     		b	.L213
 3464              	.L220:
 851:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3465              		.loc 1 851 9 view .LVU898
 3466 0066 0949     		ldr	r1, .L221+20
 3467 0068 2046     		mov	r0, r4
 3468 006a FFF7FEFF 		bl	shellPrint
 3469              	.LVL253:
 852:Task/Task_Control.c ****     }
 3470              		.loc 1 852 9 view .LVU899
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 88


 852:Task/Task_Control.c ****     }
 3471              		.loc 1 852 20 is_stmt 0 view .LVU900
 3472 006e 024B     		ldr	r3, .L221
 3473 0070 1B6B     		ldr	r3, [r3, #48]
 852:Task/Task_Control.c ****     }
 3474              		.loc 1 852 9 view .LVU901
 3475 0072 2846     		mov	r0, r5
 3476 0074 9847     		blx	r3
 3477              	.LVL254:
 3478 0076 E7E7     		b	.L213
 3479              	.L222:
 3480              		.align	2
 3481              	.L221:
 3482 0078 00000000 		.word	SrvOsCommon
 3483 007c 00000000 		.word	.LANCHOR0
 3484 0080 00000000 		.word	.LC67
 3485 0084 00000000 		.word	.LC48
 3486 0088 F0010000 		.word	.LC64
 3487 008c D0010000 		.word	.LC63
 3488              		.cfi_endproc
 3489              	.LFE2086:
 3491              		.section	.text.TaskControl_Init,"ax",%progbits
 3492              		.align	1
 3493              		.global	TaskControl_Init
 3494              		.syntax unified
 3495              		.thumb
 3496              		.thumb_func
 3498              	TaskControl_Init:
 3499              	.LVL255:
 3500              	.LFB2074:
  75:Task/Task_Control.c ****     /* init monitor */
 3501              		.loc 1 75 1 is_stmt 1 view -0
 3502              		.cfi_startproc
 3503              		@ args = 0, pretend = 0, frame = 16
 3504              		@ frame_needed = 0, uses_anonymous_args = 0
  75:Task/Task_Control.c ****     /* init monitor */
 3505              		.loc 1 75 1 is_stmt 0 view .LVU903
 3506 0000 70B5     		push	{r4, r5, r6, lr}
 3507              	.LCFI31:
 3508              		.cfi_def_cfa_offset 16
 3509              		.cfi_offset 4, -16
 3510              		.cfi_offset 5, -12
 3511              		.cfi_offset 6, -8
 3512              		.cfi_offset 14, -4
 3513 0002 84B0     		sub	sp, sp, #16
 3514              	.LCFI32:
 3515              		.cfi_def_cfa_offset 32
 3516 0004 0546     		mov	r5, r0
  77:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
 3517              		.loc 1 77 5 is_stmt 1 view .LVU904
 3518 0006 184C     		ldr	r4, .L225
 3519 0008 4FF49072 		mov	r2, #288
 3520 000c 0021     		movs	r1, #0
 3521 000e 2046     		mov	r0, r4
 3522              	.LVL256:
  77:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
 3523              		.loc 1 77 5 is_stmt 0 view .LVU905
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 89


 3524 0010 FFF7FEFF 		bl	memset
 3525              	.LVL257:
  78:Task/Task_Control.c **** 
 3526              		.loc 1 78 5 is_stmt 1 view .LVU906
  78:Task/Task_Control.c **** 
 3527              		.loc 1 78 15 is_stmt 0 view .LVU907
 3528 0014 154B     		ldr	r3, .L225+4
 3529 0016 DB69     		ldr	r3, [r3, #28]
  78:Task/Task_Control.c **** 
 3530              		.loc 1 78 5 view .LVU908
 3531 0018 1548     		ldr	r0, .L225+8
 3532 001a 9847     		blx	r3
 3533              	.LVL258:
  81:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_size = DataPipe_DataSize(ExpCtl);
 3534              		.loc 1 81 5 is_stmt 1 view .LVU909
  81:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_size = DataPipe_DataSize(ExpCtl);
 3535              		.loc 1 81 36 is_stmt 0 view .LVU910
 3536 001c 154B     		ldr	r3, .L225+12
 3537 001e 164A     		ldr	r2, .L225+16
 3538 0020 C3F80D20 		str	r2, [r3, #13]	@ unaligned
  82:Task/Task_Control.c ****     DataPipe_Enable(&CtlData_smp_DataPipe);
 3539              		.loc 1 82 5 is_stmt 1 view .LVU911
  82:Task/Task_Control.c ****     DataPipe_Enable(&CtlData_smp_DataPipe);
 3540              		.loc 1 82 36 is_stmt 0 view .LVU912
 3541 0024 0026     		movs	r6, #0
 3542 0026 1C22     		movs	r2, #28
 3543 0028 5A74     		strb	r2, [r3, #17]
 3544 002a 9E74     		strb	r6, [r3, #18]
  83:Task/Task_Control.c ****     
 3545              		.loc 1 83 5 is_stmt 1 view .LVU913
 3546              	.LVL259:
 3547              	.LBB13:
 3548              	.LBI13:
 3549              		.file 2 "System/DataPipe/DataPipe.h"
   1:System/DataPipe/DataPipe.h **** #ifndef __DATAPIPE_H
   2:System/DataPipe/DataPipe.h **** #define __DATAPIPE_H
   3:System/DataPipe/DataPipe.h **** 
   4:System/DataPipe/DataPipe.h **** #ifdef __cplusplus
   5:System/DataPipe/DataPipe.h **** extern "C" {
   6:System/DataPipe/DataPipe.h **** #endif
   7:System/DataPipe/DataPipe.h **** 
   8:System/DataPipe/DataPipe.h **** #include <stdint.h>
   9:System/DataPipe/DataPipe.h **** #include <string.h>
  10:System/DataPipe/DataPipe.h **** #include <stdbool.h>
  11:System/DataPipe/DataPipe.h **** #include "../../FCHW_Config.h"
  12:System/DataPipe/DataPipe.h **** 
  13:System/DataPipe/DataPipe.h **** typedef void (*Pipe_TransFinish_Callback)(void *pipe_obj);
  14:System/DataPipe/DataPipe.h **** typedef void (*Pipe_TransError_Callback)(void *pipe_obj);
  15:System/DataPipe/DataPipe.h **** typedef void (*Pipe_TimeOutProc_Callback)(void *pipe_obj);
  16:System/DataPipe/DataPipe.h **** 
  17:System/DataPipe/DataPipe.h **** #define DataPipeHandleToObj(x) ((DataPipeObj_TypeDef *)x)
  18:System/DataPipe/DataPipe.h **** #define DataPipe_CreateDataObj(type, name) static type name##_##PipeDataObj __attribute__((section(
  19:System/DataPipe/DataPipe.h **** #define DataPipe_DataObjAddr(name) (&name##_##PipeDataObj)
  20:System/DataPipe/DataPipe.h **** #define DataPipe_DataObj(name) name##_##PipeDataObj
  21:System/DataPipe/DataPipe.h **** #define DataPipe_DataSize(name) sizeof(name##_##PipeDataObj)
  22:System/DataPipe/DataPipe.h **** 
  23:System/DataPipe/DataPipe.h **** typedef enum
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 90


  24:System/DataPipe/DataPipe.h **** {
  25:System/DataPipe/DataPipe.h ****     Pipe_UnReady = 0,
  26:System/DataPipe/DataPipe.h ****     Pipe_Ready,
  27:System/DataPipe/DataPipe.h ****     Pipe_Busy,
  28:System/DataPipe/DataPipe.h ****     Pipe_Error,
  29:System/DataPipe/DataPipe.h **** } DataPipe_State_List;
  30:System/DataPipe/DataPipe.h **** 
  31:System/DataPipe/DataPipe.h **** #pragma pack(1)
  32:System/DataPipe/DataPipe.h **** typedef struct
  33:System/DataPipe/DataPipe.h **** {
  34:System/DataPipe/DataPipe.h ****     uint32_t min_rx_interval;
  35:System/DataPipe/DataPipe.h ****     uint32_t detect_interval;
  36:System/DataPipe/DataPipe.h ****     uint32_t rx_ms_rt;
  37:System/DataPipe/DataPipe.h **** 
  38:System/DataPipe/DataPipe.h ****     bool enable;
  39:System/DataPipe/DataPipe.h **** 
  40:System/DataPipe/DataPipe.h ****     uint32_t data_addr;
  41:System/DataPipe/DataPipe.h ****     uint16_t data_size;
  42:System/DataPipe/DataPipe.h **** 
  43:System/DataPipe/DataPipe.h ****     Pipe_TransFinish_Callback trans_finish_cb;
  44:System/DataPipe/DataPipe.h ****     Pipe_TransError_Callback trans_error_cb;
  45:System/DataPipe/DataPipe.h **** 
  46:System/DataPipe/DataPipe.h ****     uint32_t tx_cnt;
  47:System/DataPipe/DataPipe.h ****     uint32_t rx_cnt;
  48:System/DataPipe/DataPipe.h ****     uint32_t er_cnt;
  49:System/DataPipe/DataPipe.h **** } DataPipeObj_TypeDef;
  50:System/DataPipe/DataPipe.h **** #pragma pack()
  51:System/DataPipe/DataPipe.h **** 
  52:System/DataPipe/DataPipe.h **** typedef struct
  53:System/DataPipe/DataPipe.h **** {
  54:System/DataPipe/DataPipe.h ****     DataPipeObj_TypeDef *org;
  55:System/DataPipe/DataPipe.h ****     DataPipeObj_TypeDef *dst;
  56:System/DataPipe/DataPipe.h **** } Data_PlugedPipeObj_TypeDef;
  57:System/DataPipe/DataPipe.h **** 
  58:System/DataPipe/DataPipe.h **** bool DataPipe_Init(void);
  59:System/DataPipe/DataPipe.h **** bool DataPipe_DeInit(void);
  60:System/DataPipe/DataPipe.h **** bool DataPipe_SendTo(DataPipeObj_TypeDef *p_org, DataPipeObj_TypeDef *p_dst);
  61:System/DataPipe/DataPipe.h **** bool DataPipe_DealError(void);
  62:System/DataPipe/DataPipe.h **** 
  63:System/DataPipe/DataPipe.h **** inline bool DataPipe_Enable(DataPipeObj_TypeDef *obj)
 3550              		.loc 2 63 13 view .LVU914
 3551              	.LBB14:
  64:System/DataPipe/DataPipe.h **** {
  65:System/DataPipe/DataPipe.h ****     if (obj == NULL)
 3552              		.loc 2 65 5 view .LVU915
  66:System/DataPipe/DataPipe.h ****         return false;
  67:System/DataPipe/DataPipe.h **** 
  68:System/DataPipe/DataPipe.h ****     obj->enable = true;
 3553              		.loc 2 68 5 view .LVU916
 3554              		.loc 2 68 17 is_stmt 0 view .LVU917
 3555 002c 0122     		movs	r2, #1
 3556 002e 1A73     		strb	r2, [r3, #12]
  69:System/DataPipe/DataPipe.h **** 
  70:System/DataPipe/DataPipe.h ****     return true;
 3557              		.loc 2 70 5 is_stmt 1 view .LVU918
 3558              	.LVL260:
 3559              		.loc 2 70 5 is_stmt 0 view .LVU919
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 91


 3560              	.LBE14:
 3561              	.LBE13:
  86:Task/Task_Control.c ****     TaskControl_Monitor.init_state = SrvActuator.init(TaskControl_Monitor.actuator_param);
 3562              		.loc 1 86 5 is_stmt 1 view .LVU920
 3563 0030 FFF7FEFF 		bl	TaskControl_Get_StoreParam
 3564              	.LVL261:
  87:Task/Task_Control.c **** 
 3565              		.loc 1 87 5 view .LVU921
  87:Task/Task_Control.c **** 
 3566              		.loc 1 87 49 is_stmt 0 view .LVU922
 3567 0034 114B     		ldr	r3, .L225+20
 3568 0036 1B68     		ldr	r3, [r3]
  87:Task/Task_Control.c **** 
 3569              		.loc 1 87 38 view .LVU923
 3570 0038 D4F8B700 		ldr	r0, [r4, #183]	@ unaligned
 3571 003c D4F8BB10 		ldr	r1, [r4, #187]	@ unaligned
 3572 0040 D4F8BF20 		ldr	r2, [r4, #191]	@ unaligned
 3573 0044 9847     		blx	r3
 3574              	.LVL262:
  87:Task/Task_Control.c **** 
 3575              		.loc 1 87 36 view .LVU924
 3576 0046 2070     		strb	r0, [r4]
  89:Task/Task_Control.c ****     TaskControl_Monitor.CLIMessage_ID = osMessageCreate(osMessageQ(MotoCLI_Data), NULL);
 3577              		.loc 1 89 5 is_stmt 1 view .LVU925
 3578 0048 0D4B     		ldr	r3, .L225+24
 3579 004a EC46     		mov	ip, sp
 3580 004c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 3581 004e 8CE80F00 		stm	ip, {r0, r1, r2, r3}
  90:Task/Task_Control.c ****     
 3582              		.loc 1 90 5 view .LVU926
  90:Task/Task_Control.c ****     
 3583              		.loc 1 90 41 is_stmt 0 view .LVU927
 3584 0052 3146     		mov	r1, r6
 3585 0054 6046     		mov	r0, ip
 3586 0056 FFF7FEFF 		bl	osMessageCreate
 3587              	.LVL263:
  90:Task/Task_Control.c ****     
 3588              		.loc 1 90 39 view .LVU928
 3589 005a C4F81C01 		str	r0, [r4, #284]
  92:Task/Task_Control.c **** }
 3590              		.loc 1 92 5 is_stmt 1 view .LVU929
  92:Task/Task_Control.c **** }
 3591              		.loc 1 92 24 is_stmt 0 view .LVU930
 3592 005e 094B     		ldr	r3, .L225+28
 3593 0060 1D60     		str	r5, [r3]
  93:Task/Task_Control.c **** 
 3594              		.loc 1 93 1 view .LVU931
 3595 0062 04B0     		add	sp, sp, #16
 3596              	.LCFI33:
 3597              		.cfi_def_cfa_offset 16
 3598              		@ sp needed
 3599 0064 70BD     		pop	{r4, r5, r6, pc}
 3600              	.LVL264:
 3601              	.L226:
  93:Task/Task_Control.c **** 
 3602              		.loc 1 93 1 view .LVU932
 3603 0066 00BF     		.align	2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 92


 3604              	.L225:
 3605 0068 00000000 		.word	.LANCHOR0
 3606 006c 00000000 		.word	SrvDataHub
 3607 0070 00000000 		.word	.LANCHOR5
 3608 0074 00000000 		.word	CtlData_smp_DataPipe
 3609 0078 00000000 		.word	.LANCHOR2
 3610 007c 00000000 		.word	SrvActuator
 3611 0080 00000000 		.word	.LANCHOR10
 3612 0084 00000000 		.word	.LANCHOR11
 3613              		.cfi_endproc
 3614              	.LFE2074:
 3616              		.section	.text.TaskControl_Core,"ax",%progbits
 3617              		.align	1
 3618              		.global	TaskControl_Core
 3619              		.syntax unified
 3620              		.thumb
 3621              		.thumb_func
 3623              	TaskControl_Core:
 3624              	.LVL265:
 3625              	.LFB2077:
 200:Task/Task_Control.c ****     uint32_t sys_time = SrvOsCommon.get_os_ms();
 3626              		.loc 1 200 1 is_stmt 1 view -0
 3627              		.cfi_startproc
 3628              		@ args = 0, pretend = 0, frame = 112
 3629              		@ frame_needed = 0, uses_anonymous_args = 0
 200:Task/Task_Control.c ****     uint32_t sys_time = SrvOsCommon.get_os_ms();
 3630              		.loc 1 200 1 is_stmt 0 view .LVU934
 3631 0000 30B5     		push	{r4, r5, lr}
 3632              	.LCFI34:
 3633              		.cfi_def_cfa_offset 12
 3634              		.cfi_offset 4, -12
 3635              		.cfi_offset 5, -8
 3636              		.cfi_offset 14, -4
 3637 0002 9DB0     		sub	sp, sp, #116
 3638              	.LCFI35:
 3639              		.cfi_def_cfa_offset 128
 201:Task/Task_Control.c ****     uint32_t task_tick = 0;
 3640              		.loc 1 201 5 is_stmt 1 view .LVU935
 201:Task/Task_Control.c ****     uint32_t task_tick = 0;
 3641              		.loc 1 201 36 is_stmt 0 view .LVU936
 3642 0004 184B     		ldr	r3, .L233
 3643 0006 5B68     		ldr	r3, [r3, #4]
 201:Task/Task_Control.c ****     uint32_t task_tick = 0;
 3644              		.loc 1 201 25 view .LVU937
 3645 0008 9847     		blx	r3
 3646              	.LVL266:
 201:Task/Task_Control.c ****     uint32_t task_tick = 0;
 3647              		.loc 1 201 14 view .LVU938
 3648 000a 1B90     		str	r0, [sp, #108]
 202:Task/Task_Control.c ****     bool upgrade_state = false;
 3649              		.loc 1 202 5 is_stmt 1 view .LVU939
 3650              	.LVL267:
 203:Task/Task_Control.c ****     ControlData_TypeDef CtlData;
 3651              		.loc 1 203 5 view .LVU940
 203:Task/Task_Control.c ****     ControlData_TypeDef CtlData;
 3652              		.loc 1 203 10 is_stmt 0 view .LVU941
 3653 000c 0021     		movs	r1, #0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 93


 3654 000e 8DF86B10 		strb	r1, [sp, #107]
 204:Task/Task_Control.c ****     memset(&CtlData, 0, sizeof(ControlData_TypeDef));
 3655              		.loc 1 204 5 is_stmt 1 view .LVU942
 205:Task/Task_Control.c **** 
 3656              		.loc 1 205 5 view .LVU943
 3657 0012 6422     		movs	r2, #100
 3658 0014 01A8     		add	r0, sp, #4
 3659 0016 FFF7FEFF 		bl	memset
 3660              	.LVL268:
 3661 001a 0CE0     		b	.L231
 3662              	.LVL269:
 3663              	.L228:
 221:Task/Task_Control.c ****             {
 3664              		.loc 1 221 13 view .LVU944
 221:Task/Task_Control.c ****             {
 3665              		.loc 1 221 37 is_stmt 0 view .LVU945
 3666 001c 134B     		ldr	r3, .L233+4
 3667 001e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 221:Task/Task_Control.c ****             {
 3668              		.loc 1 221 16 view .LVU946
 3669 0020 FBB9     		cbnz	r3, .L230
 224:Task/Task_Control.c ****             }
 3670              		.loc 1 224 17 is_stmt 1 view .LVU947
 3671 0022 2146     		mov	r1, r4
 3672 0024 01A8     		add	r0, sp, #4
 3673 0026 FFF7FEFF 		bl	TaskControl_FlightControl_Polling
 3674              	.LVL270:
 3675              	.L229:
 238:Task/Task_Control.c ****     }
 3676              		.loc 1 238 9 view .LVU948
 238:Task/Task_Control.c ****     }
 3677              		.loc 1 238 20 is_stmt 0 view .LVU949
 3678 002a 0F4B     		ldr	r3, .L233
 3679 002c DB68     		ldr	r3, [r3, #12]
 238:Task/Task_Control.c ****     }
 3680              		.loc 1 238 9 view .LVU950
 3681 002e 104A     		ldr	r2, .L233+8
 3682 0030 1168     		ldr	r1, [r2]
 3683 0032 1BA8     		add	r0, sp, #108
 3684 0034 9847     		blx	r3
 3685              	.LVL271:
 207:Task/Task_Control.c ****     {
 3686              		.loc 1 207 10 is_stmt 1 view .LVU951
 3687              	.L231:
 207:Task/Task_Control.c ****     {
 3688              		.loc 1 207 5 view .LVU952
 209:Task/Task_Control.c **** 
 3689              		.loc 1 209 9 view .LVU953
 209:Task/Task_Control.c **** 
 3690              		.loc 1 209 32 is_stmt 0 view .LVU954
 3691 0036 0C4B     		ldr	r3, .L233
 3692 0038 5B68     		ldr	r3, [r3, #4]
 209:Task/Task_Control.c **** 
 3693              		.loc 1 209 21 view .LVU955
 3694 003a 9847     		blx	r3
 3695              	.LVL272:
 3696 003c 0446     		mov	r4, r0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 94


 3697              	.LVL273:
 212:Task/Task_Control.c **** 
 3698              		.loc 1 212 9 is_stmt 1 view .LVU956
 212:Task/Task_Control.c **** 
 3699              		.loc 1 212 19 is_stmt 0 view .LVU957
 3700 003e 0D4D     		ldr	r5, .L233+12
 3701 0040 AB6C     		ldr	r3, [r5, #72]
 212:Task/Task_Control.c **** 
 3702              		.loc 1 212 9 view .LVU958
 3703 0042 01A8     		add	r0, sp, #4
 3704              	.LVL274:
 212:Task/Task_Control.c **** 
 3705              		.loc 1 212 9 view .LVU959
 3706 0044 9847     		blx	r3
 3707              	.LVL275:
 214:Task/Task_Control.c ****         {
 3708              		.loc 1 214 9 is_stmt 1 view .LVU960
 214:Task/Task_Control.c ****         {
 3709              		.loc 1 214 23 is_stmt 0 view .LVU961
 3710 0046 2B69     		ldr	r3, [r5, #16]
 214:Task/Task_Control.c ****         {
 3711              		.loc 1 214 13 view .LVU962
 3712 0048 0DF16B00 		add	r0, sp, #107
 3713 004c 9847     		blx	r3
 3714              	.LVL276:
 214:Task/Task_Control.c ****         {
 3715              		.loc 1 214 12 view .LVU963
 3716 004e 0028     		cmp	r0, #0
 3717 0050 E4D0     		beq	.L228
 214:Task/Task_Control.c ****         {
 3718              		.loc 1 214 58 discriminator 1 view .LVU964
 3719 0052 9DF86B30 		ldrb	r3, [sp, #107]	@ zero_extendqisi2
 3720 0056 002B     		cmp	r3, #0
 3721 0058 E0D0     		beq	.L228
 217:Task/Task_Control.c ****         }
 3722              		.loc 1 217 13 is_stmt 1 view .LVU965
 217:Task/Task_Control.c ****         }
 3723              		.loc 1 217 24 is_stmt 0 view .LVU966
 3724 005a 074B     		ldr	r3, .L233+16
 3725 005c DB68     		ldr	r3, [r3, #12]
 217:Task/Task_Control.c ****         }
 3726              		.loc 1 217 13 view .LVU967
 3727 005e 9847     		blx	r3
 3728              	.LVL277:
 3729 0060 E3E7     		b	.L229
 3730              	.L230:
 228:Task/Task_Control.c ****                 {
 3731              		.loc 1 228 17 is_stmt 1 view .LVU968
 230:Task/Task_Control.c ****                 }
 3732              		.loc 1 230 21 view .LVU969
 3733 0062 FFF7FEFF 		bl	TaskControl_CLI_Polling
 3734              	.LVL278:
 3735 0066 E0E7     		b	.L229
 3736              	.L234:
 3737              		.align	2
 3738              	.L233:
 3739 0068 00000000 		.word	SrvOsCommon
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 95


 3740 006c 00000000 		.word	.LANCHOR0
 3741 0070 00000000 		.word	.LANCHOR11
 3742 0074 00000000 		.word	SrvDataHub
 3743 0078 00000000 		.word	SrvActuator
 3744              		.cfi_endproc
 3745              	.LFE2077:
 3747              		.global	shellCommandlock_moto
 3748              		.global	shellDesclock_moto
 3749              		.global	shellCmdlock_moto
 3750              		.global	shellCommandrev_spin
 3751              		.global	shellDescrev_spin
 3752              		.global	shellCmdrev_spin
 3753              		.global	shellCommandmoto_spin
 3754              		.global	shellDescmoto_spin
 3755              		.global	shellCmdmoto_spin
 3756              		.global	shellCommandset_moto_type
 3757              		.global	shellDescset_moto_type
 3758              		.global	shellCmdset_moto_type
 3759              		.global	shellCommandshow_ctl_modle
 3760              		.global	shellDescshow_ctl_modle
 3761              		.global	shellCmdshow_ctl_modle
 3762              		.global	TaskControl_Monitor
 3763              		.section	.rodata
 3764              		.align	2
 3765              		.set	.LANCHOR10,. + 0
 3766              	.LC0:
 3767 0000 40000000 		.word	64
 3768 0004 08000000 		.word	8
 3769 0008 00000000 		.word	0
 3770 000c 00000000 		.word	0
 3771              		.section	.Perph_Section,"aw"
 3772              		.align	2
 3773              		.set	.LANCHOR2,. + 0
 3776              	ExpCtl_PipeDataObj:
 3777 0000 00000000 		.space	28
 3777      00000000 
 3777      00000000 
 3777      00000000 
 3777      00000000 
 3778              		.section	.bss.CLIData.1,"aw",%nobits
 3779              		.align	2
 3780              		.set	.LANCHOR8,. + 0
 3783              	CLIData.1:
 3784 0000 00000000 		.space	8
 3784      00000000 
 3785              		.section	.bss.TaskControl_Period,"aw",%nobits
 3786              		.align	2
 3787              		.set	.LANCHOR11,. + 0
 3790              	TaskControl_Period:
 3791 0000 00000000 		.space	4
 3792              		.section	.bss.att_update,"aw",%nobits
 3793              		.set	.LANCHOR7,. + 0
 3796              	att_update:
 3797 0000 00       		.space	1
 3798              		.section	.bss.att_update_time,"aw",%nobits
 3799              		.align	2
 3800              		.set	.LANCHOR6,. + 0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 96


 3803              	att_update_time:
 3804 0000 00000000 		.space	4
 3805              		.section	.bss.failsafe,"aw",%nobits
 3806              		.set	.LANCHOR1,. + 0
 3809              	failsafe:
 3810 0000 00       		.space	1
 3811              		.section	.bss.imu_err_code,"aw",%nobits
 3812              		.set	.LANCHOR4,. + 0
 3815              	imu_err_code:
 3816 0000 00       		.space	1
 3817              		.section	.bss.imu_init_state,"aw",%nobits
 3818              		.set	.LANCHOR5,. + 0
 3821              	imu_init_state:
 3822 0000 00       		.space	1
 3823              		.section	.bss.imu_update_time,"aw",%nobits
 3824              		.align	2
 3825              		.set	.LANCHOR3,. + 0
 3828              	imu_update_time:
 3829 0000 00000000 		.space	4
 3830              		.section	.bss.moto_ctl_buff.0,"aw",%nobits
 3831              		.align	2
 3832              		.set	.LANCHOR9,. + 0
 3835              	moto_ctl_buff.0:
 3836 0000 00000000 		.space	16
 3836      00000000 
 3836      00000000 
 3836      00000000 
 3837              		.section	.data.TaskControl_Monitor,"aw"
 3838              		.align	2
 3839              		.set	.LANCHOR0,. + 0
 3842              	TaskControl_Monitor:
 3843 0000 00       		.byte	0
 3844 0001 00       		.byte	0
 3845 0002 01       		.byte	1
 3846 0003 00       		.byte	0
 3847 0004 01       		.byte	1
 3848 0005 00       		.byte	0
 3849 0006 00000000 		.space	194
 3849      00000000 
 3849      00000000 
 3849      00000000 
 3849      00000000 
 3850 00c8 00000000 		.word	0
 3851 00cc 00000000 		.space	52
 3851      00000000 
 3851      00000000 
 3851      00000000 
 3851      00000000 
 3852 0100 00       		.byte	0
 3853 0101 00000000 		.space	16
 3853      00000000 
 3853      00000000 
 3853      00000000 
 3854 0111 00       		.byte	0
 3855 0112 00000000 		.space	14
 3855      00000000 
 3855      00000000 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 97


 3855      0000
 3856              		.section	.rodata.shellCmdlock_moto,"a"
 3857              		.align	2
 3860              	shellCmdlock_moto:
 3861 0000 6C6F636B 		.ascii	"lock_moto\000"
 3861      5F6D6F74 
 3861      6F00
 3862              		.section	.rodata.shellCmdmoto_spin,"a"
 3863              		.align	2
 3866              	shellCmdmoto_spin:
 3867 0000 6D6F746F 		.ascii	"moto_spin\000"
 3867      5F737069 
 3867      6E00
 3868              		.section	.rodata.shellCmdrev_spin,"a"
 3869              		.align	2
 3872              	shellCmdrev_spin:
 3873 0000 7265765F 		.ascii	"rev_spin\000"
 3873      7370696E 
 3873      00
 3874              		.section	.rodata.shellCmdset_moto_type,"a"
 3875              		.align	2
 3878              	shellCmdset_moto_type:
 3879 0000 7365745F 		.ascii	"set_moto_type\000"
 3879      6D6F746F 
 3879      5F747970 
 3879      6500
 3880              		.section	.rodata.shellCmdshow_ctl_modle,"a"
 3881              		.align	2
 3884              	shellCmdshow_ctl_modle:
 3885 0000 73686F77 		.ascii	"show_ctl_modle\000"
 3885      5F63746C 
 3885      5F6D6F64 
 3885      6C6500
 3886              		.section	.rodata.shellDesclock_moto,"a"
 3887              		.align	2
 3890              	shellDesclock_moto:
 3891 0000 64697361 		.ascii	"disable actuator test\000"
 3891      626C6520 
 3891      61637475 
 3891      61746F72 
 3891      20746573 
 3892              		.section	.rodata.shellDescmoto_spin,"a"
 3893              		.align	2
 3896              	shellDescmoto_spin:
 3897 0000 53696E67 		.ascii	"Single Moto Spin\000"
 3897      6C65204D 
 3897      6F746F20 
 3897      5370696E 
 3897      00
 3898              		.section	.rodata.shellDescrev_spin,"a"
 3899              		.align	2
 3902              	shellDescrev_spin:
 3903 0000 72657665 		.ascii	"reverse moto Spin\000"
 3903      72736520 
 3903      6D6F746F 
 3903      20537069 
 3903      6E00
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 98


 3904              		.section	.rodata.shellDescset_moto_type,"a"
 3905              		.align	2
 3908              	shellDescset_moto_type:
 3909 0000 73657420 		.ascii	"set moto type\000"
 3909      6D6F746F 
 3909      20747970 
 3909      6500
 3910              		.section	.rodata.shellDescshow_ctl_modle,"a"
 3911              		.align	2
 3914              	shellDescshow_ctl_modle:
 3915 0000 73686F77 		.ascii	"show modle info\000"
 3915      206D6F64 
 3915      6C652069 
 3915      6E666F00 
 3916              		.section	shellCommand,"a"
 3917              		.align	2
 3920              	shellCommandlock_moto:
 3921 0000 00210000 		.word	8448
 3922 0004 00000000 		.word	shellCmdlock_moto
 3923 0008 00000000 		.word	TaskControl_Close_CLI
 3924 000c 00000000 		.word	shellDesclock_moto
 3927              	shellCommandrev_spin:
 3928 0010 00210000 		.word	8448
 3929 0014 00000000 		.word	shellCmdrev_spin
 3930 0018 00000000 		.word	TaskControl_Reverse_SpinDir
 3931 001c 00000000 		.word	shellDescrev_spin
 3934              	shellCommandmoto_spin:
 3935 0020 00210000 		.word	8448
 3936 0024 00000000 		.word	shellCmdmoto_spin
 3937 0028 00000000 		.word	TaskControl_CLI_MotoSpinTest
 3938 002c 00000000 		.word	shellDescmoto_spin
 3941              	shellCommandset_moto_type:
 3942 0030 00210000 		.word	8448
 3943 0034 00000000 		.word	shellCmdset_moto_type
 3944 0038 00000000 		.word	TaskControl_CLI_SetMotoType
 3945 003c 00000000 		.word	shellDescset_moto_type
 3948              	shellCommandshow_ctl_modle:
 3949 0040 00210000 		.word	8448
 3950 0044 00000000 		.word	shellCmdshow_ctl_modle
 3951 0048 00000000 		.word	TaskControl_CLI_ShowModleInfo
 3952 004c 00000000 		.word	shellDescshow_ctl_modle
 3953              		.text
 3954              	.Letext0:
 3955              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 3956              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 3957              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\
 3958              		.file 6 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
 3959              		.file 7 "System/FreeRTOS/include/portable.h"
 3960              		.file 8 "System/FreeRTOS/include/FreeRTOS.h"
 3961              		.file 9 "System/FreeRTOS/include/queue.h"
 3962              		.file 10 "common/gen_physic_def/imu_data.h"
 3963              		.file 11 "System/FreeRTOS/CMSIS_RTOS/cmsis_os.h"
 3964              		.file 12 "Service/Srv_OsCommon.h"
 3965              		.file 13 "HW_Lib/AT32F435/drivers/inc/at32f435_437_tmr.h"
 3966              		.file 14 "Device/Dev_Dshot.h"
 3967              		.file 15 "Service/Srv_Actuator.h"
 3968              		.file 16 "Service/Srv_IMUSample.h"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 99


 3969              		.file 17 "Service/control_data.h"
 3970              		.file 18 "Service/Srv_DataHub.h"
 3971              		.file 19 "Task/../System/storage/Storage_Dev_Port.h"
 3972              		.file 20 "Task/../System/storage/Storage.h"
 3973              		.file 21 "Algorithm/Control_Dep/Attitude/Att_Control_Base.h"
 3974              		.file 22 "Algorithm/Control_Dep/controller.h"
 3975              		.file 23 "Task/Task_Control.h"
 3976              		.file 24 "System/shell/shell.h"
 3977              		.file 25 "System/shell/shell_port.h"
 3978              		.file 26 "<built-in>"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 100


DEFINED SYMBOLS
                            *ABS*:00000000 Task_Control.c
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:20     .text.TaskControl_disarm_check:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:25     .text.TaskControl_disarm_check:00000000 TaskControl_disarm_check
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:123    .text.TaskControl_disarm_check:0000007c $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:128    .text.TaskControl_Actuator_ControlValue_Update:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:133    .text.TaskControl_Actuator_ControlValue_Update:00000000 TaskControl_Actuator_ControlValue_Update
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:196    .text.TaskControl_Actuator_ControlValue_Update:00000040 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:201    .text.TaskControl_Convert_CtlData:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:206    .text.TaskControl_Convert_CtlData:00000000 TaskControl_Convert_CtlData
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:253    .text.TaskControl_Convert_CtlData:00000030 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:258    .rodata.TaskControl_Get_StoreParam.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:265    .text.TaskControl_Get_StoreParam:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:270    .text.TaskControl_Get_StoreParam:00000000 TaskControl_Get_StoreParam
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:691    .text.TaskControl_Get_StoreParam:00000340 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:704    .text.TaskControl_Get_StoreParam:00000370 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:772    .text.TaskControl_Get_StoreParam:00000400 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:779    .text.TaskControl_FlightControl_Polling:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:784    .text.TaskControl_FlightControl_Polling:00000000 TaskControl_FlightControl_Polling
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1123   .text.TaskControl_FlightControl_Polling:00000204 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1130   .text.TaskControl_FlightControl_Polling:0000020a $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1287   .text.TaskControl_FlightControl_Polling:000002d4 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1302   .text.TaskControl_FlightControl_Polling:00000304 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1468   .text.TaskControl_FlightControl_Polling:000003e8 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1477   .rodata.TaskControl_CLI_Polling.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1484   .text.TaskControl_CLI_Polling:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1489   .text.TaskControl_CLI_Polling:00000000 TaskControl_CLI_Polling
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1838   .text.TaskControl_CLI_Polling:00000188 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1850   .rodata.TaskControl_CLI_ShowModleInfo.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1949   .text.TaskControl_CLI_ShowModleInfo:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:1954   .text.TaskControl_CLI_ShowModleInfo:00000000 TaskControl_CLI_ShowModleInfo
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2207   .text.TaskControl_CLI_ShowModleInfo:00000170 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2211   .text.TaskControl_CLI_ShowModleInfo:00000174 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2247   .text.TaskControl_CLI_ShowModleInfo:0000019e $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2377   .text.TaskControl_CLI_ShowModleInfo:00000220 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2414   .rodata.TaskControl_CLI_SetMotoType.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2449   .text.TaskControl_CLI_SetMotoType:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2454   .text.TaskControl_CLI_SetMotoType:00000000 TaskControl_CLI_SetMotoType
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2618   .text.TaskControl_CLI_SetMotoType:000000bc $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2636   .rodata.TaskControl_CLI_MotoSpinTest.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2689   .text.TaskControl_CLI_MotoSpinTest:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2694   .text.TaskControl_CLI_MotoSpinTest:00000000 TaskControl_CLI_MotoSpinTest
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3074   .text.TaskControl_CLI_MotoSpinTest:000001d8 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3099   .rodata.TaskControl_Reverse_SpinDir.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3106   .text.TaskControl_Reverse_SpinDir:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3111   .text.TaskControl_Reverse_SpinDir:00000000 TaskControl_Reverse_SpinDir
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3325   .text.TaskControl_Reverse_SpinDir:000000e4 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3340   .rodata.TaskControl_Close_CLI.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3344   .text.TaskControl_Close_CLI:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3349   .text.TaskControl_Close_CLI:00000000 TaskControl_Close_CLI
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3482   .text.TaskControl_Close_CLI:00000078 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3492   .text.TaskControl_Init:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3498   .text.TaskControl_Init:00000000 TaskControl_Init
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3605   .text.TaskControl_Init:00000068 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3617   .text.TaskControl_Core:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3623   .text.TaskControl_Core:00000000 TaskControl_Core
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3739   .text.TaskControl_Core:00000068 $d
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 101


C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3920   shellCommand:00000000 shellCommandlock_moto
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3890   .rodata.shellDesclock_moto:00000000 shellDesclock_moto
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3860   .rodata.shellCmdlock_moto:00000000 shellCmdlock_moto
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3927   shellCommand:00000010 shellCommandrev_spin
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3902   .rodata.shellDescrev_spin:00000000 shellDescrev_spin
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3872   .rodata.shellCmdrev_spin:00000000 shellCmdrev_spin
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3934   shellCommand:00000020 shellCommandmoto_spin
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3896   .rodata.shellDescmoto_spin:00000000 shellDescmoto_spin
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3866   .rodata.shellCmdmoto_spin:00000000 shellCmdmoto_spin
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3941   shellCommand:00000030 shellCommandset_moto_type
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3908   .rodata.shellDescset_moto_type:00000000 shellDescset_moto_type
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3878   .rodata.shellCmdset_moto_type:00000000 shellCmdset_moto_type
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3948   shellCommand:00000040 shellCommandshow_ctl_modle
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3914   .rodata.shellDescshow_ctl_modle:00000000 shellDescshow_ctl_modle
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3884   .rodata.shellCmdshow_ctl_modle:00000000 shellCmdshow_ctl_modle
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3842   .data.TaskControl_Monitor:00000000 TaskControl_Monitor
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3764   .rodata:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3772   .Perph_Section:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3776   .Perph_Section:00000000 ExpCtl_PipeDataObj
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3779   .bss.CLIData.1:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3783   .bss.CLIData.1:00000000 CLIData.1
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3786   .bss.TaskControl_Period:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3790   .bss.TaskControl_Period:00000000 TaskControl_Period
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3796   .bss.att_update:00000000 att_update
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3797   .bss.att_update:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3799   .bss.att_update_time:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3803   .bss.att_update_time:00000000 att_update_time
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3809   .bss.failsafe:00000000 failsafe
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3810   .bss.failsafe:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3815   .bss.imu_err_code:00000000 imu_err_code
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3816   .bss.imu_err_code:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3821   .bss.imu_init_state:00000000 imu_init_state
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3822   .bss.imu_init_state:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3824   .bss.imu_update_time:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3828   .bss.imu_update_time:00000000 imu_update_time
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3831   .bss.moto_ctl_buff.0:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3835   .bss.moto_ctl_buff.0:00000000 moto_ctl_buff.0
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3838   .data.TaskControl_Monitor:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3857   .rodata.shellCmdlock_moto:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3863   .rodata.shellCmdmoto_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3869   .rodata.shellCmdrev_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3875   .rodata.shellCmdset_moto_type:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3881   .rodata.shellCmdshow_ctl_modle:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3887   .rodata.shellDesclock_moto:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3893   .rodata.shellDescmoto_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3899   .rodata.shellDescrev_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3905   .rodata.shellDescset_moto_type:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3911   .rodata.shellDescshow_ctl_modle:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:3917   shellCommand:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2252   .text.TaskControl_CLI_ShowModleInfo:000001a3 $d
C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s:2252   .text.TaskControl_CLI_ShowModleInfo:000001a4 $t

UNDEFINED SYMBOLS
SrvActuator
memset
memcpy
Controller
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc3M4l8m.s 			page 102


Storage
DataPipe_SendTo
CtlData_smp_DataPipe
CtlData_hub_DataPipe
CtlData_Log_DataPipe
SrvDataHub
Shell_GetInstence
osMessageGet
shellPrint
SrvOsCommon
__aeabi_f2d
osMessagePut
osMessageCreate
