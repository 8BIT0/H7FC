ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Task_Control.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TaskControl_Param_Copy,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	TaskControl_Param_Copy:
  26              	.LVL0:
  27              	.LFB2073:
  28              		.file 1 "Task/Task_Control.c"
   1:Task/Task_Control.c **** /*
   2:Task/Task_Control.c ****  *  Auther : 8_B!T0
   3:Task/Task_Control.c ****  *  this file use for moto & servo control
   4:Task/Task_Control.c ****  *  (but currently none servo)
   5:Task/Task_Control.c ****  *  pitch & roll control mode outer loop is angular loop inner loop is angular speed loop 
   6:Task/Task_Control.c ****  *  yaw control mode is only angular speed loop
   7:Task/Task_Control.c ****  */
   8:Task/Task_Control.c **** #include "Task_Control.h"
   9:Task/Task_Control.c **** #include "Srv_OsCommon.h"
  10:Task/Task_Control.c **** #include "Task_Telemetry.h"
  11:Task/Task_Control.c **** #include "Srv_DataHub.h"
  12:Task/Task_Control.c **** #include "Srv_Actuator.h"
  13:Task/Task_Control.c **** #include "shell_port.h"
  14:Task/Task_Control.c **** 
  15:Task/Task_Control.c **** #define CONTROL_STORAGE_SECTION_NAME "Control_Para"
  16:Task/Task_Control.c **** 
  17:Task/Task_Control.c **** #define ATTITUDE_DISARM_RANGE_MAX 10.0f
  18:Task/Task_Control.c **** #define ATTITUDE_DISARM_RANGE_MIN -10.0f
  19:Task/Task_Control.c **** 
  20:Task/Task_Control.c **** #define ATTITUDE_PID_DIFF_MAX 30    /* unit: deg */
  21:Task/Task_Control.c **** #define ATTITUDE_PID_DIFF_MIN -30   /* unit: deg */
  22:Task/Task_Control.c **** 
  23:Task/Task_Control.c **** #define THROTTLE_CHANGE_RATE 50   /* unit value per ms */
  24:Task/Task_Control.c **** 
  25:Task/Task_Control.c **** #define ANGULAR_RATE_PID_ACCURACY 1000
  26:Task/Task_Control.c **** #define GYRO_X_RATE_PID_DIFF_MAX 100
  27:Task/Task_Control.c **** #define GYRO_X_RATE_PID_DIFF_MIN -100
  28:Task/Task_Control.c **** #define GYRO_Y_RATE_PID_DIFF_MAX 100
  29:Task/Task_Control.c **** #define GYRO_Y_RATE_PID_DIFF_MIN -100
  30:Task/Task_Control.c **** #define GYRO_Z_RATE_PID_DIFF_MAX 50
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 2


  31:Task/Task_Control.c **** #define GYRO_Z_RATE_PID_DIFF_MIN -50
  32:Task/Task_Control.c **** 
  33:Task/Task_Control.c **** #define CONTROL_ATT_RANGE_MAX 30.0f
  34:Task/Task_Control.c **** #define CONTROL_ATT_RANGE_MID 0.0f
  35:Task/Task_Control.c **** #define CONTROL_ATT_RANGE_MIN -30.0f
  36:Task/Task_Control.c **** 
  37:Task/Task_Control.c **** #define CONTROL_GYR_RANGE_MAX 800.0f
  38:Task/Task_Control.c **** #define CONTROL_GYR_RANGE_MID 0.0f
  39:Task/Task_Control.c **** #define CONTROL_GYR_RANGE_MIN -800.0f
  40:Task/Task_Control.c **** 
  41:Task/Task_Control.c **** static uint32_t imu_update_time = 0;
  42:Task/Task_Control.c **** static uint32_t att_update_time = 0;
  43:Task/Task_Control.c **** static uint8_t imu_err_code;
  44:Task/Task_Control.c **** static bool arm_state = true;
  45:Task/Task_Control.c **** static bool failsafe = false;
  46:Task/Task_Control.c **** static bool imu_init_state = false;
  47:Task/Task_Control.c **** static bool att_update = false;
  48:Task/Task_Control.c **** static bool configrator_attach = false;
  49:Task/Task_Control.c **** 
  50:Task/Task_Control.c **** SrvIMU_UnionData_TypeDef LstCyc_IMU_Data;
  51:Task/Task_Control.c **** SrvRecever_RCSig_TypeDef LstCyc_Rc_Data;
  52:Task/Task_Control.c **** 
  53:Task/Task_Control.c **** DataPipe_CreateDataObj(ExpControlData_TypeDef, ExpCtl);
  54:Task/Task_Control.c **** 
  55:Task/Task_Control.c **** TaskControl_Monitor_TypeDef TaskControl_Monitor = {
  56:Task/Task_Control.c ****     .init_state = false,
  57:Task/Task_Control.c ****     .control_abort = false,
  58:Task/Task_Control.c **** 
  59:Task/Task_Control.c ****     /* on test mode use angular_speed over rate threshold protect */
  60:Task/Task_Control.c ****     .angular_protect_enable = true,
  61:Task/Task_Control.c ****     .angular_protect = false,
  62:Task/Task_Control.c **** 
  63:Task/Task_Control.c ****     /* on test mode for throttle control value mutation protect */
  64:Task/Task_Control.c ****     .throttle_protect_enable = true,
  65:Task/Task_Control.c ****     .throttle_percent = false,
  66:Task/Task_Control.c **** 
  67:Task/Task_Control.c ****     .dynamic_disarm_enable = false,
  68:Task/Task_Control.c ****     .IMU_Rt = 0,
  69:Task/Task_Control.c **** };
  70:Task/Task_Control.c **** 
  71:Task/Task_Control.c **** /* internal function */
  72:Task/Task_Control.c **** static bool TaskControl_AttitudeRing_PID_Update(TaskControl_Monitor_TypeDef *monitor);
  73:Task/Task_Control.c **** static bool TaskControl_AngularSpeedRing_PID_Update(TaskControl_Monitor_TypeDef *monitor);
  74:Task/Task_Control.c **** static void TaskControl_FlightControl_Polling(ControlData_TypeDef *exp_ctl_val);
  75:Task/Task_Control.c **** static void TaskControl_Actuator_ControlValue_Update(TaskControl_Monitor_TypeDef *monitor);
  76:Task/Task_Control.c **** static void TaskControl_CLI_Polling(void);
  77:Task/Task_Control.c **** static void TaskControl_Get_StoreParam(void);
  78:Task/Task_Control.c **** static TaskControl_FlightParam_TypeDef TaskControl_Get_InuseParam(void);
  79:Task/Task_Control.c **** 
  80:Task/Task_Control.c **** /* internal var */
  81:Task/Task_Control.c **** static uint32_t TaskControl_Period = 0;
  82:Task/Task_Control.c **** 
  83:Task/Task_Control.c **** void TaskControl_Init(uint32_t period)
  84:Task/Task_Control.c **** {
  85:Task/Task_Control.c ****     /* init monitor */
  86:Task/Task_Control.c ****     memset(&TaskControl_Monitor, 0, sizeof(TaskControl_Monitor));
  87:Task/Task_Control.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 3


  88:Task/Task_Control.c ****     /* pipe init */
  89:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_addr = (uint32_t)DataPipe_DataObjAddr(ExpCtl);
  90:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_size = DataPipe_DataSize(ExpCtl);
  91:Task/Task_Control.c ****     DataPipe_Enable(&CtlData_smp_DataPipe);
  92:Task/Task_Control.c **** 
  93:Task/Task_Control.c ****     /* Parametet Init */
  94:Task/Task_Control.c ****     TaskControl_Get_StoreParam();
  95:Task/Task_Control.c **** 
  96:Task/Task_Control.c ****     TaskControl_Monitor.init_state = SrvActuator.init(TaskControl_Monitor.actuator_param);
  97:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
  98:Task/Task_Control.c **** 
  99:Task/Task_Control.c ****     osMessageQDef(MotoCLI_Data, 64, TaskControl_CLIData_TypeDef);
 100:Task/Task_Control.c ****     TaskControl_Monitor.CLIMessage_ID = osMessageCreate(osMessageQ(MotoCLI_Data), NULL);
 101:Task/Task_Control.c ****     
 102:Task/Task_Control.c ****     TaskControl_Period = period;
 103:Task/Task_Control.c **** }
 104:Task/Task_Control.c **** 
 105:Task/Task_Control.c **** static TaskControl_FlightParam_TypeDef TaskControl_Get_DefaultParam(void)
 106:Task/Task_Control.c **** {
 107:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef Param;
 108:Task/Task_Control.c **** 
 109:Task/Task_Control.c ****     memset(&Param, 0, sizeof(TaskControl_FlightParam_TypeDef));
 110:Task/Task_Control.c **** 
 111:Task/Task_Control.c ****     /* use defaule range data */
 112:Task/Task_Control.c ****     Param.pitch.max = CONTROL_ATT_RANGE_MAX;
 113:Task/Task_Control.c ****     Param.pitch.mid = CONTROL_ATT_RANGE_MID;
 114:Task/Task_Control.c ****     Param.pitch.min = CONTROL_ATT_RANGE_MIN;
 115:Task/Task_Control.c **** 
 116:Task/Task_Control.c ****     Param.roll.max  = CONTROL_ATT_RANGE_MAX;
 117:Task/Task_Control.c ****     Param.roll.mid  = CONTROL_ATT_RANGE_MID;
 118:Task/Task_Control.c ****     Param.roll.min  = CONTROL_ATT_RANGE_MIN;
 119:Task/Task_Control.c **** 
 120:Task/Task_Control.c ****     Param.gx.max    = CONTROL_GYR_RANGE_MAX;
 121:Task/Task_Control.c ****     Param.gx.mid    = CONTROL_GYR_RANGE_MID;
 122:Task/Task_Control.c ****     Param.gx.min    = CONTROL_GYR_RANGE_MIN;
 123:Task/Task_Control.c **** 
 124:Task/Task_Control.c ****     Param.gy.max    = CONTROL_GYR_RANGE_MAX;
 125:Task/Task_Control.c ****     Param.gy.mid    = CONTROL_GYR_RANGE_MID;
 126:Task/Task_Control.c ****     Param.gy.min    = CONTROL_GYR_RANGE_MIN;
 127:Task/Task_Control.c **** 
 128:Task/Task_Control.c ****     Param.gz.max    = CONTROL_GYR_RANGE_MAX;
 129:Task/Task_Control.c ****     Param.gz.mid    = CONTROL_GYR_RANGE_MID;
 130:Task/Task_Control.c ****     Param.gz.min    = CONTROL_GYR_RANGE_MIN;
 131:Task/Task_Control.c **** 
 132:Task/Task_Control.c ****     /* use default pid data */
 133:Task/Task_Control.c ****     /* attitude PID control parameter section */
 134:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP_Diff_Max = ATTITUDE_PID_DIFF_MAX;
 135:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP_Diff_Min = ATTITUDE_PID_DIFF_MIN;
 136:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP          = 1.2;
 137:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI          = 0.08;
 138:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI_Max      = 50;
 139:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI_Min      = -50;
 140:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gD          = 1;
 141:Task/Task_Control.c **** 
 142:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP_Diff_Max  = ATTITUDE_PID_DIFF_MAX;
 143:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP_Diff_Min  = ATTITUDE_PID_DIFF_MIN;
 144:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP           = 1.2;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 4


 145:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI           = 0.08;
 146:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI_Max       = 50;
 147:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI_Min       = -50;
 148:Task/Task_Control.c ****     Param.Outer.Roll_Para.gD           = 1;
 149:Task/Task_Control.c **** 
 150:Task/Task_Control.c ****     /* angular PID control parameter section */
 151:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP_Diff_Max = GYRO_X_RATE_PID_DIFF_MAX;
 152:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP_Diff_Min = GYRO_X_RATE_PID_DIFF_MIN;
 153:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP          = 1.2;
 154:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI          = 0.002;
 155:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI_Max      = 30;
 156:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI_Min      = -30;
 157:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gD          = 0.1;
 158:Task/Task_Control.c **** 
 159:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP_Diff_Max = GYRO_Y_RATE_PID_DIFF_MAX;
 160:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP_Diff_Min = GYRO_Y_RATE_PID_DIFF_MIN;
 161:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP          = 1.2;
 162:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI          = 0.002;
 163:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI_Max      = 30;
 164:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI_Min      = -30;
 165:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gD          = 0.1;
 166:Task/Task_Control.c **** 
 167:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP_Diff_Max = GYRO_X_RATE_PID_DIFF_MAX;
 168:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP_Diff_Min = GYRO_X_RATE_PID_DIFF_MIN;
 169:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP          = 1;
 170:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI          = 0;
 171:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI_Max      = 0;
 172:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI_Min      = 0;
 173:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gD          = 0.1;
 174:Task/Task_Control.c **** 
 175:Task/Task_Control.c ****     return Param;
 176:Task/Task_Control.c **** }
 177:Task/Task_Control.c **** 
 178:Task/Task_Control.c **** static bool TaskControl_Param_Copy(PIDObj_TypeDef *PID_Obj, PID_Param_TypeDef Para)
 179:Task/Task_Control.c **** {
  29              		.loc 1 179 1 view -0
  30              		.cfi_startproc
  31              		@ args = 32, pretend = 16, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 179 1 is_stmt 0 view .LVU1
  35 0000 84B0     		sub	sp, sp, #16
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38 0002 0DF1040C 		add	ip, sp, #4
  39 0006 8CE80E00 		stm	ip, {r1, r2, r3}
 180:Task/Task_Control.c ****     if (PID_Obj)
  40              		.loc 1 180 5 is_stmt 1 view .LVU2
  41              		.loc 1 180 8 is_stmt 0 view .LVU3
  42 000a 80B1     		cbz	r0, .L3
 181:Task/Task_Control.c ****     {
 182:Task/Task_Control.c ****         PID_Obj->gP             = Para.gP;
  43              		.loc 1 182 9 is_stmt 1 view .LVU4
  44              		.loc 1 182 39 is_stmt 0 view .LVU5
  45 000c 019A     		ldr	r2, [sp, #4]	@ float
  46              		.loc 1 182 33 view .LVU6
  47 000e 4261     		str	r2, [r0, #20]	@ float
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 5


 183:Task/Task_Control.c ****         PID_Obj->diff_max       = Para.gP_Diff_Max;
  48              		.loc 1 183 9 is_stmt 1 view .LVU7
  49              		.loc 1 183 39 is_stmt 0 view .LVU8
  50 0010 029A     		ldr	r2, [sp, #8]	@ float
  51              		.loc 1 183 33 view .LVU9
  52 0012 8260     		str	r2, [r0, #8]	@ float
 184:Task/Task_Control.c ****         PID_Obj->diff_min       = Para.gP_Diff_Min;
  53              		.loc 1 184 9 is_stmt 1 view .LVU10
  54              		.loc 1 184 39 is_stmt 0 view .LVU11
  55 0014 039A     		ldr	r2, [sp, #12]	@ float
  56              		.loc 1 184 33 view .LVU12
  57 0016 C260     		str	r2, [r0, #12]	@ float
 185:Task/Task_Control.c ****         PID_Obj->gI             = Para.gI;
  58              		.loc 1 185 9 is_stmt 1 view .LVU13
  59              		.loc 1 185 39 is_stmt 0 view .LVU14
  60 0018 049A     		ldr	r2, [sp, #16]	@ float
  61              		.loc 1 185 33 view .LVU15
  62 001a C261     		str	r2, [r0, #28]	@ float
 186:Task/Task_Control.c ****         PID_Obj->gI_Max         = Para.gI_Max;
  63              		.loc 1 186 9 is_stmt 1 view .LVU16
  64              		.loc 1 186 39 is_stmt 0 view .LVU17
  65 001c 059A     		ldr	r2, [sp, #20]	@ float
  66              		.loc 1 186 33 view .LVU18
  67 001e 4262     		str	r2, [r0, #36]	@ float
 187:Task/Task_Control.c ****         PID_Obj->gI_Min         = Para.gI_Min;
  68              		.loc 1 187 9 is_stmt 1 view .LVU19
  69              		.loc 1 187 39 is_stmt 0 view .LVU20
  70 0020 069A     		ldr	r2, [sp, #24]	@ float
  71              		.loc 1 187 33 view .LVU21
  72 0022 0262     		str	r2, [r0, #32]	@ float
 188:Task/Task_Control.c ****         PID_Obj->gD             = Para.gD;
  73              		.loc 1 188 9 is_stmt 1 view .LVU22
  74              		.loc 1 188 39 is_stmt 0 view .LVU23
  75 0024 079A     		ldr	r2, [sp, #28]	@ float
  76              		.loc 1 188 33 view .LVU24
  77 0026 0263     		str	r2, [r0, #48]	@ float
 189:Task/Task_Control.c **** 
 190:Task/Task_Control.c ****         return true;
  78              		.loc 1 190 9 is_stmt 1 view .LVU25
  79              		.loc 1 190 16 is_stmt 0 view .LVU26
  80 0028 0120     		movs	r0, #1
  81              	.LVL1:
  82              	.L2:
 191:Task/Task_Control.c ****     }
 192:Task/Task_Control.c **** 
 193:Task/Task_Control.c ****     return false;
 194:Task/Task_Control.c **** }
  83              		.loc 1 194 1 view .LVU27
  84 002a 04B0     		add	sp, sp, #16
  85              	.LCFI1:
  86              		.cfi_remember_state
  87              		.cfi_def_cfa_offset 0
  88 002c 7047     		bx	lr
  89              	.LVL2:
  90              	.L3:
  91              	.LCFI2:
  92              		.cfi_restore_state
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 6


 193:Task/Task_Control.c **** }
  93              		.loc 1 193 12 view .LVU28
  94 002e 0020     		movs	r0, #0
  95              	.LVL3:
 193:Task/Task_Control.c **** }
  96              		.loc 1 193 12 view .LVU29
  97 0030 FBE7     		b	.L2
  98              		.cfi_endproc
  99              	.LFE2073:
 101              		.section	.text.TaskControl_disarm_check,"ax",%progbits
 102              		.align	1
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 107              	TaskControl_disarm_check:
 108              	.LVL4:
 109              	.LFB2075:
 195:Task/Task_Control.c **** 
 196:Task/Task_Control.c **** /* read param from storage */
 197:Task/Task_Control.c **** static void TaskControl_Get_StoreParam(void)
 198:Task/Task_Control.c **** {
 199:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef PID_Param;
 200:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef Default_Param;
 201:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef *p_UseParam = NULL;
 202:Task/Task_Control.c ****     SrvActuator_Setting_TypeDef Actuator_Param;
 203:Task/Task_Control.c **** 
 204:Task/Task_Control.c ****     /* search storage section first */
 205:Task/Task_Control.c ****     memset(&PID_Param, 0, sizeof(TaskControl_FlightParam_TypeDef));
 206:Task/Task_Control.c ****     memset(&Actuator_Param, 0, sizeof(SrvActuator_Setting_TypeDef));
 207:Task/Task_Control.c ****     memset(&Default_Param, 0, sizeof(TaskControl_FlightParam_TypeDef));
 208:Task/Task_Control.c ****     memset(&TaskControl_Monitor.pid_store_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 209:Task/Task_Control.c ****     memset(&TaskControl_Monitor.actuator_store_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 210:Task/Task_Control.c **** 
 211:Task/Task_Control.c ****     TaskControl_Monitor.pid_store_info = Storage.search(Para_User, CONTROL_STORAGE_SECTION_NAME);
 212:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 213:Task/Task_Control.c **** 
 214:Task/Task_Control.c ****     /* get pid parameter */
 215:Task/Task_Control.c ****     PID_Param = TaskControl_Get_DefaultParam();
 216:Task/Task_Control.c ****     Default_Param = PID_Param;
 217:Task/Task_Control.c ****     p_UseParam = &Default_Param;
 218:Task/Task_Control.c ****     
 219:Task/Task_Control.c ****     if (TaskControl_Monitor.pid_store_info.item_addr == 0)
 220:Task/Task_Control.c ****     {
 221:Task/Task_Control.c ****         /* no pid parameter found in external flash chip under user partten */
 222:Task/Task_Control.c ****         /* section create successful */
 223:Task/Task_Control.c ****         Storage.create(Para_User, CONTROL_STORAGE_SECTION_NAME, (uint8_t *)&PID_Param, sizeof(TaskC
 224:Task/Task_Control.c ****     }
 225:Task/Task_Control.c ****     else
 226:Task/Task_Control.c ****     {
 227:Task/Task_Control.c ****         if ((TaskControl_Monitor.pid_store_info.item.len == sizeof(TaskControl_FlightParam_TypeDef)
 228:Task/Task_Control.c ****             (Storage.get(Para_User, TaskControl_Monitor.pid_store_info.item, (uint8_t *)&PID_Param,
 229:Task/Task_Control.c ****             p_UseParam = &PID_Param;
 230:Task/Task_Control.c ****     }
 231:Task/Task_Control.c ****     
 232:Task/Task_Control.c ****     memcpy(&TaskControl_Monitor.param, p_UseParam, sizeof(TaskControl_FlightParam_TypeDef));
 233:Task/Task_Control.c **** 
 234:Task/Task_Control.c ****     TaskControl_Param_Copy(&TaskControl_Monitor.PitchCtl_PIDObj, p_UseParam->Outer.Pitch_Para);
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 7


 235:Task/Task_Control.c ****     TaskControl_Param_Copy(&TaskControl_Monitor.RollCtl_PIDObj,  p_UseParam->Outer.Roll_Para);
 236:Task/Task_Control.c ****     TaskControl_Param_Copy(&TaskControl_Monitor.GyrXCtl_PIDObj,  p_UseParam->Inner.GyroX_Para);
 237:Task/Task_Control.c ****     TaskControl_Param_Copy(&TaskControl_Monitor.GyrYCtl_PIDObj,  p_UseParam->Inner.GyroY_Para);
 238:Task/Task_Control.c ****     TaskControl_Param_Copy(&TaskControl_Monitor.GyrZCtl_PIDObj,  p_UseParam->Inner.GyroZ_Para);
 239:Task/Task_Control.c **** 
 240:Task/Task_Control.c ****     /* get actuator parameter */
 241:Task/Task_Control.c ****     /* set as default first */
 242:Task/Task_Control.c ****     TaskControl_Monitor.actuator_param = SrvActuator.default_param();
 243:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr)
 244:Task/Task_Control.c ****     {
 245:Task/Task_Control.c ****         if ((TaskControl_Monitor.actuator_store_info.item.len == sizeof(SrvActuator_Setting_TypeDef
 246:Task/Task_Control.c ****             Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuat
 247:Task/Task_Control.c ****             TaskControl_Monitor.actuator_param = Actuator_Param;
 248:Task/Task_Control.c ****     }
 249:Task/Task_Control.c **** }
 250:Task/Task_Control.c **** 
 251:Task/Task_Control.c **** static bool TaskControl_disarm_check(bool telemetry_arm, float pitch, float roll)
 252:Task/Task_Control.c **** {
 110              		.loc 1 252 1 is_stmt 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 253:Task/Task_Control.c **** 
 254:Task/Task_Control.c ****     if (telemetry_arm == DRONE_ARM)
 115              		.loc 1 254 5 view .LVU31
 116              		.loc 1 254 8 is_stmt 0 view .LVU32
 117 0000 58BB     		cbnz	r0, .L14
 255:Task/Task_Control.c ****     {
 256:Task/Task_Control.c ****         TaskControl_Monitor.moto_unlock = Moto_Lock;
 257:Task/Task_Control.c ****         return false;
 258:Task/Task_Control.c ****     }
 259:Task/Task_Control.c **** 
 260:Task/Task_Control.c ****     if (TaskControl_Monitor.dynamic_disarm_enable)
 118              		.loc 1 260 5 is_stmt 1 view .LVU33
 119              		.loc 1 260 28 is_stmt 0 view .LVU34
 120 0002 1E4B     		ldr	r3, .L16
 121 0004 93F8D701 		ldrb	r0, [r3, #471]	@ zero_extendqisi2
 122              	.LVL5:
 123              		.loc 1 260 8 view .LVU35
 124 0008 60BB     		cbnz	r0, .L15
 261:Task/Task_Control.c ****     {
 262:Task/Task_Control.c ****         TaskControl_Monitor.moto_unlock = Moto_Unlock;
 263:Task/Task_Control.c ****         return true;
 264:Task/Task_Control.c ****     }
 265:Task/Task_Control.c **** 
 266:Task/Task_Control.c ****     if (TaskControl_Monitor.moto_unlock != Moto_Unlock)
 125              		.loc 1 266 5 is_stmt 1 view .LVU36
 126              		.loc 1 266 28 is_stmt 0 view .LVU37
 127 000a 1C4B     		ldr	r3, .L16
 128 000c 93F8D831 		ldrb	r3, [r3, #472]	@ zero_extendqisi2
 129              		.loc 1 266 8 view .LVU38
 130 0010 012B     		cmp	r3, #1
 131 0012 30D0     		beq	.L12
 267:Task/Task_Control.c ****     {
 268:Task/Task_Control.c ****         if (TaskControl_Monitor.moto_unlock == Moto_Unlock_Err)
 132              		.loc 1 268 9 is_stmt 1 view .LVU39
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 8


 133              		.loc 1 268 12 is_stmt 0 view .LVU40
 134 0014 022B     		cmp	r3, #2
 135 0016 2FD0     		beq	.L7
 269:Task/Task_Control.c ****             return false;
 270:Task/Task_Control.c **** 
 271:Task/Task_Control.c ****         /* attitude pitch check */
 272:Task/Task_Control.c ****         if ((pitch > ATTITUDE_DISARM_RANGE_MAX) || \
 136              		.loc 1 272 9 is_stmt 1 view .LVU41
 137              		.loc 1 272 12 is_stmt 0 view .LVU42
 138 0018 F2EE047A 		vmov.f32	s15, #1.0e+1
 139 001c B4EEE70A 		vcmpe.f32	s0, s15
 140 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 141 0024 14DC     		bgt	.L9
 142              		.loc 1 272 49 discriminator 1 view .LVU43
 143 0026 FAEE047A 		vmov.f32	s15, #-1.0e+1
 144 002a B4EEE70A 		vcmpe.f32	s0, s15
 145 002e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 146 0032 0DD4     		bmi	.L9
 273:Task/Task_Control.c ****             (pitch < ATTITUDE_DISARM_RANGE_MIN) || \
 147              		.loc 1 273 49 view .LVU44
 148 0034 F2EE047A 		vmov.f32	s15, #1.0e+1
 149 0038 F4EEE70A 		vcmpe.f32	s1, s15
 150 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 151 0040 06DC     		bgt	.L9
 274:Task/Task_Control.c ****             (roll > ATTITUDE_DISARM_RANGE_MAX) || \
 152              		.loc 1 274 48 view .LVU45
 153 0042 FAEE047A 		vmov.f32	s15, #-1.0e+1
 154 0046 F4EEE70A 		vcmpe.f32	s1, s15
 155 004a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 156 004e 0DD5     		bpl	.L13
 157              	.L9:
 275:Task/Task_Control.c ****             (roll < ATTITUDE_DISARM_RANGE_MIN))
 276:Task/Task_Control.c ****         {
 277:Task/Task_Control.c ****             TaskControl_Monitor.moto_unlock = Moto_Unlock_Err;
 158              		.loc 1 277 13 is_stmt 1 view .LVU46
 159              		.loc 1 277 45 is_stmt 0 view .LVU47
 160 0050 0A4B     		ldr	r3, .L16
 161 0052 0222     		movs	r2, #2
 162 0054 83F8D821 		strb	r2, [r3, #472]
 278:Task/Task_Control.c ****             return false;
 163              		.loc 1 278 13 is_stmt 1 view .LVU48
 164              		.loc 1 278 20 is_stmt 0 view .LVU49
 165 0058 7047     		bx	lr
 166              	.LVL6:
 167              	.L14:
 256:Task/Task_Control.c ****         return false;
 168              		.loc 1 256 9 is_stmt 1 view .LVU50
 256:Task/Task_Control.c ****         return false;
 169              		.loc 1 256 41 is_stmt 0 view .LVU51
 170 005a 0020     		movs	r0, #0
 171              	.LVL7:
 256:Task/Task_Control.c ****         return false;
 172              		.loc 1 256 41 view .LVU52
 173 005c 074B     		ldr	r3, .L16
 174 005e 83F8D801 		strb	r0, [r3, #472]
 257:Task/Task_Control.c ****     }
 175              		.loc 1 257 9 is_stmt 1 view .LVU53
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 9


 257:Task/Task_Control.c ****     }
 176              		.loc 1 257 16 is_stmt 0 view .LVU54
 177 0062 7047     		bx	lr
 178              	.L15:
 262:Task/Task_Control.c ****         return true;
 179              		.loc 1 262 9 is_stmt 1 view .LVU55
 262:Task/Task_Control.c ****         return true;
 180              		.loc 1 262 41 is_stmt 0 view .LVU56
 181 0064 0122     		movs	r2, #1
 182 0066 83F8D821 		strb	r2, [r3, #472]
 263:Task/Task_Control.c ****     }
 183              		.loc 1 263 9 is_stmt 1 view .LVU57
 263:Task/Task_Control.c ****     }
 184              		.loc 1 263 16 is_stmt 0 view .LVU58
 185 006a 7047     		bx	lr
 186              	.L13:
 279:Task/Task_Control.c ****         }
 280:Task/Task_Control.c **** 
 281:Task/Task_Control.c ****         TaskControl_Monitor.moto_unlock = Moto_Unlock;
 187              		.loc 1 281 9 is_stmt 1 view .LVU59
 188              		.loc 1 281 41 is_stmt 0 view .LVU60
 189 006c 0120     		movs	r0, #1
 190 006e 034B     		ldr	r3, .L16
 191 0070 83F8D801 		strb	r0, [r3, #472]
 282:Task/Task_Control.c ****         return true;
 192              		.loc 1 282 9 is_stmt 1 view .LVU61
 193              		.loc 1 282 16 is_stmt 0 view .LVU62
 194 0074 7047     		bx	lr
 195              	.L12:
 283:Task/Task_Control.c ****     }
 284:Task/Task_Control.c **** 
 285:Task/Task_Control.c ****     return true;
 196              		.loc 1 285 12 view .LVU63
 197 0076 0120     		movs	r0, #1
 198              	.L7:
 286:Task/Task_Control.c **** }
 199              		.loc 1 286 1 view .LVU64
 200 0078 7047     		bx	lr
 201              	.L17:
 202 007a 00BF     		.align	2
 203              	.L16:
 204 007c 00000000 		.word	.LANCHOR0
 205              		.cfi_endproc
 206              	.LFE2075:
 208              		.section	.text.TaskControl_Actuator_ControlValue_Update,"ax",%progbits
 209              		.align	1
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 214              	TaskControl_Actuator_ControlValue_Update:
 215              	.LVL8:
 216              	.LFB2079:
 287:Task/Task_Control.c **** 
 288:Task/Task_Control.c **** void TaskControl_Core(void const *arg)
 289:Task/Task_Control.c **** {
 290:Task/Task_Control.c ****     uint32_t sys_time = SrvOsCommon.get_os_ms();
 291:Task/Task_Control.c ****     bool upgrade_state = false;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 10


 292:Task/Task_Control.c ****     ControlData_TypeDef CtlData;
 293:Task/Task_Control.c ****     bool USB_Attach = false;
 294:Task/Task_Control.c ****     memset(&CtlData, 0, sizeof(ControlData_TypeDef));
 295:Task/Task_Control.c ****     while(1)
 296:Task/Task_Control.c ****     {
 297:Task/Task_Control.c ****         /* get control data from data hub */
 298:Task/Task_Control.c ****         SrvDataHub.get_rc_control_data(&CtlData);
 299:Task/Task_Control.c **** 
 300:Task/Task_Control.c ****         if (SrvDataHub.get_upgrade_state(&upgrade_state) && upgrade_state)
 301:Task/Task_Control.c ****         {
 302:Task/Task_Control.c ****             /* lock all actuator when upgrading */
 303:Task/Task_Control.c ****             SrvActuator.lock();
 304:Task/Task_Control.c ****         }
 305:Task/Task_Control.c ****         else
 306:Task/Task_Control.c ****         {
 307:Task/Task_Control.c ****             if (!TaskControl_Monitor.CLI_enable)
 308:Task/Task_Control.c ****             {
 309:Task/Task_Control.c ****                 /* lock moto when usb attached */
 310:Task/Task_Control.c ****                 if (!SrvDataHub.get_vcp_attach_state(&USB_Attach) || USB_Attach)
 311:Task/Task_Control.c ****                 {
 312:Task/Task_Control.c ****                     SrvActuator.lock();
 313:Task/Task_Control.c ****                 }
 314:Task/Task_Control.c ****                 else
 315:Task/Task_Control.c ****                     /* debug set control to angular speed control */
 316:Task/Task_Control.c ****                     TaskControl_FlightControl_Polling(&CtlData);
 317:Task/Task_Control.c ****             }
 318:Task/Task_Control.c ****             else
 319:Task/Task_Control.c ****             {
 320:Task/Task_Control.c ****                 if(TaskControl_Monitor.CLI_enable)
 321:Task/Task_Control.c ****                 {
 322:Task/Task_Control.c ****                     TaskControl_CLI_Polling();
 323:Task/Task_Control.c ****                 }
 324:Task/Task_Control.c ****                 else
 325:Task/Task_Control.c ****                     /* lock all moto */
 326:Task/Task_Control.c ****                     SrvActuator.lock();
 327:Task/Task_Control.c ****             }
 328:Task/Task_Control.c ****         }
 329:Task/Task_Control.c **** 
 330:Task/Task_Control.c ****         SrvOsCommon.precise_delay(&sys_time, TaskControl_Period);
 331:Task/Task_Control.c ****     }
 332:Task/Task_Control.c **** }
 333:Task/Task_Control.c **** 
 334:Task/Task_Control.c **** static bool TaskControl_AttitudeRing_PID_Update(TaskControl_Monitor_TypeDef *monitor)
 335:Task/Task_Control.c **** {
 336:Task/Task_Control.c ****     if(monitor)
 337:Task/Task_Control.c ****     {
 338:Task/Task_Control.c ****         /* pitch PID update */
 339:Task/Task_Control.c ****         PID_Update(&monitor->PitchCtl_PIDObj, monitor->attitude.pitch, monitor->exp_pitch);
 340:Task/Task_Control.c **** 
 341:Task/Task_Control.c ****         /* roll PID update */
 342:Task/Task_Control.c ****         PID_Update(&monitor->RollCtl_PIDObj, monitor->attitude.roll, monitor->exp_roll);
 343:Task/Task_Control.c **** 
 344:Task/Task_Control.c ****         return true;
 345:Task/Task_Control.c ****     }
 346:Task/Task_Control.c **** 
 347:Task/Task_Control.c ****     return false;
 348:Task/Task_Control.c **** }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 11


 349:Task/Task_Control.c **** 
 350:Task/Task_Control.c **** static bool TaskControl_AngularSpeedRing_PID_Update(TaskControl_Monitor_TypeDef *monitor)
 351:Task/Task_Control.c **** {
 352:Task/Task_Control.c ****     if(monitor)
 353:Task/Task_Control.c ****     {
 354:Task/Task_Control.c ****         /* gyro X PID Update */
 355:Task/Task_Control.c ****         PID_Update(&monitor->GyrXCtl_PIDObj, monitor->gyr[Axis_X], monitor->GyrXCtl_PIDObj.exp);
 356:Task/Task_Control.c **** 
 357:Task/Task_Control.c ****         /* gyro Y PID Update */
 358:Task/Task_Control.c ****         PID_Update(&monitor->GyrYCtl_PIDObj, monitor->gyr[Axis_Y], monitor->GyrYCtl_PIDObj.exp);
 359:Task/Task_Control.c **** 
 360:Task/Task_Control.c ****         /* gyro Z PID Update */
 361:Task/Task_Control.c ****         PID_Update(&monitor->GyrZCtl_PIDObj, monitor->gyr[Axis_Z], monitor->GyrZCtl_PIDObj.exp);
 362:Task/Task_Control.c **** 
 363:Task/Task_Control.c ****         return true;
 364:Task/Task_Control.c ****     }
 365:Task/Task_Control.c **** 
 366:Task/Task_Control.c ****     return false;
 367:Task/Task_Control.c **** }
 368:Task/Task_Control.c **** 
 369:Task/Task_Control.c **** static void TaskControl_Actuator_ControlValue_Update(TaskControl_Monitor_TypeDef *monitor)
 370:Task/Task_Control.c **** {
 217              		.loc 1 370 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		.loc 1 370 1 is_stmt 0 view .LVU66
 222 0000 00B5     		push	{lr}
 223              	.LCFI3:
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 14, -4
 226 0002 83B0     		sub	sp, sp, #12
 227              	.LCFI4:
 228              		.cfi_def_cfa_offset 16
 371:Task/Task_Control.c ****     int16_t ctl_buf[Actuator_Ctl_Sum] = {0};
 229              		.loc 1 371 5 is_stmt 1 view .LVU67
 230              		.loc 1 371 13 is_stmt 0 view .LVU68
 231 0004 0023     		movs	r3, #0
 232 0006 0093     		str	r3, [sp]
 233 0008 0193     		str	r3, [sp, #4]
 372:Task/Task_Control.c **** 
 373:Task/Task_Control.c ****     if(monitor)
 234              		.loc 1 373 5 is_stmt 1 view .LVU69
 235              		.loc 1 373 7 is_stmt 0 view .LVU70
 236 000a D8B1     		cbz	r0, .L19
 374:Task/Task_Control.c ****     {
 375:Task/Task_Control.c ****         /* idle spin when disarm */
 376:Task/Task_Control.c ****         ctl_buf[Actuator_Ctl_Throttle] = monitor->throttle_percent;
 237              		.loc 1 376 9 is_stmt 1 view .LVU71
 238              		.loc 1 376 49 is_stmt 0 view .LVU72
 239 000c 90F89C21 		ldrb	r2, [r0, #412]	@ zero_extendqisi2
 240              		.loc 1 376 40 view .LVU73
 241 0010 ADF80020 		strh	r2, [sp]	@ movhi
 377:Task/Task_Control.c **** 
 378:Task/Task_Control.c ****         ctl_buf[Actuator_Ctl_GyrX] = (int16_t)monitor->GyrXCtl_PIDObj.fout;
 242              		.loc 1 378 9 is_stmt 1 view .LVU74
 243              		.loc 1 378 70 is_stmt 0 view .LVU75
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 12


 244 0014 D0ED9D7A 		vldr.32	s15, [r0, #628]
 245              		.loc 1 378 38 view .LVU76
 246 0018 FDEEE77A 		vcvt.s32.f32	s15, s15
 247              		.loc 1 378 36 view .LVU77
 248 001c 17EE902A 		vmov	r2, s15	@ int
 249 0020 ADF80220 		strh	r2, [sp, #2]	@ movhi
 379:Task/Task_Control.c ****         ctl_buf[Actuator_Ctl_GyrY] = (int16_t)monitor->GyrYCtl_PIDObj.fout;
 250              		.loc 1 379 9 is_stmt 1 view .LVU78
 251              		.loc 1 379 70 is_stmt 0 view .LVU79
 252 0024 D0EDAD7A 		vldr.32	s15, [r0, #692]
 253              		.loc 1 379 38 view .LVU80
 254 0028 FDEEE77A 		vcvt.s32.f32	s15, s15
 255              		.loc 1 379 36 view .LVU81
 256 002c 17EE902A 		vmov	r2, s15	@ int
 257 0030 ADF80420 		strh	r2, [sp, #4]	@ movhi
 380:Task/Task_Control.c ****         ctl_buf[Actuator_Ctl_GyrZ] = (int16_t)monitor->GyrZCtl_PIDObj.fout;
 258              		.loc 1 380 9 is_stmt 1 view .LVU82
 259              		.loc 1 380 70 is_stmt 0 view .LVU83
 260 0034 D0EDBD7A 		vldr.32	s15, [r0, #756]
 261              		.loc 1 380 38 view .LVU84
 262 0038 FDEEE77A 		vcvt.s32.f32	s15, s15
 263              		.loc 1 380 36 view .LVU85
 264 003c 17EE903A 		vmov	r3, s15	@ int
 265 0040 ADF80630 		strh	r3, [sp, #6]	@ movhi
 266              	.L19:
 381:Task/Task_Control.c ****     }
 382:Task/Task_Control.c **** 
 383:Task/Task_Control.c ****     SrvActuator.moto_control(ctl_buf);
 267              		.loc 1 383 5 is_stmt 1 view .LVU86
 268              		.loc 1 383 16 is_stmt 0 view .LVU87
 269 0044 034B     		ldr	r3, .L21
 270 0046 1B69     		ldr	r3, [r3, #16]
 271              		.loc 1 383 5 view .LVU88
 272 0048 6846     		mov	r0, sp
 273              	.LVL9:
 274              		.loc 1 383 5 view .LVU89
 275 004a 9847     		blx	r3
 276              	.LVL10:
 384:Task/Task_Control.c **** }
 277              		.loc 1 384 1 view .LVU90
 278 004c 03B0     		add	sp, sp, #12
 279              	.LCFI5:
 280              		.cfi_def_cfa_offset 4
 281              		@ sp needed
 282 004e 5DF804FB 		ldr	pc, [sp], #4
 283              	.L22:
 284 0052 00BF     		.align	2
 285              	.L21:
 286 0054 00000000 		.word	SrvActuator
 287              		.cfi_endproc
 288              	.LFE2079:
 290              		.section	.text.TaskControl_Convert_CtlData,"ax",%progbits
 291              		.align	1
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 296              	TaskControl_Convert_CtlData:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 13


 297              	.LVL11:
 298              	.LFB2080:
 385:Task/Task_Control.c **** 
 386:Task/Task_Control.c **** /****************************************************** Flight Control Section ********************
 387:Task/Task_Control.c **** static bool TaskControl_Convert_CtlData(TaskControl_Monitor_TypeDef *monitor, ControlData_TypeDef c
 388:Task/Task_Control.c **** {
 299              		.loc 1 388 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 104, pretend = 16, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304              		.loc 1 388 1 is_stmt 0 view .LVU92
 305 0000 84B0     		sub	sp, sp, #16
 306              	.LCFI6:
 307              		.cfi_def_cfa_offset 16
 308 0002 0DF1040C 		add	ip, sp, #4
 309 0006 8CE80E00 		stm	ip, {r1, r2, r3}
 389:Task/Task_Control.c ****     float p_scope = 0.0f;
 310              		.loc 1 389 5 is_stmt 1 view .LVU93
 311              	.LVL12:
 390:Task/Task_Control.c ****     float n_scope = 0.0f;
 312              		.loc 1 390 5 view .LVU94
 391:Task/Task_Control.c ****     TaskControl_CtlRange_Para_TypeDef *p_range = NULL;
 313              		.loc 1 391 5 view .LVU95
 392:Task/Task_Control.c **** 
 393:Task/Task_Control.c ****     /* convert pitch */
 394:Task/Task_Control.c ****     p_range = &monitor->param.pitch;
 314              		.loc 1 394 5 view .LVU96
 395:Task/Task_Control.c ****     if ((p_range->max <= p_range->min) || (p_range->mid <= p_range->min) || (p_range->max <= p_rang
 315              		.loc 1 395 5 view .LVU97
 316              		.loc 1 395 17 is_stmt 0 view .LVU98
 317 000a C36C     		ldr	r3, [r0, #76]	@ unaligned
 318 000c 07EE903A 		vmov	s15, r3	@ int
 319              		.loc 1 395 33 view .LVU99
 320 0010 436D     		ldr	r3, [r0, #84]	@ unaligned
 321 0012 06EE903A 		vmov	s13, r3	@ int
 322              		.loc 1 395 8 view .LVU100
 323 0016 F4EEE67A 		vcmpe.f32	s15, s13
 324 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 325 001e 40F20B81 		bls	.L39
 326              		.loc 1 395 51 discriminator 1 view .LVU101
 327 0022 036D     		ldr	r3, [r0, #80]	@ unaligned
 328 0024 07EE103A 		vmov	s14, r3	@ int
 329              		.loc 1 395 40 discriminator 1 view .LVU102
 330 0028 F4EEC76A 		vcmpe.f32	s13, s14
 331 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 332 0030 80F20581 		bge	.L40
 333              		.loc 1 395 74 discriminator 2 view .LVU103
 334 0034 F4EEC77A 		vcmpe.f32	s15, s14
 335 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 336 003c 40F20181 		bls	.L41
 396:Task/Task_Control.c ****         return false;
 397:Task/Task_Control.c **** 
 398:Task/Task_Control.c ****     p_scope = p_range->max - p_range->mid;
 337              		.loc 1 398 5 is_stmt 1 view .LVU104
 338              		.loc 1 398 13 is_stmt 0 view .LVU105
 339 0040 77EEC77A 		vsub.f32	s15, s15, s14
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 14


 340              	.LVL13:
 399:Task/Task_Control.c ****     n_scope = p_range->mid - p_range->min;
 341              		.loc 1 399 5 is_stmt 1 view .LVU106
 342              		.loc 1 399 13 is_stmt 0 view .LVU107
 343 0044 37EE667A 		vsub.f32	s14, s14, s13
 344              	.LVL14:
 400:Task/Task_Control.c **** 
 401:Task/Task_Control.c ****     monitor->exp_pitch = (ctl_data.pitch_percent - 50.0f) / 100.0f;
 345              		.loc 1 401 5 is_stmt 1 view .LVU108
 346              		.loc 1 401 35 is_stmt 0 view .LVU109
 347 0048 9DF85330 		ldrb	r3, [sp, #83]	@ zero_extendqisi2
 348 004c 06EE903A 		vmov	s13, r3	@ int
 349              		.loc 1 401 50 view .LVU110
 350 0050 F8EEE66A 		vcvt.f32.s32	s13, s13
 351 0054 9FED886A 		vldr.32	s12, .L65
 352 0058 76EEC66A 		vsub.f32	s13, s13, s12
 353              		.loc 1 401 59 view .LVU111
 354 005c DFED875A 		vldr.32	s11, .L65+4
 355 0060 86EEA56A 		vdiv.f32	s12, s13, s11
 356              		.loc 1 401 24 view .LVU112
 357 0064 80ED6B6A 		vstr.32	s12, [r0, #428]
 402:Task/Task_Control.c ****     if (monitor->exp_pitch >= 0)
 358              		.loc 1 402 5 is_stmt 1 view .LVU113
 359              		.loc 1 402 8 is_stmt 0 view .LVU114
 360 0068 B5EEC06A 		vcmpe.f32	s12, #0
 361 006c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 362 0070 C0F2C880 		blt	.L59
 403:Task/Task_Control.c ****     {
 404:Task/Task_Control.c ****         monitor->exp_pitch *= p_scope;
 363              		.loc 1 404 9 is_stmt 1 view .LVU115
 364              		.loc 1 404 28 is_stmt 0 view .LVU116
 365 0074 66EE277A 		vmul.f32	s15, s12, s15
 366              	.LVL15:
 367              		.loc 1 404 28 view .LVU117
 368 0078 C0ED6B7A 		vstr.32	s15, [r0, #428]
 369              	.LVL16:
 370              	.L27:
 405:Task/Task_Control.c ****     }
 406:Task/Task_Control.c ****     else
 407:Task/Task_Control.c ****         monitor->exp_pitch *= n_scope;
 408:Task/Task_Control.c **** 
 409:Task/Task_Control.c ****     /* convert roll */
 410:Task/Task_Control.c ****     p_range = &monitor->param.roll;
 371              		.loc 1 410 5 is_stmt 1 view .LVU118
 411:Task/Task_Control.c ****     if ((p_range->max <= p_range->min) || (p_range->mid <= p_range->min) || (p_range->max <= p_rang
 372              		.loc 1 411 5 view .LVU119
 373              		.loc 1 411 17 is_stmt 0 view .LVU120
 374 007c 836D     		ldr	r3, [r0, #88]	@ unaligned
 375 007e 07EE903A 		vmov	s15, r3	@ int
 376              		.loc 1 411 33 view .LVU121
 377 0082 036E     		ldr	r3, [r0, #96]	@ unaligned
 378 0084 06EE903A 		vmov	s13, r3	@ int
 379              		.loc 1 411 8 view .LVU122
 380 0088 F4EEE67A 		vcmpe.f32	s15, s13
 381 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 382 0090 40F2D980 		bls	.L42
 383              		.loc 1 411 51 discriminator 1 view .LVU123
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 15


 384 0094 C36D     		ldr	r3, [r0, #92]	@ unaligned
 385 0096 07EE103A 		vmov	s14, r3	@ int
 386              		.loc 1 411 40 discriminator 1 view .LVU124
 387 009a F4EEC76A 		vcmpe.f32	s13, s14
 388 009e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 389 00a2 80F2D280 		bge	.L43
 390              		.loc 1 411 74 discriminator 2 view .LVU125
 391 00a6 F4EEC77A 		vcmpe.f32	s15, s14
 392 00aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 393 00ae 40F2CE80 		bls	.L44
 412:Task/Task_Control.c ****         return false;
 413:Task/Task_Control.c **** 
 414:Task/Task_Control.c ****     p_scope = p_range->max - p_range->mid;
 394              		.loc 1 414 5 is_stmt 1 view .LVU126
 395              		.loc 1 414 13 is_stmt 0 view .LVU127
 396 00b2 77EEC77A 		vsub.f32	s15, s15, s14
 397              	.LVL17:
 415:Task/Task_Control.c ****     n_scope = p_range->mid - p_range->min;
 398              		.loc 1 415 5 is_stmt 1 view .LVU128
 399              		.loc 1 415 13 is_stmt 0 view .LVU129
 400 00b6 37EE667A 		vsub.f32	s14, s14, s13
 401              	.LVL18:
 416:Task/Task_Control.c **** 
 417:Task/Task_Control.c ****     monitor->exp_roll = (ctl_data.roll_percent - 50.0f) / 100.0f;
 402              		.loc 1 417 5 is_stmt 1 view .LVU130
 403              		.loc 1 417 34 is_stmt 0 view .LVU131
 404 00ba 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 405 00be 06EE903A 		vmov	s13, r3	@ int
 406              		.loc 1 417 48 view .LVU132
 407 00c2 F8EEE66A 		vcvt.f32.s32	s13, s13
 408 00c6 DFED6C5A 		vldr.32	s11, .L65
 409 00ca 76EEE56A 		vsub.f32	s13, s13, s11
 410              		.loc 1 417 57 view .LVU133
 411 00ce 9FED6B5A 		vldr.32	s10, .L65+4
 412 00d2 C6EE855A 		vdiv.f32	s11, s13, s10
 413              		.loc 1 417 23 view .LVU134
 414 00d6 C0ED6C5A 		vstr.32	s11, [r0, #432]
 418:Task/Task_Control.c ****     if (monitor->exp_roll >= 0)
 415              		.loc 1 418 5 is_stmt 1 view .LVU135
 416              		.loc 1 418 8 is_stmt 0 view .LVU136
 417 00da F5EEC05A 		vcmpe.f32	s11, #0
 418 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 419 00e2 C0F29480 		blt	.L60
 419:Task/Task_Control.c ****     {
 420:Task/Task_Control.c ****         monitor->exp_roll *= p_scope;
 420              		.loc 1 420 9 is_stmt 1 view .LVU137
 421              		.loc 1 420 27 is_stmt 0 view .LVU138
 422 00e6 65EEA77A 		vmul.f32	s15, s11, s15
 423              	.LVL19:
 424              		.loc 1 420 27 view .LVU139
 425 00ea C0ED6C7A 		vstr.32	s15, [r0, #432]
 426              	.LVL20:
 427              	.L30:
 421:Task/Task_Control.c ****     }
 422:Task/Task_Control.c ****     else
 423:Task/Task_Control.c ****         monitor->exp_roll *= n_scope;
 424:Task/Task_Control.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 16


 425:Task/Task_Control.c ****     /* convert gyro x */
 426:Task/Task_Control.c ****     p_range = &monitor->param.gx;
 428              		.loc 1 426 5 is_stmt 1 view .LVU140
 427:Task/Task_Control.c ****     if ((p_range->max <= p_range->min) || (p_range->mid <= p_range->min) || (p_range->max <= p_rang
 429              		.loc 1 427 5 view .LVU141
 430              		.loc 1 427 17 is_stmt 0 view .LVU142
 431 00ee 436E     		ldr	r3, [r0, #100]	@ unaligned
 432 00f0 07EE903A 		vmov	s15, r3	@ int
 433              		.loc 1 427 33 view .LVU143
 434 00f4 C36E     		ldr	r3, [r0, #108]	@ unaligned
 435 00f6 07EE103A 		vmov	s14, r3	@ int
 436              		.loc 1 427 8 view .LVU144
 437 00fa F4EEC77A 		vcmpe.f32	s15, s14
 438 00fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 439 0102 40F2A680 		bls	.L45
 440              		.loc 1 427 51 discriminator 1 view .LVU145
 441 0106 836E     		ldr	r3, [r0, #104]	@ unaligned
 442 0108 06EE903A 		vmov	s13, r3	@ int
 443              		.loc 1 427 40 discriminator 1 view .LVU146
 444 010c B4EEE67A 		vcmpe.f32	s14, s13
 445 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 446 0114 80F29F80 		bge	.L46
 447              		.loc 1 427 74 discriminator 2 view .LVU147
 448 0118 F4EEE67A 		vcmpe.f32	s15, s13
 449 011c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 450 0120 40F29B80 		bls	.L47
 428:Task/Task_Control.c ****         return false;
 429:Task/Task_Control.c **** 
 430:Task/Task_Control.c ****     p_scope = p_range->max - p_range->mid;
 451              		.loc 1 430 5 is_stmt 1 view .LVU148
 452              		.loc 1 430 13 is_stmt 0 view .LVU149
 453 0124 77EEE67A 		vsub.f32	s15, s15, s13
 454              	.LVL21:
 431:Task/Task_Control.c ****     n_scope = p_range->mid - p_range->min;
 455              		.loc 1 431 5 is_stmt 1 view .LVU150
 456              		.loc 1 431 13 is_stmt 0 view .LVU151
 457 0128 36EEC77A 		vsub.f32	s14, s13, s14
 458              	.LVL22:
 432:Task/Task_Control.c **** 
 433:Task/Task_Control.c ****     monitor->exp_gyr_x = (ctl_data.roll_percent - 50.0f) / 100.0f;
 459              		.loc 1 433 5 is_stmt 1 view .LVU152
 460              		.loc 1 433 24 is_stmt 0 view .LVU153
 461 012c C0ED685A 		vstr.32	s11, [r0, #416]
 434:Task/Task_Control.c ****     if (monitor->exp_gyr_x >= 0)
 462              		.loc 1 434 5 is_stmt 1 view .LVU154
 463              		.loc 1 434 8 is_stmt 0 view .LVU155
 464 0130 F5EEC05A 		vcmpe.f32	s11, #0
 465 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 466 0138 6EDB     		blt	.L61
 435:Task/Task_Control.c ****     {
 436:Task/Task_Control.c ****         monitor->exp_gyr_x *= p_scope;
 467              		.loc 1 436 9 is_stmt 1 view .LVU156
 468              		.loc 1 436 28 is_stmt 0 view .LVU157
 469 013a 65EEA75A 		vmul.f32	s11, s11, s15
 470 013e C0ED685A 		vstr.32	s11, [r0, #416]
 471              	.L33:
 437:Task/Task_Control.c ****     }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 17


 438:Task/Task_Control.c ****     else
 439:Task/Task_Control.c ****         monitor->exp_gyr_x *= n_scope;
 440:Task/Task_Control.c **** 
 441:Task/Task_Control.c ****     /* convert gyro y */
 442:Task/Task_Control.c ****     p_range = &monitor->param.gy;
 472              		.loc 1 442 5 is_stmt 1 view .LVU158
 473              	.LVL23:
 443:Task/Task_Control.c ****     if ((p_range->max <= p_range->min) || (p_range->mid <= p_range->min) || (p_range->max <= p_rang
 474              		.loc 1 443 5 view .LVU159
 475              		.loc 1 443 17 is_stmt 0 view .LVU160
 476 0142 036F     		ldr	r3, [r0, #112]	@ unaligned
 477 0144 07EE903A 		vmov	s15, r3	@ int
 478              	.LVL24:
 479              		.loc 1 443 33 view .LVU161
 480 0148 836F     		ldr	r3, [r0, #120]	@ unaligned
 481 014a 07EE103A 		vmov	s14, r3	@ int
 482              	.LVL25:
 483              		.loc 1 443 8 view .LVU162
 484 014e F4EEC77A 		vcmpe.f32	s15, s14
 485 0152 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 486 0156 40F28280 		bls	.L48
 487              		.loc 1 443 51 discriminator 1 view .LVU163
 488 015a 436F     		ldr	r3, [r0, #116]	@ unaligned
 489 015c 06EE903A 		vmov	s13, r3	@ int
 490              		.loc 1 443 40 discriminator 1 view .LVU164
 491 0160 B4EEE67A 		vcmpe.f32	s14, s13
 492 0164 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 493 0168 7BDA     		bge	.L49
 494              		.loc 1 443 74 discriminator 2 view .LVU165
 495 016a F4EEE67A 		vcmpe.f32	s15, s13
 496 016e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 497 0172 78D9     		bls	.L50
 444:Task/Task_Control.c ****         return false;
 445:Task/Task_Control.c **** 
 446:Task/Task_Control.c ****     p_scope = p_range->max - p_range->mid;
 498              		.loc 1 446 5 is_stmt 1 view .LVU166
 499              		.loc 1 446 13 is_stmt 0 view .LVU167
 500 0174 77EEE67A 		vsub.f32	s15, s15, s13
 501              	.LVL26:
 447:Task/Task_Control.c ****     n_scope = p_range->mid - p_range->min;
 502              		.loc 1 447 5 is_stmt 1 view .LVU168
 503              		.loc 1 447 13 is_stmt 0 view .LVU169
 504 0178 36EEC77A 		vsub.f32	s14, s13, s14
 505              	.LVL27:
 448:Task/Task_Control.c **** 
 449:Task/Task_Control.c ****     monitor->exp_gyr_y = (ctl_data.pitch_percent - 50.0f) / 100.0f;
 506              		.loc 1 449 5 is_stmt 1 view .LVU170
 507              		.loc 1 449 24 is_stmt 0 view .LVU171
 508 017c 80ED696A 		vstr.32	s12, [r0, #420]
 450:Task/Task_Control.c ****     if (monitor->exp_gyr_y >= 0)
 509              		.loc 1 450 5 is_stmt 1 view .LVU172
 510              		.loc 1 450 8 is_stmt 0 view .LVU173
 511 0180 B5EEC06A 		vcmpe.f32	s12, #0
 512 0184 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 513 0188 4BDB     		blt	.L62
 451:Task/Task_Control.c ****     {
 452:Task/Task_Control.c ****         monitor->exp_gyr_y *= p_scope;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 18


 514              		.loc 1 452 9 is_stmt 1 view .LVU174
 515              		.loc 1 452 28 is_stmt 0 view .LVU175
 516 018a 26EE276A 		vmul.f32	s12, s12, s15
 517 018e 80ED696A 		vstr.32	s12, [r0, #420]
 518              	.L36:
 453:Task/Task_Control.c ****     }
 454:Task/Task_Control.c ****     else
 455:Task/Task_Control.c ****         monitor->exp_gyr_y *= n_scope;
 456:Task/Task_Control.c **** 
 457:Task/Task_Control.c ****     /* convert gyro z */
 458:Task/Task_Control.c ****     p_range = &monitor->param.gz;
 519              		.loc 1 458 5 is_stmt 1 view .LVU176
 520              	.LVL28:
 459:Task/Task_Control.c ****     if ((p_range->max <= p_range->min) || (p_range->mid <= p_range->min) || (p_range->max <= p_rang
 521              		.loc 1 459 5 view .LVU177
 522              		.loc 1 459 17 is_stmt 0 view .LVU178
 523 0192 C36F     		ldr	r3, [r0, #124]	@ unaligned
 524 0194 07EE903A 		vmov	s15, r3	@ int
 525              	.LVL29:
 526              		.loc 1 459 33 view .LVU179
 527 0198 D0F88430 		ldr	r3, [r0, #132]	@ unaligned
 528 019c 06EE903A 		vmov	s13, r3	@ int
 529              		.loc 1 459 8 view .LVU180
 530 01a0 F4EEE67A 		vcmpe.f32	s15, s13
 531 01a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 532 01a8 5FD9     		bls	.L51
 533              		.loc 1 459 51 discriminator 1 view .LVU181
 534 01aa D0F88030 		ldr	r3, [r0, #128]	@ unaligned
 535 01ae 07EE103A 		vmov	s14, r3	@ int
 536              	.LVL30:
 537              		.loc 1 459 40 discriminator 1 view .LVU182
 538 01b2 F4EEC76A 		vcmpe.f32	s13, s14
 539 01b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 540 01ba 58DA     		bge	.L52
 541              		.loc 1 459 74 discriminator 2 view .LVU183
 542 01bc F4EEC77A 		vcmpe.f32	s15, s14
 543 01c0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 544 01c4 55D9     		bls	.L53
 460:Task/Task_Control.c ****         return false;
 461:Task/Task_Control.c **** 
 462:Task/Task_Control.c ****     p_scope = p_range->max - p_range->mid;
 545              		.loc 1 462 5 is_stmt 1 view .LVU184
 546              		.loc 1 462 13 is_stmt 0 view .LVU185
 547 01c6 77EEC77A 		vsub.f32	s15, s15, s14
 548              	.LVL31:
 463:Task/Task_Control.c ****     n_scope = p_range->mid - p_range->min;
 549              		.loc 1 463 5 is_stmt 1 view .LVU186
 550              		.loc 1 463 13 is_stmt 0 view .LVU187
 551 01ca 37EE667A 		vsub.f32	s14, s14, s13
 552              	.LVL32:
 464:Task/Task_Control.c **** 
 465:Task/Task_Control.c ****     monitor->exp_gyr_z = (ctl_data.yaw_percent - 50.0f) / 100.0f;
 553              		.loc 1 465 5 is_stmt 1 view .LVU188
 554              		.loc 1 465 35 is_stmt 0 view .LVU189
 555 01ce 9DF85530 		ldrb	r3, [sp, #85]	@ zero_extendqisi2
 556 01d2 06EE103A 		vmov	s12, r3	@ int
 557              		.loc 1 465 48 view .LVU190
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 19


 558 01d6 B8EEC66A 		vcvt.f32.s32	s12, s12
 559 01da DFED276A 		vldr.32	s13, .L65
 560 01de 36EE666A 		vsub.f32	s12, s12, s13
 561              		.loc 1 465 57 view .LVU191
 562 01e2 DFED265A 		vldr.32	s11, .L65+4
 563 01e6 C6EE256A 		vdiv.f32	s13, s12, s11
 564              		.loc 1 465 24 view .LVU192
 565 01ea C0ED6A6A 		vstr.32	s13, [r0, #424]
 466:Task/Task_Control.c ****     if (monitor->exp_gyr_z >= 0)
 566              		.loc 1 466 5 is_stmt 1 view .LVU193
 567              		.loc 1 466 8 is_stmt 0 view .LVU194
 568 01ee F5EEC06A 		vcmpe.f32	s13, #0
 569 01f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 570 01f6 19DB     		blt	.L63
 467:Task/Task_Control.c ****     {
 468:Task/Task_Control.c ****         monitor->exp_gyr_z *= p_scope;
 571              		.loc 1 468 9 is_stmt 1 view .LVU195
 572              		.loc 1 468 28 is_stmt 0 view .LVU196
 573 01f8 66EEA77A 		vmul.f32	s15, s13, s15
 574              	.LVL33:
 575              		.loc 1 468 28 view .LVU197
 576 01fc C0ED6A7A 		vstr.32	s15, [r0, #424]
 469:Task/Task_Control.c ****     }
 470:Task/Task_Control.c ****     else
 471:Task/Task_Control.c ****         monitor->exp_gyr_z *= n_scope;
 472:Task/Task_Control.c **** 
 473:Task/Task_Control.c ****     return true;
 577              		.loc 1 473 12 view .LVU198
 578 0200 0120     		movs	r0, #1
 579              	.LVL34:
 580              		.loc 1 473 12 view .LVU199
 581 0202 1AE0     		b	.L24
 582              	.LVL35:
 583              	.L59:
 407:Task/Task_Control.c **** 
 584              		.loc 1 407 9 is_stmt 1 view .LVU200
 407:Task/Task_Control.c **** 
 585              		.loc 1 407 28 is_stmt 0 view .LVU201
 586 0204 26EE077A 		vmul.f32	s14, s12, s14
 587              	.LVL36:
 407:Task/Task_Control.c **** 
 588              		.loc 1 407 28 view .LVU202
 589 0208 80ED6B7A 		vstr.32	s14, [r0, #428]
 590 020c 36E7     		b	.L27
 591              	.LVL37:
 592              	.L60:
 423:Task/Task_Control.c **** 
 593              		.loc 1 423 9 is_stmt 1 view .LVU203
 423:Task/Task_Control.c **** 
 594              		.loc 1 423 27 is_stmt 0 view .LVU204
 595 020e 25EE877A 		vmul.f32	s14, s11, s14
 596              	.LVL38:
 423:Task/Task_Control.c **** 
 597              		.loc 1 423 27 view .LVU205
 598 0212 80ED6C7A 		vstr.32	s14, [r0, #432]
 599 0216 6AE7     		b	.L30
 600              	.LVL39:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 20


 601              	.L61:
 439:Task/Task_Control.c **** 
 602              		.loc 1 439 9 is_stmt 1 view .LVU206
 439:Task/Task_Control.c **** 
 603              		.loc 1 439 28 is_stmt 0 view .LVU207
 604 0218 65EE875A 		vmul.f32	s11, s11, s14
 605 021c C0ED685A 		vstr.32	s11, [r0, #416]
 606 0220 8FE7     		b	.L33
 607              	.LVL40:
 608              	.L62:
 455:Task/Task_Control.c **** 
 609              		.loc 1 455 9 is_stmt 1 view .LVU208
 455:Task/Task_Control.c **** 
 610              		.loc 1 455 28 is_stmt 0 view .LVU209
 611 0222 26EE076A 		vmul.f32	s12, s12, s14
 612 0226 80ED696A 		vstr.32	s12, [r0, #420]
 613 022a B2E7     		b	.L36
 614              	.LVL41:
 615              	.L63:
 471:Task/Task_Control.c **** 
 616              		.loc 1 471 9 is_stmt 1 view .LVU210
 471:Task/Task_Control.c **** 
 617              		.loc 1 471 28 is_stmt 0 view .LVU211
 618 022c 26EE877A 		vmul.f32	s14, s13, s14
 619              	.LVL42:
 471:Task/Task_Control.c **** 
 620              		.loc 1 471 28 view .LVU212
 621 0230 80ED6A7A 		vstr.32	s14, [r0, #424]
 622              		.loc 1 473 12 view .LVU213
 623 0234 0120     		movs	r0, #1
 624              	.LVL43:
 625              		.loc 1 473 12 view .LVU214
 626 0236 00E0     		b	.L24
 627              	.LVL44:
 628              	.L39:
 396:Task/Task_Control.c **** 
 629              		.loc 1 396 16 view .LVU215
 630 0238 0020     		movs	r0, #0
 631              	.LVL45:
 632              	.L24:
 474:Task/Task_Control.c **** }
 633              		.loc 1 474 1 view .LVU216
 634 023a 04B0     		add	sp, sp, #16
 635              	.LCFI7:
 636              		.cfi_remember_state
 637              		.cfi_def_cfa_offset 0
 638 023c 7047     		bx	lr
 639              	.LVL46:
 640              	.L40:
 641              	.LCFI8:
 642              		.cfi_restore_state
 396:Task/Task_Control.c **** 
 643              		.loc 1 396 16 view .LVU217
 644 023e 0020     		movs	r0, #0
 645              	.LVL47:
 396:Task/Task_Control.c **** 
 646              		.loc 1 396 16 view .LVU218
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 21


 647 0240 FBE7     		b	.L24
 648              	.LVL48:
 649              	.L41:
 396:Task/Task_Control.c **** 
 650              		.loc 1 396 16 view .LVU219
 651 0242 0020     		movs	r0, #0
 652              	.LVL49:
 396:Task/Task_Control.c **** 
 653              		.loc 1 396 16 view .LVU220
 654 0244 F9E7     		b	.L24
 655              	.LVL50:
 656              	.L42:
 412:Task/Task_Control.c **** 
 657              		.loc 1 412 16 view .LVU221
 658 0246 0020     		movs	r0, #0
 659              	.LVL51:
 412:Task/Task_Control.c **** 
 660              		.loc 1 412 16 view .LVU222
 661 0248 F7E7     		b	.L24
 662              	.LVL52:
 663              	.L43:
 412:Task/Task_Control.c **** 
 664              		.loc 1 412 16 view .LVU223
 665 024a 0020     		movs	r0, #0
 666              	.LVL53:
 412:Task/Task_Control.c **** 
 667              		.loc 1 412 16 view .LVU224
 668 024c F5E7     		b	.L24
 669              	.LVL54:
 670              	.L44:
 412:Task/Task_Control.c **** 
 671              		.loc 1 412 16 view .LVU225
 672 024e 0020     		movs	r0, #0
 673              	.LVL55:
 412:Task/Task_Control.c **** 
 674              		.loc 1 412 16 view .LVU226
 675 0250 F3E7     		b	.L24
 676              	.LVL56:
 677              	.L45:
 428:Task/Task_Control.c **** 
 678              		.loc 1 428 16 view .LVU227
 679 0252 0020     		movs	r0, #0
 680              	.LVL57:
 428:Task/Task_Control.c **** 
 681              		.loc 1 428 16 view .LVU228
 682 0254 F1E7     		b	.L24
 683              	.LVL58:
 684              	.L46:
 428:Task/Task_Control.c **** 
 685              		.loc 1 428 16 view .LVU229
 686 0256 0020     		movs	r0, #0
 687              	.LVL59:
 428:Task/Task_Control.c **** 
 688              		.loc 1 428 16 view .LVU230
 689 0258 EFE7     		b	.L24
 690              	.LVL60:
 691              	.L47:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 22


 428:Task/Task_Control.c **** 
 692              		.loc 1 428 16 view .LVU231
 693 025a 0020     		movs	r0, #0
 694              	.LVL61:
 428:Task/Task_Control.c **** 
 695              		.loc 1 428 16 view .LVU232
 696 025c EDE7     		b	.L24
 697              	.LVL62:
 698              	.L48:
 444:Task/Task_Control.c **** 
 699              		.loc 1 444 16 view .LVU233
 700 025e 0020     		movs	r0, #0
 701              	.LVL63:
 444:Task/Task_Control.c **** 
 702              		.loc 1 444 16 view .LVU234
 703 0260 EBE7     		b	.L24
 704              	.LVL64:
 705              	.L49:
 444:Task/Task_Control.c **** 
 706              		.loc 1 444 16 view .LVU235
 707 0262 0020     		movs	r0, #0
 708              	.LVL65:
 444:Task/Task_Control.c **** 
 709              		.loc 1 444 16 view .LVU236
 710 0264 E9E7     		b	.L24
 711              	.LVL66:
 712              	.L50:
 444:Task/Task_Control.c **** 
 713              		.loc 1 444 16 view .LVU237
 714 0266 0020     		movs	r0, #0
 715              	.LVL67:
 444:Task/Task_Control.c **** 
 716              		.loc 1 444 16 view .LVU238
 717 0268 E7E7     		b	.L24
 718              	.LVL68:
 719              	.L51:
 460:Task/Task_Control.c **** 
 720              		.loc 1 460 16 view .LVU239
 721 026a 0020     		movs	r0, #0
 722              	.LVL69:
 460:Task/Task_Control.c **** 
 723              		.loc 1 460 16 view .LVU240
 724 026c E5E7     		b	.L24
 725              	.LVL70:
 726              	.L52:
 460:Task/Task_Control.c **** 
 727              		.loc 1 460 16 view .LVU241
 728 026e 0020     		movs	r0, #0
 729              	.LVL71:
 460:Task/Task_Control.c **** 
 730              		.loc 1 460 16 view .LVU242
 731 0270 E3E7     		b	.L24
 732              	.LVL72:
 733              	.L53:
 460:Task/Task_Control.c **** 
 734              		.loc 1 460 16 view .LVU243
 735 0272 0020     		movs	r0, #0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 23


 736              	.LVL73:
 460:Task/Task_Control.c **** 
 737              		.loc 1 460 16 view .LVU244
 738 0274 E1E7     		b	.L24
 739              	.L66:
 740 0276 00BF     		.align	2
 741              	.L65:
 742 0278 00004842 		.word	1112014848
 743 027c 0000C842 		.word	1120403456
 744              		.cfi_endproc
 745              	.LFE2080:
 747              		.section	.text.TaskControl_Get_DefaultParam,"ax",%progbits
 748              		.align	1
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 753              	TaskControl_Get_DefaultParam:
 754              	.LVL74:
 755              	.LFB2072:
 106:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef Param;
 756              		.loc 1 106 1 is_stmt 1 view -0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 200
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 106:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef Param;
 760              		.loc 1 106 1 is_stmt 0 view .LVU246
 761 0000 30B5     		push	{r4, r5, lr}
 762              	.LCFI9:
 763              		.cfi_def_cfa_offset 12
 764              		.cfi_offset 4, -12
 765              		.cfi_offset 5, -8
 766              		.cfi_offset 14, -4
 767 0002 B3B0     		sub	sp, sp, #204
 768              	.LCFI10:
 769              		.cfi_def_cfa_offset 216
 770 0004 0446     		mov	r4, r0
 107:Task/Task_Control.c **** 
 771              		.loc 1 107 5 is_stmt 1 view .LVU247
 109:Task/Task_Control.c **** 
 772              		.loc 1 109 5 view .LVU248
 773 0006 C825     		movs	r5, #200
 774 0008 2A46     		mov	r2, r5
 775 000a 0021     		movs	r1, #0
 776 000c 6846     		mov	r0, sp
 777              	.LVL75:
 109:Task/Task_Control.c **** 
 778              		.loc 1 109 5 is_stmt 0 view .LVU249
 779 000e FFF7FEFF 		bl	memset
 780              	.LVL76:
 112:Task/Task_Control.c ****     Param.pitch.mid = CONTROL_ATT_RANGE_MID;
 781              		.loc 1 112 5 is_stmt 1 view .LVU250
 112:Task/Task_Control.c ****     Param.pitch.mid = CONTROL_ATT_RANGE_MID;
 782              		.loc 1 112 21 is_stmt 0 view .LVU251
 783 0012 2A4A     		ldr	r2, .L69
 784 0014 0092     		str	r2, [sp]	@ float
 113:Task/Task_Control.c ****     Param.pitch.min = CONTROL_ATT_RANGE_MIN;
 785              		.loc 1 113 5 is_stmt 1 view .LVU252
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 24


 114:Task/Task_Control.c **** 
 786              		.loc 1 114 5 view .LVU253
 114:Task/Task_Control.c **** 
 787              		.loc 1 114 21 is_stmt 0 view .LVU254
 788 0016 2A4B     		ldr	r3, .L69+4
 789 0018 0293     		str	r3, [sp, #8]	@ float
 116:Task/Task_Control.c ****     Param.roll.mid  = CONTROL_ATT_RANGE_MID;
 790              		.loc 1 116 5 is_stmt 1 view .LVU255
 116:Task/Task_Control.c ****     Param.roll.mid  = CONTROL_ATT_RANGE_MID;
 791              		.loc 1 116 21 is_stmt 0 view .LVU256
 792 001a 0392     		str	r2, [sp, #12]	@ float
 117:Task/Task_Control.c ****     Param.roll.min  = CONTROL_ATT_RANGE_MIN;
 793              		.loc 1 117 5 is_stmt 1 view .LVU257
 118:Task/Task_Control.c **** 
 794              		.loc 1 118 5 view .LVU258
 118:Task/Task_Control.c **** 
 795              		.loc 1 118 21 is_stmt 0 view .LVU259
 796 001c 0593     		str	r3, [sp, #20]	@ float
 120:Task/Task_Control.c ****     Param.gx.mid    = CONTROL_GYR_RANGE_MID;
 797              		.loc 1 120 5 is_stmt 1 view .LVU260
 120:Task/Task_Control.c ****     Param.gx.mid    = CONTROL_GYR_RANGE_MID;
 798              		.loc 1 120 21 is_stmt 0 view .LVU261
 799 001e 2948     		ldr	r0, .L69+8
 800 0020 0690     		str	r0, [sp, #24]	@ float
 121:Task/Task_Control.c ****     Param.gx.min    = CONTROL_GYR_RANGE_MIN;
 801              		.loc 1 121 5 is_stmt 1 view .LVU262
 122:Task/Task_Control.c **** 
 802              		.loc 1 122 5 view .LVU263
 122:Task/Task_Control.c **** 
 803              		.loc 1 122 21 is_stmt 0 view .LVU264
 804 0022 2949     		ldr	r1, .L69+12
 805 0024 0891     		str	r1, [sp, #32]	@ float
 124:Task/Task_Control.c ****     Param.gy.mid    = CONTROL_GYR_RANGE_MID;
 806              		.loc 1 124 5 is_stmt 1 view .LVU265
 124:Task/Task_Control.c ****     Param.gy.mid    = CONTROL_GYR_RANGE_MID;
 807              		.loc 1 124 21 is_stmt 0 view .LVU266
 808 0026 0990     		str	r0, [sp, #36]	@ float
 125:Task/Task_Control.c ****     Param.gy.min    = CONTROL_GYR_RANGE_MIN;
 809              		.loc 1 125 5 is_stmt 1 view .LVU267
 126:Task/Task_Control.c **** 
 810              		.loc 1 126 5 view .LVU268
 126:Task/Task_Control.c **** 
 811              		.loc 1 126 21 is_stmt 0 view .LVU269
 812 0028 0B91     		str	r1, [sp, #44]	@ float
 128:Task/Task_Control.c ****     Param.gz.mid    = CONTROL_GYR_RANGE_MID;
 813              		.loc 1 128 5 is_stmt 1 view .LVU270
 128:Task/Task_Control.c ****     Param.gz.mid    = CONTROL_GYR_RANGE_MID;
 814              		.loc 1 128 21 is_stmt 0 view .LVU271
 815 002a 0C90     		str	r0, [sp, #48]	@ float
 129:Task/Task_Control.c ****     Param.gz.min    = CONTROL_GYR_RANGE_MIN;
 816              		.loc 1 129 5 is_stmt 1 view .LVU272
 130:Task/Task_Control.c **** 
 817              		.loc 1 130 5 view .LVU273
 130:Task/Task_Control.c **** 
 818              		.loc 1 130 21 is_stmt 0 view .LVU274
 819 002c 0E91     		str	r1, [sp, #56]	@ float
 134:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP_Diff_Min = ATTITUDE_PID_DIFF_MIN;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 25


 820              		.loc 1 134 5 is_stmt 1 view .LVU275
 134:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP_Diff_Min = ATTITUDE_PID_DIFF_MIN;
 821              		.loc 1 134 40 is_stmt 0 view .LVU276
 822 002e 1092     		str	r2, [sp, #64]	@ float
 135:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP          = 1.2;
 823              		.loc 1 135 5 is_stmt 1 view .LVU277
 135:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP          = 1.2;
 824              		.loc 1 135 40 is_stmt 0 view .LVU278
 825 0030 1193     		str	r3, [sp, #68]	@ float
 136:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI          = 0.08;
 826              		.loc 1 136 5 is_stmt 1 view .LVU279
 136:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI          = 0.08;
 827              		.loc 1 136 40 is_stmt 0 view .LVU280
 828 0032 2649     		ldr	r1, .L69+16
 829 0034 0F91     		str	r1, [sp, #60]	@ float
 137:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI_Max      = 50;
 830              		.loc 1 137 5 is_stmt 1 view .LVU281
 137:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI_Max      = 50;
 831              		.loc 1 137 40 is_stmt 0 view .LVU282
 832 0036 DFED267A 		vldr.32	s15, .L69+20
 833 003a CDED127A 		vstr.32	s15, [sp, #72]
 138:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI_Min      = -50;
 834              		.loc 1 138 5 is_stmt 1 view .LVU283
 138:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI_Min      = -50;
 835              		.loc 1 138 40 is_stmt 0 view .LVU284
 836 003e DFF8A4E0 		ldr	lr, .L69+40
 837 0042 CDF84CE0 		str	lr, [sp, #76]	@ float
 139:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gD          = 1;
 838              		.loc 1 139 5 is_stmt 1 view .LVU285
 139:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gD          = 1;
 839              		.loc 1 139 40 is_stmt 0 view .LVU286
 840 0046 2348     		ldr	r0, .L69+24
 841 0048 1490     		str	r0, [sp, #80]	@ float
 140:Task/Task_Control.c **** 
 842              		.loc 1 140 5 is_stmt 1 view .LVU287
 140:Task/Task_Control.c **** 
 843              		.loc 1 140 40 is_stmt 0 view .LVU288
 844 004a 4FF07E5C 		mov	ip, #1065353216
 845 004e CDF854C0 		str	ip, [sp, #84]	@ float
 142:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP_Diff_Min  = ATTITUDE_PID_DIFF_MIN;
 846              		.loc 1 142 5 is_stmt 1 view .LVU289
 142:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP_Diff_Min  = ATTITUDE_PID_DIFF_MIN;
 847              		.loc 1 142 40 is_stmt 0 view .LVU290
 848 0052 1792     		str	r2, [sp, #92]	@ float
 143:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP           = 1.2;
 849              		.loc 1 143 5 is_stmt 1 view .LVU291
 143:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP           = 1.2;
 850              		.loc 1 143 40 is_stmt 0 view .LVU292
 851 0054 1893     		str	r3, [sp, #96]	@ float
 144:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI           = 0.08;
 852              		.loc 1 144 5 is_stmt 1 view .LVU293
 144:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI           = 0.08;
 853              		.loc 1 144 40 is_stmt 0 view .LVU294
 854 0056 1691     		str	r1, [sp, #88]	@ float
 145:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI_Max       = 50;
 855              		.loc 1 145 5 is_stmt 1 view .LVU295
 145:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI_Max       = 50;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 26


 856              		.loc 1 145 40 is_stmt 0 view .LVU296
 857 0058 CDED197A 		vstr.32	s15, [sp, #100]
 146:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI_Min       = -50;
 858              		.loc 1 146 5 is_stmt 1 view .LVU297
 146:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI_Min       = -50;
 859              		.loc 1 146 40 is_stmt 0 view .LVU298
 860 005c CDF868E0 		str	lr, [sp, #104]	@ float
 147:Task/Task_Control.c ****     Param.Outer.Roll_Para.gD           = 1;
 861              		.loc 1 147 5 is_stmt 1 view .LVU299
 147:Task/Task_Control.c ****     Param.Outer.Roll_Para.gD           = 1;
 862              		.loc 1 147 40 is_stmt 0 view .LVU300
 863 0060 1B90     		str	r0, [sp, #108]	@ float
 148:Task/Task_Control.c **** 
 864              		.loc 1 148 5 is_stmt 1 view .LVU301
 148:Task/Task_Control.c **** 
 865              		.loc 1 148 40 is_stmt 0 view .LVU302
 866 0062 CDF870C0 		str	ip, [sp, #112]	@ float
 151:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP_Diff_Min = GYRO_X_RATE_PID_DIFF_MIN;
 867              		.loc 1 151 5 is_stmt 1 view .LVU303
 151:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP_Diff_Min = GYRO_X_RATE_PID_DIFF_MIN;
 868              		.loc 1 151 40 is_stmt 0 view .LVU304
 869 0066 DFED1C7A 		vldr.32	s15, .L69+28
 870 006a CDED1E7A 		vstr.32	s15, [sp, #120]
 152:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP          = 1.2;
 871              		.loc 1 152 5 is_stmt 1 view .LVU305
 152:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP          = 1.2;
 872              		.loc 1 152 40 is_stmt 0 view .LVU306
 873 006e DFF878E0 		ldr	lr, .L69+44
 874 0072 CDF87CE0 		str	lr, [sp, #124]	@ float
 153:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI          = 0.002;
 875              		.loc 1 153 5 is_stmt 1 view .LVU307
 153:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI          = 0.002;
 876              		.loc 1 153 40 is_stmt 0 view .LVU308
 877 0076 1D91     		str	r1, [sp, #116]	@ float
 154:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI_Max      = 30;
 878              		.loc 1 154 5 is_stmt 1 view .LVU309
 154:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI_Max      = 30;
 879              		.loc 1 154 40 is_stmt 0 view .LVU310
 880 0078 9FED187A 		vldr.32	s14, .L69+32
 881 007c 8DED207A 		vstr.32	s14, [sp, #128]
 155:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI_Min      = -30;
 882              		.loc 1 155 5 is_stmt 1 view .LVU311
 155:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI_Min      = -30;
 883              		.loc 1 155 40 is_stmt 0 view .LVU312
 884 0080 2192     		str	r2, [sp, #132]	@ float
 156:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gD          = 0.1;
 885              		.loc 1 156 5 is_stmt 1 view .LVU313
 156:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gD          = 0.1;
 886              		.loc 1 156 40 is_stmt 0 view .LVU314
 887 0082 2293     		str	r3, [sp, #136]	@ float
 157:Task/Task_Control.c **** 
 888              		.loc 1 157 5 is_stmt 1 view .LVU315
 157:Task/Task_Control.c **** 
 889              		.loc 1 157 40 is_stmt 0 view .LVU316
 890 0084 1648     		ldr	r0, .L69+36
 891 0086 2390     		str	r0, [sp, #140]	@ float
 159:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP_Diff_Min = GYRO_Y_RATE_PID_DIFF_MIN;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 27


 892              		.loc 1 159 5 is_stmt 1 view .LVU317
 159:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP_Diff_Min = GYRO_Y_RATE_PID_DIFF_MIN;
 893              		.loc 1 159 40 is_stmt 0 view .LVU318
 894 0088 CDED257A 		vstr.32	s15, [sp, #148]
 160:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP          = 1.2;
 895              		.loc 1 160 5 is_stmt 1 view .LVU319
 160:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP          = 1.2;
 896              		.loc 1 160 40 is_stmt 0 view .LVU320
 897 008c CDF898E0 		str	lr, [sp, #152]	@ float
 161:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI          = 0.002;
 898              		.loc 1 161 5 is_stmt 1 view .LVU321
 161:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI          = 0.002;
 899              		.loc 1 161 40 is_stmt 0 view .LVU322
 900 0090 2491     		str	r1, [sp, #144]	@ float
 162:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI_Max      = 30;
 901              		.loc 1 162 5 is_stmt 1 view .LVU323
 162:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI_Max      = 30;
 902              		.loc 1 162 40 is_stmt 0 view .LVU324
 903 0092 8DED277A 		vstr.32	s14, [sp, #156]
 163:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI_Min      = -30;
 904              		.loc 1 163 5 is_stmt 1 view .LVU325
 163:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI_Min      = -30;
 905              		.loc 1 163 40 is_stmt 0 view .LVU326
 906 0096 2892     		str	r2, [sp, #160]	@ float
 164:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gD          = 0.1;
 907              		.loc 1 164 5 is_stmt 1 view .LVU327
 164:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gD          = 0.1;
 908              		.loc 1 164 40 is_stmt 0 view .LVU328
 909 0098 2993     		str	r3, [sp, #164]	@ float
 165:Task/Task_Control.c **** 
 910              		.loc 1 165 5 is_stmt 1 view .LVU329
 165:Task/Task_Control.c **** 
 911              		.loc 1 165 40 is_stmt 0 view .LVU330
 912 009a 2A90     		str	r0, [sp, #168]	@ float
 167:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP_Diff_Min = GYRO_X_RATE_PID_DIFF_MIN;
 913              		.loc 1 167 5 is_stmt 1 view .LVU331
 167:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP_Diff_Min = GYRO_X_RATE_PID_DIFF_MIN;
 914              		.loc 1 167 40 is_stmt 0 view .LVU332
 915 009c CDED2C7A 		vstr.32	s15, [sp, #176]
 168:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP          = 1;
 916              		.loc 1 168 5 is_stmt 1 view .LVU333
 168:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP          = 1;
 917              		.loc 1 168 40 is_stmt 0 view .LVU334
 918 00a0 CDF8B4E0 		str	lr, [sp, #180]	@ float
 169:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI          = 0;
 919              		.loc 1 169 5 is_stmt 1 view .LVU335
 169:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI          = 0;
 920              		.loc 1 169 40 is_stmt 0 view .LVU336
 921 00a4 CDF8ACC0 		str	ip, [sp, #172]	@ float
 170:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI_Max      = 0;
 922              		.loc 1 170 5 is_stmt 1 view .LVU337
 171:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI_Min      = 0;
 923              		.loc 1 171 5 view .LVU338
 172:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gD          = 0.1;
 924              		.loc 1 172 5 view .LVU339
 173:Task/Task_Control.c **** 
 925              		.loc 1 173 5 view .LVU340
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 28


 173:Task/Task_Control.c **** 
 926              		.loc 1 173 40 is_stmt 0 view .LVU341
 927 00a8 3190     		str	r0, [sp, #196]	@ float
 175:Task/Task_Control.c **** }
 928              		.loc 1 175 5 is_stmt 1 view .LVU342
 175:Task/Task_Control.c **** }
 929              		.loc 1 175 12 is_stmt 0 view .LVU343
 930 00aa 2A46     		mov	r2, r5
 931 00ac 6946     		mov	r1, sp
 932 00ae 2046     		mov	r0, r4
 933 00b0 FFF7FEFF 		bl	memcpy
 934              	.LVL77:
 176:Task/Task_Control.c **** 
 935              		.loc 1 176 1 view .LVU344
 936 00b4 2046     		mov	r0, r4
 937 00b6 33B0     		add	sp, sp, #204
 938              	.LCFI11:
 939              		.cfi_def_cfa_offset 12
 940              		@ sp needed
 941 00b8 30BD     		pop	{r4, r5, pc}
 942              	.LVL78:
 943              	.L70:
 176:Task/Task_Control.c **** 
 944              		.loc 1 176 1 view .LVU345
 945 00ba 00BF     		.align	2
 946              	.L69:
 947 00bc 0000F041 		.word	1106247680
 948 00c0 0000F0C1 		.word	-1041235968
 949 00c4 00004844 		.word	1145569280
 950 00c8 000048C4 		.word	-1001914368
 951 00cc 9A99993F 		.word	1067030938
 952 00d0 0AD7A33D 		.word	1034147594
 953 00d4 000048C2 		.word	-1035468800
 954 00d8 0000C842 		.word	1120403456
 955 00dc 6F12033B 		.word	990057071
 956 00e0 CDCCCC3D 		.word	1036831949
 957 00e4 00004842 		.word	1112014848
 958 00e8 0000C8C2 		.word	-1027080192
 959              		.cfi_endproc
 960              	.LFE2072:
 962              		.section	.rodata.TaskControl_Get_StoreParam.str1.4,"aMS",%progbits,1
 963              		.align	2
 964              	.LC1:
 965 0000 436F6E74 		.ascii	"Control_Para\000"
 965      726F6C5F 
 965      50617261 
 965      00
 966 000d 000000   		.align	2
 967              	.LC2:
 968 0010 41637475 		.ascii	"Actuator_Para\000"
 968      61746F72 
 968      5F506172 
 968      6100
 969              		.section	.text.TaskControl_Get_StoreParam,"ax",%progbits
 970              		.align	1
 971              		.syntax unified
 972              		.thumb
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 29


 973              		.thumb_func
 975              	TaskControl_Get_StoreParam:
 976              	.LFB2074:
 198:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef PID_Param;
 977              		.loc 1 198 1 is_stmt 1 view -0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 680
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 982              	.LCFI12:
 983              		.cfi_def_cfa_offset 28
 984              		.cfi_offset 4, -28
 985              		.cfi_offset 5, -24
 986              		.cfi_offset 6, -20
 987              		.cfi_offset 7, -16
 988              		.cfi_offset 8, -12
 989              		.cfi_offset 9, -8
 990              		.cfi_offset 14, -4
 991 0004 ADF53B7D 		sub	sp, sp, #748
 992              	.LCFI13:
 993              		.cfi_def_cfa_offset 776
 199:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef Default_Param;
 994              		.loc 1 199 5 view .LVU347
 200:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef *p_UseParam = NULL;
 995              		.loc 1 200 5 view .LVU348
 201:Task/Task_Control.c ****     SrvActuator_Setting_TypeDef Actuator_Param;
 996              		.loc 1 201 5 view .LVU349
 997              	.LVL79:
 202:Task/Task_Control.c **** 
 998              		.loc 1 202 5 view .LVU350
 205:Task/Task_Control.c ****     memset(&Actuator_Param, 0, sizeof(SrvActuator_Setting_TypeDef));
 999              		.loc 1 205 5 view .LVU351
 1000 0008 C825     		movs	r5, #200
 1001 000a 2A46     		mov	r2, r5
 1002 000c 0021     		movs	r1, #0
 1003 000e 88A8     		add	r0, sp, #544
 1004 0010 FFF7FEFF 		bl	memset
 1005              	.LVL80:
 206:Task/Task_Control.c ****     memset(&Default_Param, 0, sizeof(TaskControl_FlightParam_TypeDef));
 1006              		.loc 1 206 5 view .LVU352
 1007 0014 0024     		movs	r4, #0
 1008 0016 5494     		str	r4, [sp, #336]
 1009 0018 5594     		str	r4, [sp, #340]
 207:Task/Task_Control.c ****     memset(&TaskControl_Monitor.pid_store_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 1010              		.loc 1 207 5 view .LVU353
 1011 001a 2A46     		mov	r2, r5
 1012 001c 2146     		mov	r1, r4
 1013 001e 56A8     		add	r0, sp, #344
 1014 0020 FFF7FEFF 		bl	memset
 1015              	.LVL81:
 208:Task/Task_Control.c ****     memset(&TaskControl_Monitor.actuator_store_info, 0, sizeof(Storage_ItemSearchOut_TypeDef));
 1016              		.loc 1 208 5 view .LVU354
 1017 0024 804F     		ldr	r7, .L81
 1018 0026 07F10709 		add	r9, r7, #7
 1019 002a 4526     		movs	r6, #69
 1020 002c 3246     		mov	r2, r6
 1021 002e 2146     		mov	r1, r4
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 30


 1022 0030 4846     		mov	r0, r9
 1023 0032 FFF7FEFF 		bl	memset
 1024              	.LVL82:
 209:Task/Task_Control.c **** 
 1025              		.loc 1 209 5 view .LVU355
 1026 0036 07F58A78 		add	r8, r7, #276
 1027 003a 3246     		mov	r2, r6
 1028 003c 2146     		mov	r1, r4
 1029 003e 4046     		mov	r0, r8
 1030 0040 FFF7FEFF 		bl	memset
 1031              	.LVL83:
 211:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 1032              		.loc 1 211 5 view .LVU356
 211:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 1033              		.loc 1 211 49 is_stmt 0 view .LVU357
 1034 0044 794C     		ldr	r4, .L81+4
 1035 0046 6368     		ldr	r3, [r4, #4]
 211:Task/Task_Control.c ****     TaskControl_Monitor.actuator_store_info = Storage.search(Para_User, ACTUATOR_STORAGE_SECTION_NA
 1036              		.loc 1 211 42 view .LVU358
 1037 0048 794A     		ldr	r2, .L81+8
 1038 004a 0221     		movs	r1, #2
 1039 004c 42A8     		add	r0, sp, #264
 1040 004e 9847     		blx	r3
 1041              	.LVL84:
 1042 0050 3246     		mov	r2, r6
 1043 0052 42A9     		add	r1, sp, #264
 1044 0054 4846     		mov	r0, r9
 1045 0056 FFF7FEFF 		bl	memcpy
 1046              	.LVL85:
 212:Task/Task_Control.c **** 
 1047              		.loc 1 212 5 is_stmt 1 view .LVU359
 212:Task/Task_Control.c **** 
 1048              		.loc 1 212 54 is_stmt 0 view .LVU360
 1049 005a 6368     		ldr	r3, [r4, #4]
 212:Task/Task_Control.c **** 
 1050              		.loc 1 212 47 view .LVU361
 1051 005c 754A     		ldr	r2, .L81+12
 1052 005e 0221     		movs	r1, #2
 1053 0060 42A8     		add	r0, sp, #264
 1054 0062 9847     		blx	r3
 1055              	.LVL86:
 1056 0064 3246     		mov	r2, r6
 1057 0066 42A9     		add	r1, sp, #264
 1058 0068 4046     		mov	r0, r8
 1059 006a FFF7FEFF 		bl	memcpy
 1060              	.LVL87:
 215:Task/Task_Control.c ****     Default_Param = PID_Param;
 1061              		.loc 1 215 5 is_stmt 1 view .LVU362
 215:Task/Task_Control.c ****     Default_Param = PID_Param;
 1062              		.loc 1 215 17 is_stmt 0 view .LVU363
 1063 006e 10A8     		add	r0, sp, #64
 1064 0070 FFF7FEFF 		bl	TaskControl_Get_DefaultParam
 1065              	.LVL88:
 1066 0074 2A46     		mov	r2, r5
 1067 0076 10A9     		add	r1, sp, #64
 1068 0078 88A8     		add	r0, sp, #544
 1069 007a FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 31


 1070              	.LVL89:
 216:Task/Task_Control.c ****     p_UseParam = &Default_Param;
 1071              		.loc 1 216 5 is_stmt 1 view .LVU364
 216:Task/Task_Control.c ****     p_UseParam = &Default_Param;
 1072              		.loc 1 216 19 is_stmt 0 view .LVU365
 1073 007e 2A46     		mov	r2, r5
 1074 0080 88A9     		add	r1, sp, #544
 1075 0082 56A8     		add	r0, sp, #344
 1076 0084 FFF7FEFF 		bl	memcpy
 1077              	.LVL90:
 217:Task/Task_Control.c ****     
 1078              		.loc 1 217 5 is_stmt 1 view .LVU366
 219:Task/Task_Control.c ****     {
 1079              		.loc 1 219 5 view .LVU367
 219:Task/Task_Control.c ****     {
 1080              		.loc 1 219 43 is_stmt 0 view .LVU368
 1081 0088 D7F80730 		ldr	r3, [r7, #7]	@ unaligned
 219:Task/Task_Control.c ****     {
 1082              		.loc 1 219 8 view .LVU369
 1083 008c 002B     		cmp	r3, #0
 1084 008e 7AD1     		bne	.L72
 223:Task/Task_Control.c ****     }
 1085              		.loc 1 223 9 is_stmt 1 view .LVU370
 223:Task/Task_Control.c ****     }
 1086              		.loc 1 223 16 is_stmt 0 view .LVU371
 1087 0090 A468     		ldr	r4, [r4, #8]
 223:Task/Task_Control.c ****     }
 1088              		.loc 1 223 9 view .LVU372
 1089 0092 2B46     		mov	r3, r5
 1090 0094 88AA     		add	r2, sp, #544
 1091 0096 6649     		ldr	r1, .L81+8
 1092 0098 0220     		movs	r0, #2
 1093 009a A047     		blx	r4
 1094              	.LVL91:
 217:Task/Task_Control.c ****     
 1095              		.loc 1 217 16 view .LVU373
 1096 009c 56AC     		add	r4, sp, #344
 1097              	.LVL92:
 1098              	.L73:
 232:Task/Task_Control.c **** 
 1099              		.loc 1 232 5 is_stmt 1 view .LVU374
 1100 009e 624D     		ldr	r5, .L81
 1101 00a0 C822     		movs	r2, #200
 1102 00a2 2146     		mov	r1, r4
 1103 00a4 05F14C00 		add	r0, r5, #76
 1104 00a8 FFF7FEFF 		bl	memcpy
 1105              	.LVL93:
 234:Task/Task_Control.c ****     TaskControl_Param_Copy(&TaskControl_Monitor.RollCtl_PIDObj,  p_UseParam->Outer.Roll_Para);
 1106              		.loc 1 234 5 view .LVU375
 1107 00ac EC46     		mov	ip, sp
 1108 00ae A06C     		ldr	r0, [r4, #72]	@ unaligned
 1109 00b0 E16C     		ldr	r1, [r4, #76]	@ unaligned
 1110 00b2 226D     		ldr	r2, [r4, #80]	@ unaligned
 1111 00b4 636D     		ldr	r3, [r4, #84]	@ unaligned
 1112 00b6 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1113 00ba E16B     		ldr	r1, [r4, #60]	@ unaligned
 1114 00bc 226C     		ldr	r2, [r4, #64]	@ unaligned
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 32


 1115 00be 636C     		ldr	r3, [r4, #68]	@ unaligned
 1116 00c0 05F50970 		add	r0, r5, #548
 1117 00c4 FFF7FEFF 		bl	TaskControl_Param_Copy
 1118              	.LVL94:
 235:Task/Task_Control.c ****     TaskControl_Param_Copy(&TaskControl_Monitor.GyrXCtl_PIDObj,  p_UseParam->Inner.GyroX_Para);
 1119              		.loc 1 235 5 view .LVU376
 1120 00c8 EC46     		mov	ip, sp
 1121 00ca 606E     		ldr	r0, [r4, #100]	@ unaligned
 1122 00cc A16E     		ldr	r1, [r4, #104]	@ unaligned
 1123 00ce E26E     		ldr	r2, [r4, #108]	@ unaligned
 1124 00d0 236F     		ldr	r3, [r4, #112]	@ unaligned
 1125 00d2 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1126 00d6 A16D     		ldr	r1, [r4, #88]	@ unaligned
 1127 00d8 E26D     		ldr	r2, [r4, #92]	@ unaligned
 1128 00da 236E     		ldr	r3, [r4, #96]	@ unaligned
 1129 00dc 05F5F270 		add	r0, r5, #484
 1130 00e0 FFF7FEFF 		bl	TaskControl_Param_Copy
 1131              	.LVL95:
 236:Task/Task_Control.c ****     TaskControl_Param_Copy(&TaskControl_Monitor.GyrYCtl_PIDObj,  p_UseParam->Inner.GyroY_Para);
 1132              		.loc 1 236 5 view .LVU377
 1133 00e4 EC46     		mov	ip, sp
 1134 00e6 D4F88000 		ldr	r0, [r4, #128]	@ unaligned
 1135 00ea D4F88410 		ldr	r1, [r4, #132]	@ unaligned
 1136 00ee D4F88820 		ldr	r2, [r4, #136]	@ unaligned
 1137 00f2 D4F88C30 		ldr	r3, [r4, #140]	@ unaligned
 1138 00f6 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1139 00fa 616F     		ldr	r1, [r4, #116]	@ unaligned
 1140 00fc A26F     		ldr	r2, [r4, #120]	@ unaligned
 1141 00fe E36F     		ldr	r3, [r4, #124]	@ unaligned
 1142 0100 05F51970 		add	r0, r5, #612
 1143 0104 FFF7FEFF 		bl	TaskControl_Param_Copy
 1144              	.LVL96:
 237:Task/Task_Control.c ****     TaskControl_Param_Copy(&TaskControl_Monitor.GyrZCtl_PIDObj,  p_UseParam->Inner.GyroZ_Para);
 1145              		.loc 1 237 5 view .LVU378
 1146 0108 EC46     		mov	ip, sp
 1147 010a D4F89C00 		ldr	r0, [r4, #156]	@ unaligned
 1148 010e D4F8A010 		ldr	r1, [r4, #160]	@ unaligned
 1149 0112 D4F8A420 		ldr	r2, [r4, #164]	@ unaligned
 1150 0116 D4F8A830 		ldr	r3, [r4, #168]	@ unaligned
 1151 011a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1152 011e D4F89010 		ldr	r1, [r4, #144]	@ unaligned
 1153 0122 D4F89420 		ldr	r2, [r4, #148]	@ unaligned
 1154 0126 D4F89830 		ldr	r3, [r4, #152]	@ unaligned
 1155 012a 05F52970 		add	r0, r5, #676
 1156 012e FFF7FEFF 		bl	TaskControl_Param_Copy
 1157              	.LVL97:
 238:Task/Task_Control.c **** 
 1158              		.loc 1 238 5 view .LVU379
 1159 0132 EC46     		mov	ip, sp
 1160 0134 D4F8B800 		ldr	r0, [r4, #184]	@ unaligned
 1161 0138 D4F8BC10 		ldr	r1, [r4, #188]	@ unaligned
 1162 013c D4F8C020 		ldr	r2, [r4, #192]	@ unaligned
 1163 0140 D4F8C430 		ldr	r3, [r4, #196]	@ unaligned
 1164 0144 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1165 0148 D4F8AC10 		ldr	r1, [r4, #172]	@ unaligned
 1166 014c D4F8B020 		ldr	r2, [r4, #176]	@ unaligned
 1167 0150 D4F8B430 		ldr	r3, [r4, #180]	@ unaligned
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 33


 1168 0154 05F53970 		add	r0, r5, #740
 1169 0158 FFF7FEFF 		bl	TaskControl_Param_Copy
 1170              	.LVL98:
 242:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr)
 1171              		.loc 1 242 5 view .LVU380
 242:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr)
 1172              		.loc 1 242 53 is_stmt 0 view .LVU381
 1173 015c 364B     		ldr	r3, .L81+16
 1174 015e 9B68     		ldr	r3, [r3, #8]
 242:Task/Task_Control.c ****     if (TaskControl_Monitor.actuator_store_info.item_addr)
 1175              		.loc 1 242 42 view .LVU382
 1176 0160 10A8     		add	r0, sp, #64
 1177 0162 9847     		blx	r3
 1178              	.LVL99:
 1179 0164 109A     		ldr	r2, [sp, #64]	@ unaligned
 1180 0166 119B     		ldr	r3, [sp, #68]	@ unaligned
 1181 0168 C5F85921 		str	r2, [r5, #345]	@ unaligned
 1182 016c C5F85D31 		str	r3, [r5, #349]	@ unaligned
 243:Task/Task_Control.c ****     {
 1183              		.loc 1 243 5 is_stmt 1 view .LVU383
 243:Task/Task_Control.c ****     {
 1184              		.loc 1 243 48 is_stmt 0 view .LVU384
 1185 0170 D5F81431 		ldr	r3, [r5, #276]
 243:Task/Task_Control.c ****     {
 1186              		.loc 1 243 8 view .LVU385
 1187 0174 1BB1     		cbz	r3, .L71
 245:Task/Task_Control.c ****             Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuat
 1188              		.loc 1 245 9 is_stmt 1 view .LVU386
 245:Task/Task_Control.c ****             Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuat
 1189              		.loc 1 245 58 is_stmt 0 view .LVU387
 1190 0176 B5F84831 		ldrh	r3, [r5, #328]
 245:Task/Task_Control.c ****             Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuat
 1191              		.loc 1 245 12 view .LVU388
 1192 017a 082B     		cmp	r3, #8
 1193 017c 26D0     		beq	.L79
 1194              	.LVL100:
 1195              	.L71:
 249:Task/Task_Control.c **** 
 1196              		.loc 1 249 1 view .LVU389
 1197 017e 0DF53B7D 		add	sp, sp, #748
 1198              	.LCFI14:
 1199              		.cfi_remember_state
 1200              		.cfi_def_cfa_offset 28
 1201              		@ sp needed
 1202 0182 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1203              	.LVL101:
 1204              	.L72:
 1205              	.LCFI15:
 1206              		.cfi_restore_state
 227:Task/Task_Control.c ****             (Storage.get(Para_User, TaskControl_Monitor.pid_store_info.item, (uint8_t *)&PID_Param,
 1207              		.loc 1 227 9 is_stmt 1 view .LVU390
 227:Task/Task_Control.c ****             (Storage.get(Para_User, TaskControl_Monitor.pid_store_info.item, (uint8_t *)&PID_Param,
 1208              		.loc 1 227 53 is_stmt 0 view .LVU391
 1209 0186 284B     		ldr	r3, .L81
 1210 0188 B3F83B30 		ldrh	r3, [r3, #59]	@ unaligned
 227:Task/Task_Control.c ****             (Storage.get(Para_User, TaskControl_Monitor.pid_store_info.item, (uint8_t *)&PID_Param,
 1211              		.loc 1 227 12 view .LVU392
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 34


 1212 018c C82B     		cmp	r3, #200
 1213 018e 01D0     		beq	.L80
 217:Task/Task_Control.c ****     
 1214              		.loc 1 217 16 view .LVU393
 1215 0190 56AC     		add	r4, sp, #344
 1216              	.LVL102:
 217:Task/Task_Control.c ****     
 1217              		.loc 1 217 16 view .LVU394
 1218 0192 84E7     		b	.L73
 1219              	.LVL103:
 1220              	.L80:
 228:Task/Task_Control.c ****             p_UseParam = &PID_Param;
 1221              		.loc 1 228 21 discriminator 1 view .LVU395
 1222 0194 254B     		ldr	r3, .L81+4
 1223 0196 1F69     		ldr	r7, [r3, #16]
 228:Task/Task_Control.c ****             p_UseParam = &PID_Param;
 1224              		.loc 1 228 14 discriminator 1 view .LVU396
 1225 0198 234E     		ldr	r6, .L81
 1226 019a C823     		movs	r3, #200
 1227 019c 0E93     		str	r3, [sp, #56]
 1228 019e 88AB     		add	r3, sp, #544
 1229 01a0 0D93     		str	r3, [sp, #52]
 1230 01a2 6C46     		mov	r4, sp
 1231 01a4 06F11805 		add	r5, r6, #24
 1232 01a8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1233 01aa 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1234 01ac 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1235 01ae 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1236 01b0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1237 01b2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1238 01b4 2B68     		ldr	r3, [r5]
 1239 01b6 2360     		str	r3, [r4]
 1240 01b8 06F10C03 		add	r3, r6, #12
 1241 01bc 0ECB     		ldm	r3, {r1, r2, r3}
 1242 01be 0220     		movs	r0, #2
 1243 01c0 B847     		blx	r7
 1244              	.LVL104:
 227:Task/Task_Control.c ****             (Storage.get(Para_User, TaskControl_Monitor.pid_store_info.item, (uint8_t *)&PID_Param,
 1245              		.loc 1 227 102 discriminator 1 view .LVU397
 1246 01c2 08B1     		cbz	r0, .L77
 217:Task/Task_Control.c ****     
 1247              		.loc 1 217 16 view .LVU398
 1248 01c4 56AC     		add	r4, sp, #344
 1249              	.LVL105:
 217:Task/Task_Control.c ****     
 1250              		.loc 1 217 16 view .LVU399
 1251 01c6 6AE7     		b	.L73
 1252              	.LVL106:
 1253              	.L77:
 229:Task/Task_Control.c ****     }
 1254              		.loc 1 229 24 view .LVU400
 1255 01c8 88AC     		add	r4, sp, #544
 1256 01ca 68E7     		b	.L73
 1257              	.LVL107:
 1258              	.L79:
 246:Task/Task_Control.c ****             TaskControl_Monitor.actuator_param = Actuator_Param;
 1259              		.loc 1 246 20 discriminator 1 view .LVU401
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 35


 1260 01cc 174B     		ldr	r3, .L81+4
 1261 01ce D3F81080 		ldr	r8, [r3, #16]
 246:Task/Task_Control.c ****             TaskControl_Monitor.actuator_param = Actuator_Param;
 1262              		.loc 1 246 13 discriminator 1 view .LVU402
 1263 01d2 0822     		movs	r2, #8
 1264 01d4 0E92     		str	r2, [sp, #56]
 1265 01d6 54AA     		add	r2, sp, #336
 1266 01d8 0D92     		str	r2, [sp, #52]
 1267 01da D5F81991 		ldr	r9, [r5, #281]	@ unaligned
 1268 01de D5F81DE1 		ldr	lr, [r5, #285]	@ unaligned
 1269 01e2 D5F821C1 		ldr	ip, [r5, #289]	@ unaligned
 1270 01e6 05F22514 		addw	r4, r5, #293
 1271              	.LVL108:
 246:Task/Task_Control.c ****             TaskControl_Monitor.actuator_param = Actuator_Param;
 1272              		.loc 1 246 13 discriminator 1 view .LVU403
 1273 01ea 6E46     		mov	r6, sp
 1274 01ec 05F25517 		addw	r7, r5, #341
 1275              	.L75:
 1276 01f0 3546     		mov	r5, r6
 1277 01f2 2068     		ldr	r0, [r4]	@ unaligned
 1278 01f4 6168     		ldr	r1, [r4, #4]	@ unaligned
 1279 01f6 A268     		ldr	r2, [r4, #8]	@ unaligned
 1280 01f8 E368     		ldr	r3, [r4, #12]	@ unaligned
 1281 01fa 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1282 01fc 1034     		adds	r4, r4, #16
 1283 01fe 2E46     		mov	r6, r5
 1284 0200 BC42     		cmp	r4, r7
 1285 0202 F5D1     		bne	.L75
 1286 0204 2068     		ldr	r0, [r4]	@ unaligned
 1287 0206 2860     		str	r0, [r5]
 1288 0208 4946     		mov	r1, r9
 1289 020a 7246     		mov	r2, lr
 1290 020c 6346     		mov	r3, ip
 1291 020e 0220     		movs	r0, #2
 1292 0210 C047     		blx	r8
 1293              	.LVL109:
 245:Task/Task_Control.c ****             Storage.get(Para_User, TaskControl_Monitor.actuator_store_info.item, (uint8_t *)&Actuat
 1294              		.loc 1 245 103 discriminator 1 view .LVU404
 1295 0212 0028     		cmp	r0, #0
 1296 0214 B3D1     		bne	.L71
 247:Task/Task_Control.c ****     }
 1297              		.loc 1 247 13 is_stmt 1 view .LVU405
 247:Task/Task_Control.c ****     }
 1298              		.loc 1 247 48 is_stmt 0 view .LVU406
 1299 0216 044A     		ldr	r2, .L81
 1300 0218 54AB     		add	r3, sp, #336
 1301 021a 03CB     		ldmia	r3!, {r0, r1}
 1302 021c C2F85901 		str	r0, [r2, #345]	@ unaligned
 1303 0220 C2F85D11 		str	r1, [r2, #349]	@ unaligned
 249:Task/Task_Control.c **** 
 1304              		.loc 1 249 1 view .LVU407
 1305 0224 ABE7     		b	.L71
 1306              	.L82:
 1307 0226 00BF     		.align	2
 1308              	.L81:
 1309 0228 00000000 		.word	.LANCHOR0
 1310 022c 00000000 		.word	Storage
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 36


 1311 0230 00000000 		.word	.LC1
 1312 0234 10000000 		.word	.LC2
 1313 0238 00000000 		.word	SrvActuator
 1314              		.cfi_endproc
 1315              	.LFE2074:
 1317              		.section	.text.TaskControl_Get_InuseParam,"ax",%progbits
 1318              		.align	1
 1319              		.syntax unified
 1320              		.thumb
 1321              		.thumb_func
 1323              	TaskControl_Get_InuseParam:
 1324              	.LVL110:
 1325              	.LFB2082:
 475:Task/Task_Control.c **** 
 476:Task/Task_Control.c **** /* need to be optmize */
 477:Task/Task_Control.c **** static void TaskControl_FlightControl_Polling(ControlData_TypeDef *exp_ctl_val)
 478:Task/Task_Control.c **** {
 479:Task/Task_Control.c ****     uint8_t axis = Axis_X;
 480:Task/Task_Control.c ****     uint32_t tunning_port = 0;
 481:Task/Task_Control.c ****     bool arm_state = false;
 482:Task/Task_Control.c **** 
 483:Task/Task_Control.c ****     if (TaskControl_Monitor.init_state && exp_ctl_val)
 484:Task/Task_Control.c ****     {
 485:Task/Task_Control.c ****         TaskControl_Convert_CtlData(&TaskControl_Monitor, *exp_ctl_val);
 486:Task/Task_Control.c ****         arm_state = exp_ctl_val->arm_state;
 487:Task/Task_Control.c ****         failsafe = exp_ctl_val->fail_safe;
 488:Task/Task_Control.c ****         TaskControl_Monitor.control_abort = false;
 489:Task/Task_Control.c **** 
 490:Task/Task_Control.c ****         /* pipe converted control data to data hub */
 491:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).arm = arm_state;
 492:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).failsafe = failsafe;
 493:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).throttle_percent = exp_ctl_val->throttle_percent;
 494:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).control_mode = exp_ctl_val->control_mode;
 495:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).pitch = TaskControl_Monitor.exp_pitch;
 496:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).roll = TaskControl_Monitor.exp_roll;
 497:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_x = TaskControl_Monitor.exp_gyr_x;
 498:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_y = TaskControl_Monitor.exp_gyr_y;
 499:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_z = TaskControl_Monitor.exp_gyr_z;
 500:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_hub_DataPipe);
 501:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_Log_DataPipe);
 502:Task/Task_Control.c **** 
 503:Task/Task_Control.c ****         // check imu filter gyro data update or not
 504:Task/Task_Control.c ****         if(!SrvDataHub.get_scaled_imu(&imu_update_time,
 505:Task/Task_Control.c ****                                       NULL, NULL,
 506:Task/Task_Control.c ****                                       &TaskControl_Monitor.acc[Axis_X],
 507:Task/Task_Control.c ****                                       &TaskControl_Monitor.acc[Axis_Y],
 508:Task/Task_Control.c ****                                       &TaskControl_Monitor.acc[Axis_Z],
 509:Task/Task_Control.c ****                                       &TaskControl_Monitor.gyr[Axis_X],
 510:Task/Task_Control.c ****                                       &TaskControl_Monitor.gyr[Axis_Y],
 511:Task/Task_Control.c ****                                       &TaskControl_Monitor.gyr[Axis_Z],
 512:Task/Task_Control.c ****                                       NULL, &imu_err_code) || !imu_init_state)
 513:Task/Task_Control.c ****             goto lock_moto;
 514:Task/Task_Control.c **** 
 515:Task/Task_Control.c ****         /* if angular speed over ride then lock the moto and set drone as arm */
 516:Task/Task_Control.c **** 
 517:Task/Task_Control.c ****         // get attitude
 518:Task/Task_Control.c ****         att_update = SrvDataHub.get_attitude(&att_update_time,
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 37


 519:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.pitch,
 520:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.roll,
 521:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.yaw,
 522:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.q0,
 523:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.q1,
 524:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.q2,
 525:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.q3,
 526:Task/Task_Control.c ****                                              &TaskControl_Monitor.flip_over);
 527:Task/Task_Control.c **** 
 528:Task/Task_Control.c ****         TaskControl_disarm_check(arm_state, TaskControl_Monitor.attitude.pitch, TaskControl_Monitor
 529:Task/Task_Control.c **** 
 530:Task/Task_Control.c ****         /* if armed or usb attached then lock moto */
 531:Task/Task_Control.c ****         if (TaskControl_Monitor.moto_unlock != Moto_Unlock)
 532:Task/Task_Control.c ****             goto lock_moto;
 533:Task/Task_Control.c **** 
 534:Task/Task_Control.c ****         if (imu_update_time)
 535:Task/Task_Control.c ****         {
 536:Task/Task_Control.c ****             if (imu_update_time > TaskControl_Monitor.IMU_Rt)
 537:Task/Task_Control.c ****             {
 538:Task/Task_Control.c ****                 TaskControl_Monitor.imu_update_error_cnt = 0;
 539:Task/Task_Control.c ****                 TaskControl_Monitor.IMU_Rt = imu_update_time;
 540:Task/Task_Control.c ****             }
 541:Task/Task_Control.c ****             else if (imu_update_time <= TaskControl_Monitor.IMU_Rt)
 542:Task/Task_Control.c ****             {
 543:Task/Task_Control.c ****                 TaskControl_Monitor.imu_update_error_cnt++;
 544:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 545:Task/Task_Control.c ****                 {
 546:Task/Task_Control.c ****                     TaskControl_Monitor.control_abort = true;
 547:Task/Task_Control.c ****                     goto lock_moto;
 548:Task/Task_Control.c ****                 }
 549:Task/Task_Control.c ****             }
 550:Task/Task_Control.c **** 
 551:Task/Task_Control.c ****             if(imu_err_code != SrvIMU_Sample_NoError)
 552:Task/Task_Control.c ****             {
 553:Task/Task_Control.c ****                 switch(imu_err_code)
 554:Task/Task_Control.c ****                 {
 555:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Acc_Blunt:
 556:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Acc_OverRange:
 557:Task/Task_Control.c ****                         /* still can use gyro loop control quad */
 558:Task/Task_Control.c ****                         /* switch into manul control */
 559:Task/Task_Control.c ****                         break;
 560:Task/Task_Control.c ****                     
 561:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Gyr_Blunt:
 562:Task/Task_Control.c ****                     case SrvIMU_Sample_Data_Gyr_OverRange:
 563:Task/Task_Control.c ****                         /* totally waste */
 564:Task/Task_Control.c ****                         /* bye drone see u in another world */
 565:Task/Task_Control.c ****                         TaskControl_Monitor.control_abort = true;
 566:Task/Task_Control.c ****                         goto lock_moto;
 567:Task/Task_Control.c ****                         break;
 568:Task/Task_Control.c **** 
 569:Task/Task_Control.c ****                     case SrvIMU_Sample_Module_UnReady:
 570:Task/Task_Control.c ****                         TaskControl_Monitor.imu_none_update_cnt++;
 571:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 572:Task/Task_Control.c ****                         {
 573:Task/Task_Control.c ****                             TaskControl_Monitor.control_abort = true;
 574:Task/Task_Control.c ****                             goto lock_moto;
 575:Task/Task_Control.c ****                         }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 38


 576:Task/Task_Control.c ****                         else
 577:Task/Task_Control.c ****                         {
 578:Task/Task_Control.c ****                             /* use last time sample imu data for control */
 579:Task/Task_Control.c ****                             for(axis = Axis_X; axis < Axis_Sum; axis++)
 580:Task/Task_Control.c ****                             {
 581:Task/Task_Control.c ****                                 TaskControl_Monitor.acc[axis] = TaskControl_Monitor.acc_lst[axis];
 582:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 583:Task/Task_Control.c ****                             }
 584:Task/Task_Control.c ****                         }
 585:Task/Task_Control.c ****                         break;
 586:Task/Task_Control.c **** 
 587:Task/Task_Control.c ****                     case SrvIMU_Sample_Over_Angular_Accelerate:
 588:Task/Task_Control.c ****                         if(TaskControl_Monitor.angular_warning_cnt < OVER_ANGULAR_ACCELERATE_COUNT)
 589:Task/Task_Control.c ****                         {
 590:Task/Task_Control.c ****                             TaskControl_Monitor.angular_warning_cnt++;
 591:Task/Task_Control.c **** 
 592:Task/Task_Control.c ****                             for(axis = Axis_X; axis < Axis_Sum; axis++)
 593:Task/Task_Control.c ****                             {
 594:Task/Task_Control.c ****                                 TaskControl_Monitor.acc[axis] = TaskControl_Monitor.acc_lst[axis];
 595:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 596:Task/Task_Control.c ****                             }
 597:Task/Task_Control.c ****                         }
 598:Task/Task_Control.c ****                         else
 599:Task/Task_Control.c ****                             TaskControl_Monitor.angular_protect = true;
 600:Task/Task_Control.c ****                         break;
 601:Task/Task_Control.c ****                 }
 602:Task/Task_Control.c ****             }
 603:Task/Task_Control.c ****             else
 604:Task/Task_Control.c ****                 TaskControl_Monitor.imu_none_update_cnt = 0;
 605:Task/Task_Control.c ****         }
 606:Task/Task_Control.c ****         else
 607:Task/Task_Control.c ****         {
 608:Task/Task_Control.c ****             /* check keep time to abort drone control */
 609:Task/Task_Control.c ****             TaskControl_Monitor.imu_none_update_cnt ++;
 610:Task/Task_Control.c **** 
 611:Task/Task_Control.c ****             if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 612:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 613:Task/Task_Control.c **** 
 614:Task/Task_Control.c ****             goto lock_moto;
 615:Task/Task_Control.c ****         }
 616:Task/Task_Control.c ****         
 617:Task/Task_Control.c ****         if(TaskControl_Monitor.angular_protect_enable && TaskControl_Monitor.angular_protect)
 618:Task/Task_Control.c ****             goto lock_moto;
 619:Task/Task_Control.c **** 
 620:Task/Task_Control.c ****         if(TaskControl_Monitor.flip_over)
 621:Task/Task_Control.c ****         {
 622:Task/Task_Control.c ****             if (!exp_ctl_val->aux.bit.flip_over)
 623:Task/Task_Control.c ****                 goto lock_moto;
 624:Task/Task_Control.c **** 
 625:Task/Task_Control.c ****             /* when drone is up side down and we want to flip over it by telemetry */
 626:Task/Task_Control.c ****             /* reverse propeller spin dir to reverse the drone */
 627:Task/Task_Control.c ****         }
 628:Task/Task_Control.c ****         else
 629:Task/Task_Control.c ****         {
 630:Task/Task_Control.c ****             /* do drone control algorithm down below */
 631:Task/Task_Control.c ****             TaskControl_Monitor.throttle_percent = exp_ctl_val->throttle_percent;
 632:Task/Task_Control.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 39


 633:Task/Task_Control.c ****             /* Update PID */
 634:Task/Task_Control.c ****             if(exp_ctl_val->control_mode == Attitude_Control)
 635:Task/Task_Control.c ****             {
 636:Task/Task_Control.c ****                 /* attitude mode */
 637:Task/Task_Control.c ****                 /* set expection attitude */
 638:Task/Task_Control.c ****                 TaskControl_Monitor.RollCtl_PIDObj.exp = TaskControl_Monitor.exp_roll;
 639:Task/Task_Control.c ****                 TaskControl_Monitor.PitchCtl_PIDObj.exp = TaskControl_Monitor.exp_pitch;
 640:Task/Task_Control.c ****                 TaskControl_AttitudeRing_PID_Update(&TaskControl_Monitor);
 641:Task/Task_Control.c ****                 
 642:Task/Task_Control.c ****                 TaskControl_Monitor.GyrXCtl_PIDObj.exp = TaskControl_Monitor.RollCtl_PIDObj.fout;
 643:Task/Task_Control.c ****                 TaskControl_Monitor.GyrYCtl_PIDObj.exp = TaskControl_Monitor.PitchCtl_PIDObj.fout;
 644:Task/Task_Control.c ****                 TaskControl_Monitor.exp_gyr_x = TaskControl_Monitor.RollCtl_PIDObj.fout;
 645:Task/Task_Control.c ****                 TaskControl_Monitor.exp_gyr_y = TaskControl_Monitor.PitchCtl_PIDObj.fout;
 646:Task/Task_Control.c ****             }
 647:Task/Task_Control.c ****             else
 648:Task/Task_Control.c ****             {
 649:Task/Task_Control.c ****                 /* angular speed mode */
 650:Task/Task_Control.c ****                 TaskControl_Monitor.GyrXCtl_PIDObj.exp = TaskControl_Monitor.exp_gyr_x;
 651:Task/Task_Control.c ****                 TaskControl_Monitor.GyrYCtl_PIDObj.exp = TaskControl_Monitor.exp_gyr_y;
 652:Task/Task_Control.c ****             }
 653:Task/Task_Control.c **** 
 654:Task/Task_Control.c ****             TaskControl_Monitor.GyrZCtl_PIDObj.exp = TaskControl_Monitor.exp_gyr_z;
 655:Task/Task_Control.c ****             TaskControl_AngularSpeedRing_PID_Update(&TaskControl_Monitor);
 656:Task/Task_Control.c **** 
 657:Task/Task_Control.c ****             TaskControl_Actuator_ControlValue_Update(&TaskControl_Monitor);
 658:Task/Task_Control.c **** 
 659:Task/Task_Control.c ****             if(imu_err_code == SrvIMU_Sample_NoError)
 660:Task/Task_Control.c ****             {
 661:Task/Task_Control.c ****                 for(axis = Axis_X; axis < Axis_Sum; axis ++)
 662:Task/Task_Control.c ****                 {
 663:Task/Task_Control.c ****                     TaskControl_Monitor.acc_lst[axis] = TaskControl_Monitor.acc[axis];
 664:Task/Task_Control.c ****                     TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 665:Task/Task_Control.c ****                 }
 666:Task/Task_Control.c ****             }
 667:Task/Task_Control.c ****         
 668:Task/Task_Control.c ****             return;
 669:Task/Task_Control.c ****         }
 670:Task/Task_Control.c ****     }
 671:Task/Task_Control.c **** 
 672:Task/Task_Control.c **** lock_moto:
 673:Task/Task_Control.c ****     SrvActuator.lock();
 674:Task/Task_Control.c **** }
 675:Task/Task_Control.c **** 
 676:Task/Task_Control.c **** static TaskControl_FlightParam_TypeDef TaskControl_Get_InuseParam(void)
 677:Task/Task_Control.c **** {
 1326              		.loc 1 677 1 is_stmt 1 view -0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 200
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              		.loc 1 677 1 is_stmt 0 view .LVU409
 1331 0000 30B5     		push	{r4, r5, lr}
 1332              	.LCFI16:
 1333              		.cfi_def_cfa_offset 12
 1334              		.cfi_offset 4, -12
 1335              		.cfi_offset 5, -8
 1336              		.cfi_offset 14, -4
 1337 0002 B3B0     		sub	sp, sp, #204
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 40


 1338              	.LCFI17:
 1339              		.cfi_def_cfa_offset 216
 1340 0004 0446     		mov	r4, r0
 678:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef Param;
 1341              		.loc 1 678 5 is_stmt 1 view .LVU410
 679:Task/Task_Control.c **** 
 680:Task/Task_Control.c ****     memset(&Param, 0, sizeof(TaskControl_FlightParam_TypeDef));
 1342              		.loc 1 680 5 view .LVU411
 1343 0006 C825     		movs	r5, #200
 1344 0008 2A46     		mov	r2, r5
 1345 000a 0021     		movs	r1, #0
 1346 000c 6846     		mov	r0, sp
 1347              	.LVL111:
 1348              		.loc 1 680 5 is_stmt 0 view .LVU412
 1349 000e FFF7FEFF 		bl	memset
 1350              	.LVL112:
 681:Task/Task_Control.c **** 
 682:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP = TaskControl_Monitor.PitchCtl_PIDObj.gP;
 1351              		.loc 1 682 5 is_stmt 1 view .LVU413
 1352              		.loc 1 682 68 is_stmt 0 view .LVU414
 1353 0012 374B     		ldr	r3, .L85
 1354 0014 D3F83822 		ldr	r2, [r3, #568]	@ float
 1355              		.loc 1 682 31 view .LVU415
 1356 0018 0F92     		str	r2, [sp, #60]	@ float
 683:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP_Diff_Max = TaskControl_Monitor.PitchCtl_PIDObj.diff_max;
 1357              		.loc 1 683 5 is_stmt 1 view .LVU416
 1358              		.loc 1 683 77 is_stmt 0 view .LVU417
 1359 001a D3F82C22 		ldr	r2, [r3, #556]	@ float
 1360              		.loc 1 683 40 view .LVU418
 1361 001e 1092     		str	r2, [sp, #64]	@ float
 684:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gP_Diff_Min = TaskControl_Monitor.PitchCtl_PIDObj.diff_min;
 1362              		.loc 1 684 5 is_stmt 1 view .LVU419
 1363              		.loc 1 684 77 is_stmt 0 view .LVU420
 1364 0020 D3F83022 		ldr	r2, [r3, #560]	@ float
 1365              		.loc 1 684 40 view .LVU421
 1366 0024 1192     		str	r2, [sp, #68]	@ float
 685:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI = TaskControl_Monitor.PitchCtl_PIDObj.gI;
 1367              		.loc 1 685 5 is_stmt 1 view .LVU422
 1368              		.loc 1 685 68 is_stmt 0 view .LVU423
 1369 0026 D3F84022 		ldr	r2, [r3, #576]	@ float
 1370              		.loc 1 685 31 view .LVU424
 1371 002a 1292     		str	r2, [sp, #72]	@ float
 686:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI_Max = TaskControl_Monitor.PitchCtl_PIDObj.gI_Max;
 1372              		.loc 1 686 5 is_stmt 1 view .LVU425
 1373              		.loc 1 686 72 is_stmt 0 view .LVU426
 1374 002c D3F84822 		ldr	r2, [r3, #584]	@ float
 1375              		.loc 1 686 35 view .LVU427
 1376 0030 1392     		str	r2, [sp, #76]	@ float
 687:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gI_Min = TaskControl_Monitor.PitchCtl_PIDObj.gI_Min;
 1377              		.loc 1 687 5 is_stmt 1 view .LVU428
 1378              		.loc 1 687 72 is_stmt 0 view .LVU429
 1379 0032 D3F84422 		ldr	r2, [r3, #580]	@ float
 1380              		.loc 1 687 35 view .LVU430
 1381 0036 1492     		str	r2, [sp, #80]	@ float
 688:Task/Task_Control.c ****     Param.Outer.Pitch_Para.gD = TaskControl_Monitor.PitchCtl_PIDObj.gD;
 1382              		.loc 1 688 5 is_stmt 1 view .LVU431
 1383              		.loc 1 688 68 is_stmt 0 view .LVU432
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 41


 1384 0038 D3F85422 		ldr	r2, [r3, #596]	@ float
 1385              		.loc 1 688 31 view .LVU433
 1386 003c 1592     		str	r2, [sp, #84]	@ float
 689:Task/Task_Control.c ****     
 690:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP = TaskControl_Monitor.RollCtl_PIDObj.gP;
 1387              		.loc 1 690 5 is_stmt 1 view .LVU434
 1388              		.loc 1 690 66 is_stmt 0 view .LVU435
 1389 003e D3F8F821 		ldr	r2, [r3, #504]	@ float
 1390              		.loc 1 690 30 view .LVU436
 1391 0042 1692     		str	r2, [sp, #88]	@ float
 691:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP_Diff_Max = TaskControl_Monitor.RollCtl_PIDObj.diff_max;
 1392              		.loc 1 691 5 is_stmt 1 view .LVU437
 1393              		.loc 1 691 75 is_stmt 0 view .LVU438
 1394 0044 D3F8EC21 		ldr	r2, [r3, #492]	@ float
 1395              		.loc 1 691 39 view .LVU439
 1396 0048 1792     		str	r2, [sp, #92]	@ float
 692:Task/Task_Control.c ****     Param.Outer.Roll_Para.gP_Diff_Min = TaskControl_Monitor.RollCtl_PIDObj.diff_min;
 1397              		.loc 1 692 5 is_stmt 1 view .LVU440
 1398              		.loc 1 692 75 is_stmt 0 view .LVU441
 1399 004a D3F8F021 		ldr	r2, [r3, #496]	@ float
 1400              		.loc 1 692 39 view .LVU442
 1401 004e 1892     		str	r2, [sp, #96]	@ float
 693:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI = TaskControl_Monitor.RollCtl_PIDObj.gI;
 1402              		.loc 1 693 5 is_stmt 1 view .LVU443
 1403              		.loc 1 693 66 is_stmt 0 view .LVU444
 1404 0050 D3F80022 		ldr	r2, [r3, #512]	@ float
 1405              		.loc 1 693 30 view .LVU445
 1406 0054 1992     		str	r2, [sp, #100]	@ float
 694:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI_Max = TaskControl_Monitor.RollCtl_PIDObj.gI_Max;
 1407              		.loc 1 694 5 is_stmt 1 view .LVU446
 1408              		.loc 1 694 70 is_stmt 0 view .LVU447
 1409 0056 D3F80822 		ldr	r2, [r3, #520]	@ float
 1410              		.loc 1 694 34 view .LVU448
 1411 005a 1A92     		str	r2, [sp, #104]	@ float
 695:Task/Task_Control.c ****     Param.Outer.Roll_Para.gI_Min = TaskControl_Monitor.RollCtl_PIDObj.gI_Min;
 1412              		.loc 1 695 5 is_stmt 1 view .LVU449
 1413              		.loc 1 695 70 is_stmt 0 view .LVU450
 1414 005c D3F80422 		ldr	r2, [r3, #516]	@ float
 1415              		.loc 1 695 34 view .LVU451
 1416 0060 1B92     		str	r2, [sp, #108]	@ float
 696:Task/Task_Control.c ****     Param.Outer.Roll_Para.gD = TaskControl_Monitor.RollCtl_PIDObj.gD;
 1417              		.loc 1 696 5 is_stmt 1 view .LVU452
 1418              		.loc 1 696 66 is_stmt 0 view .LVU453
 1419 0062 D3F81422 		ldr	r2, [r3, #532]	@ float
 1420              		.loc 1 696 30 view .LVU454
 1421 0066 1C92     		str	r2, [sp, #112]	@ float
 697:Task/Task_Control.c **** 
 698:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP = TaskControl_Monitor.GyrXCtl_PIDObj.gP;
 1422              		.loc 1 698 5 is_stmt 1 view .LVU455
 1423              		.loc 1 698 67 is_stmt 0 view .LVU456
 1424 0068 D3F87822 		ldr	r2, [r3, #632]	@ float
 1425              		.loc 1 698 31 view .LVU457
 1426 006c 1D92     		str	r2, [sp, #116]	@ float
 699:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP_Diff_Max = TaskControl_Monitor.GyrXCtl_PIDObj.diff_max;
 1427              		.loc 1 699 5 is_stmt 1 view .LVU458
 1428              		.loc 1 699 76 is_stmt 0 view .LVU459
 1429 006e D3F86C12 		ldr	r1, [r3, #620]	@ float
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 42


 1430              		.loc 1 699 40 view .LVU460
 1431 0072 1E91     		str	r1, [sp, #120]	@ float
 700:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gP_Diff_Min = TaskControl_Monitor.GyrXCtl_PIDObj.diff_min;
 1432              		.loc 1 700 5 is_stmt 1 view .LVU461
 1433              		.loc 1 700 76 is_stmt 0 view .LVU462
 1434 0074 D3F87022 		ldr	r2, [r3, #624]	@ float
 1435              		.loc 1 700 40 view .LVU463
 1436 0078 1F92     		str	r2, [sp, #124]	@ float
 701:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI = TaskControl_Monitor.GyrXCtl_PIDObj.gI;
 1437              		.loc 1 701 5 is_stmt 1 view .LVU464
 1438              		.loc 1 701 67 is_stmt 0 view .LVU465
 1439 007a D3F88002 		ldr	r0, [r3, #640]	@ float
 1440              		.loc 1 701 31 view .LVU466
 1441 007e 2090     		str	r0, [sp, #128]	@ float
 702:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI_Max = TaskControl_Monitor.GyrXCtl_PIDObj.gI_Max;
 1442              		.loc 1 702 5 is_stmt 1 view .LVU467
 1443              		.loc 1 702 71 is_stmt 0 view .LVU468
 1444 0080 D3F88802 		ldr	r0, [r3, #648]	@ float
 1445              		.loc 1 702 35 view .LVU469
 1446 0084 2190     		str	r0, [sp, #132]	@ float
 703:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gI_Min = TaskControl_Monitor.GyrXCtl_PIDObj.gI_Min;
 1447              		.loc 1 703 5 is_stmt 1 view .LVU470
 1448              		.loc 1 703 71 is_stmt 0 view .LVU471
 1449 0086 D3F88402 		ldr	r0, [r3, #644]	@ float
 1450              		.loc 1 703 35 view .LVU472
 1451 008a 2290     		str	r0, [sp, #136]	@ float
 704:Task/Task_Control.c ****     Param.Inner.GyroX_Para.gD = TaskControl_Monitor.GyrXCtl_PIDObj.gD;
 1452              		.loc 1 704 5 is_stmt 1 view .LVU473
 1453              		.loc 1 704 67 is_stmt 0 view .LVU474
 1454 008c D3F89402 		ldr	r0, [r3, #660]	@ float
 1455              		.loc 1 704 31 view .LVU475
 1456 0090 2390     		str	r0, [sp, #140]	@ float
 705:Task/Task_Control.c ****     
 706:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP = TaskControl_Monitor.GyrYCtl_PIDObj.gP;
 1457              		.loc 1 706 5 is_stmt 1 view .LVU476
 1458              		.loc 1 706 67 is_stmt 0 view .LVU477
 1459 0092 D3F8B802 		ldr	r0, [r3, #696]	@ float
 1460              		.loc 1 706 31 view .LVU478
 1461 0096 2490     		str	r0, [sp, #144]	@ float
 707:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP_Diff_Max = TaskControl_Monitor.GyrYCtl_PIDObj.diff_max;
 1462              		.loc 1 707 5 is_stmt 1 view .LVU479
 1463              		.loc 1 707 76 is_stmt 0 view .LVU480
 1464 0098 D3F8AC02 		ldr	r0, [r3, #684]	@ float
 1465              		.loc 1 707 40 view .LVU481
 1466 009c 2590     		str	r0, [sp, #148]	@ float
 708:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gP_Diff_Min = TaskControl_Monitor.GyrYCtl_PIDObj.diff_min;
 1467              		.loc 1 708 5 is_stmt 1 view .LVU482
 1468              		.loc 1 708 76 is_stmt 0 view .LVU483
 1469 009e D3F8B002 		ldr	r0, [r3, #688]	@ float
 1470              		.loc 1 708 40 view .LVU484
 1471 00a2 2690     		str	r0, [sp, #152]	@ float
 709:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI = TaskControl_Monitor.GyrYCtl_PIDObj.gI;
 1472              		.loc 1 709 5 is_stmt 1 view .LVU485
 1473              		.loc 1 709 67 is_stmt 0 view .LVU486
 1474 00a4 D3F8C002 		ldr	r0, [r3, #704]	@ float
 1475              		.loc 1 709 31 view .LVU487
 1476 00a8 2790     		str	r0, [sp, #156]	@ float
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 43


 710:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI_Max = TaskControl_Monitor.GyrYCtl_PIDObj.gI_Max;
 1477              		.loc 1 710 5 is_stmt 1 view .LVU488
 1478              		.loc 1 710 71 is_stmt 0 view .LVU489
 1479 00aa D3F8C802 		ldr	r0, [r3, #712]	@ float
 1480              		.loc 1 710 35 view .LVU490
 1481 00ae 2890     		str	r0, [sp, #160]	@ float
 711:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gI_Min = TaskControl_Monitor.GyrYCtl_PIDObj.gI_Min;
 1482              		.loc 1 711 5 is_stmt 1 view .LVU491
 1483              		.loc 1 711 71 is_stmt 0 view .LVU492
 1484 00b0 D3F8C402 		ldr	r0, [r3, #708]	@ float
 1485              		.loc 1 711 35 view .LVU493
 1486 00b4 2990     		str	r0, [sp, #164]	@ float
 712:Task/Task_Control.c ****     Param.Inner.GyroY_Para.gD = TaskControl_Monitor.GyrYCtl_PIDObj.gD;
 1487              		.loc 1 712 5 is_stmt 1 view .LVU494
 1488              		.loc 1 712 67 is_stmt 0 view .LVU495
 1489 00b6 D3F8D402 		ldr	r0, [r3, #724]	@ float
 1490              		.loc 1 712 31 view .LVU496
 1491 00ba 2A90     		str	r0, [sp, #168]	@ float
 713:Task/Task_Control.c **** 
 714:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP = TaskControl_Monitor.GyrZCtl_PIDObj.gP;
 1492              		.loc 1 714 5 is_stmt 1 view .LVU497
 1493              		.loc 1 714 67 is_stmt 0 view .LVU498
 1494 00bc D3F8F802 		ldr	r0, [r3, #760]	@ float
 1495              		.loc 1 714 31 view .LVU499
 1496 00c0 2B90     		str	r0, [sp, #172]	@ float
 715:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP_Diff_Max = TaskControl_Monitor.GyrXCtl_PIDObj.diff_max;
 1497              		.loc 1 715 5 is_stmt 1 view .LVU500
 1498              		.loc 1 715 40 is_stmt 0 view .LVU501
 1499 00c2 2C91     		str	r1, [sp, #176]	@ float
 716:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gP_Diff_Min = TaskControl_Monitor.GyrXCtl_PIDObj.diff_min;
 1500              		.loc 1 716 5 is_stmt 1 view .LVU502
 1501              		.loc 1 716 40 is_stmt 0 view .LVU503
 1502 00c4 2D92     		str	r2, [sp, #180]	@ float
 717:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI = TaskControl_Monitor.GyrZCtl_PIDObj.gI;
 1503              		.loc 1 717 5 is_stmt 1 view .LVU504
 1504              		.loc 1 717 67 is_stmt 0 view .LVU505
 1505 00c6 D3F80023 		ldr	r2, [r3, #768]	@ float
 1506              		.loc 1 717 31 view .LVU506
 1507 00ca 2E92     		str	r2, [sp, #184]	@ float
 718:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI_Max = TaskControl_Monitor.GyrZCtl_PIDObj.gI_Max;
 1508              		.loc 1 718 5 is_stmt 1 view .LVU507
 1509              		.loc 1 718 71 is_stmt 0 view .LVU508
 1510 00cc D3F80823 		ldr	r2, [r3, #776]	@ float
 1511              		.loc 1 718 35 view .LVU509
 1512 00d0 2F92     		str	r2, [sp, #188]	@ float
 719:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gI_Min = TaskControl_Monitor.GyrZCtl_PIDObj.gI_Min;
 1513              		.loc 1 719 5 is_stmt 1 view .LVU510
 1514              		.loc 1 719 71 is_stmt 0 view .LVU511
 1515 00d2 D3F80423 		ldr	r2, [r3, #772]	@ float
 1516              		.loc 1 719 35 view .LVU512
 1517 00d6 3092     		str	r2, [sp, #192]	@ float
 720:Task/Task_Control.c ****     Param.Inner.GyroZ_Para.gD = TaskControl_Monitor.GyrZCtl_PIDObj.gD;
 1518              		.loc 1 720 5 is_stmt 1 view .LVU513
 1519              		.loc 1 720 67 is_stmt 0 view .LVU514
 1520 00d8 D3F81433 		ldr	r3, [r3, #788]	@ float
 1521              		.loc 1 720 31 view .LVU515
 1522 00dc 3193     		str	r3, [sp, #196]	@ float
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 44


 721:Task/Task_Control.c **** 
 722:Task/Task_Control.c ****     return Param;
 1523              		.loc 1 722 5 is_stmt 1 view .LVU516
 1524              		.loc 1 722 12 is_stmt 0 view .LVU517
 1525 00de 2A46     		mov	r2, r5
 1526 00e0 6946     		mov	r1, sp
 1527 00e2 2046     		mov	r0, r4
 1528 00e4 FFF7FEFF 		bl	memcpy
 1529              	.LVL113:
 723:Task/Task_Control.c **** }
 1530              		.loc 1 723 1 view .LVU518
 1531 00e8 2046     		mov	r0, r4
 1532 00ea 33B0     		add	sp, sp, #204
 1533              	.LCFI18:
 1534              		.cfi_def_cfa_offset 12
 1535              		@ sp needed
 1536 00ec 30BD     		pop	{r4, r5, pc}
 1537              	.LVL114:
 1538              	.L86:
 1539              		.loc 1 723 1 view .LVU519
 1540 00ee 00BF     		.align	2
 1541              	.L85:
 1542 00f0 00000000 		.word	.LANCHOR0
 1543              		.cfi_endproc
 1544              	.LFE2082:
 1546              		.section	.text.TaskControl_AttitudeRing_PID_Update,"ax",%progbits
 1547              		.align	1
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1552              	TaskControl_AttitudeRing_PID_Update:
 1553              	.LVL115:
 1554              	.LFB2077:
 335:Task/Task_Control.c ****     if(monitor)
 1555              		.loc 1 335 1 is_stmt 1 view -0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 336:Task/Task_Control.c ****     {
 1559              		.loc 1 336 5 view .LVU521
 336:Task/Task_Control.c ****     {
 1560              		.loc 1 336 7 is_stmt 0 view .LVU522
 1561 0000 08B9     		cbnz	r0, .L94
 347:Task/Task_Control.c **** }
 1562              		.loc 1 347 12 view .LVU523
 1563 0002 0020     		movs	r0, #0
 1564              	.LVL116:
 348:Task/Task_Control.c **** 
 1565              		.loc 1 348 1 view .LVU524
 1566 0004 7047     		bx	lr
 1567              	.LVL117:
 1568              	.L94:
 335:Task/Task_Control.c ****     if(monitor)
 1569              		.loc 1 335 1 view .LVU525
 1570 0006 10B5     		push	{r4, lr}
 1571              	.LCFI19:
 1572              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 45


 1573              		.cfi_offset 4, -8
 1574              		.cfi_offset 14, -4
 1575 0008 0446     		mov	r4, r0
 339:Task/Task_Control.c **** 
 1576              		.loc 1 339 9 is_stmt 1 view .LVU526
 1577 000a D0ED6B0A 		vldr.32	s1, [r0, #428]
 1578 000e 90ED6E0A 		vldr.32	s0, [r0, #440]
 1579 0012 00F50970 		add	r0, r0, #548
 1580              	.LVL118:
 339:Task/Task_Control.c **** 
 1581              		.loc 1 339 9 is_stmt 0 view .LVU527
 1582 0016 FFF7FEFF 		bl	PID_Update
 1583              	.LVL119:
 342:Task/Task_Control.c **** 
 1584              		.loc 1 342 9 is_stmt 1 view .LVU528
 1585 001a D4ED6C0A 		vldr.32	s1, [r4, #432]
 1586 001e 94ED6F0A 		vldr.32	s0, [r4, #444]
 1587 0022 04F5F270 		add	r0, r4, #484
 1588 0026 FFF7FEFF 		bl	PID_Update
 1589              	.LVL120:
 344:Task/Task_Control.c ****     }
 1590              		.loc 1 344 9 view .LVU529
 344:Task/Task_Control.c ****     }
 1591              		.loc 1 344 16 is_stmt 0 view .LVU530
 1592 002a 0120     		movs	r0, #1
 348:Task/Task_Control.c **** 
 1593              		.loc 1 348 1 view .LVU531
 1594 002c 10BD     		pop	{r4, pc}
 348:Task/Task_Control.c **** 
 1595              		.loc 1 348 1 view .LVU532
 1596              		.cfi_endproc
 1597              	.LFE2077:
 1599              		.section	.text.TaskControl_AngularSpeedRing_PID_Update,"ax",%progbits
 1600              		.align	1
 1601              		.syntax unified
 1602              		.thumb
 1603              		.thumb_func
 1605              	TaskControl_AngularSpeedRing_PID_Update:
 1606              	.LVL121:
 1607              	.LFB2078:
 351:Task/Task_Control.c ****     if(monitor)
 1608              		.loc 1 351 1 is_stmt 1 view -0
 1609              		.cfi_startproc
 1610              		@ args = 0, pretend = 0, frame = 0
 1611              		@ frame_needed = 0, uses_anonymous_args = 0
 352:Task/Task_Control.c ****     {
 1612              		.loc 1 352 5 view .LVU534
 352:Task/Task_Control.c ****     {
 1613              		.loc 1 352 7 is_stmt 0 view .LVU535
 1614 0000 08B9     		cbnz	r0, .L102
 366:Task/Task_Control.c **** }
 1615              		.loc 1 366 12 view .LVU536
 1616 0002 0020     		movs	r0, #0
 1617              	.LVL122:
 367:Task/Task_Control.c **** 
 1618              		.loc 1 367 1 view .LVU537
 1619 0004 7047     		bx	lr
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 46


 1620              	.LVL123:
 1621              	.L102:
 351:Task/Task_Control.c ****     if(monitor)
 1622              		.loc 1 351 1 view .LVU538
 1623 0006 10B5     		push	{r4, lr}
 1624              	.LCFI20:
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 4, -8
 1627              		.cfi_offset 14, -4
 1628 0008 0446     		mov	r4, r0
 355:Task/Task_Control.c **** 
 1629              		.loc 1 355 9 is_stmt 1 view .LVU539
 1630 000a D0ED9A0A 		vldr.32	s1, [r0, #616]
 1631 000e 90ED5E0A 		vldr.32	s0, [r0, #376]
 1632 0012 00F51970 		add	r0, r0, #612
 1633              	.LVL124:
 355:Task/Task_Control.c **** 
 1634              		.loc 1 355 9 is_stmt 0 view .LVU540
 1635 0016 FFF7FEFF 		bl	PID_Update
 1636              	.LVL125:
 358:Task/Task_Control.c **** 
 1637              		.loc 1 358 9 is_stmt 1 view .LVU541
 1638 001a D4EDAA0A 		vldr.32	s1, [r4, #680]
 1639 001e 94ED5F0A 		vldr.32	s0, [r4, #380]
 1640 0022 04F52970 		add	r0, r4, #676
 1641 0026 FFF7FEFF 		bl	PID_Update
 1642              	.LVL126:
 361:Task/Task_Control.c **** 
 1643              		.loc 1 361 9 view .LVU542
 1644 002a D4EDBA0A 		vldr.32	s1, [r4, #744]
 1645 002e 94ED600A 		vldr.32	s0, [r4, #384]
 1646 0032 04F53970 		add	r0, r4, #740
 1647 0036 FFF7FEFF 		bl	PID_Update
 1648              	.LVL127:
 363:Task/Task_Control.c ****     }
 1649              		.loc 1 363 9 view .LVU543
 363:Task/Task_Control.c ****     }
 1650              		.loc 1 363 16 is_stmt 0 view .LVU544
 1651 003a 0120     		movs	r0, #1
 367:Task/Task_Control.c **** 
 1652              		.loc 1 367 1 view .LVU545
 1653 003c 10BD     		pop	{r4, pc}
 367:Task/Task_Control.c **** 
 1654              		.loc 1 367 1 view .LVU546
 1655              		.cfi_endproc
 1656              	.LFE2078:
 1658              		.section	.text.TaskControl_FlightControl_Polling,"ax",%progbits
 1659              		.align	1
 1660              		.syntax unified
 1661              		.thumb
 1662              		.thumb_func
 1664              	TaskControl_FlightControl_Polling:
 1665              	.LVL128:
 1666              	.LFB2081:
 478:Task/Task_Control.c ****     uint8_t axis = Axis_X;
 1667              		.loc 1 478 1 is_stmt 1 view -0
 1668              		.cfi_startproc
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 47


 1669              		@ args = 0, pretend = 0, frame = 0
 1670              		@ frame_needed = 0, uses_anonymous_args = 0
 478:Task/Task_Control.c ****     uint8_t axis = Axis_X;
 1671              		.loc 1 478 1 is_stmt 0 view .LVU548
 1672 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1673              	.LCFI21:
 1674              		.cfi_def_cfa_offset 24
 1675              		.cfi_offset 4, -24
 1676              		.cfi_offset 5, -20
 1677              		.cfi_offset 6, -16
 1678              		.cfi_offset 7, -12
 1679              		.cfi_offset 8, -8
 1680              		.cfi_offset 14, -4
 1681 0004 96B0     		sub	sp, sp, #88
 1682              	.LCFI22:
 1683              		.cfi_def_cfa_offset 112
 479:Task/Task_Control.c ****     uint32_t tunning_port = 0;
 1684              		.loc 1 479 5 is_stmt 1 view .LVU549
 1685              	.LVL129:
 480:Task/Task_Control.c ****     bool arm_state = false;
 1686              		.loc 1 480 5 view .LVU550
 481:Task/Task_Control.c **** 
 1687              		.loc 1 481 5 view .LVU551
 483:Task/Task_Control.c ****     {
 1688              		.loc 1 483 5 view .LVU552
 483:Task/Task_Control.c ****     {
 1689              		.loc 1 483 28 is_stmt 0 view .LVU553
 1690 0006 B04B     		ldr	r3, .L132
 1691 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 483:Task/Task_Control.c ****     {
 1692              		.loc 1 483 8 view .LVU554
 1693 000a 002B     		cmp	r3, #0
 1694 000c 00F00E81 		beq	.L104
 1695 0010 0446     		mov	r4, r0
 483:Task/Task_Control.c ****     {
 1696              		.loc 1 483 40 discriminator 1 view .LVU555
 1697 0012 0028     		cmp	r0, #0
 1698 0014 00F00A81 		beq	.L104
 485:Task/Task_Control.c ****         arm_state = exp_ctl_val->arm_state;
 1699              		.loc 1 485 9 is_stmt 1 view .LVU556
 1700 0018 AB4D     		ldr	r5, .L132
 1701 001a 5822     		movs	r2, #88
 1702 001c 00F10C01 		add	r1, r0, #12
 1703 0020 6846     		mov	r0, sp
 1704              	.LVL130:
 485:Task/Task_Control.c ****         arm_state = exp_ctl_val->arm_state;
 1705              		.loc 1 485 9 is_stmt 0 view .LVU557
 1706 0022 FFF7FEFF 		bl	memcpy
 1707              	.LVL131:
 1708 0026 94E80E00 		ldm	r4, {r1, r2, r3}
 1709 002a 2846     		mov	r0, r5
 1710 002c FFF7FEFF 		bl	TaskControl_Convert_CtlData
 1711              	.LVL132:
 486:Task/Task_Control.c ****         failsafe = exp_ctl_val->fail_safe;
 1712              		.loc 1 486 9 is_stmt 1 view .LVU558
 486:Task/Task_Control.c ****         failsafe = exp_ctl_val->fail_safe;
 1713              		.loc 1 486 19 is_stmt 0 view .LVU559
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 48


 1714 0030 94F85E80 		ldrb	r8, [r4, #94]	@ zero_extendqisi2
 1715              	.LVL133:
 487:Task/Task_Control.c ****         TaskControl_Monitor.control_abort = false;
 1716              		.loc 1 487 9 is_stmt 1 view .LVU560
 487:Task/Task_Control.c ****         TaskControl_Monitor.control_abort = false;
 1717              		.loc 1 487 31 is_stmt 0 view .LVU561
 1718 0034 94F85F20 		ldrb	r2, [r4, #95]	@ zero_extendqisi2
 487:Task/Task_Control.c ****         TaskControl_Monitor.control_abort = false;
 1719              		.loc 1 487 18 view .LVU562
 1720 0038 A44B     		ldr	r3, .L132+4
 1721 003a 1A70     		strb	r2, [r3]
 488:Task/Task_Control.c **** 
 1722              		.loc 1 488 9 is_stmt 1 view .LVU563
 488:Task/Task_Control.c **** 
 1723              		.loc 1 488 43 is_stmt 0 view .LVU564
 1724 003c 0026     		movs	r6, #0
 1725 003e 6E70     		strb	r6, [r5, #1]
 491:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).failsafe = failsafe;
 1726              		.loc 1 491 9 is_stmt 1 view .LVU565
 491:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).failsafe = failsafe;
 1727              		.loc 1 491 38 is_stmt 0 view .LVU566
 1728 0040 A34B     		ldr	r3, .L132+8
 1729 0042 83F80480 		strb	r8, [r3, #4]
 492:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).throttle_percent = exp_ctl_val->throttle_percent;
 1730              		.loc 1 492 9 is_stmt 1 view .LVU567
 492:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).throttle_percent = exp_ctl_val->throttle_percent;
 1731              		.loc 1 492 43 is_stmt 0 view .LVU568
 1732 0046 5A71     		strb	r2, [r3, #5]
 493:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).control_mode = exp_ctl_val->control_mode;
 1733              		.loc 1 493 9 is_stmt 1 view .LVU569
 493:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).control_mode = exp_ctl_val->control_mode;
 1734              		.loc 1 493 64 is_stmt 0 view .LVU570
 1735 0048 94F84E20 		ldrb	r2, [r4, #78]	@ zero_extendqisi2
 493:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).control_mode = exp_ctl_val->control_mode;
 1736              		.loc 1 493 51 view .LVU571
 1737 004c DA71     		strb	r2, [r3, #7]
 494:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).pitch = TaskControl_Monitor.exp_pitch;
 1738              		.loc 1 494 9 is_stmt 1 view .LVU572
 494:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).pitch = TaskControl_Monitor.exp_pitch;
 1739              		.loc 1 494 60 is_stmt 0 view .LVU573
 1740 004e 94F85820 		ldrb	r2, [r4, #88]	@ zero_extendqisi2
 494:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).pitch = TaskControl_Monitor.exp_pitch;
 1741              		.loc 1 494 47 view .LVU574
 1742 0052 9A71     		strb	r2, [r3, #6]
 495:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).roll = TaskControl_Monitor.exp_roll;
 1743              		.loc 1 495 9 is_stmt 1 view .LVU575
 495:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).roll = TaskControl_Monitor.exp_roll;
 1744              		.loc 1 495 61 is_stmt 0 view .LVU576
 1745 0054 D5F8AC21 		ldr	r2, [r5, #428]	@ float
 495:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).roll = TaskControl_Monitor.exp_roll;
 1746              		.loc 1 495 40 view .LVU577
 1747 0058 9A60     		str	r2, [r3, #8]	@ float
 496:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_x = TaskControl_Monitor.exp_gyr_x;
 1748              		.loc 1 496 9 is_stmt 1 view .LVU578
 496:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_x = TaskControl_Monitor.exp_gyr_x;
 1749              		.loc 1 496 60 is_stmt 0 view .LVU579
 1750 005a D5F8B021 		ldr	r2, [r5, #432]	@ float
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 49


 496:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_x = TaskControl_Monitor.exp_gyr_x;
 1751              		.loc 1 496 39 view .LVU580
 1752 005e DA60     		str	r2, [r3, #12]	@ float
 497:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_y = TaskControl_Monitor.exp_gyr_y;
 1753              		.loc 1 497 9 is_stmt 1 view .LVU581
 497:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_y = TaskControl_Monitor.exp_gyr_y;
 1754              		.loc 1 497 61 is_stmt 0 view .LVU582
 1755 0060 D5F8A021 		ldr	r2, [r5, #416]	@ float
 497:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_y = TaskControl_Monitor.exp_gyr_y;
 1756              		.loc 1 497 40 view .LVU583
 1757 0064 1A61     		str	r2, [r3, #16]	@ float
 498:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_z = TaskControl_Monitor.exp_gyr_z;
 1758              		.loc 1 498 9 is_stmt 1 view .LVU584
 498:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_z = TaskControl_Monitor.exp_gyr_z;
 1759              		.loc 1 498 61 is_stmt 0 view .LVU585
 1760 0066 D5F8A421 		ldr	r2, [r5, #420]	@ float
 498:Task/Task_Control.c ****         DataPipe_DataObj(ExpCtl).gyr_z = TaskControl_Monitor.exp_gyr_z;
 1761              		.loc 1 498 40 view .LVU586
 1762 006a 5A61     		str	r2, [r3, #20]	@ float
 499:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_hub_DataPipe);
 1763              		.loc 1 499 9 is_stmt 1 view .LVU587
 499:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_hub_DataPipe);
 1764              		.loc 1 499 61 is_stmt 0 view .LVU588
 1765 006c D5F8A821 		ldr	r2, [r5, #424]	@ float
 499:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_hub_DataPipe);
 1766              		.loc 1 499 40 view .LVU589
 1767 0070 9A61     		str	r2, [r3, #24]	@ float
 500:Task/Task_Control.c ****         DataPipe_SendTo(&CtlData_smp_DataPipe, &CtlData_Log_DataPipe);
 1768              		.loc 1 500 9 is_stmt 1 view .LVU590
 1769 0072 984F     		ldr	r7, .L132+12
 1770 0074 9849     		ldr	r1, .L132+16
 1771 0076 3846     		mov	r0, r7
 1772 0078 FFF7FEFF 		bl	DataPipe_SendTo
 1773              	.LVL134:
 501:Task/Task_Control.c **** 
 1774              		.loc 1 501 9 view .LVU591
 1775 007c 9749     		ldr	r1, .L132+20
 1776 007e 3846     		mov	r0, r7
 1777 0080 FFF7FEFF 		bl	DataPipe_SendTo
 1778              	.LVL135:
 504:Task/Task_Control.c ****                                       NULL, NULL,
 1779              		.loc 1 504 9 view .LVU592
 504:Task/Task_Control.c ****                                       NULL, NULL,
 1780              		.loc 1 504 23 is_stmt 0 view .LVU593
 1781 0084 964B     		ldr	r3, .L132+24
 1782 0086 9F6B     		ldr	r7, [r3, #56]
 504:Task/Task_Control.c ****                                       NULL, NULL,
 1783              		.loc 1 504 13 view .LVU594
 1784 0088 964B     		ldr	r3, .L132+28
 1785 008a 0693     		str	r3, [sp, #24]
 1786 008c 0596     		str	r6, [sp, #20]
 1787 008e 05F5C073 		add	r3, r5, #384
 1788 0092 0493     		str	r3, [sp, #16]
 1789 0094 05F5BE73 		add	r3, r5, #380
 1790 0098 0393     		str	r3, [sp, #12]
 1791 009a 05F5BC73 		add	r3, r5, #376
 1792 009e 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 50


 1793 00a0 05F5BA73 		add	r3, r5, #372
 1794 00a4 0193     		str	r3, [sp, #4]
 1795 00a6 05F5B873 		add	r3, r5, #368
 1796 00aa 0093     		str	r3, [sp]
 1797 00ac 05F5B673 		add	r3, r5, #364
 1798 00b0 3246     		mov	r2, r6
 1799 00b2 3146     		mov	r1, r6
 1800 00b4 8C48     		ldr	r0, .L132+32
 1801 00b6 B847     		blx	r7
 1802              	.LVL136:
 504:Task/Task_Control.c ****                                       NULL, NULL,
 1803              		.loc 1 504 11 view .LVU595
 1804 00b8 0028     		cmp	r0, #0
 1805 00ba 00F0B780 		beq	.L104
 512:Task/Task_Control.c ****             goto lock_moto;
 1806              		.loc 1 512 63 view .LVU596
 1807 00be 8B4B     		ldr	r3, .L132+36
 1808 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512:Task/Task_Control.c ****             goto lock_moto;
 1809              		.loc 1 512 60 view .LVU597
 1810 00c2 002B     		cmp	r3, #0
 1811 00c4 00F0B280 		beq	.L104
 518:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.pitch,
 1812              		.loc 1 518 9 is_stmt 1 view .LVU598
 518:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.pitch,
 1813              		.loc 1 518 32 is_stmt 0 view .LVU599
 1814 00c8 854B     		ldr	r3, .L132+24
 1815 00ca 5E6C     		ldr	r6, [r3, #68]
 518:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.pitch,
 1816              		.loc 1 518 22 view .LVU600
 1817 00cc 05F5EB73 		add	r3, r5, #470
 1818 00d0 0493     		str	r3, [sp, #16]
 1819 00d2 05F5E873 		add	r3, r5, #464
 1820 00d6 0393     		str	r3, [sp, #12]
 1821 00d8 05F5E673 		add	r3, r5, #460
 1822 00dc 0293     		str	r3, [sp, #8]
 1823 00de 05F5E473 		add	r3, r5, #456
 1824 00e2 0193     		str	r3, [sp, #4]
 1825 00e4 05F5E273 		add	r3, r5, #452
 1826 00e8 0093     		str	r3, [sp]
 1827 00ea 05F5E073 		add	r3, r5, #448
 1828 00ee 05F5DE72 		add	r2, r5, #444
 1829 00f2 05F5DC71 		add	r1, r5, #440
 1830 00f6 7E48     		ldr	r0, .L132+40
 1831 00f8 B047     		blx	r6
 1832              	.LVL137:
 518:Task/Task_Control.c ****                                              &TaskControl_Monitor.attitude.pitch,
 1833              		.loc 1 518 20 view .LVU601
 1834 00fa 7E4B     		ldr	r3, .L132+44
 1835 00fc 1870     		strb	r0, [r3]
 528:Task/Task_Control.c **** 
 1836              		.loc 1 528 9 is_stmt 1 view .LVU602
 1837 00fe D5ED6F0A 		vldr.32	s1, [r5, #444]
 1838 0102 95ED6E0A 		vldr.32	s0, [r5, #440]
 1839 0106 4046     		mov	r0, r8
 1840 0108 FFF7FEFF 		bl	TaskControl_disarm_check
 1841              	.LVL138:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 51


 531:Task/Task_Control.c ****             goto lock_moto;
 1842              		.loc 1 531 9 view .LVU603
 531:Task/Task_Control.c ****             goto lock_moto;
 1843              		.loc 1 531 32 is_stmt 0 view .LVU604
 1844 010c 95F8D831 		ldrb	r3, [r5, #472]	@ zero_extendqisi2
 531:Task/Task_Control.c ****             goto lock_moto;
 1845              		.loc 1 531 12 view .LVU605
 1846 0110 012B     		cmp	r3, #1
 1847 0112 40F08B80 		bne	.L104
 534:Task/Task_Control.c ****         {
 1848              		.loc 1 534 9 is_stmt 1 view .LVU606
 534:Task/Task_Control.c ****         {
 1849              		.loc 1 534 13 is_stmt 0 view .LVU607
 1850 0116 744B     		ldr	r3, .L132+32
 1851 0118 1B68     		ldr	r3, [r3]
 534:Task/Task_Control.c ****         {
 1852              		.loc 1 534 12 view .LVU608
 1853 011a 002B     		cmp	r3, #0
 1854 011c 00F08C80 		beq	.L105
 536:Task/Task_Control.c ****             {
 1855              		.loc 1 536 13 is_stmt 1 view .LVU609
 536:Task/Task_Control.c ****             {
 1856              		.loc 1 536 54 is_stmt 0 view .LVU610
 1857 0120 D5F86421 		ldr	r2, [r5, #356]
 536:Task/Task_Control.c ****             {
 1858              		.loc 1 536 16 view .LVU611
 1859 0124 9342     		cmp	r3, r2
 1860 0126 10D9     		bls	.L106
 538:Task/Task_Control.c ****                 TaskControl_Monitor.IMU_Rt = imu_update_time;
 1861              		.loc 1 538 17 is_stmt 1 view .LVU612
 538:Task/Task_Control.c ****                 TaskControl_Monitor.IMU_Rt = imu_update_time;
 1862              		.loc 1 538 58 is_stmt 0 view .LVU613
 1863 0128 0021     		movs	r1, #0
 1864 012a 85F86211 		strb	r1, [r5, #354]
 539:Task/Task_Control.c ****             }
 1865              		.loc 1 539 17 is_stmt 1 view .LVU614
 539:Task/Task_Control.c ****             }
 1866              		.loc 1 539 44 is_stmt 0 view .LVU615
 1867 012e C5F86431 		str	r3, [r5, #356]
 1868              	.L107:
 551:Task/Task_Control.c ****             {
 1869              		.loc 1 551 13 is_stmt 1 view .LVU616
 551:Task/Task_Control.c ****             {
 1870              		.loc 1 551 29 is_stmt 0 view .LVU617
 1871 0132 6C4B     		ldr	r3, .L132+28
 1872 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 551:Task/Task_Control.c ****             {
 1873              		.loc 1 551 15 view .LVU618
 1874 0136 002B     		cmp	r3, #0
 1875 0138 6AD0     		beq	.L108
 553:Task/Task_Control.c ****                 {
 1876              		.loc 1 553 17 is_stmt 1 view .LVU619
 1877 013a 013B     		subs	r3, r3, #1
 1878 013c 052B     		cmp	r3, #5
 1879 013e 6BD8     		bhi	.L109
 1880 0140 DFE803F0 		tbb	[pc, r3]
 1881              	.L111:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 52


 1882 0144 14       		.byte	(.L113-.L111)/2
 1883 0145 6A       		.byte	(.L109-.L111)/2
 1884 0146 10       		.byte	(.L112-.L111)/2
 1885 0147 6A       		.byte	(.L109-.L111)/2
 1886 0148 10       		.byte	(.L112-.L111)/2
 1887 0149 3D       		.byte	(.L110-.L111)/2
 1888              		.p2align 1
 1889              	.L106:
 541:Task/Task_Control.c ****             {
 1890              		.loc 1 541 18 view .LVU620
 543:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 1891              		.loc 1 543 17 view .LVU621
 543:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 1892              		.loc 1 543 36 is_stmt 0 view .LVU622
 1893 014a 5F4A     		ldr	r2, .L132
 1894 014c 92F86231 		ldrb	r3, [r2, #354]	@ zero_extendqisi2
 543:Task/Task_Control.c ****                 if (TaskControl_Monitor.imu_update_error_cnt >= IMU_ERROR_UPDATE_MAX_COUNT)
 1895              		.loc 1 543 57 view .LVU623
 1896 0150 0133     		adds	r3, r3, #1
 1897 0152 DBB2     		uxtb	r3, r3
 1898 0154 82F86231 		strb	r3, [r2, #354]
 544:Task/Task_Control.c ****                 {
 1899              		.loc 1 544 17 is_stmt 1 view .LVU624
 544:Task/Task_Control.c ****                 {
 1900              		.loc 1 544 20 is_stmt 0 view .LVU625
 1901 0158 092B     		cmp	r3, #9
 1902 015a EAD9     		bls	.L107
 546:Task/Task_Control.c ****                     goto lock_moto;
 1903              		.loc 1 546 21 is_stmt 1 view .LVU626
 546:Task/Task_Control.c ****                     goto lock_moto;
 1904              		.loc 1 546 55 is_stmt 0 view .LVU627
 1905 015c 1346     		mov	r3, r2
 1906 015e 0122     		movs	r2, #1
 1907 0160 5A70     		strb	r2, [r3, #1]
 547:Task/Task_Control.c ****                 }
 1908              		.loc 1 547 21 is_stmt 1 view .LVU628
 1909 0162 63E0     		b	.L104
 1910              	.L112:
 565:Task/Task_Control.c ****                         goto lock_moto;
 1911              		.loc 1 565 25 view .LVU629
 565:Task/Task_Control.c ****                         goto lock_moto;
 1912              		.loc 1 565 59 is_stmt 0 view .LVU630
 1913 0164 584B     		ldr	r3, .L132
 1914 0166 0122     		movs	r2, #1
 1915 0168 5A70     		strb	r2, [r3, #1]
 566:Task/Task_Control.c ****                         break;
 1916              		.loc 1 566 25 is_stmt 1 view .LVU631
 1917 016a 5FE0     		b	.L104
 1918              	.L113:
 567:Task/Task_Control.c **** 
 1919              		.loc 1 567 25 view .LVU632
 570:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 1920              		.loc 1 570 25 view .LVU633
 570:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 1921              		.loc 1 570 44 is_stmt 0 view .LVU634
 1922 016c 564A     		ldr	r2, .L132
 1923 016e 92F8E031 		ldrb	r3, [r2, #480]	@ zero_extendqisi2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 53


 570:Task/Task_Control.c ****                         if(TaskControl_Monitor.imu_none_update_cnt >= IMU_NONE_UPDATE_THRESHOLD)
 1924              		.loc 1 570 64 view .LVU635
 1925 0172 0133     		adds	r3, r3, #1
 1926 0174 DBB2     		uxtb	r3, r3
 1927 0176 82F8E031 		strb	r3, [r2, #480]
 571:Task/Task_Control.c ****                         {
 1928              		.loc 1 571 25 is_stmt 1 view .LVU636
 571:Task/Task_Control.c ****                         {
 1929              		.loc 1 571 27 is_stmt 0 view .LVU637
 1930 017a 092B     		cmp	r3, #9
 1931 017c 01D8     		bhi	.L129
 579:Task/Task_Control.c ****                             {
 1932              		.loc 1 579 38 view .LVU638
 1933 017e 0023     		movs	r3, #0
 1934 0180 1AE0     		b	.L114
 1935              	.L129:
 573:Task/Task_Control.c ****                             goto lock_moto;
 1936              		.loc 1 573 29 is_stmt 1 view .LVU639
 573:Task/Task_Control.c ****                             goto lock_moto;
 1937              		.loc 1 573 63 is_stmt 0 view .LVU640
 1938 0182 1346     		mov	r3, r2
 1939 0184 0122     		movs	r2, #1
 1940 0186 5A70     		strb	r2, [r3, #1]
 574:Task/Task_Control.c ****                         }
 1941              		.loc 1 574 29 is_stmt 1 view .LVU641
 1942 0188 50E0     		b	.L104
 1943              	.LVL139:
 1944              	.L115:
 581:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 1945              		.loc 1 581 33 discriminator 3 view .LVU642
 581:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 1946              		.loc 1 581 92 is_stmt 0 discriminator 3 view .LVU643
 1947 018a 4F4A     		ldr	r2, .L132
 1948 018c 03F16001 		add	r1, r3, #96
 1949 0190 02EB8101 		add	r1, r2, r1, lsl #2
 1950 0194 4868     		ldr	r0, [r1, #4]	@ float
 581:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 1951              		.loc 1 581 63 discriminator 3 view .LVU644
 1952 0196 03F15A01 		add	r1, r3, #90
 1953 019a 02EB8101 		add	r1, r2, r1, lsl #2
 1954 019e 4860     		str	r0, [r1, #4]	@ float
 582:Task/Task_Control.c ****                             }
 1955              		.loc 1 582 33 is_stmt 1 discriminator 3 view .LVU645
 582:Task/Task_Control.c ****                             }
 1956              		.loc 1 582 92 is_stmt 0 discriminator 3 view .LVU646
 1957 01a0 03F16401 		add	r1, r3, #100
 1958 01a4 02EB8101 		add	r1, r2, r1, lsl #2
 1959 01a8 0968     		ldr	r1, [r1]	@ float
 582:Task/Task_Control.c ****                             }
 1960              		.loc 1 582 63 discriminator 3 view .LVU647
 1961 01aa 03F15E00 		add	r0, r3, #94
 1962 01ae 02EB8002 		add	r2, r2, r0, lsl #2
 1963 01b2 1160     		str	r1, [r2]	@ float
 579:Task/Task_Control.c ****                             {
 1964              		.loc 1 579 65 is_stmt 1 discriminator 3 view .LVU648
 579:Task/Task_Control.c ****                             {
 1965              		.loc 1 579 69 is_stmt 0 discriminator 3 view .LVU649
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 54


 1966 01b4 0133     		adds	r3, r3, #1
 1967              	.LVL140:
 579:Task/Task_Control.c ****                             {
 1968              		.loc 1 579 69 discriminator 3 view .LVU650
 1969 01b6 DBB2     		uxtb	r3, r3
 1970              	.LVL141:
 1971              	.L114:
 579:Task/Task_Control.c ****                             {
 1972              		.loc 1 579 48 is_stmt 1 discriminator 1 view .LVU651
 579:Task/Task_Control.c ****                             {
 1973              		.loc 1 579 29 is_stmt 0 discriminator 1 view .LVU652
 1974 01b8 022B     		cmp	r3, #2
 1975 01ba E6D9     		bls	.L115
 1976 01bc 2CE0     		b	.L109
 1977              	.LVL142:
 1978              	.L110:
 588:Task/Task_Control.c ****                         {
 1979              		.loc 1 588 25 is_stmt 1 view .LVU653
 588:Task/Task_Control.c ****                         {
 1980              		.loc 1 588 47 is_stmt 0 view .LVU654
 1981 01be 424B     		ldr	r3, .L132
 1982 01c0 93F86131 		ldrb	r3, [r3, #353]	@ zero_extendqisi2
 588:Task/Task_Control.c ****                         {
 1983              		.loc 1 588 27 view .LVU655
 1984 01c4 042B     		cmp	r3, #4
 1985 01c6 1FD8     		bhi	.L116
 590:Task/Task_Control.c **** 
 1986              		.loc 1 590 29 is_stmt 1 view .LVU656
 590:Task/Task_Control.c **** 
 1987              		.loc 1 590 68 is_stmt 0 view .LVU657
 1988 01c8 0133     		adds	r3, r3, #1
 1989 01ca 3F4A     		ldr	r2, .L132
 1990 01cc 82F86131 		strb	r3, [r2, #353]
 592:Task/Task_Control.c ****                             {
 1991              		.loc 1 592 29 is_stmt 1 view .LVU658
 592:Task/Task_Control.c ****                             {
 1992              		.loc 1 592 38 is_stmt 0 view .LVU659
 1993 01d0 0023     		movs	r3, #0
 592:Task/Task_Control.c ****                             {
 1994              		.loc 1 592 29 view .LVU660
 1995 01d2 16E0     		b	.L117
 1996              	.LVL143:
 1997              	.L118:
 594:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 1998              		.loc 1 594 33 is_stmt 1 discriminator 3 view .LVU661
 594:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 1999              		.loc 1 594 92 is_stmt 0 discriminator 3 view .LVU662
 2000 01d4 3C4A     		ldr	r2, .L132
 2001 01d6 03F16001 		add	r1, r3, #96
 2002 01da 02EB8101 		add	r1, r2, r1, lsl #2
 2003 01de 4868     		ldr	r0, [r1, #4]	@ float
 594:Task/Task_Control.c ****                                 TaskControl_Monitor.gyr[axis] = TaskControl_Monitor.gyr_lst[axis];
 2004              		.loc 1 594 63 discriminator 3 view .LVU663
 2005 01e0 03F15A01 		add	r1, r3, #90
 2006 01e4 02EB8101 		add	r1, r2, r1, lsl #2
 2007 01e8 4860     		str	r0, [r1, #4]	@ float
 595:Task/Task_Control.c ****                             }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 55


 2008              		.loc 1 595 33 is_stmt 1 discriminator 3 view .LVU664
 595:Task/Task_Control.c ****                             }
 2009              		.loc 1 595 92 is_stmt 0 discriminator 3 view .LVU665
 2010 01ea 03F16401 		add	r1, r3, #100
 2011 01ee 02EB8101 		add	r1, r2, r1, lsl #2
 2012 01f2 0968     		ldr	r1, [r1]	@ float
 595:Task/Task_Control.c ****                             }
 2013              		.loc 1 595 63 discriminator 3 view .LVU666
 2014 01f4 03F15E00 		add	r0, r3, #94
 2015 01f8 02EB8002 		add	r2, r2, r0, lsl #2
 2016 01fc 1160     		str	r1, [r2]	@ float
 592:Task/Task_Control.c ****                             {
 2017              		.loc 1 592 65 is_stmt 1 discriminator 3 view .LVU667
 592:Task/Task_Control.c ****                             {
 2018              		.loc 1 592 69 is_stmt 0 discriminator 3 view .LVU668
 2019 01fe 0133     		adds	r3, r3, #1
 2020              	.LVL144:
 592:Task/Task_Control.c ****                             {
 2021              		.loc 1 592 69 discriminator 3 view .LVU669
 2022 0200 DBB2     		uxtb	r3, r3
 2023              	.LVL145:
 2024              	.L117:
 592:Task/Task_Control.c ****                             {
 2025              		.loc 1 592 48 is_stmt 1 discriminator 1 view .LVU670
 592:Task/Task_Control.c ****                             {
 2026              		.loc 1 592 29 is_stmt 0 discriminator 1 view .LVU671
 2027 0202 022B     		cmp	r3, #2
 2028 0204 E6D9     		bls	.L118
 2029 0206 07E0     		b	.L109
 2030              	.LVL146:
 2031              	.L116:
 599:Task/Task_Control.c ****                         break;
 2032              		.loc 1 599 29 is_stmt 1 view .LVU672
 599:Task/Task_Control.c ****                         break;
 2033              		.loc 1 599 65 is_stmt 0 view .LVU673
 2034 0208 2F4B     		ldr	r3, .L132
 2035 020a 0122     		movs	r2, #1
 2036 020c DA70     		strb	r2, [r3, #3]
 2037 020e 03E0     		b	.L109
 2038              	.L108:
 604:Task/Task_Control.c ****         }
 2039              		.loc 1 604 17 is_stmt 1 view .LVU674
 604:Task/Task_Control.c ****         }
 2040              		.loc 1 604 57 is_stmt 0 view .LVU675
 2041 0210 2D4B     		ldr	r3, .L132
 2042 0212 0022     		movs	r2, #0
 2043 0214 83F8E021 		strb	r2, [r3, #480]
 2044              	.LVL147:
 2045              	.L109:
 617:Task/Task_Control.c ****             goto lock_moto;
 2046              		.loc 1 617 9 is_stmt 1 view .LVU676
 617:Task/Task_Control.c ****             goto lock_moto;
 2047              		.loc 1 617 31 is_stmt 0 view .LVU677
 2048 0218 2B4B     		ldr	r3, .L132
 2049 021a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 617:Task/Task_Control.c ****             goto lock_moto;
 2050              		.loc 1 617 11 view .LVU678
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 56


 2051 021c 13B1     		cbz	r3, .L120
 617:Task/Task_Control.c ****             goto lock_moto;
 2052              		.loc 1 617 77 discriminator 1 view .LVU679
 2053 021e 2A4B     		ldr	r3, .L132
 2054 0220 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 617:Task/Task_Control.c ****             goto lock_moto;
 2055              		.loc 1 617 55 discriminator 1 view .LVU680
 2056 0222 1BB9     		cbnz	r3, .L104
 2057              	.L120:
 620:Task/Task_Control.c ****         {
 2058              		.loc 1 620 9 is_stmt 1 view .LVU681
 620:Task/Task_Control.c ****         {
 2059              		.loc 1 620 31 is_stmt 0 view .LVU682
 2060 0224 284B     		ldr	r3, .L132
 2061 0226 93F8D631 		ldrb	r3, [r3, #470]	@ zero_extendqisi2
 620:Task/Task_Control.c ****         {
 2062              		.loc 1 620 11 view .LVU683
 2063 022a 93B1     		cbz	r3, .L130
 2064              	.LVL148:
 2065              	.L104:
 673:Task/Task_Control.c **** }
 2066              		.loc 1 673 5 is_stmt 1 view .LVU684
 673:Task/Task_Control.c **** }
 2067              		.loc 1 673 16 is_stmt 0 view .LVU685
 2068 022c 324B     		ldr	r3, .L132+48
 2069 022e DB68     		ldr	r3, [r3, #12]
 673:Task/Task_Control.c **** }
 2070              		.loc 1 673 5 view .LVU686
 2071 0230 9847     		blx	r3
 2072              	.LVL149:
 2073              	.L103:
 674:Task/Task_Control.c **** 
 2074              		.loc 1 674 1 view .LVU687
 2075 0232 16B0     		add	sp, sp, #88
 2076              	.LCFI23:
 2077              		.cfi_remember_state
 2078              		.cfi_def_cfa_offset 24
 2079              		@ sp needed
 2080 0234 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2081              	.LVL150:
 2082              	.L105:
 2083              	.LCFI24:
 2084              		.cfi_restore_state
 609:Task/Task_Control.c **** 
 2085              		.loc 1 609 13 is_stmt 1 view .LVU688
 609:Task/Task_Control.c **** 
 2086              		.loc 1 609 32 is_stmt 0 view .LVU689
 2087 0238 234A     		ldr	r2, .L132
 2088 023a 92F8E031 		ldrb	r3, [r2, #480]	@ zero_extendqisi2
 609:Task/Task_Control.c **** 
 2089              		.loc 1 609 53 view .LVU690
 2090 023e 0133     		adds	r3, r3, #1
 2091 0240 DBB2     		uxtb	r3, r3
 2092 0242 82F8E031 		strb	r3, [r2, #480]
 611:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
 2093              		.loc 1 611 13 is_stmt 1 view .LVU691
 611:Task/Task_Control.c ****                 TaskControl_Monitor.control_abort = true;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 57


 2094              		.loc 1 611 15 is_stmt 0 view .LVU692
 2095 0246 092B     		cmp	r3, #9
 2096 0248 F0D9     		bls	.L104
 612:Task/Task_Control.c **** 
 2097              		.loc 1 612 17 is_stmt 1 view .LVU693
 612:Task/Task_Control.c **** 
 2098              		.loc 1 612 51 is_stmt 0 view .LVU694
 2099 024a 1346     		mov	r3, r2
 2100 024c 0122     		movs	r2, #1
 2101 024e 5A70     		strb	r2, [r3, #1]
 614:Task/Task_Control.c ****         }
 2102              		.loc 1 614 13 is_stmt 1 view .LVU695
 2103 0250 ECE7     		b	.L104
 2104              	.LVL151:
 2105              	.L130:
 631:Task/Task_Control.c **** 
 2106              		.loc 1 631 13 view .LVU696
 631:Task/Task_Control.c **** 
 2107              		.loc 1 631 63 is_stmt 0 view .LVU697
 2108 0252 94F84E20 		ldrb	r2, [r4, #78]	@ zero_extendqisi2
 631:Task/Task_Control.c **** 
 2109              		.loc 1 631 50 view .LVU698
 2110 0256 1C4B     		ldr	r3, .L132
 2111 0258 83F89C21 		strb	r2, [r3, #412]
 634:Task/Task_Control.c ****             {
 2112              		.loc 1 634 13 is_stmt 1 view .LVU699
 634:Task/Task_Control.c ****             {
 2113              		.loc 1 634 27 is_stmt 0 view .LVU700
 2114 025c 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 634:Task/Task_Control.c ****             {
 2115              		.loc 1 634 15 view .LVU701
 2116 0260 C3B1     		cbz	r3, .L131
 650:Task/Task_Control.c ****                 TaskControl_Monitor.GyrYCtl_PIDObj.exp = TaskControl_Monitor.exp_gyr_y;
 2117              		.loc 1 650 17 is_stmt 1 view .LVU702
 650:Task/Task_Control.c ****                 TaskControl_Monitor.GyrYCtl_PIDObj.exp = TaskControl_Monitor.exp_gyr_y;
 2118              		.loc 1 650 77 is_stmt 0 view .LVU703
 2119 0262 194B     		ldr	r3, .L132
 2120 0264 D3F8A021 		ldr	r2, [r3, #416]	@ float
 650:Task/Task_Control.c ****                 TaskControl_Monitor.GyrYCtl_PIDObj.exp = TaskControl_Monitor.exp_gyr_y;
 2121              		.loc 1 650 56 view .LVU704
 2122 0268 C3F86822 		str	r2, [r3, #616]	@ float
 651:Task/Task_Control.c ****             }
 2123              		.loc 1 651 17 is_stmt 1 view .LVU705
 651:Task/Task_Control.c ****             }
 2124              		.loc 1 651 77 is_stmt 0 view .LVU706
 2125 026c D3F8A421 		ldr	r2, [r3, #420]	@ float
 651:Task/Task_Control.c ****             }
 2126              		.loc 1 651 56 view .LVU707
 2127 0270 C3F8A822 		str	r2, [r3, #680]	@ float
 2128              	.LVL152:
 2129              	.L122:
 654:Task/Task_Control.c ****             TaskControl_AngularSpeedRing_PID_Update(&TaskControl_Monitor);
 2130              		.loc 1 654 13 is_stmt 1 view .LVU708
 654:Task/Task_Control.c ****             TaskControl_AngularSpeedRing_PID_Update(&TaskControl_Monitor);
 2131              		.loc 1 654 73 is_stmt 0 view .LVU709
 2132 0274 144C     		ldr	r4, .L132
 2133 0276 D4F8A831 		ldr	r3, [r4, #424]	@ float
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 58


 654:Task/Task_Control.c ****             TaskControl_AngularSpeedRing_PID_Update(&TaskControl_Monitor);
 2134              		.loc 1 654 52 view .LVU710
 2135 027a C4F8E832 		str	r3, [r4, #744]	@ float
 655:Task/Task_Control.c **** 
 2136              		.loc 1 655 13 is_stmt 1 view .LVU711
 2137 027e 2046     		mov	r0, r4
 2138 0280 FFF7FEFF 		bl	TaskControl_AngularSpeedRing_PID_Update
 2139              	.LVL153:
 657:Task/Task_Control.c **** 
 2140              		.loc 1 657 13 view .LVU712
 2141 0284 2046     		mov	r0, r4
 2142 0286 FFF7FEFF 		bl	TaskControl_Actuator_ControlValue_Update
 2143              	.LVL154:
 659:Task/Task_Control.c ****             {
 2144              		.loc 1 659 13 view .LVU713
 659:Task/Task_Control.c ****             {
 2145              		.loc 1 659 29 is_stmt 0 view .LVU714
 2146 028a 164B     		ldr	r3, .L132+28
 2147 028c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 659:Task/Task_Control.c ****             {
 2148              		.loc 1 659 15 view .LVU715
 2149 028e 002B     		cmp	r3, #0
 2150 0290 4BD0     		beq	.L123
 2151 0292 CEE7     		b	.L103
 2152              	.LVL155:
 2153              	.L131:
 638:Task/Task_Control.c ****                 TaskControl_Monitor.PitchCtl_PIDObj.exp = TaskControl_Monitor.exp_pitch;
 2154              		.loc 1 638 17 is_stmt 1 view .LVU716
 638:Task/Task_Control.c ****                 TaskControl_Monitor.PitchCtl_PIDObj.exp = TaskControl_Monitor.exp_pitch;
 2155              		.loc 1 638 77 is_stmt 0 view .LVU717
 2156 0294 0C4C     		ldr	r4, .L132
 2157              	.LVL156:
 638:Task/Task_Control.c ****                 TaskControl_Monitor.PitchCtl_PIDObj.exp = TaskControl_Monitor.exp_pitch;
 2158              		.loc 1 638 77 view .LVU718
 2159 0296 D4F8B031 		ldr	r3, [r4, #432]	@ float
 638:Task/Task_Control.c ****                 TaskControl_Monitor.PitchCtl_PIDObj.exp = TaskControl_Monitor.exp_pitch;
 2160              		.loc 1 638 56 view .LVU719
 2161 029a C4F8E831 		str	r3, [r4, #488]	@ float
 639:Task/Task_Control.c ****                 TaskControl_AttitudeRing_PID_Update(&TaskControl_Monitor);
 2162              		.loc 1 639 17 is_stmt 1 view .LVU720
 639:Task/Task_Control.c ****                 TaskControl_AttitudeRing_PID_Update(&TaskControl_Monitor);
 2163              		.loc 1 639 78 is_stmt 0 view .LVU721
 2164 029e D4F8AC31 		ldr	r3, [r4, #428]	@ float
 639:Task/Task_Control.c ****                 TaskControl_AttitudeRing_PID_Update(&TaskControl_Monitor);
 2165              		.loc 1 639 57 view .LVU722
 2166 02a2 C4F82832 		str	r3, [r4, #552]	@ float
 640:Task/Task_Control.c ****                 
 2167              		.loc 1 640 17 is_stmt 1 view .LVU723
 2168 02a6 2046     		mov	r0, r4
 2169 02a8 FFF7FEFF 		bl	TaskControl_AttitudeRing_PID_Update
 2170              	.LVL157:
 642:Task/Task_Control.c ****                 TaskControl_Monitor.GyrYCtl_PIDObj.exp = TaskControl_Monitor.PitchCtl_PIDObj.fout;
 2171              		.loc 1 642 17 view .LVU724
 642:Task/Task_Control.c ****                 TaskControl_Monitor.GyrYCtl_PIDObj.exp = TaskControl_Monitor.PitchCtl_PIDObj.fout;
 2172              		.loc 1 642 92 is_stmt 0 view .LVU725
 2173 02ac D4F8F421 		ldr	r2, [r4, #500]	@ float
 642:Task/Task_Control.c ****                 TaskControl_Monitor.GyrYCtl_PIDObj.exp = TaskControl_Monitor.PitchCtl_PIDObj.fout;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 59


 2174              		.loc 1 642 56 view .LVU726
 2175 02b0 C4F86822 		str	r2, [r4, #616]	@ float
 643:Task/Task_Control.c ****                 TaskControl_Monitor.exp_gyr_x = TaskControl_Monitor.RollCtl_PIDObj.fout;
 2176              		.loc 1 643 17 is_stmt 1 view .LVU727
 643:Task/Task_Control.c ****                 TaskControl_Monitor.exp_gyr_x = TaskControl_Monitor.RollCtl_PIDObj.fout;
 2177              		.loc 1 643 93 is_stmt 0 view .LVU728
 2178 02b4 D4F83432 		ldr	r3, [r4, #564]	@ float
 643:Task/Task_Control.c ****                 TaskControl_Monitor.exp_gyr_x = TaskControl_Monitor.RollCtl_PIDObj.fout;
 2179              		.loc 1 643 56 view .LVU729
 2180 02b8 C4F8A832 		str	r3, [r4, #680]	@ float
 644:Task/Task_Control.c ****                 TaskControl_Monitor.exp_gyr_y = TaskControl_Monitor.PitchCtl_PIDObj.fout;
 2181              		.loc 1 644 17 is_stmt 1 view .LVU730
 644:Task/Task_Control.c ****                 TaskControl_Monitor.exp_gyr_y = TaskControl_Monitor.PitchCtl_PIDObj.fout;
 2182              		.loc 1 644 47 is_stmt 0 view .LVU731
 2183 02bc C4F8A021 		str	r2, [r4, #416]	@ float
 645:Task/Task_Control.c ****             }
 2184              		.loc 1 645 17 is_stmt 1 view .LVU732
 645:Task/Task_Control.c ****             }
 2185              		.loc 1 645 47 is_stmt 0 view .LVU733
 2186 02c0 C4F8A431 		str	r3, [r4, #420]	@ float
 2187 02c4 D6E7     		b	.L122
 2188              	.L133:
 2189 02c6 00BF     		.align	2
 2190              	.L132:
 2191 02c8 00000000 		.word	.LANCHOR0
 2192 02cc 00000000 		.word	.LANCHOR1
 2193 02d0 00000000 		.word	.LANCHOR2
 2194 02d4 00000000 		.word	CtlData_smp_DataPipe
 2195 02d8 00000000 		.word	CtlData_hub_DataPipe
 2196 02dc 00000000 		.word	CtlData_Log_DataPipe
 2197 02e0 00000000 		.word	SrvDataHub
 2198 02e4 00000000 		.word	.LANCHOR4
 2199 02e8 00000000 		.word	.LANCHOR3
 2200 02ec 00000000 		.word	.LANCHOR5
 2201 02f0 00000000 		.word	.LANCHOR6
 2202 02f4 00000000 		.word	.LANCHOR7
 2203 02f8 00000000 		.word	SrvActuator
 2204              	.LVL158:
 2205              	.L125:
 663:Task/Task_Control.c ****                     TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 2206              		.loc 1 663 21 is_stmt 1 discriminator 3 view .LVU734
 663:Task/Task_Control.c ****                     TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 2207              		.loc 1 663 80 is_stmt 0 discriminator 3 view .LVU735
 2208 02fc 0C4A     		ldr	r2, .L134
 2209 02fe 03F15A01 		add	r1, r3, #90
 2210 0302 02EB8101 		add	r1, r2, r1, lsl #2
 2211 0306 4868     		ldr	r0, [r1, #4]	@ float
 663:Task/Task_Control.c ****                     TaskControl_Monitor.gyr_lst[axis] = TaskControl_Monitor.gyr[axis];
 2212              		.loc 1 663 55 discriminator 3 view .LVU736
 2213 0308 03F16001 		add	r1, r3, #96
 2214 030c 02EB8101 		add	r1, r2, r1, lsl #2
 2215 0310 4860     		str	r0, [r1, #4]	@ float
 664:Task/Task_Control.c ****                 }
 2216              		.loc 1 664 21 is_stmt 1 discriminator 3 view .LVU737
 664:Task/Task_Control.c ****                 }
 2217              		.loc 1 664 80 is_stmt 0 discriminator 3 view .LVU738
 2218 0312 03F15E01 		add	r1, r3, #94
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 60


 2219 0316 02EB8101 		add	r1, r2, r1, lsl #2
 2220 031a 0968     		ldr	r1, [r1]	@ float
 664:Task/Task_Control.c ****                 }
 2221              		.loc 1 664 55 discriminator 3 view .LVU739
 2222 031c 03F16400 		add	r0, r3, #100
 2223 0320 02EB8002 		add	r2, r2, r0, lsl #2
 2224 0324 1160     		str	r1, [r2]	@ float
 661:Task/Task_Control.c ****                 {
 2225              		.loc 1 661 53 is_stmt 1 discriminator 3 view .LVU740
 661:Task/Task_Control.c ****                 {
 2226              		.loc 1 661 58 is_stmt 0 discriminator 3 view .LVU741
 2227 0326 0133     		adds	r3, r3, #1
 2228              	.LVL159:
 661:Task/Task_Control.c ****                 {
 2229              		.loc 1 661 58 discriminator 3 view .LVU742
 2230 0328 DBB2     		uxtb	r3, r3
 2231              	.LVL160:
 2232              	.L123:
 661:Task/Task_Control.c ****                 {
 2233              		.loc 1 661 36 is_stmt 1 discriminator 1 view .LVU743
 661:Task/Task_Control.c ****                 {
 2234              		.loc 1 661 17 is_stmt 0 discriminator 1 view .LVU744
 2235 032a 022B     		cmp	r3, #2
 2236 032c E6D9     		bls	.L125
 2237 032e 80E7     		b	.L103
 2238              	.L135:
 2239              		.align	2
 2240              	.L134:
 2241 0330 00000000 		.word	.LANCHOR0
 2242              		.cfi_endproc
 2243              	.LFE2081:
 2245              		.section	.rodata.TaskControl_CLI_Polling.str1.4,"aMS",%progbits,1
 2246              		.align	2
 2247              	.LC3:
 2248 0000 6D6F746F 		.ascii	"moto spin dir set done\015\012\000"
 2248      20737069 
 2248      6E206469 
 2248      72207365 
 2248      7420646F 
 2249 0019 000000   		.align	2
 2250              	.LC4:
 2251 001c 6D6F746F 		.ascii	"moto spin dir set error\015\012\000"
 2251      20737069 
 2251      6E206469 
 2251      72207365 
 2251      74206572 
 2252              		.section	.text.TaskControl_CLI_Polling,"ax",%progbits
 2253              		.align	1
 2254              		.syntax unified
 2255              		.thumb
 2256              		.thumb_func
 2258              	TaskControl_CLI_Polling:
 2259              	.LFB2083:
 724:Task/Task_Control.c **** 
 725:Task/Task_Control.c **** /****************************************************** CLI Section *******************************
 726:Task/Task_Control.c **** static void TaskControl_CLI_Polling(void)
 727:Task/Task_Control.c **** {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 61


 2260              		.loc 1 727 1 is_stmt 1 view -0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 32
 2263              		@ frame_needed = 0, uses_anonymous_args = 0
 2264 0000 30B5     		push	{r4, r5, lr}
 2265              	.LCFI25:
 2266              		.cfi_def_cfa_offset 12
 2267              		.cfi_offset 4, -12
 2268              		.cfi_offset 5, -8
 2269              		.cfi_offset 14, -4
 2270 0002 89B0     		sub	sp, sp, #36
 2271              	.LCFI26:
 2272              		.cfi_def_cfa_offset 48
 728:Task/Task_Control.c ****     osEvent event;
 2273              		.loc 1 728 5 view .LVU746
 729:Task/Task_Control.c ****     static TaskControl_CLIData_TypeDef CLIData;
 2274              		.loc 1 729 5 view .LVU747
 730:Task/Task_Control.c ****     static uint16_t moto_ctl_buff[8] = {0};
 2275              		.loc 1 730 5 view .LVU748
 731:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 2276              		.loc 1 731 5 view .LVU749
 2277              		.loc 1 731 24 is_stmt 0 view .LVU750
 2278 0004 FFF7FEFF 		bl	Shell_GetInstence
 2279              	.LVL161:
 732:Task/Task_Control.c **** 
 733:Task/Task_Control.c ****     if ((shell_obj == NULL) || \
 2280              		.loc 1 733 5 is_stmt 1 view .LVU751
 2281              		.loc 1 733 8 is_stmt 0 view .LVU752
 2282 0008 C8B1     		cbz	r0, .L136
 2283 000a 0446     		mov	r4, r0
 734:Task/Task_Control.c ****         (SrvActuator.lock == NULL) || \
 2284              		.loc 1 734 21 discriminator 1 view .LVU753
 2285 000c 5E4B     		ldr	r3, .L162
 2286 000e DB68     		ldr	r3, [r3, #12]
 733:Task/Task_Control.c ****         (SrvActuator.lock == NULL) || \
 2287              		.loc 1 733 29 discriminator 1 view .LVU754
 2288 0010 ABB1     		cbz	r3, .L136
 735:Task/Task_Control.c ****         (SrvActuator.moto_direct_drive == NULL))
 2289              		.loc 1 735 21 view .LVU755
 2290 0012 5D4B     		ldr	r3, .L162
 2291 0014 1B6B     		ldr	r3, [r3, #48]
 734:Task/Task_Control.c ****         (SrvActuator.lock == NULL) || \
 2292              		.loc 1 734 36 view .LVU756
 2293 0016 93B1     		cbz	r3, .L136
 736:Task/Task_Control.c ****         return;
 737:Task/Task_Control.c **** 
 738:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID)
 2294              		.loc 1 738 5 is_stmt 1 view .LVU757
 2295              		.loc 1 738 27 is_stmt 0 view .LVU758
 2296 0018 5C4B     		ldr	r3, .L162+4
 2297 001a D3F82413 		ldr	r1, [r3, #804]
 2298              		.loc 1 738 7 view .LVU759
 2299 001e 31B1     		cbz	r1, .L138
 739:Task/Task_Control.c ****     {
 740:Task/Task_Control.c ****         event = osMessageGet(TaskControl_Monitor.CLIMessage_ID, CLI_MESSAGE_OPEARATE_TIMEOUT);
 2300              		.loc 1 740 9 is_stmt 1 view .LVU760
 2301              		.loc 1 740 17 is_stmt 0 view .LVU761
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 62


 2302 0020 0122     		movs	r2, #1
 2303 0022 01A8     		add	r0, sp, #4
 2304              	.LVL162:
 2305              		.loc 1 740 17 view .LVU762
 2306 0024 FFF7FEFF 		bl	osMessageGet
 2307              	.LVL163:
 741:Task/Task_Control.c ****         if (event.status == osEventMessage)
 2308              		.loc 1 741 9 is_stmt 1 view .LVU763
 2309              		.loc 1 741 18 is_stmt 0 view .LVU764
 2310 0028 019B     		ldr	r3, [sp, #4]
 2311              		.loc 1 741 12 view .LVU765
 2312 002a 102B     		cmp	r3, #16
 2313 002c 09D0     		beq	.L158
 2314              	.LVL164:
 2315              	.L138:
 742:Task/Task_Control.c ****         {
 743:Task/Task_Control.c ****             if (event.value.p == NULL)
 744:Task/Task_Control.c ****             {
 745:Task/Task_Control.c ****                 SrvActuator.lock();
 746:Task/Task_Control.c ****                 return;
 747:Task/Task_Control.c ****             }
 748:Task/Task_Control.c **** 
 749:Task/Task_Control.c ****             CLIData = *(TaskControl_CLIData_TypeDef *)(event.value.p);
 750:Task/Task_Control.c ****             switch((uint8_t)CLIData.cli_type)
 751:Task/Task_Control.c ****             {
 752:Task/Task_Control.c ****                 case TaskControl_Moto_Set_SpinDir:
 753:Task/Task_Control.c ****                     memset(moto_ctl_buff, 0, sizeof(moto_ctl_buff));
 754:Task/Task_Control.c ****                     if(SrvActuator.set_spin_dir(CLIData.index, (uint8_t)CLIData.value))
 755:Task/Task_Control.c ****                     {
 756:Task/Task_Control.c ****                         shellPrint(shell_obj, "moto spin dir set done\r\n");
 757:Task/Task_Control.c ****                         SrvActuator.save(CLIData.index);
 758:Task/Task_Control.c ****                     }
 759:Task/Task_Control.c ****                     else
 760:Task/Task_Control.c ****                         shellPrint(shell_obj, "moto spin dir set error\r\n");
 761:Task/Task_Control.c ****                     break;
 762:Task/Task_Control.c **** 
 763:Task/Task_Control.c ****                 case TaskControl_Moto_Set_Spin:
 764:Task/Task_Control.c ****                     if(CLIData.index < SrvActuator.get_cnt().moto_cnt)
 765:Task/Task_Control.c ****                     {
 766:Task/Task_Control.c ****                         for(uint8_t i = 0; i < SrvActuator.get_cnt().moto_cnt; i++)
 767:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 768:Task/Task_Control.c **** 
 769:Task/Task_Control.c ****                         moto_ctl_buff[CLIData.index] = CLIData.value;
 770:Task/Task_Control.c ****                     }
 771:Task/Task_Control.c ****                     else
 772:Task/Task_Control.c ****                     {
 773:Task/Task_Control.c ****                         for(uint8_t i = 0; i < SrvActuator.get_cnt().moto_cnt; i++)
 774:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 775:Task/Task_Control.c ****                     }
 776:Task/Task_Control.c ****                     break;
 777:Task/Task_Control.c **** 
 778:Task/Task_Control.c ****                 case TaskControl_Moto_CliDisable:
 779:Task/Task_Control.c ****                     memset(moto_ctl_buff, 0, sizeof(moto_ctl_buff));
 780:Task/Task_Control.c ****                     TaskControl_Monitor.CLI_enable = false;
 781:Task/Task_Control.c ****                     break;
 782:Task/Task_Control.c **** 
 783:Task/Task_Control.c ****                 default: break;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 63


 784:Task/Task_Control.c ****             }
 785:Task/Task_Control.c **** 
 786:Task/Task_Control.c ****             SrvOsCommon.free(event.value.p);
 787:Task/Task_Control.c ****         }
 788:Task/Task_Control.c ****     }
 789:Task/Task_Control.c **** 
 790:Task/Task_Control.c ****     if(CLIData.cli_type == TaskControl_Moto_Set_Spin)
 2316              		.loc 1 790 5 is_stmt 1 view .LVU766
 2317              		.loc 1 790 15 is_stmt 0 view .LVU767
 2318 002e 584B     		ldr	r3, .L162+8
 2319 0030 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2320              		.loc 1 790 7 view .LVU768
 2321 0032 012B     		cmp	r3, #1
 2322 0034 00F0A680 		beq	.L159
 791:Task/Task_Control.c ****     {
 792:Task/Task_Control.c ****         /* set moto spin */
 793:Task/Task_Control.c ****         for (uint8_t i = 0; i < SrvActuator.get_cnt().moto_cnt; i++)
 794:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 795:Task/Task_Control.c ****     }
 796:Task/Task_Control.c ****     else
 797:Task/Task_Control.c ****         SrvActuator.lock();
 2323              		.loc 1 797 9 is_stmt 1 view .LVU769
 2324              		.loc 1 797 20 is_stmt 0 view .LVU770
 2325 0038 534B     		ldr	r3, .L162
 2326 003a DB68     		ldr	r3, [r3, #12]
 2327              		.loc 1 797 9 view .LVU771
 2328 003c 9847     		blx	r3
 2329              	.LVL165:
 2330              	.L136:
 798:Task/Task_Control.c **** }
 2331              		.loc 1 798 1 view .LVU772
 2332 003e 09B0     		add	sp, sp, #36
 2333              	.LCFI27:
 2334              		.cfi_remember_state
 2335              		.cfi_def_cfa_offset 12
 2336              		@ sp needed
 2337 0040 30BD     		pop	{r4, r5, pc}
 2338              	.LVL166:
 2339              	.L158:
 2340              	.LCFI28:
 2341              		.cfi_restore_state
 743:Task/Task_Control.c ****             {
 2342              		.loc 1 743 13 is_stmt 1 view .LVU773
 743:Task/Task_Control.c ****             {
 2343              		.loc 1 743 28 is_stmt 0 view .LVU774
 2344 0042 029D     		ldr	r5, [sp, #8]
 743:Task/Task_Control.c ****             {
 2345              		.loc 1 743 16 view .LVU775
 2346 0044 85B1     		cbz	r5, .L160
 749:Task/Task_Control.c ****             switch((uint8_t)CLIData.cli_type)
 2347              		.loc 1 749 13 is_stmt 1 view .LVU776
 749:Task/Task_Control.c ****             switch((uint8_t)CLIData.cli_type)
 2348              		.loc 1 749 21 is_stmt 0 view .LVU777
 2349 0046 524B     		ldr	r3, .L162+8
 2350 0048 95E80300 		ldm	r5, {r0, r1}
 2351 004c 83E80300 		stm	r3, {r0, r1}
 750:Task/Task_Control.c ****             {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 64


 2352              		.loc 1 750 13 is_stmt 1 view .LVU778
 750:Task/Task_Control.c ****             {
 2353              		.loc 1 750 36 is_stmt 0 view .LVU779
 2354 0050 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 750:Task/Task_Control.c ****             {
 2355              		.loc 1 750 13 view .LVU780
 2356 0052 012B     		cmp	r3, #1
 2357 0054 28D0     		beq	.L140
 2358 0056 022B     		cmp	r3, #2
 2359 0058 0AD0     		beq	.L141
 2360 005a 002B     		cmp	r3, #0
 2361 005c 6FD0     		beq	.L161
 2362              	.LVL167:
 2363              	.L143:
 786:Task/Task_Control.c ****         }
 2364              		.loc 1 786 13 is_stmt 1 view .LVU781
 786:Task/Task_Control.c ****         }
 2365              		.loc 1 786 24 is_stmt 0 view .LVU782
 2366 005e 4D4B     		ldr	r3, .L162+12
 2367 0060 DB6A     		ldr	r3, [r3, #44]
 786:Task/Task_Control.c ****         }
 2368              		.loc 1 786 13 view .LVU783
 2369 0062 2846     		mov	r0, r5
 2370 0064 9847     		blx	r3
 2371              	.LVL168:
 2372 0066 E2E7     		b	.L138
 2373              	.LVL169:
 2374              	.L160:
 745:Task/Task_Control.c ****                 return;
 2375              		.loc 1 745 17 is_stmt 1 view .LVU784
 745:Task/Task_Control.c ****                 return;
 2376              		.loc 1 745 28 is_stmt 0 view .LVU785
 2377 0068 474B     		ldr	r3, .L162
 2378 006a DB68     		ldr	r3, [r3, #12]
 745:Task/Task_Control.c ****                 return;
 2379              		.loc 1 745 17 view .LVU786
 2380 006c 9847     		blx	r3
 2381              	.LVL170:
 746:Task/Task_Control.c ****             }
 2382              		.loc 1 746 17 is_stmt 1 view .LVU787
 2383 006e E6E7     		b	.L136
 2384              	.L141:
 753:Task/Task_Control.c ****                     if(SrvActuator.set_spin_dir(CLIData.index, (uint8_t)CLIData.value))
 2385              		.loc 1 753 21 view .LVU788
 2386 0070 494B     		ldr	r3, .L162+16
 2387 0072 0022     		movs	r2, #0
 2388 0074 1A60     		str	r2, [r3]
 2389 0076 5A60     		str	r2, [r3, #4]
 2390 0078 9A60     		str	r2, [r3, #8]
 2391 007a DA60     		str	r2, [r3, #12]
 754:Task/Task_Control.c ****                     {
 2392              		.loc 1 754 21 view .LVU789
 754:Task/Task_Control.c ****                     {
 2393              		.loc 1 754 35 is_stmt 0 view .LVU790
 2394 007c 424B     		ldr	r3, .L162
 2395 007e DA69     		ldr	r2, [r3, #28]
 754:Task/Task_Control.c ****                     {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 65


 2396              		.loc 1 754 80 view .LVU791
 2397 0080 434B     		ldr	r3, .L162+8
 754:Task/Task_Control.c ****                     {
 2398              		.loc 1 754 24 view .LVU792
 2399 0082 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 2400 0084 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 2401 0086 9047     		blx	r2
 2402              	.LVL171:
 754:Task/Task_Control.c ****                     {
 2403              		.loc 1 754 23 view .LVU793
 2404 0088 48B1     		cbz	r0, .L144
 756:Task/Task_Control.c ****                         SrvActuator.save(CLIData.index);
 2405              		.loc 1 756 25 is_stmt 1 view .LVU794
 2406 008a 4449     		ldr	r1, .L162+20
 2407 008c 2046     		mov	r0, r4
 2408 008e FFF7FEFF 		bl	shellPrint
 2409              	.LVL172:
 757:Task/Task_Control.c ****                     }
 2410              		.loc 1 757 25 view .LVU795
 757:Task/Task_Control.c ****                     }
 2411              		.loc 1 757 36 is_stmt 0 view .LVU796
 2412 0092 3D4B     		ldr	r3, .L162
 2413 0094 9B6B     		ldr	r3, [r3, #56]
 757:Task/Task_Control.c ****                     }
 2414              		.loc 1 757 25 view .LVU797
 2415 0096 3E4A     		ldr	r2, .L162+8
 2416 0098 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
 2417 009a 9847     		blx	r3
 2418              	.LVL173:
 2419 009c DFE7     		b	.L143
 2420              	.L144:
 760:Task/Task_Control.c ****                     break;
 2421              		.loc 1 760 25 is_stmt 1 view .LVU798
 2422 009e 4049     		ldr	r1, .L162+24
 2423 00a0 2046     		mov	r0, r4
 2424 00a2 FFF7FEFF 		bl	shellPrint
 2425              	.LVL174:
 2426 00a6 DAE7     		b	.L143
 2427              	.L140:
 764:Task/Task_Control.c ****                     {
 2428              		.loc 1 764 21 view .LVU799
 764:Task/Task_Control.c ****                     {
 2429              		.loc 1 764 31 is_stmt 0 view .LVU800
 2430 00a8 394B     		ldr	r3, .L162+8
 2431 00aa 5C79     		ldrb	r4, [r3, #5]	@ zero_extendqisi2
 2432              	.LVL175:
 764:Task/Task_Control.c ****                     {
 2433              		.loc 1 764 51 view .LVU801
 2434 00ac 364B     		ldr	r3, .L162
 2435 00ae 9B6A     		ldr	r3, [r3, #40]
 764:Task/Task_Control.c ****                     {
 2436              		.loc 1 764 40 view .LVU802
 2437 00b0 9847     		blx	r3
 2438              	.LVL176:
 2439 00b2 8DF81000 		strb	r0, [sp, #16]
 2440 00b6 C0F30723 		ubfx	r3, r0, #8, #8
 2441 00ba 8DF81130 		strb	r3, [sp, #17]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 66


 2442 00be C0F30740 		ubfx	r0, r0, #16, #8
 2443 00c2 8DF81200 		strb	r0, [sp, #18]
 764:Task/Task_Control.c ****                     {
 2444              		.loc 1 764 61 view .LVU803
 2445 00c6 DBB2     		uxtb	r3, r3
 764:Task/Task_Control.c ****                     {
 2446              		.loc 1 764 23 view .LVU804
 2447 00c8 9C42     		cmp	r4, r3
 2448 00ca 1ED3     		bcc	.L154
 2449              	.LBB4:
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2450              		.loc 1 773 37 view .LVU805
 2451 00cc 0024     		movs	r4, #0
 2452 00ce 25E0     		b	.L146
 2453              	.LVL177:
 2454              	.L147:
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2455              		.loc 1 773 37 view .LVU806
 2456              	.LBE4:
 2457              	.LBB5:
 767:Task/Task_Control.c **** 
 2458              		.loc 1 767 29 is_stmt 1 discriminator 3 view .LVU807
 767:Task/Task_Control.c **** 
 2459              		.loc 1 767 46 is_stmt 0 discriminator 3 view .LVU808
 2460 00d0 314B     		ldr	r3, .L162+16
 2461 00d2 0022     		movs	r2, #0
 2462 00d4 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 2463              		.loc 1 766 80 is_stmt 1 discriminator 3 view .LVU809
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 2464              		.loc 1 766 81 is_stmt 0 discriminator 3 view .LVU810
 2465 00d8 0134     		adds	r4, r4, #1
 2466              	.LVL178:
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 2467              		.loc 1 766 81 discriminator 3 view .LVU811
 2468 00da E4B2     		uxtb	r4, r4
 2469              	.LVL179:
 2470              	.L145:
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 2471              		.loc 1 766 44 is_stmt 1 discriminator 1 view .LVU812
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 2472              		.loc 1 766 59 is_stmt 0 discriminator 1 view .LVU813
 2473 00dc 2A4B     		ldr	r3, .L162
 2474 00de 9B6A     		ldr	r3, [r3, #40]
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 2475              		.loc 1 766 48 discriminator 1 view .LVU814
 2476 00e0 9847     		blx	r3
 2477              	.LVL180:
 2478 00e2 8DF81400 		strb	r0, [sp, #20]
 2479 00e6 C0F30723 		ubfx	r3, r0, #8, #8
 2480 00ea 8DF81530 		strb	r3, [sp, #21]
 2481 00ee C0F30740 		ubfx	r0, r0, #16, #8
 2482 00f2 8DF81600 		strb	r0, [sp, #22]
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 2483              		.loc 1 766 69 discriminator 1 view .LVU815
 2484 00f6 DBB2     		uxtb	r3, r3
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 67


 2485              		.loc 1 766 25 discriminator 1 view .LVU816
 2486 00f8 A342     		cmp	r3, r4
 2487 00fa E9D8     		bhi	.L147
 2488              	.LBE5:
 769:Task/Task_Control.c ****                     }
 2489              		.loc 1 769 25 is_stmt 1 view .LVU817
 769:Task/Task_Control.c ****                     }
 2490              		.loc 1 769 46 is_stmt 0 view .LVU818
 2491 00fc 244B     		ldr	r3, .L162+8
 2492 00fe 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 769:Task/Task_Control.c ****                     }
 2493              		.loc 1 769 63 view .LVU819
 2494 0100 D988     		ldrh	r1, [r3, #6]
 769:Task/Task_Control.c ****                     }
 2495              		.loc 1 769 54 view .LVU820
 2496 0102 254B     		ldr	r3, .L162+16
 2497 0104 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2498 0108 A9E7     		b	.L143
 2499              	.LVL181:
 2500              	.L154:
 2501              	.LBB6:
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 2502              		.loc 1 766 37 view .LVU821
 2503 010a 0024     		movs	r4, #0
 2504 010c E6E7     		b	.L145
 2505              	.LVL182:
 2506              	.L148:
 766:Task/Task_Control.c ****                             moto_ctl_buff[i] = 0;
 2507              		.loc 1 766 37 view .LVU822
 2508              	.LBE6:
 2509              	.LBB7:
 774:Task/Task_Control.c ****                     }
 2510              		.loc 1 774 29 is_stmt 1 discriminator 3 view .LVU823
 774:Task/Task_Control.c ****                     }
 2511              		.loc 1 774 55 is_stmt 0 discriminator 3 view .LVU824
 2512 010e 204B     		ldr	r3, .L162+8
 2513 0110 DA88     		ldrh	r2, [r3, #6]
 774:Task/Task_Control.c ****                     }
 2514              		.loc 1 774 46 discriminator 3 view .LVU825
 2515 0112 214B     		ldr	r3, .L162+16
 2516 0114 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2517              		.loc 1 773 80 is_stmt 1 discriminator 3 view .LVU826
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2518              		.loc 1 773 81 is_stmt 0 discriminator 3 view .LVU827
 2519 0118 0134     		adds	r4, r4, #1
 2520              	.LVL183:
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2521              		.loc 1 773 81 discriminator 3 view .LVU828
 2522 011a E4B2     		uxtb	r4, r4
 2523              	.LVL184:
 2524              	.L146:
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2525              		.loc 1 773 44 is_stmt 1 discriminator 1 view .LVU829
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2526              		.loc 1 773 59 is_stmt 0 discriminator 1 view .LVU830
 2527 011c 1A4B     		ldr	r3, .L162
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 68


 2528 011e 9B6A     		ldr	r3, [r3, #40]
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2529              		.loc 1 773 48 discriminator 1 view .LVU831
 2530 0120 9847     		blx	r3
 2531              	.LVL185:
 2532 0122 8DF81800 		strb	r0, [sp, #24]
 2533 0126 C0F30723 		ubfx	r3, r0, #8, #8
 2534 012a 8DF81930 		strb	r3, [sp, #25]
 2535 012e C0F30740 		ubfx	r0, r0, #16, #8
 2536 0132 8DF81A00 		strb	r0, [sp, #26]
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2537              		.loc 1 773 69 discriminator 1 view .LVU832
 2538 0136 DBB2     		uxtb	r3, r3
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2539              		.loc 1 773 25 discriminator 1 view .LVU833
 2540 0138 A342     		cmp	r3, r4
 2541 013a E8D8     		bhi	.L148
 2542 013c 8FE7     		b	.L143
 2543              	.LVL186:
 2544              	.L161:
 773:Task/Task_Control.c ****                             moto_ctl_buff[i] = CLIData.value;
 2545              		.loc 1 773 25 discriminator 1 view .LVU834
 2546              	.LBE7:
 779:Task/Task_Control.c ****                     TaskControl_Monitor.CLI_enable = false;
 2547              		.loc 1 779 21 is_stmt 1 view .LVU835
 2548 013e 164A     		ldr	r2, .L162+16
 2549 0140 0023     		movs	r3, #0
 2550 0142 1360     		str	r3, [r2]
 2551 0144 5360     		str	r3, [r2, #4]
 2552 0146 9360     		str	r3, [r2, #8]
 2553 0148 D360     		str	r3, [r2, #12]
 780:Task/Task_Control.c ****                     break;
 2554              		.loc 1 780 21 view .LVU836
 780:Task/Task_Control.c ****                     break;
 2555              		.loc 1 780 52 is_stmt 0 view .LVU837
 2556 014a 104A     		ldr	r2, .L162+4
 2557 014c 9371     		strb	r3, [r2, #6]
 781:Task/Task_Control.c **** 
 2558              		.loc 1 781 21 is_stmt 1 view .LVU838
 2559 014e 86E7     		b	.L143
 2560              	.LVL187:
 2561              	.L151:
 2562              	.LBB8:
 794:Task/Task_Control.c ****     }
 2563              		.loc 1 794 13 discriminator 3 view .LVU839
 794:Task/Task_Control.c ****     }
 2564              		.loc 1 794 24 is_stmt 0 discriminator 3 view .LVU840
 2565 0150 0D4B     		ldr	r3, .L162
 2566 0152 1B6B     		ldr	r3, [r3, #48]
 794:Task/Task_Control.c ****     }
 2567              		.loc 1 794 13 discriminator 3 view .LVU841
 2568 0154 104A     		ldr	r2, .L162+16
 2569 0156 32F81410 		ldrh	r1, [r2, r4, lsl #1]
 2570 015a 2046     		mov	r0, r4
 2571 015c 9847     		blx	r3
 2572              	.LVL188:
 793:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 69


 2573              		.loc 1 793 65 is_stmt 1 discriminator 3 view .LVU842
 793:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 2574              		.loc 1 793 66 is_stmt 0 discriminator 3 view .LVU843
 2575 015e 0134     		adds	r4, r4, #1
 2576              	.LVL189:
 793:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 2577              		.loc 1 793 66 discriminator 3 view .LVU844
 2578 0160 E4B2     		uxtb	r4, r4
 2579              	.LVL190:
 2580              	.L149:
 793:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 2581              		.loc 1 793 29 is_stmt 1 discriminator 1 view .LVU845
 793:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 2582              		.loc 1 793 44 is_stmt 0 discriminator 1 view .LVU846
 2583 0162 094B     		ldr	r3, .L162
 2584 0164 9B6A     		ldr	r3, [r3, #40]
 793:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 2585              		.loc 1 793 33 discriminator 1 view .LVU847
 2586 0166 9847     		blx	r3
 2587              	.LVL191:
 2588 0168 8DF81C00 		strb	r0, [sp, #28]
 2589 016c C0F30723 		ubfx	r3, r0, #8, #8
 2590 0170 8DF81D30 		strb	r3, [sp, #29]
 2591 0174 C0F30740 		ubfx	r0, r0, #16, #8
 2592 0178 8DF81E00 		strb	r0, [sp, #30]
 793:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 2593              		.loc 1 793 54 discriminator 1 view .LVU848
 2594 017c DBB2     		uxtb	r3, r3
 793:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 2595              		.loc 1 793 9 discriminator 1 view .LVU849
 2596 017e A342     		cmp	r3, r4
 2597 0180 E6D8     		bhi	.L151
 2598 0182 5CE7     		b	.L136
 2599              	.LVL192:
 2600              	.L159:
 793:Task/Task_Control.c ****             SrvActuator.moto_direct_drive(i, moto_ctl_buff[i]);
 2601              		.loc 1 793 22 view .LVU850
 2602 0184 0024     		movs	r4, #0
 2603 0186 ECE7     		b	.L149
 2604              	.L163:
 2605              		.align	2
 2606              	.L162:
 2607 0188 00000000 		.word	SrvActuator
 2608 018c 00000000 		.word	.LANCHOR0
 2609 0190 00000000 		.word	.LANCHOR8
 2610 0194 00000000 		.word	SrvOsCommon
 2611 0198 00000000 		.word	.LANCHOR9
 2612 019c 00000000 		.word	.LC3
 2613 01a0 1C000000 		.word	.LC4
 2614              	.LBE8:
 2615              		.cfi_endproc
 2616              	.LFE2083:
 2618              		.global	__aeabi_f2d
 2619              		.section	.rodata.TaskControl_PID_Param_Print.str1.4,"aMS",%progbits,1
 2620              		.align	2
 2621              	.LC5:
 2622 0000 09206750 		.ascii	"\011 gP:          %f \015\012\000"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 70


 2622      3A202020 
 2622      20202020 
 2622      20202025 
 2622      66200D0A 
 2623 0015 000000   		.align	2
 2624              	.LC6:
 2625 0018 0920502D 		.ascii	"\011 P-Diff Max:  %f \015\012\000"
 2625      44696666 
 2625      204D6178 
 2625      3A202025 
 2625      66200D0A 
 2626 002d 000000   		.align	2
 2627              	.LC7:
 2628 0030 0920502D 		.ascii	"\011 P-Diff Min:  %f \015\012\000"
 2628      44696666 
 2628      204D696E 
 2628      3A202025 
 2628      66200D0A 
 2629 0045 000000   		.align	2
 2630              	.LC8:
 2631 0048 09206749 		.ascii	"\011 gI:          %f \015\012\000"
 2631      3A202020 
 2631      20202020 
 2631      20202025 
 2631      66200D0A 
 2632 005d 000000   		.align	2
 2633              	.LC9:
 2634 0060 0920492D 		.ascii	"\011 I-Max:       %f \015\012\000"
 2634      4D61783A 
 2634      20202020 
 2634      20202025 
 2634      66200D0A 
 2635 0075 000000   		.align	2
 2636              	.LC10:
 2637 0078 0920492D 		.ascii	"\011 I-Min:       %f \015\012\000"
 2637      4D696E3A 
 2637      20202020 
 2637      20202025 
 2637      66200D0A 
 2638 008d 000000   		.align	2
 2639              	.LC11:
 2640 0090 09206744 		.ascii	"\011 gD:          %f \015\012\000"
 2640      3A202020 
 2640      20202020 
 2640      20202025 
 2640      66200D0A 
 2641 00a5 000000   		.align	2
 2642              	.LC12:
 2643 00a8 0D0A00   		.ascii	"\015\012\000"
 2644              		.section	.text.TaskControl_PID_Param_Print,"ax",%progbits
 2645              		.align	1
 2646              		.syntax unified
 2647              		.thumb
 2648              		.thumb_func
 2650              	TaskControl_PID_Param_Print:
 2651              	.LVL193:
 2652              	.LFB2087:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 71


 799:Task/Task_Control.c **** 
 800:Task/Task_Control.c **** static void TaskControl_CLI_MotoSpinTest(uint8_t moto_index, uint16_t test_val)
 801:Task/Task_Control.c **** {
 802:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 803:Task/Task_Control.c ****     bool arm_state = false;
 804:Task/Task_Control.c ****     int16_t moto_max = 0;
 805:Task/Task_Control.c ****     int16_t moto_idle = 0;
 806:Task/Task_Control.c ****     int16_t moto_min = 0;
 807:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 808:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 809:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 810:Task/Task_Control.c ****     bool ctl_enable = true;
 811:Task/Task_Control.c **** 
 812:Task/Task_Control.c ****     if(shell_obj == NULL)
 813:Task/Task_Control.c ****         return;
 814:Task/Task_Control.c **** 
 815:Task/Task_Control.c ****     SrvDataHub.get_arm_state(&arm_state);
 816:Task/Task_Control.c **** 
 817:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 818:Task/Task_Control.c ****     {
 819:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl semaphore create failed\r\n");
 820:Task/Task_Control.c ****         return;
 821:Task/Task_Control.c ****     }
 822:Task/Task_Control.c **** 
 823:Task/Task_Control.c ****     if(arm_state == DRONE_DISARM)
 824:Task/Task_Control.c ****     {
 825:Task/Task_Control.c ****         TaskControl_Monitor.CLI_enable = false;
 826:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 827:Task/Task_Control.c ****         return;
 828:Task/Task_Control.c ****     }
 829:Task/Task_Control.c **** 
 830:Task/Task_Control.c ****     TaskControl_Monitor.CLI_enable = true;
 831:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 832:Task/Task_Control.c **** 
 833:Task/Task_Control.c ****     shellPrint(shell_obj, "moto count : %d\r\n", moto_num);
 834:Task/Task_Control.c ****     if(moto_index >= moto_num)
 835:Task/Task_Control.c ****     {
 836:Task/Task_Control.c ****         shellPrint(shell_obj, "all moto selected\r\n");
 837:Task/Task_Control.c ****         for (uint8_t i = 0; i < moto_num; i ++)
 838:Task/Task_Control.c ****         {
 839:Task/Task_Control.c ****             if (!SrvActuator.get_moto_control_range(i, &moto_min, &moto_idle, &moto_max))
 840:Task/Task_Control.c ****             {
 841:Task/Task_Control.c ****                 ctl_enable = false;
 842:Task/Task_Control.c ****                 shellPrint(shell_obj, "moto %d control range down below\r\n", i);
 843:Task/Task_Control.c ****                 shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 844:Task/Task_Control.c ****                 shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 845:Task/Task_Control.c ****                 shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 846:Task/Task_Control.c ****                 break;
 847:Task/Task_Control.c ****             }
 848:Task/Task_Control.c ****         }
 849:Task/Task_Control.c ****     }
 850:Task/Task_Control.c ****     else
 851:Task/Task_Control.c ****     {
 852:Task/Task_Control.c ****         shellPrint(shell_obj, "moto %d is selected\r\n", moto_index);
 853:Task/Task_Control.c ****         if(!SrvActuator.get_moto_control_range(moto_index, &moto_min, &moto_idle, &moto_max))
 854:Task/Task_Control.c ****         {
 855:Task/Task_Control.c ****             ctl_enable = false;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 72


 856:Task/Task_Control.c ****             shellPrint(shell_obj, "moto %d control range down below\r\n", moto_index);
 857:Task/Task_Control.c ****             shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 858:Task/Task_Control.c ****             shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 859:Task/Task_Control.c ****             shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 860:Task/Task_Control.c ****         }
 861:Task/Task_Control.c ****     }
 862:Task/Task_Control.c **** 
 863:Task/Task_Control.c ****     if (!ctl_enable)
 864:Task/Task_Control.c ****     {
 865:Task/Task_Control.c ****         shellPrint(shell_obj, "Get moto control data range failed\r\n");
 866:Task/Task_Control.c ****         return;
 867:Task/Task_Control.c ****     }
 868:Task/Task_Control.c **** 
 869:Task/Task_Control.c ****     if(test_val > moto_max)
 870:Task/Task_Control.c ****     {
 871:Task/Task_Control.c ****         shellPrint(shell_obj, "input value [%d] is bigger than max [%d] value", test_val, moto_max)
 872:Task/Task_Control.c ****     }
 873:Task/Task_Control.c ****     else if(test_val < moto_min)
 874:Task/Task_Control.c ****     {
 875:Task/Task_Control.c ****         shellPrint(shell_obj, "input value [%d] is lower than min [%d] value", test_val, moto_min);
 876:Task/Task_Control.c ****     }
 877:Task/Task_Control.c ****     else
 878:Task/Task_Control.c ****     {
 879:Task/Task_Control.c ****         shellPrint(shell_obj, "current control value %d\r\n", test_val);
 880:Task/Task_Control.c **** 
 881:Task/Task_Control.c ****         p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 882:Task/Task_Control.c ****         if(p_CLIData)
 883:Task/Task_Control.c ****         {
 884:Task/Task_Control.c ****             p_CLIData->cli_type = TaskControl_Moto_Set_Spin;
 885:Task/Task_Control.c ****             p_CLIData->index = moto_index;
 886:Task/Task_Control.c ****             p_CLIData->timestamp = time_stamp;
 887:Task/Task_Control.c ****             p_CLIData->value = test_val;
 888:Task/Task_Control.c **** 
 889:Task/Task_Control.c ****             if(osMessagePut(TaskControl_Monitor.CLIMessage_ID, (uint32_t)p_CLIData, CLI_MESSAGE_OPE
 890:Task/Task_Control.c ****             {
 891:Task/Task_Control.c ****                 SrvOsCommon.free(p_CLIData);
 892:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 893:Task/Task_Control.c ****             }
 894:Task/Task_Control.c ****         }
 895:Task/Task_Control.c ****         else
 896:Task/Task_Control.c ****         {
 897:Task/Task_Control.c ****             shellPrint(shell_obj, "Moto control test data malloc failed\r\n");
 898:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 899:Task/Task_Control.c ****         }
 900:Task/Task_Control.c ****     }
 901:Task/Task_Control.c **** }
 902:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 903:Task/Task_Control.c **** 
 904:Task/Task_Control.c **** static void TaskControl_CLI_Rev_MotoSpinDir(uint8_t moto_index, uint8_t dir)
 905:Task/Task_Control.c **** {
 906:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 907:Task/Task_Control.c ****     bool arm_state = false;
 908:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 909:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 910:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 911:Task/Task_Control.c **** 
 912:Task/Task_Control.c ****     if(shell_obj == NULL)
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 73


 913:Task/Task_Control.c ****         return;
 914:Task/Task_Control.c **** 
 915:Task/Task_Control.c ****     SrvDataHub.get_arm_state(&arm_state);
 916:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 917:Task/Task_Control.c ****     {
 918:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl semaphore create failed\r\n");
 919:Task/Task_Control.c ****         return;
 920:Task/Task_Control.c ****     }
 921:Task/Task_Control.c **** 
 922:Task/Task_Control.c ****     if(arm_state == DRONE_DISARM)
 923:Task/Task_Control.c ****     {
 924:Task/Task_Control.c ****         TaskControl_Monitor.CLI_enable = false;
 925:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 926:Task/Task_Control.c ****         return;
 927:Task/Task_Control.c ****     }
 928:Task/Task_Control.c **** 
 929:Task/Task_Control.c ****     TaskControl_Monitor.CLI_enable = true;
 930:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 931:Task/Task_Control.c ****     if(moto_index >= moto_num)
 932:Task/Task_Control.c ****     {
 933:Task/Task_Control.c ****         shellPrint(shell_obj, "index over range\r\n");
 934:Task/Task_Control.c ****         shellPrint(shell_obj, "arg must less than %d\r\n", (moto_num - 1));
 935:Task/Task_Control.c ****         return;
 936:Task/Task_Control.c ****     }
 937:Task/Task_Control.c ****         
 938:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 939:Task/Task_Control.c ****     if(p_CLIData == NULL)
 940:Task/Task_Control.c ****     {
 941:Task/Task_Control.c ****         shellPrint(shell_obj, "Moto direction setting data malloc failed\r\n");
 942:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 943:Task/Task_Control.c ****         return;
 944:Task/Task_Control.c ****     }
 945:Task/Task_Control.c **** 
 946:Task/Task_Control.c ****     shellPrint(shell_obj, "0 ---- direction 1\r\n");
 947:Task/Task_Control.c ****     shellPrint(shell_obj, "1 ---- direction 2\r\n");
 948:Task/Task_Control.c **** 
 949:Task/Task_Control.c ****     if (dir > 1)
 950:Task/Task_Control.c ****     {
 951:Task/Task_Control.c ****         shellPrint(shell_obj, "Error direction input\r\n");
 952:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 953:Task/Task_Control.c ****         return;
 954:Task/Task_Control.c ****     }
 955:Task/Task_Control.c **** 
 956:Task/Task_Control.c ****     shellPrint(shell_obj, "Setting time stamp %d\r\n", time_stamp);
 957:Task/Task_Control.c ****     p_CLIData->cli_type = TaskControl_Moto_Set_SpinDir;
 958:Task/Task_Control.c ****     p_CLIData->timestamp = time_stamp;
 959:Task/Task_Control.c ****     p_CLIData->index = moto_index;
 960:Task/Task_Control.c ****     p_CLIData->value = dir;
 961:Task/Task_Control.c **** 
 962:Task/Task_Control.c ****     if(osMessagePut(TaskControl_Monitor.CLIMessage_ID, (uint32_t)p_CLIData, CLI_MESSAGE_OPEARATE_TI
 963:Task/Task_Control.c ****     {
 964:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 965:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 966:Task/Task_Control.c ****     }
 967:Task/Task_Control.c **** }
 968:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 969:Task/Task_Control.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 74


 970:Task/Task_Control.c **** static void TaskControl_Close_CLI(void)
 971:Task/Task_Control.c **** {
 972:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 973:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 974:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 975:Task/Task_Control.c **** 
 976:Task/Task_Control.c ****     if(shell_obj == NULL)
 977:Task/Task_Control.c ****         return;
 978:Task/Task_Control.c **** 
 979:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 980:Task/Task_Control.c ****     {
 981:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl semaphore create failed\r\n");
 982:Task/Task_Control.c ****         return;
 983:Task/Task_Control.c ****     }
 984:Task/Task_Control.c **** 
 985:Task/Task_Control.c ****     shellPrint(shell_obj, "TaskControl CLI disable\r\n");
 986:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 987:Task/Task_Control.c ****     if (p_CLIData == NULL)
 988:Task/Task_Control.c ****     {
 989:Task/Task_Control.c ****         shellPrint(shell_obj, "Moto control test data malloc failed\r\n");
 990:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 991:Task/Task_Control.c ****         return;
 992:Task/Task_Control.c ****     }
 993:Task/Task_Control.c **** 
 994:Task/Task_Control.c ****     p_CLIData->cli_type = TaskControl_Moto_CliDisable;
 995:Task/Task_Control.c ****     p_CLIData->timestamp = time_stamp;
 996:Task/Task_Control.c ****     p_CLIData->index = 0;
 997:Task/Task_Control.c ****     p_CLIData->value = 0;
 998:Task/Task_Control.c **** 
 999:Task/Task_Control.c ****     if(osMessagePut(TaskControl_Monitor.CLIMessage_ID, (uint32_t)p_CLIData, CLI_MESSAGE_OPEARATE_TI
1000:Task/Task_Control.c ****     {
1001:Task/Task_Control.c ****         shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
1002:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
1003:Task/Task_Control.c ****     }
1004:Task/Task_Control.c **** }
1005:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
1006:Task/Task_Control.c **** 
1007:Task/Task_Control.c **** static bool TaskControl_PID_Param_Print(Shell *obj, PIDObj_TypeDef para)
1008:Task/Task_Control.c **** {
 2653              		.loc 1 1008 1 is_stmt 1 view -0
 2654              		.cfi_startproc
 2655              		@ args = 68, pretend = 16, frame = 0
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 2657              		.loc 1 1008 1 is_stmt 0 view .LVU852
 2658 0000 84B0     		sub	sp, sp, #16
 2659              	.LCFI29:
 2660              		.cfi_def_cfa_offset 16
 2661 0002 10B5     		push	{r4, lr}
 2662              	.LCFI30:
 2663              		.cfi_def_cfa_offset 24
 2664              		.cfi_offset 4, -24
 2665              		.cfi_offset 14, -20
 2666 0004 0DF10C0C 		add	ip, sp, #12
 2667 0008 8CE80E00 		stm	ip, {r1, r2, r3}
1009:Task/Task_Control.c ****     if (obj)
 2668              		.loc 1 1009 5 is_stmt 1 view .LVU853
 2669              		.loc 1 1009 8 is_stmt 0 view .LVU854
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 75


 2670 000c 20B9     		cbnz	r0, .L168
1010:Task/Task_Control.c ****     {
1011:Task/Task_Control.c ****         shellPrint(obj, "\t gP:          %f \r\n", para.gP);
1012:Task/Task_Control.c ****         shellPrint(obj, "\t P-Diff Max:  %f \r\n", para.diff_max);
1013:Task/Task_Control.c ****         shellPrint(obj, "\t P-Diff Min:  %f \r\n", para.diff_min);
1014:Task/Task_Control.c ****         shellPrint(obj, "\t gI:          %f \r\n", para.gI);
1015:Task/Task_Control.c ****         shellPrint(obj, "\t I-Max:       %f \r\n", para.gI_Max);
1016:Task/Task_Control.c ****         shellPrint(obj, "\t I-Min:       %f \r\n", para.gI_Min);
1017:Task/Task_Control.c ****         shellPrint(obj, "\t gD:          %f \r\n", para.gD);
1018:Task/Task_Control.c ****         shellPrint(obj, "\r\n");
1019:Task/Task_Control.c **** 
1020:Task/Task_Control.c ****         return true;
1021:Task/Task_Control.c ****     }
1022:Task/Task_Control.c **** 
1023:Task/Task_Control.c ****     return false;
 2671              		.loc 1 1023 12 view .LVU855
 2672 000e 0020     		movs	r0, #0
 2673              	.LVL194:
 2674              	.L165:
1024:Task/Task_Control.c **** }
 2675              		.loc 1 1024 1 view .LVU856
 2676 0010 BDE81040 		pop	{r4, lr}
 2677              	.LCFI31:
 2678              		.cfi_remember_state
 2679              		.cfi_restore 14
 2680              		.cfi_restore 4
 2681              		.cfi_def_cfa_offset 16
 2682 0014 04B0     		add	sp, sp, #16
 2683              	.LCFI32:
 2684              		.cfi_def_cfa_offset 0
 2685 0016 7047     		bx	lr
 2686              	.LVL195:
 2687              	.L168:
 2688              	.LCFI33:
 2689              		.cfi_restore_state
 2690              		.loc 1 1024 1 view .LVU857
 2691 0018 0446     		mov	r4, r0
1011:Task/Task_Control.c ****         shellPrint(obj, "\t P-Diff Max:  %f \r\n", para.diff_max);
 2692              		.loc 1 1011 9 is_stmt 1 view .LVU858
 2693 001a 0898     		ldr	r0, [sp, #32]	@ float
 2694              	.LVL196:
1011:Task/Task_Control.c ****         shellPrint(obj, "\t P-Diff Max:  %f \r\n", para.diff_max);
 2695              		.loc 1 1011 9 is_stmt 0 view .LVU859
 2696 001c FFF7FEFF 		bl	__aeabi_f2d
 2697              	.LVL197:
 2698 0020 0246     		mov	r2, r0
 2699 0022 0B46     		mov	r3, r1
 2700 0024 1F49     		ldr	r1, .L169
 2701 0026 2046     		mov	r0, r4
 2702 0028 FFF7FEFF 		bl	shellPrint
 2703              	.LVL198:
1012:Task/Task_Control.c ****         shellPrint(obj, "\t P-Diff Min:  %f \r\n", para.diff_min);
 2704              		.loc 1 1012 9 is_stmt 1 view .LVU860
 2705 002c 0598     		ldr	r0, [sp, #20]	@ float
 2706 002e FFF7FEFF 		bl	__aeabi_f2d
 2707              	.LVL199:
 2708 0032 0246     		mov	r2, r0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 76


 2709 0034 0B46     		mov	r3, r1
 2710 0036 1C49     		ldr	r1, .L169+4
 2711 0038 2046     		mov	r0, r4
 2712 003a FFF7FEFF 		bl	shellPrint
 2713              	.LVL200:
1013:Task/Task_Control.c ****         shellPrint(obj, "\t gI:          %f \r\n", para.gI);
 2714              		.loc 1 1013 9 view .LVU861
 2715 003e 0698     		ldr	r0, [sp, #24]	@ float
 2716 0040 FFF7FEFF 		bl	__aeabi_f2d
 2717              	.LVL201:
 2718 0044 0246     		mov	r2, r0
 2719 0046 0B46     		mov	r3, r1
 2720 0048 1849     		ldr	r1, .L169+8
 2721 004a 2046     		mov	r0, r4
 2722 004c FFF7FEFF 		bl	shellPrint
 2723              	.LVL202:
1014:Task/Task_Control.c ****         shellPrint(obj, "\t I-Max:       %f \r\n", para.gI_Max);
 2724              		.loc 1 1014 9 view .LVU862
 2725 0050 0A98     		ldr	r0, [sp, #40]	@ float
 2726 0052 FFF7FEFF 		bl	__aeabi_f2d
 2727              	.LVL203:
 2728 0056 0246     		mov	r2, r0
 2729 0058 0B46     		mov	r3, r1
 2730 005a 1549     		ldr	r1, .L169+12
 2731 005c 2046     		mov	r0, r4
 2732 005e FFF7FEFF 		bl	shellPrint
 2733              	.LVL204:
1015:Task/Task_Control.c ****         shellPrint(obj, "\t I-Min:       %f \r\n", para.gI_Min);
 2734              		.loc 1 1015 9 view .LVU863
 2735 0062 0C98     		ldr	r0, [sp, #48]	@ float
 2736 0064 FFF7FEFF 		bl	__aeabi_f2d
 2737              	.LVL205:
 2738 0068 0246     		mov	r2, r0
 2739 006a 0B46     		mov	r3, r1
 2740 006c 1149     		ldr	r1, .L169+16
 2741 006e 2046     		mov	r0, r4
 2742 0070 FFF7FEFF 		bl	shellPrint
 2743              	.LVL206:
1016:Task/Task_Control.c ****         shellPrint(obj, "\t gD:          %f \r\n", para.gD);
 2744              		.loc 1 1016 9 view .LVU864
 2745 0074 0B98     		ldr	r0, [sp, #44]	@ float
 2746 0076 FFF7FEFF 		bl	__aeabi_f2d
 2747              	.LVL207:
 2748 007a 0246     		mov	r2, r0
 2749 007c 0B46     		mov	r3, r1
 2750 007e 0E49     		ldr	r1, .L169+20
 2751 0080 2046     		mov	r0, r4
 2752 0082 FFF7FEFF 		bl	shellPrint
 2753              	.LVL208:
1017:Task/Task_Control.c ****         shellPrint(obj, "\r\n");
 2754              		.loc 1 1017 9 view .LVU865
 2755 0086 0F98     		ldr	r0, [sp, #60]	@ float
 2756 0088 FFF7FEFF 		bl	__aeabi_f2d
 2757              	.LVL209:
 2758 008c 0246     		mov	r2, r0
 2759 008e 0B46     		mov	r3, r1
 2760 0090 0A49     		ldr	r1, .L169+24
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 77


 2761 0092 2046     		mov	r0, r4
 2762 0094 FFF7FEFF 		bl	shellPrint
 2763              	.LVL210:
1018:Task/Task_Control.c **** 
 2764              		.loc 1 1018 9 view .LVU866
 2765 0098 0949     		ldr	r1, .L169+28
 2766 009a 2046     		mov	r0, r4
 2767 009c FFF7FEFF 		bl	shellPrint
 2768              	.LVL211:
1020:Task/Task_Control.c ****     }
 2769              		.loc 1 1020 9 view .LVU867
1020:Task/Task_Control.c ****     }
 2770              		.loc 1 1020 16 is_stmt 0 view .LVU868
 2771 00a0 0120     		movs	r0, #1
 2772 00a2 B5E7     		b	.L165
 2773              	.L170:
 2774              		.align	2
 2775              	.L169:
 2776 00a4 00000000 		.word	.LC5
 2777 00a8 18000000 		.word	.LC6
 2778 00ac 30000000 		.word	.LC7
 2779 00b0 48000000 		.word	.LC8
 2780 00b4 60000000 		.word	.LC9
 2781 00b8 78000000 		.word	.LC10
 2782 00bc 90000000 		.word	.LC11
 2783 00c0 A8000000 		.word	.LC12
 2784              		.cfi_endproc
 2785              	.LFE2087:
 2787              		.section	.rodata.TaskControl_Get_Inner_Controller_Parameter.str1.4,"aMS",%progbits,1
 2788              		.align	2
 2789              	.LC13:
 2790 0000 4779726F 		.ascii	"GyroX PID\015\012\000"
 2790      58205049 
 2790      440D0A00 
 2791              		.align	2
 2792              	.LC14:
 2793 000c 4779726F 		.ascii	"GyroY PID\015\012\000"
 2793      59205049 
 2793      440D0A00 
 2794              		.align	2
 2795              	.LC15:
 2796 0018 4779726F 		.ascii	"GyroZ PID\015\012\000"
 2796      5A205049 
 2796      440D0A00 
 2797              		.section	.text.TaskControl_Get_Inner_Controller_Parameter,"ax",%progbits
 2798              		.align	1
 2799              		.syntax unified
 2800              		.thumb
 2801              		.thumb_func
 2803              	TaskControl_Get_Inner_Controller_Parameter:
 2804              	.LFB2088:
1025:Task/Task_Control.c **** 
1026:Task/Task_Control.c **** static void TaskControl_Get_Inner_Controller_Parameter(void)
1027:Task/Task_Control.c **** {
 2805              		.loc 1 1027 1 is_stmt 1 view -0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 78


 2808              		@ frame_needed = 0, uses_anonymous_args = 0
 2809 0000 30B5     		push	{r4, r5, lr}
 2810              	.LCFI34:
 2811              		.cfi_def_cfa_offset 12
 2812              		.cfi_offset 4, -12
 2813              		.cfi_offset 5, -8
 2814              		.cfi_offset 14, -4
 2815 0002 8FB0     		sub	sp, sp, #60
 2816              	.LCFI35:
 2817              		.cfi_def_cfa_offset 72
1028:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 2818              		.loc 1 1028 5 view .LVU870
 2819              		.loc 1 1028 24 is_stmt 0 view .LVU871
 2820 0004 FFF7FEFF 		bl	Shell_GetInstence
 2821              	.LVL212:
1029:Task/Task_Control.c **** 
1030:Task/Task_Control.c ****     if(shell_obj == NULL)
 2822              		.loc 1 1030 5 is_stmt 1 view .LVU872
 2823              		.loc 1 1030 7 is_stmt 0 view .LVU873
 2824 0008 0028     		cmp	r0, #0
 2825 000a 58D0     		beq	.L171
 2826 000c 0546     		mov	r5, r0
1031:Task/Task_Control.c ****         return;
1032:Task/Task_Control.c ****     
1033:Task/Task_Control.c ****     shellPrint(shell_obj, "GyroX PID\r\n");
 2827              		.loc 1 1033 5 is_stmt 1 view .LVU874
 2828 000e 2D49     		ldr	r1, .L174
 2829 0010 FFF7FEFF 		bl	shellPrint
 2830              	.LVL213:
1034:Task/Task_Control.c ****     TaskControl_PID_Param_Print(shell_obj, TaskControl_Monitor.GyrXCtl_PIDObj);
 2831              		.loc 1 1034 5 view .LVU875
 2832 0014 2C4C     		ldr	r4, .L174+4
 2833 0016 EC46     		mov	ip, sp
 2834 0018 04F51C7E 		add	lr, r4, #624
 2835 001c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2836 0020 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2837 0024 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2838 0028 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2839 002c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2840 0030 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2841 0034 DEF80030 		ldr	r3, [lr]
 2842 0038 CCF80030 		str	r3, [ip]
 2843 003c 04F51973 		add	r3, r4, #612
 2844 0040 0ECB     		ldm	r3, {r1, r2, r3}
 2845 0042 2846     		mov	r0, r5
 2846 0044 FFF7FEFF 		bl	TaskControl_PID_Param_Print
 2847              	.LVL214:
1035:Task/Task_Control.c ****     
1036:Task/Task_Control.c ****     shellPrint(shell_obj, "GyroY PID\r\n");
 2848              		.loc 1 1036 5 view .LVU876
 2849 0048 2049     		ldr	r1, .L174+8
 2850 004a 2846     		mov	r0, r5
 2851 004c FFF7FEFF 		bl	shellPrint
 2852              	.LVL215:
1037:Task/Task_Control.c ****     TaskControl_PID_Param_Print(shell_obj, TaskControl_Monitor.GyrYCtl_PIDObj);
 2853              		.loc 1 1037 5 view .LVU877
 2854 0050 EC46     		mov	ip, sp
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 79


 2855 0052 04F52C7E 		add	lr, r4, #688
 2856 0056 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2857 005a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2858 005e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2859 0062 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2860 0066 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2861 006a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2862 006e DEF80030 		ldr	r3, [lr]
 2863 0072 CCF80030 		str	r3, [ip]
 2864 0076 04F52973 		add	r3, r4, #676
 2865 007a 0ECB     		ldm	r3, {r1, r2, r3}
 2866 007c 2846     		mov	r0, r5
 2867 007e FFF7FEFF 		bl	TaskControl_PID_Param_Print
 2868              	.LVL216:
1038:Task/Task_Control.c **** 
1039:Task/Task_Control.c ****     shellPrint(shell_obj, "GyroZ PID\r\n");
 2869              		.loc 1 1039 5 view .LVU878
 2870 0082 1349     		ldr	r1, .L174+12
 2871 0084 2846     		mov	r0, r5
 2872 0086 FFF7FEFF 		bl	shellPrint
 2873              	.LVL217:
1040:Task/Task_Control.c ****     TaskControl_PID_Param_Print(shell_obj, TaskControl_Monitor.GyrZCtl_PIDObj);
 2874              		.loc 1 1040 5 view .LVU879
 2875 008a EC46     		mov	ip, sp
 2876 008c 04F53C7E 		add	lr, r4, #752
 2877 0090 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2878 0094 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2879 0098 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2880 009c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2881 00a0 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2882 00a4 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2883 00a8 DEF80030 		ldr	r3, [lr]
 2884 00ac CCF80030 		str	r3, [ip]
 2885 00b0 04F53974 		add	r4, r4, #740
 2886 00b4 94E80E00 		ldm	r4, {r1, r2, r3}
 2887 00b8 2846     		mov	r0, r5
 2888 00ba FFF7FEFF 		bl	TaskControl_PID_Param_Print
 2889              	.LVL218:
 2890              	.L171:
1041:Task/Task_Control.c **** }
 2891              		.loc 1 1041 1 is_stmt 0 view .LVU880
 2892 00be 0FB0     		add	sp, sp, #60
 2893              	.LCFI36:
 2894              		.cfi_def_cfa_offset 12
 2895              		@ sp needed
 2896 00c0 30BD     		pop	{r4, r5, pc}
 2897              	.L175:
 2898 00c2 00BF     		.align	2
 2899              	.L174:
 2900 00c4 00000000 		.word	.LC13
 2901 00c8 00000000 		.word	.LANCHOR0
 2902 00cc 0C000000 		.word	.LC14
 2903 00d0 18000000 		.word	.LC15
 2904              		.cfi_endproc
 2905              	.LFE2088:
 2907              		.section	.rodata.TaskControl_Get_Outer_Controller_Parameter.str1.4,"aMS",%progbits,1
 2908              		.align	2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 80


 2909              	.LC16:
 2910 0000 50697463 		.ascii	"Pitch PID\015\012\000"
 2910      68205049 
 2910      440D0A00 
 2911              		.align	2
 2912              	.LC17:
 2913 000c 526F6C6C 		.ascii	"Roll PID\015\012\000"
 2913      20504944 
 2913      0D0A00
 2914              		.section	.text.TaskControl_Get_Outer_Controller_Parameter,"ax",%progbits
 2915              		.align	1
 2916              		.syntax unified
 2917              		.thumb
 2918              		.thumb_func
 2920              	TaskControl_Get_Outer_Controller_Parameter:
 2921              	.LFB2089:
1042:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
1043:Task/Task_Control.c **** 
1044:Task/Task_Control.c **** static void TaskControl_Get_Outer_Controller_Parameter(void)
1045:Task/Task_Control.c **** {
 2922              		.loc 1 1045 1 is_stmt 1 view -0
 2923              		.cfi_startproc
 2924              		@ args = 0, pretend = 0, frame = 0
 2925              		@ frame_needed = 0, uses_anonymous_args = 0
 2926 0000 30B5     		push	{r4, r5, lr}
 2927              	.LCFI37:
 2928              		.cfi_def_cfa_offset 12
 2929              		.cfi_offset 4, -12
 2930              		.cfi_offset 5, -8
 2931              		.cfi_offset 14, -4
 2932 0002 8FB0     		sub	sp, sp, #60
 2933              	.LCFI38:
 2934              		.cfi_def_cfa_offset 72
1046:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 2935              		.loc 1 1046 5 view .LVU882
 2936              		.loc 1 1046 24 is_stmt 0 view .LVU883
 2937 0004 FFF7FEFF 		bl	Shell_GetInstence
 2938              	.LVL219:
1047:Task/Task_Control.c **** 
1048:Task/Task_Control.c ****     if(shell_obj == NULL)
 2939              		.loc 1 1048 5 is_stmt 1 view .LVU884
 2940              		.loc 1 1048 7 is_stmt 0 view .LVU885
 2941 0008 D8B3     		cbz	r0, .L176
 2942 000a 0546     		mov	r5, r0
1049:Task/Task_Control.c ****         return;
1050:Task/Task_Control.c ****         
1051:Task/Task_Control.c ****     shellPrint(shell_obj, "Pitch PID\r\n");
 2943              		.loc 1 1051 5 is_stmt 1 view .LVU886
 2944 000c 1E49     		ldr	r1, .L179
 2945 000e FFF7FEFF 		bl	shellPrint
 2946              	.LVL220:
1052:Task/Task_Control.c ****     TaskControl_PID_Param_Print(shell_obj, TaskControl_Monitor.PitchCtl_PIDObj);
 2947              		.loc 1 1052 5 view .LVU887
 2948 0012 1E4C     		ldr	r4, .L179+4
 2949 0014 EC46     		mov	ip, sp
 2950 0016 04F50C7E 		add	lr, r4, #560
 2951 001a BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 81


 2952 001e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2953 0022 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2954 0026 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2955 002a BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2956 002e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2957 0032 DEF80030 		ldr	r3, [lr]
 2958 0036 CCF80030 		str	r3, [ip]
 2959 003a 04F50973 		add	r3, r4, #548
 2960 003e 0ECB     		ldm	r3, {r1, r2, r3}
 2961 0040 2846     		mov	r0, r5
 2962 0042 FFF7FEFF 		bl	TaskControl_PID_Param_Print
 2963              	.LVL221:
1053:Task/Task_Control.c **** 
1054:Task/Task_Control.c ****     shellPrint(shell_obj, "Roll PID\r\n");
 2964              		.loc 1 1054 5 view .LVU888
 2965 0046 1249     		ldr	r1, .L179+8
 2966 0048 2846     		mov	r0, r5
 2967 004a FFF7FEFF 		bl	shellPrint
 2968              	.LVL222:
1055:Task/Task_Control.c ****     TaskControl_PID_Param_Print(shell_obj, TaskControl_Monitor.RollCtl_PIDObj);
 2969              		.loc 1 1055 5 view .LVU889
 2970 004e EC46     		mov	ip, sp
 2971 0050 04F5F87E 		add	lr, r4, #496
 2972 0054 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2973 0058 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2974 005c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2975 0060 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2976 0064 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 2977 0068 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 2978 006c DEF80030 		ldr	r3, [lr]
 2979 0070 CCF80030 		str	r3, [ip]
 2980 0074 04F5F274 		add	r4, r4, #484
 2981 0078 94E80E00 		ldm	r4, {r1, r2, r3}
 2982 007c 2846     		mov	r0, r5
 2983 007e FFF7FEFF 		bl	TaskControl_PID_Param_Print
 2984              	.LVL223:
 2985              	.L176:
1056:Task/Task_Control.c **** }
 2986              		.loc 1 1056 1 is_stmt 0 view .LVU890
 2987 0082 0FB0     		add	sp, sp, #60
 2988              	.LCFI39:
 2989              		.cfi_def_cfa_offset 12
 2990              		@ sp needed
 2991 0084 30BD     		pop	{r4, r5, pc}
 2992              	.L180:
 2993 0086 00BF     		.align	2
 2994              	.L179:
 2995 0088 00000000 		.word	.LC16
 2996 008c 00000000 		.word	.LANCHOR0
 2997 0090 0C000000 		.word	.LC17
 2998              		.cfi_endproc
 2999              	.LFE2089:
 3001              		.section	.rodata.TaskControl_CLI_MotoSpinTest.str1.4,"aMS",%progbits,1
 3002              		.align	2
 3003              	.LC18:
 3004 0000 5461736B 		.ascii	"TaskControl semaphore create failed\015\012\000"
 3004      436F6E74 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 82


 3004      726F6C20 
 3004      73656D61 
 3004      70686F72 
 3005 0026 0000     		.align	2
 3006              	.LC19:
 3007 0028 53657420 		.ascii	"Set drone in ARM state first\015\012\000"
 3007      64726F6E 
 3007      6520696E 
 3007      2041524D 
 3007      20737461 
 3008 0047 00       		.align	2
 3009              	.LC20:
 3010 0048 6D616B65 		.ascii	"make sure all propeller is already disassmabled\015"
 3010      20737572 
 3010      6520616C 
 3010      6C207072 
 3010      6F70656C 
 3011 0078 0A00     		.ascii	"\012\000"
 3012 007a 0000     		.align	2
 3013              	.LC21:
 3014 007c 6D6F746F 		.ascii	"moto count : %d\015\012\000"
 3014      20636F75 
 3014      6E74203A 
 3014      2025640D 
 3014      0A00
 3015 008e 0000     		.align	2
 3016              	.LC22:
 3017 0090 616C6C20 		.ascii	"all moto selected\015\012\000"
 3017      6D6F746F 
 3017      2073656C 
 3017      65637465 
 3017      640D0A00 
 3018              		.align	2
 3019              	.LC23:
 3020 00a4 6D6F746F 		.ascii	"moto %d control range down below\015\012\000"
 3020      20256420 
 3020      636F6E74 
 3020      726F6C20 
 3020      72616E67 
 3021 00c7 00       		.align	2
 3022              	.LC24:
 3023 00c8 096D6178 		.ascii	"\011max  : %d\015\012\000"
 3023      20203A20 
 3023      25640D0A 
 3023      00
 3024 00d5 000000   		.align	2
 3025              	.LC25:
 3026 00d8 0969646C 		.ascii	"\011idle : %d\015\012\000"
 3026      65203A20 
 3026      25640D0A 
 3026      00
 3027 00e5 000000   		.align	2
 3028              	.LC26:
 3029 00e8 096D696E 		.ascii	"\011min  : %d\015\012\000"
 3029      20203A20 
 3029      25640D0A 
 3029      00
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 83


 3030 00f5 000000   		.align	2
 3031              	.LC27:
 3032 00f8 6D6F746F 		.ascii	"moto %d is selected\015\012\000"
 3032      20256420 
 3032      69732073 
 3032      656C6563 
 3032      7465640D 
 3033 010e 0000     		.align	2
 3034              	.LC28:
 3035 0110 47657420 		.ascii	"Get moto control data range failed\015\012\000"
 3035      6D6F746F 
 3035      20636F6E 
 3035      74726F6C 
 3035      20646174 
 3036 0135 000000   		.align	2
 3037              	.LC29:
 3038 0138 696E7075 		.ascii	"input value [%d] is bigger than max [%d] value\000"
 3038      74207661 
 3038      6C756520 
 3038      5B25645D 
 3038      20697320 
 3039 0167 00       		.align	2
 3040              	.LC30:
 3041 0168 696E7075 		.ascii	"input value [%d] is lower than min [%d] value\000"
 3041      74207661 
 3041      6C756520 
 3041      5B25645D 
 3041      20697320 
 3042 0196 0000     		.align	2
 3043              	.LC31:
 3044 0198 63757272 		.ascii	"current control value %d\015\012\000"
 3044      656E7420 
 3044      636F6E74 
 3044      726F6C20 
 3044      76616C75 
 3045 01b3 00       		.align	2
 3046              	.LC32:
 3047 01b4 5461736B 		.ascii	"TaskControl CLI set failed\015\012\000"
 3047      436F6E74 
 3047      726F6C20 
 3047      434C4920 
 3047      73657420 
 3048 01d1 000000   		.align	2
 3049              	.LC33:
 3050 01d4 4D6F746F 		.ascii	"Moto control test data malloc failed\015\012\000"
 3050      20636F6E 
 3050      74726F6C 
 3050      20746573 
 3050      74206461 
 3051              		.section	.text.TaskControl_CLI_MotoSpinTest,"ax",%progbits
 3052              		.align	1
 3053              		.syntax unified
 3054              		.thumb
 3055              		.thumb_func
 3057              	TaskControl_CLI_MotoSpinTest:
 3058              	.LVL224:
 3059              	.LFB2084:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 84


 801:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 3060              		.loc 1 801 1 is_stmt 1 view -0
 3061              		.cfi_startproc
 3062              		@ args = 0, pretend = 0, frame = 16
 3063              		@ frame_needed = 0, uses_anonymous_args = 0
 801:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 3064              		.loc 1 801 1 is_stmt 0 view .LVU892
 3065 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3066              	.LCFI40:
 3067              		.cfi_def_cfa_offset 32
 3068              		.cfi_offset 4, -32
 3069              		.cfi_offset 5, -28
 3070              		.cfi_offset 6, -24
 3071              		.cfi_offset 7, -20
 3072              		.cfi_offset 8, -16
 3073              		.cfi_offset 9, -12
 3074              		.cfi_offset 10, -8
 3075              		.cfi_offset 14, -4
 3076 0004 84B0     		sub	sp, sp, #16
 3077              	.LCFI41:
 3078              		.cfi_def_cfa_offset 48
 3079 0006 0546     		mov	r5, r0
 3080 0008 0E46     		mov	r6, r1
 802:Task/Task_Control.c ****     bool arm_state = false;
 3081              		.loc 1 802 5 is_stmt 1 view .LVU893
 802:Task/Task_Control.c ****     bool arm_state = false;
 3082              		.loc 1 802 35 is_stmt 0 view .LVU894
 3083 000a 6F4B     		ldr	r3, .L202
 3084 000c 9B6A     		ldr	r3, [r3, #40]
 802:Task/Task_Control.c ****     bool arm_state = false;
 3085              		.loc 1 802 24 view .LVU895
 3086 000e 9847     		blx	r3
 3087              	.LVL225:
 802:Task/Task_Control.c ****     bool arm_state = false;
 3088              		.loc 1 802 24 view .LVU896
 3089 0010 8DF80C00 		strb	r0, [sp, #12]
 3090 0014 C0F30723 		ubfx	r3, r0, #8, #8
 3091 0018 8DF80D30 		strb	r3, [sp, #13]
 3092 001c C0F30743 		ubfx	r3, r0, #16, #8
 3093 0020 8DF80E30 		strb	r3, [sp, #14]
 802:Task/Task_Control.c ****     bool arm_state = false;
 3094              		.loc 1 802 13 view .LVU897
 3095 0024 9DF80D80 		ldrb	r8, [sp, #13]	@ zero_extendqisi2
 3096              	.LVL226:
 803:Task/Task_Control.c ****     int16_t moto_max = 0;
 3097              		.loc 1 803 5 is_stmt 1 view .LVU898
 803:Task/Task_Control.c ****     int16_t moto_max = 0;
 3098              		.loc 1 803 10 is_stmt 0 view .LVU899
 3099 0028 0023     		movs	r3, #0
 3100 002a 8DF80B30 		strb	r3, [sp, #11]
 804:Task/Task_Control.c ****     int16_t moto_idle = 0;
 3101              		.loc 1 804 5 is_stmt 1 view .LVU900
 804:Task/Task_Control.c ****     int16_t moto_idle = 0;
 3102              		.loc 1 804 13 is_stmt 0 view .LVU901
 3103 002e ADF80830 		strh	r3, [sp, #8]	@ movhi
 805:Task/Task_Control.c ****     int16_t moto_min = 0;
 3104              		.loc 1 805 5 is_stmt 1 view .LVU902
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 85


 805:Task/Task_Control.c ****     int16_t moto_min = 0;
 3105              		.loc 1 805 13 is_stmt 0 view .LVU903
 3106 0032 ADF80630 		strh	r3, [sp, #6]	@ movhi
 806:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 3107              		.loc 1 806 5 is_stmt 1 view .LVU904
 806:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 3108              		.loc 1 806 13 is_stmt 0 view .LVU905
 3109 0036 ADF80430 		strh	r3, [sp, #4]	@ movhi
 807:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 3110              		.loc 1 807 5 is_stmt 1 view .LVU906
 807:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 3111              		.loc 1 807 38 is_stmt 0 view .LVU907
 3112 003a 644B     		ldr	r3, .L202+4
 3113 003c 1B68     		ldr	r3, [r3]
 807:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 3114              		.loc 1 807 27 view .LVU908
 3115 003e 9847     		blx	r3
 3116              	.LVL227:
 3117 0040 8246     		mov	r10, r0
 3118              	.LVL228:
 808:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 3119              		.loc 1 808 5 is_stmt 1 view .LVU909
 808:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 3120              		.loc 1 808 24 is_stmt 0 view .LVU910
 3121 0042 FFF7FEFF 		bl	Shell_GetInstence
 3122              	.LVL229:
 809:Task/Task_Control.c ****     bool ctl_enable = true;
 3123              		.loc 1 809 5 is_stmt 1 view .LVU911
 810:Task/Task_Control.c **** 
 3124              		.loc 1 810 5 view .LVU912
 812:Task/Task_Control.c ****         return;
 3125              		.loc 1 812 5 view .LVU913
 812:Task/Task_Control.c ****         return;
 3126              		.loc 1 812 7 is_stmt 0 view .LVU914
 3127 0046 0028     		cmp	r0, #0
 3128 0048 39D0     		beq	.L181
 3129 004a 8146     		mov	r9, r0
 815:Task/Task_Control.c **** 
 3130              		.loc 1 815 5 is_stmt 1 view .LVU915
 815:Task/Task_Control.c **** 
 3131              		.loc 1 815 15 is_stmt 0 view .LVU916
 3132 004c 604B     		ldr	r3, .L202+8
 3133 004e 5B6D     		ldr	r3, [r3, #84]
 815:Task/Task_Control.c **** 
 3134              		.loc 1 815 5 view .LVU917
 3135 0050 0DF10B00 		add	r0, sp, #11
 3136              	.LVL230:
 815:Task/Task_Control.c **** 
 3137              		.loc 1 815 5 view .LVU918
 3138 0054 9847     		blx	r3
 3139              	.LVL231:
 817:Task/Task_Control.c ****     {
 3140              		.loc 1 817 5 is_stmt 1 view .LVU919
 817:Task/Task_Control.c ****     {
 3141              		.loc 1 817 27 is_stmt 0 view .LVU920
 3142 0056 5F4B     		ldr	r3, .L202+12
 3143 0058 D3F82433 		ldr	r3, [r3, #804]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 86


 817:Task/Task_Control.c ****     {
 3144              		.loc 1 817 7 view .LVU921
 3145 005c 1BB3     		cbz	r3, .L197
 823:Task/Task_Control.c ****     {
 3146              		.loc 1 823 5 is_stmt 1 view .LVU922
 823:Task/Task_Control.c ****     {
 3147              		.loc 1 823 18 is_stmt 0 view .LVU923
 3148 005e 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2
 823:Task/Task_Control.c ****     {
 3149              		.loc 1 823 7 view .LVU924
 3150 0062 2BB3     		cbz	r3, .L198
 830:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 3151              		.loc 1 830 5 is_stmt 1 view .LVU925
 830:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 3152              		.loc 1 830 36 is_stmt 0 view .LVU926
 3153 0064 5B4B     		ldr	r3, .L202+12
 3154 0066 0122     		movs	r2, #1
 3155 0068 9A71     		strb	r2, [r3, #6]
 831:Task/Task_Control.c **** 
 3156              		.loc 1 831 5 is_stmt 1 view .LVU927
 3157 006a 5B49     		ldr	r1, .L202+16
 3158 006c 4846     		mov	r0, r9
 3159 006e FFF7FEFF 		bl	shellPrint
 3160              	.LVL232:
 833:Task/Task_Control.c ****     if(moto_index >= moto_num)
 3161              		.loc 1 833 5 view .LVU928
 3162 0072 4246     		mov	r2, r8
 3163 0074 5949     		ldr	r1, .L202+20
 3164 0076 4846     		mov	r0, r9
 3165 0078 FFF7FEFF 		bl	shellPrint
 3166              	.LVL233:
 834:Task/Task_Control.c ****     {
 3167              		.loc 1 834 5 view .LVU929
 834:Task/Task_Control.c ****     {
 3168              		.loc 1 834 7 is_stmt 0 view .LVU930
 3169 007c A845     		cmp	r8, r5
 3170 007e 3DD8     		bhi	.L185
 836:Task/Task_Control.c ****         for (uint8_t i = 0; i < moto_num; i ++)
 3171              		.loc 1 836 9 is_stmt 1 view .LVU931
 3172 0080 5749     		ldr	r1, .L202+24
 3173 0082 4846     		mov	r0, r9
 3174 0084 FFF7FEFF 		bl	shellPrint
 3175              	.LVL234:
 837:Task/Task_Control.c ****         {
 3176              		.loc 1 837 9 view .LVU932
 3177              	.LBB9:
 837:Task/Task_Control.c ****         {
 3178              		.loc 1 837 14 view .LVU933
 837:Task/Task_Control.c ****         {
 3179              		.loc 1 837 22 is_stmt 0 view .LVU934
 3180 0088 0024     		movs	r4, #0
 3181              	.LVL235:
 3182              	.L186:
 837:Task/Task_Control.c ****         {
 3183              		.loc 1 837 29 is_stmt 1 discriminator 1 view .LVU935
 837:Task/Task_Control.c ****         {
 3184              		.loc 1 837 9 is_stmt 0 discriminator 1 view .LVU936
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 87


 3185 008a 4445     		cmp	r4, r8
 3186 008c 44D2     		bcs	.L190
 839:Task/Task_Control.c ****             {
 3187              		.loc 1 839 13 is_stmt 1 view .LVU937
 839:Task/Task_Control.c ****             {
 3188              		.loc 1 839 29 is_stmt 0 view .LVU938
 3189 008e 4E4B     		ldr	r3, .L202
 3190 0090 1F6A     		ldr	r7, [r3, #32]
 839:Task/Task_Control.c ****             {
 3191              		.loc 1 839 18 view .LVU939
 3192 0092 02AB     		add	r3, sp, #8
 3193 0094 0DF10602 		add	r2, sp, #6
 3194 0098 01A9     		add	r1, sp, #4
 3195 009a 2046     		mov	r0, r4
 3196 009c B847     		blx	r7
 3197              	.LVL236:
 839:Task/Task_Control.c ****             {
 3198              		.loc 1 839 16 view .LVU940
 3199 009e 88B1     		cbz	r0, .L199
 837:Task/Task_Control.c ****         {
 3200              		.loc 1 837 43 is_stmt 1 discriminator 2 view .LVU941
 837:Task/Task_Control.c ****         {
 3201              		.loc 1 837 45 is_stmt 0 discriminator 2 view .LVU942
 3202 00a0 0134     		adds	r4, r4, #1
 3203              	.LVL237:
 837:Task/Task_Control.c ****         {
 3204              		.loc 1 837 45 discriminator 2 view .LVU943
 3205 00a2 E4B2     		uxtb	r4, r4
 3206              	.LVL238:
 837:Task/Task_Control.c ****         {
 3207              		.loc 1 837 45 discriminator 2 view .LVU944
 3208 00a4 F1E7     		b	.L186
 3209              	.LVL239:
 3210              	.L197:
 837:Task/Task_Control.c ****         {
 3211              		.loc 1 837 45 discriminator 2 view .LVU945
 3212              	.LBE9:
 819:Task/Task_Control.c ****         return;
 3213              		.loc 1 819 9 is_stmt 1 view .LVU946
 3214 00a6 4F49     		ldr	r1, .L202+28
 3215 00a8 4846     		mov	r0, r9
 3216 00aa FFF7FEFF 		bl	shellPrint
 3217              	.LVL240:
 820:Task/Task_Control.c ****     }
 3218              		.loc 1 820 9 view .LVU947
 3219 00ae 06E0     		b	.L181
 3220              	.L198:
 825:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 3221              		.loc 1 825 9 view .LVU948
 825:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 3222              		.loc 1 825 40 is_stmt 0 view .LVU949
 3223 00b0 484B     		ldr	r3, .L202+12
 3224 00b2 0022     		movs	r2, #0
 3225 00b4 9A71     		strb	r2, [r3, #6]
 826:Task/Task_Control.c ****         return;
 3226              		.loc 1 826 9 is_stmt 1 view .LVU950
 3227 00b6 4C49     		ldr	r1, .L202+32
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 88


 3228 00b8 4846     		mov	r0, r9
 3229 00ba FFF7FEFF 		bl	shellPrint
 3230              	.LVL241:
 827:Task/Task_Control.c ****     }
 3231              		.loc 1 827 9 view .LVU951
 3232              	.L181:
 901:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 3233              		.loc 1 901 1 is_stmt 0 view .LVU952
 3234 00be 04B0     		add	sp, sp, #16
 3235              	.LCFI42:
 3236              		.cfi_remember_state
 3237              		.cfi_def_cfa_offset 32
 3238              		@ sp needed
 3239 00c0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3240              	.LVL242:
 3241              	.L199:
 3242              	.LCFI43:
 3243              		.cfi_restore_state
 3244              	.LBB10:
 841:Task/Task_Control.c ****                 shellPrint(shell_obj, "moto %d control range down below\r\n", i);
 3245              		.loc 1 841 17 is_stmt 1 view .LVU953
 842:Task/Task_Control.c ****                 shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 3246              		.loc 1 842 17 view .LVU954
 3247 00c4 2246     		mov	r2, r4
 3248 00c6 4949     		ldr	r1, .L202+36
 3249 00c8 4846     		mov	r0, r9
 3250 00ca FFF7FEFF 		bl	shellPrint
 3251              	.LVL243:
 843:Task/Task_Control.c ****                 shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 3252              		.loc 1 843 17 view .LVU955
 3253 00ce BDF90820 		ldrsh	r2, [sp, #8]
 3254 00d2 4749     		ldr	r1, .L202+40
 3255 00d4 4846     		mov	r0, r9
 3256 00d6 FFF7FEFF 		bl	shellPrint
 3257              	.LVL244:
 844:Task/Task_Control.c ****                 shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 3258              		.loc 1 844 17 view .LVU956
 3259 00da BDF90620 		ldrsh	r2, [sp, #6]
 3260 00de 4549     		ldr	r1, .L202+44
 3261 00e0 4846     		mov	r0, r9
 3262 00e2 FFF7FEFF 		bl	shellPrint
 3263              	.LVL245:
 845:Task/Task_Control.c ****                 break;
 3264              		.loc 1 845 17 view .LVU957
 3265 00e6 BDF90420 		ldrsh	r2, [sp, #4]
 3266 00ea 4349     		ldr	r1, .L202+48
 3267 00ec 4846     		mov	r0, r9
 3268 00ee FFF7FEFF 		bl	shellPrint
 3269              	.LVL246:
 846:Task/Task_Control.c ****             }
 3270              		.loc 1 846 17 view .LVU958
 846:Task/Task_Control.c ****             }
 3271              		.loc 1 846 17 is_stmt 0 view .LVU959
 3272              	.LBE10:
 863:Task/Task_Control.c ****     {
 3273              		.loc 1 863 5 is_stmt 1 view .LVU960
 3274              	.L188:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 89


 865:Task/Task_Control.c ****         return;
 3275              		.loc 1 865 9 view .LVU961
 3276 00f2 4249     		ldr	r1, .L202+52
 3277 00f4 4846     		mov	r0, r9
 3278 00f6 FFF7FEFF 		bl	shellPrint
 3279              	.LVL247:
 866:Task/Task_Control.c ****     }
 3280              		.loc 1 866 9 view .LVU962
 3281 00fa E0E7     		b	.L181
 3282              	.LVL248:
 3283              	.L185:
 852:Task/Task_Control.c ****         if(!SrvActuator.get_moto_control_range(moto_index, &moto_min, &moto_idle, &moto_max))
 3284              		.loc 1 852 9 view .LVU963
 3285 00fc 2A46     		mov	r2, r5
 3286 00fe 4049     		ldr	r1, .L202+56
 3287 0100 4846     		mov	r0, r9
 3288 0102 FFF7FEFF 		bl	shellPrint
 3289              	.LVL249:
 853:Task/Task_Control.c ****         {
 3290              		.loc 1 853 9 view .LVU964
 853:Task/Task_Control.c ****         {
 3291              		.loc 1 853 24 is_stmt 0 view .LVU965
 3292 0106 304B     		ldr	r3, .L202
 3293 0108 1C6A     		ldr	r4, [r3, #32]
 853:Task/Task_Control.c ****         {
 3294              		.loc 1 853 13 view .LVU966
 3295 010a 02AB     		add	r3, sp, #8
 3296 010c 0DF10602 		add	r2, sp, #6
 3297 0110 01A9     		add	r1, sp, #4
 3298 0112 2846     		mov	r0, r5
 3299 0114 A047     		blx	r4
 3300              	.LVL250:
 853:Task/Task_Control.c ****         {
 3301              		.loc 1 853 11 view .LVU967
 3302 0116 68B1     		cbz	r0, .L200
 3303              	.L190:
 3304              	.LVL251:
 869:Task/Task_Control.c ****     {
 3305              		.loc 1 869 5 is_stmt 1 view .LVU968
 869:Task/Task_Control.c ****     {
 3306              		.loc 1 869 17 is_stmt 0 view .LVU969
 3307 0118 BDF90830 		ldrsh	r3, [sp, #8]
 869:Task/Task_Control.c ****     {
 3308              		.loc 1 869 7 view .LVU970
 3309 011c 9E42     		cmp	r6, r3
 3310 011e 21DC     		bgt	.L201
 873:Task/Task_Control.c ****     {
 3311              		.loc 1 873 10 is_stmt 1 view .LVU971
 873:Task/Task_Control.c ****     {
 3312              		.loc 1 873 22 is_stmt 0 view .LVU972
 3313 0120 BDF90430 		ldrsh	r3, [sp, #4]
 873:Task/Task_Control.c ****     {
 3314              		.loc 1 873 12 view .LVU973
 3315 0124 9E42     		cmp	r6, r3
 3316 0126 23DA     		bge	.L193
 875:Task/Task_Control.c ****     }
 3317              		.loc 1 875 9 is_stmt 1 view .LVU974
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 90


 3318 0128 3246     		mov	r2, r6
 3319 012a 3649     		ldr	r1, .L202+60
 3320 012c 4846     		mov	r0, r9
 3321 012e FFF7FEFF 		bl	shellPrint
 3322              	.LVL252:
 3323 0132 C4E7     		b	.L181
 3324              	.LVL253:
 3325              	.L200:
 855:Task/Task_Control.c ****             shellPrint(shell_obj, "moto %d control range down below\r\n", moto_index);
 3326              		.loc 1 855 13 view .LVU975
 856:Task/Task_Control.c ****             shellPrint(shell_obj, "\tmax  : %d\r\n", moto_max);
 3327              		.loc 1 856 13 view .LVU976
 3328 0134 2A46     		mov	r2, r5
 3329 0136 2D49     		ldr	r1, .L202+36
 3330 0138 4846     		mov	r0, r9
 3331 013a FFF7FEFF 		bl	shellPrint
 3332              	.LVL254:
 857:Task/Task_Control.c ****             shellPrint(shell_obj, "\tidle : %d\r\n", moto_idle);
 3333              		.loc 1 857 13 view .LVU977
 3334 013e BDF90820 		ldrsh	r2, [sp, #8]
 3335 0142 2B49     		ldr	r1, .L202+40
 3336 0144 4846     		mov	r0, r9
 3337 0146 FFF7FEFF 		bl	shellPrint
 3338              	.LVL255:
 858:Task/Task_Control.c ****             shellPrint(shell_obj, "\tmin  : %d\r\n", moto_min);
 3339              		.loc 1 858 13 view .LVU978
 3340 014a BDF90620 		ldrsh	r2, [sp, #6]
 3341 014e 2949     		ldr	r1, .L202+44
 3342 0150 4846     		mov	r0, r9
 3343 0152 FFF7FEFF 		bl	shellPrint
 3344              	.LVL256:
 859:Task/Task_Control.c ****         }
 3345              		.loc 1 859 13 view .LVU979
 3346 0156 BDF90420 		ldrsh	r2, [sp, #4]
 3347 015a 2749     		ldr	r1, .L202+48
 3348 015c 4846     		mov	r0, r9
 3349 015e FFF7FEFF 		bl	shellPrint
 3350              	.LVL257:
 863:Task/Task_Control.c ****     {
 3351              		.loc 1 863 5 view .LVU980
 3352 0162 C6E7     		b	.L188
 3353              	.LVL258:
 3354              	.L201:
 871:Task/Task_Control.c ****     }
 3355              		.loc 1 871 9 view .LVU981
 3356 0164 3246     		mov	r2, r6
 3357 0166 2849     		ldr	r1, .L202+64
 3358 0168 4846     		mov	r0, r9
 3359 016a FFF7FEFF 		bl	shellPrint
 3360              	.LVL259:
 3361 016e A6E7     		b	.L181
 3362              	.L193:
 879:Task/Task_Control.c **** 
 3363              		.loc 1 879 9 view .LVU982
 3364 0170 3246     		mov	r2, r6
 3365 0172 2649     		ldr	r1, .L202+68
 3366 0174 4846     		mov	r0, r9
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 91


 3367 0176 FFF7FEFF 		bl	shellPrint
 3368              	.LVL260:
 881:Task/Task_Control.c ****         if(p_CLIData)
 3369              		.loc 1 881 9 view .LVU983
 881:Task/Task_Control.c ****         if(p_CLIData)
 3370              		.loc 1 881 32 is_stmt 0 view .LVU984
 3371 017a 144B     		ldr	r3, .L202+4
 3372 017c 9B6A     		ldr	r3, [r3, #40]
 881:Task/Task_Control.c ****         if(p_CLIData)
 3373              		.loc 1 881 21 view .LVU985
 3374 017e 0820     		movs	r0, #8
 3375 0180 9847     		blx	r3
 3376              	.LVL261:
 882:Task/Task_Control.c ****         {
 3377              		.loc 1 882 9 is_stmt 1 view .LVU986
 882:Task/Task_Control.c ****         {
 3378              		.loc 1 882 11 is_stmt 0 view .LVU987
 3379 0182 0446     		mov	r4, r0
 3380 0184 B0B1     		cbz	r0, .L194
 884:Task/Task_Control.c ****             p_CLIData->index = moto_index;
 3381              		.loc 1 884 13 is_stmt 1 view .LVU988
 884:Task/Task_Control.c ****             p_CLIData->index = moto_index;
 3382              		.loc 1 884 33 is_stmt 0 view .LVU989
 3383 0186 0122     		movs	r2, #1
 3384 0188 0271     		strb	r2, [r0, #4]
 885:Task/Task_Control.c ****             p_CLIData->timestamp = time_stamp;
 3385              		.loc 1 885 13 is_stmt 1 view .LVU990
 885:Task/Task_Control.c ****             p_CLIData->timestamp = time_stamp;
 3386              		.loc 1 885 30 is_stmt 0 view .LVU991
 3387 018a 4571     		strb	r5, [r0, #5]
 886:Task/Task_Control.c ****             p_CLIData->value = test_val;
 3388              		.loc 1 886 13 is_stmt 1 view .LVU992
 886:Task/Task_Control.c ****             p_CLIData->value = test_val;
 3389              		.loc 1 886 34 is_stmt 0 view .LVU993
 3390 018c C0F800A0 		str	r10, [r0]
 887:Task/Task_Control.c **** 
 3391              		.loc 1 887 13 is_stmt 1 view .LVU994
 887:Task/Task_Control.c **** 
 3392              		.loc 1 887 30 is_stmt 0 view .LVU995
 3393 0190 C680     		strh	r6, [r0, #6]	@ movhi
 889:Task/Task_Control.c ****             {
 3394              		.loc 1 889 13 is_stmt 1 view .LVU996
 889:Task/Task_Control.c ****             {
 3395              		.loc 1 889 16 is_stmt 0 view .LVU997
 3396 0192 0146     		mov	r1, r0
 3397 0194 0F4B     		ldr	r3, .L202+12
 3398 0196 D3F82403 		ldr	r0, [r3, #804]
 3399              	.LVL262:
 889:Task/Task_Control.c ****             {
 3400              		.loc 1 889 16 view .LVU998
 3401 019a FFF7FEFF 		bl	osMessagePut
 3402              	.LVL263:
 889:Task/Task_Control.c ****             {
 3403              		.loc 1 889 15 view .LVU999
 3404 019e 0028     		cmp	r0, #0
 3405 01a0 8DD0     		beq	.L181
 891:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 92


 3406              		.loc 1 891 17 is_stmt 1 view .LVU1000
 891:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 3407              		.loc 1 891 28 is_stmt 0 view .LVU1001
 3408 01a2 0A4B     		ldr	r3, .L202+4
 3409 01a4 DB6A     		ldr	r3, [r3, #44]
 891:Task/Task_Control.c ****                 shellPrint(shell_obj, "TaskControl CLI set failed\r\n");
 3410              		.loc 1 891 17 view .LVU1002
 3411 01a6 2046     		mov	r0, r4
 3412 01a8 9847     		blx	r3
 3413              	.LVL264:
 892:Task/Task_Control.c ****             }
 3414              		.loc 1 892 17 is_stmt 1 view .LVU1003
 3415 01aa 1949     		ldr	r1, .L202+72
 3416 01ac 4846     		mov	r0, r9
 3417 01ae FFF7FEFF 		bl	shellPrint
 3418              	.LVL265:
 3419 01b2 84E7     		b	.L181
 3420              	.LVL266:
 3421              	.L194:
 897:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 3422              		.loc 1 897 13 view .LVU1004
 3423 01b4 1749     		ldr	r1, .L202+76
 3424 01b6 4846     		mov	r0, r9
 3425              	.LVL267:
 897:Task/Task_Control.c ****             SrvOsCommon.free(p_CLIData);
 3426              		.loc 1 897 13 is_stmt 0 view .LVU1005
 3427 01b8 FFF7FEFF 		bl	shellPrint
 3428              	.LVL268:
 898:Task/Task_Control.c ****         }
 3429              		.loc 1 898 13 is_stmt 1 view .LVU1006
 898:Task/Task_Control.c ****         }
 3430              		.loc 1 898 24 is_stmt 0 view .LVU1007
 3431 01bc 034B     		ldr	r3, .L202+4
 3432 01be DB6A     		ldr	r3, [r3, #44]
 898:Task/Task_Control.c ****         }
 3433              		.loc 1 898 13 view .LVU1008
 3434 01c0 2046     		mov	r0, r4
 3435 01c2 9847     		blx	r3
 3436              	.LVL269:
 3437 01c4 7BE7     		b	.L181
 3438              	.L203:
 3439 01c6 00BF     		.align	2
 3440              	.L202:
 3441 01c8 00000000 		.word	SrvActuator
 3442 01cc 00000000 		.word	SrvOsCommon
 3443 01d0 00000000 		.word	SrvDataHub
 3444 01d4 00000000 		.word	.LANCHOR0
 3445 01d8 48000000 		.word	.LC20
 3446 01dc 7C000000 		.word	.LC21
 3447 01e0 90000000 		.word	.LC22
 3448 01e4 00000000 		.word	.LC18
 3449 01e8 28000000 		.word	.LC19
 3450 01ec A4000000 		.word	.LC23
 3451 01f0 C8000000 		.word	.LC24
 3452 01f4 D8000000 		.word	.LC25
 3453 01f8 E8000000 		.word	.LC26
 3454 01fc 10010000 		.word	.LC28
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 93


 3455 0200 F8000000 		.word	.LC27
 3456 0204 68010000 		.word	.LC30
 3457 0208 38010000 		.word	.LC29
 3458 020c 98010000 		.word	.LC31
 3459 0210 B4010000 		.word	.LC32
 3460 0214 D4010000 		.word	.LC33
 3461              		.cfi_endproc
 3462              	.LFE2084:
 3464              		.section	.rodata.TaskControl_CLI_Rev_MotoSpinDir.str1.4,"aMS",%progbits,1
 3465              		.align	2
 3466              	.LC34:
 3467 0000 696E6465 		.ascii	"index over range\015\012\000"
 3467      78206F76 
 3467      65722072 
 3467      616E6765 
 3467      0D0A00
 3468 0013 00       		.align	2
 3469              	.LC35:
 3470 0014 61726720 		.ascii	"arg must less than %d\015\012\000"
 3470      6D757374 
 3470      206C6573 
 3470      73207468 
 3470      616E2025 
 3471              		.align	2
 3472              	.LC36:
 3473 002c 4D6F746F 		.ascii	"Moto direction setting data malloc failed\015\012\000"
 3473      20646972 
 3473      65637469 
 3473      6F6E2073 
 3473      65747469 
 3474              		.align	2
 3475              	.LC37:
 3476 0058 30202D2D 		.ascii	"0 ---- direction 1\015\012\000"
 3476      2D2D2064 
 3476      69726563 
 3476      74696F6E 
 3476      20310D0A 
 3477 006d 000000   		.align	2
 3478              	.LC38:
 3479 0070 31202D2D 		.ascii	"1 ---- direction 2\015\012\000"
 3479      2D2D2064 
 3479      69726563 
 3479      74696F6E 
 3479      20320D0A 
 3480 0085 000000   		.align	2
 3481              	.LC39:
 3482 0088 4572726F 		.ascii	"Error direction input\015\012\000"
 3482      72206469 
 3482      72656374 
 3482      696F6E20 
 3482      696E7075 
 3483              		.align	2
 3484              	.LC40:
 3485 00a0 53657474 		.ascii	"Setting time stamp %d\015\012\000"
 3485      696E6720 
 3485      74696D65 
 3485      20737461 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 94


 3485      6D702025 
 3486              		.section	.text.TaskControl_CLI_Rev_MotoSpinDir,"ax",%progbits
 3487              		.align	1
 3488              		.syntax unified
 3489              		.thumb
 3490              		.thumb_func
 3492              	TaskControl_CLI_Rev_MotoSpinDir:
 3493              	.LVL270:
 3494              	.LFB2085:
 905:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 3495              		.loc 1 905 1 is_stmt 1 view -0
 3496              		.cfi_startproc
 3497              		@ args = 0, pretend = 0, frame = 8
 3498              		@ frame_needed = 0, uses_anonymous_args = 0
 905:Task/Task_Control.c ****     uint8_t moto_num = SrvActuator.get_cnt().moto_cnt;
 3499              		.loc 1 905 1 is_stmt 0 view .LVU1010
 3500 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3501              	.LCFI44:
 3502              		.cfi_def_cfa_offset 24
 3503              		.cfi_offset 4, -24
 3504              		.cfi_offset 5, -20
 3505              		.cfi_offset 6, -16
 3506              		.cfi_offset 7, -12
 3507              		.cfi_offset 8, -8
 3508              		.cfi_offset 14, -4
 3509 0004 82B0     		sub	sp, sp, #8
 3510              	.LCFI45:
 3511              		.cfi_def_cfa_offset 32
 3512 0006 0446     		mov	r4, r0
 3513 0008 0D46     		mov	r5, r1
 906:Task/Task_Control.c ****     bool arm_state = false;
 3514              		.loc 1 906 5 is_stmt 1 view .LVU1011
 906:Task/Task_Control.c ****     bool arm_state = false;
 3515              		.loc 1 906 35 is_stmt 0 view .LVU1012
 3516 000a 474B     		ldr	r3, .L219
 3517 000c 9B6A     		ldr	r3, [r3, #40]
 906:Task/Task_Control.c ****     bool arm_state = false;
 3518              		.loc 1 906 24 view .LVU1013
 3519 000e 9847     		blx	r3
 3520              	.LVL271:
 906:Task/Task_Control.c ****     bool arm_state = false;
 3521              		.loc 1 906 24 view .LVU1014
 3522 0010 8DF80400 		strb	r0, [sp, #4]
 3523 0014 C0F30723 		ubfx	r3, r0, #8, #8
 3524 0018 8DF80530 		strb	r3, [sp, #5]
 3525 001c C0F30743 		ubfx	r3, r0, #16, #8
 3526 0020 8DF80630 		strb	r3, [sp, #6]
 906:Task/Task_Control.c ****     bool arm_state = false;
 3527              		.loc 1 906 13 view .LVU1015
 3528 0024 9DF80580 		ldrb	r8, [sp, #5]	@ zero_extendqisi2
 3529              	.LVL272:
 907:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 3530              		.loc 1 907 5 is_stmt 1 view .LVU1016
 907:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 3531              		.loc 1 907 10 is_stmt 0 view .LVU1017
 3532 0028 0023     		movs	r3, #0
 3533 002a 8DF80330 		strb	r3, [sp, #3]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 95


 908:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 3534              		.loc 1 908 5 is_stmt 1 view .LVU1018
 908:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 3535              		.loc 1 908 38 is_stmt 0 view .LVU1019
 3536 002e 3F4B     		ldr	r3, .L219+4
 3537 0030 1B68     		ldr	r3, [r3]
 908:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 3538              		.loc 1 908 27 view .LVU1020
 3539 0032 9847     		blx	r3
 3540              	.LVL273:
 3541 0034 0746     		mov	r7, r0
 3542              	.LVL274:
 909:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 3543              		.loc 1 909 5 is_stmt 1 view .LVU1021
 910:Task/Task_Control.c **** 
 3544              		.loc 1 910 5 view .LVU1022
 910:Task/Task_Control.c **** 
 3545              		.loc 1 910 24 is_stmt 0 view .LVU1023
 3546 0036 FFF7FEFF 		bl	Shell_GetInstence
 3547              	.LVL275:
 912:Task/Task_Control.c ****         return;
 3548              		.loc 1 912 5 is_stmt 1 view .LVU1024
 912:Task/Task_Control.c ****         return;
 3549              		.loc 1 912 7 is_stmt 0 view .LVU1025
 3550 003a 0028     		cmp	r0, #0
 3551 003c 53D0     		beq	.L204
 3552 003e 0646     		mov	r6, r0
 915:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 3553              		.loc 1 915 5 is_stmt 1 view .LVU1026
 915:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 3554              		.loc 1 915 15 is_stmt 0 view .LVU1027
 3555 0040 3B4B     		ldr	r3, .L219+8
 3556 0042 5B6D     		ldr	r3, [r3, #84]
 915:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 3557              		.loc 1 915 5 view .LVU1028
 3558 0044 0DF10300 		add	r0, sp, #3
 3559              	.LVL276:
 915:Task/Task_Control.c ****     if(TaskControl_Monitor.CLIMessage_ID == NULL)
 3560              		.loc 1 915 5 view .LVU1029
 3561 0048 9847     		blx	r3
 3562              	.LVL277:
 916:Task/Task_Control.c ****     {
 3563              		.loc 1 916 5 is_stmt 1 view .LVU1030
 916:Task/Task_Control.c ****     {
 3564              		.loc 1 916 27 is_stmt 0 view .LVU1031
 3565 004a 3A4B     		ldr	r3, .L219+12
 3566 004c D3F82433 		ldr	r3, [r3, #804]
 916:Task/Task_Control.c ****     {
 3567              		.loc 1 916 7 view .LVU1032
 3568 0050 002B     		cmp	r3, #0
 3569 0052 3CD0     		beq	.L214
 922:Task/Task_Control.c ****     {
 3570              		.loc 1 922 5 is_stmt 1 view .LVU1033
 922:Task/Task_Control.c ****     {
 3571              		.loc 1 922 18 is_stmt 0 view .LVU1034
 3572 0054 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 922:Task/Task_Control.c ****     {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 96


 3573              		.loc 1 922 7 view .LVU1035
 3574 0058 002B     		cmp	r3, #0
 3575 005a 3DD0     		beq	.L215
 929:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 3576              		.loc 1 929 5 is_stmt 1 view .LVU1036
 929:Task/Task_Control.c ****     shellPrint(shell_obj, "make sure all propeller is already disassmabled\r\n");
 3577              		.loc 1 929 36 is_stmt 0 view .LVU1037
 3578 005c 354B     		ldr	r3, .L219+12
 3579 005e 0122     		movs	r2, #1
 3580 0060 9A71     		strb	r2, [r3, #6]
 930:Task/Task_Control.c ****     if(moto_index >= moto_num)
 3581              		.loc 1 930 5 is_stmt 1 view .LVU1038
 3582 0062 3549     		ldr	r1, .L219+16
 3583 0064 3046     		mov	r0, r6
 3584 0066 FFF7FEFF 		bl	shellPrint
 3585              	.LVL278:
 931:Task/Task_Control.c ****     {
 3586              		.loc 1 931 5 view .LVU1039
 931:Task/Task_Control.c ****     {
 3587              		.loc 1 931 7 is_stmt 0 view .LVU1040
 3588 006a A045     		cmp	r8, r4
 3589 006c 3ED9     		bls	.L216
 938:Task/Task_Control.c ****     if(p_CLIData == NULL)
 3590              		.loc 1 938 5 is_stmt 1 view .LVU1041
 938:Task/Task_Control.c ****     if(p_CLIData == NULL)
 3591              		.loc 1 938 28 is_stmt 0 view .LVU1042
 3592 006e 2F4B     		ldr	r3, .L219+4
 3593 0070 9B6A     		ldr	r3, [r3, #40]
 938:Task/Task_Control.c ****     if(p_CLIData == NULL)
 3594              		.loc 1 938 17 view .LVU1043
 3595 0072 0820     		movs	r0, #8
 3596 0074 9847     		blx	r3
 3597              	.LVL279:
 939:Task/Task_Control.c ****     {
 3598              		.loc 1 939 5 is_stmt 1 view .LVU1044
 939:Task/Task_Control.c ****     {
 3599              		.loc 1 939 7 is_stmt 0 view .LVU1045
 3600 0076 8046     		mov	r8, r0
 3601              	.LVL280:
 939:Task/Task_Control.c ****     {
 3602              		.loc 1 939 7 view .LVU1046
 3603 0078 0028     		cmp	r0, #0
 3604 007a 42D0     		beq	.L217
 946:Task/Task_Control.c ****     shellPrint(shell_obj, "1 ---- direction 2\r\n");
 3605              		.loc 1 946 5 is_stmt 1 view .LVU1047
 3606 007c 2F49     		ldr	r1, .L219+20
 3607 007e 3046     		mov	r0, r6
 3608              	.LVL281:
 946:Task/Task_Control.c ****     shellPrint(shell_obj, "1 ---- direction 2\r\n");
 3609              		.loc 1 946 5 is_stmt 0 view .LVU1048
 3610 0080 FFF7FEFF 		bl	shellPrint
 3611              	.LVL282:
 947:Task/Task_Control.c **** 
 3612              		.loc 1 947 5 is_stmt 1 view .LVU1049
 3613 0084 2E49     		ldr	r1, .L219+24
 3614 0086 3046     		mov	r0, r6
 3615 0088 FFF7FEFF 		bl	shellPrint
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 97


 3616              	.LVL283:
 949:Task/Task_Control.c ****     {
 3617              		.loc 1 949 5 view .LVU1050
 949:Task/Task_Control.c ****     {
 3618              		.loc 1 949 8 is_stmt 0 view .LVU1051
 3619 008c 012D     		cmp	r5, #1
 3620 008e 41D8     		bhi	.L218
 956:Task/Task_Control.c ****     p_CLIData->cli_type = TaskControl_Moto_Set_SpinDir;
 3621              		.loc 1 956 5 is_stmt 1 view .LVU1052
 3622 0090 3A46     		mov	r2, r7
 3623 0092 2C49     		ldr	r1, .L219+28
 3624 0094 3046     		mov	r0, r6
 3625 0096 FFF7FEFF 		bl	shellPrint
 3626              	.LVL284:
 957:Task/Task_Control.c ****     p_CLIData->timestamp = time_stamp;
 3627              		.loc 1 957 5 view .LVU1053
 957:Task/Task_Control.c ****     p_CLIData->timestamp = time_stamp;
 3628              		.loc 1 957 25 is_stmt 0 view .LVU1054
 3629 009a 0223     		movs	r3, #2
 3630 009c 88F80430 		strb	r3, [r8, #4]
 958:Task/Task_Control.c ****     p_CLIData->index = moto_index;
 3631              		.loc 1 958 5 is_stmt 1 view .LVU1055
 958:Task/Task_Control.c ****     p_CLIData->index = moto_index;
 3632              		.loc 1 958 26 is_stmt 0 view .LVU1056
 3633 00a0 C8F80070 		str	r7, [r8]
 959:Task/Task_Control.c ****     p_CLIData->value = dir;
 3634              		.loc 1 959 5 is_stmt 1 view .LVU1057
 959:Task/Task_Control.c ****     p_CLIData->value = dir;
 3635              		.loc 1 959 22 is_stmt 0 view .LVU1058
 3636 00a4 88F80540 		strb	r4, [r8, #5]
 960:Task/Task_Control.c **** 
 3637              		.loc 1 960 5 is_stmt 1 view .LVU1059
 960:Task/Task_Control.c **** 
 3638              		.loc 1 960 22 is_stmt 0 view .LVU1060
 3639 00a8 A8F80650 		strh	r5, [r8, #6]	@ movhi
 962:Task/Task_Control.c ****     {
 3640              		.loc 1 962 5 is_stmt 1 view .LVU1061
 962:Task/Task_Control.c ****     {
 3641              		.loc 1 962 8 is_stmt 0 view .LVU1062
 3642 00ac 0122     		movs	r2, #1
 3643 00ae 4146     		mov	r1, r8
 3644 00b0 204B     		ldr	r3, .L219+12
 3645 00b2 D3F82403 		ldr	r0, [r3, #804]
 3646 00b6 FFF7FEFF 		bl	osMessagePut
 3647              	.LVL285:
 962:Task/Task_Control.c ****     {
 3648              		.loc 1 962 7 view .LVU1063
 3649 00ba A0B1     		cbz	r0, .L204
 964:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3650              		.loc 1 964 9 is_stmt 1 view .LVU1064
 3651 00bc 2249     		ldr	r1, .L219+32
 3652 00be 3046     		mov	r0, r6
 3653 00c0 FFF7FEFF 		bl	shellPrint
 3654              	.LVL286:
 965:Task/Task_Control.c ****     }
 3655              		.loc 1 965 9 view .LVU1065
 965:Task/Task_Control.c ****     }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 98


 3656              		.loc 1 965 20 is_stmt 0 view .LVU1066
 3657 00c4 194B     		ldr	r3, .L219+4
 3658 00c6 DB6A     		ldr	r3, [r3, #44]
 965:Task/Task_Control.c ****     }
 3659              		.loc 1 965 9 view .LVU1067
 3660 00c8 4046     		mov	r0, r8
 3661 00ca 9847     		blx	r3
 3662              	.LVL287:
 3663 00cc 0BE0     		b	.L204
 3664              	.LVL288:
 3665              	.L214:
 918:Task/Task_Control.c ****         return;
 3666              		.loc 1 918 9 is_stmt 1 view .LVU1068
 3667 00ce 1F49     		ldr	r1, .L219+36
 3668 00d0 3046     		mov	r0, r6
 3669 00d2 FFF7FEFF 		bl	shellPrint
 3670              	.LVL289:
 919:Task/Task_Control.c ****     }
 3671              		.loc 1 919 9 view .LVU1069
 3672 00d6 06E0     		b	.L204
 3673              	.L215:
 924:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 3674              		.loc 1 924 9 view .LVU1070
 924:Task/Task_Control.c ****         shellPrint(shell_obj, "Set drone in ARM state first\r\n");
 3675              		.loc 1 924 40 is_stmt 0 view .LVU1071
 3676 00d8 164B     		ldr	r3, .L219+12
 3677 00da 0022     		movs	r2, #0
 3678 00dc 9A71     		strb	r2, [r3, #6]
 925:Task/Task_Control.c ****         return;
 3679              		.loc 1 925 9 is_stmt 1 view .LVU1072
 3680 00de 1C49     		ldr	r1, .L219+40
 3681 00e0 3046     		mov	r0, r6
 3682 00e2 FFF7FEFF 		bl	shellPrint
 3683              	.LVL290:
 926:Task/Task_Control.c ****     }
 3684              		.loc 1 926 9 view .LVU1073
 3685              	.L204:
 967:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 3686              		.loc 1 967 1 is_stmt 0 view .LVU1074
 3687 00e6 02B0     		add	sp, sp, #8
 3688              	.LCFI46:
 3689              		.cfi_remember_state
 3690              		.cfi_def_cfa_offset 24
 3691              		@ sp needed
 3692 00e8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3693              	.LVL291:
 3694              	.L216:
 3695              	.LCFI47:
 3696              		.cfi_restore_state
 933:Task/Task_Control.c ****         shellPrint(shell_obj, "arg must less than %d\r\n", (moto_num - 1));
 3697              		.loc 1 933 9 is_stmt 1 view .LVU1075
 3698 00ec 1949     		ldr	r1, .L219+44
 3699 00ee 3046     		mov	r0, r6
 3700 00f0 FFF7FEFF 		bl	shellPrint
 3701              	.LVL292:
 934:Task/Task_Control.c ****         return;
 3702              		.loc 1 934 9 view .LVU1076
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 99


 3703 00f4 08F1FF32 		add	r2, r8, #-1
 3704 00f8 1749     		ldr	r1, .L219+48
 3705 00fa 3046     		mov	r0, r6
 3706 00fc FFF7FEFF 		bl	shellPrint
 3707              	.LVL293:
 935:Task/Task_Control.c ****     }
 3708              		.loc 1 935 9 view .LVU1077
 3709 0100 F1E7     		b	.L204
 3710              	.LVL294:
 3711              	.L217:
 941:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3712              		.loc 1 941 9 view .LVU1078
 3713 0102 1649     		ldr	r1, .L219+52
 3714 0104 3046     		mov	r0, r6
 3715              	.LVL295:
 941:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3716              		.loc 1 941 9 is_stmt 0 view .LVU1079
 3717 0106 FFF7FEFF 		bl	shellPrint
 3718              	.LVL296:
 942:Task/Task_Control.c ****         return;
 3719              		.loc 1 942 9 is_stmt 1 view .LVU1080
 942:Task/Task_Control.c ****         return;
 3720              		.loc 1 942 20 is_stmt 0 view .LVU1081
 3721 010a 084B     		ldr	r3, .L219+4
 3722 010c DB6A     		ldr	r3, [r3, #44]
 942:Task/Task_Control.c ****         return;
 3723              		.loc 1 942 9 view .LVU1082
 3724 010e 4046     		mov	r0, r8
 3725 0110 9847     		blx	r3
 3726              	.LVL297:
 943:Task/Task_Control.c ****     }
 3727              		.loc 1 943 9 is_stmt 1 view .LVU1083
 3728 0112 E8E7     		b	.L204
 3729              	.L218:
 951:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3730              		.loc 1 951 9 view .LVU1084
 3731 0114 1249     		ldr	r1, .L219+56
 3732 0116 3046     		mov	r0, r6
 3733 0118 FFF7FEFF 		bl	shellPrint
 3734              	.LVL298:
 952:Task/Task_Control.c ****         return;
 3735              		.loc 1 952 9 view .LVU1085
 952:Task/Task_Control.c ****         return;
 3736              		.loc 1 952 20 is_stmt 0 view .LVU1086
 3737 011c 034B     		ldr	r3, .L219+4
 3738 011e DB6A     		ldr	r3, [r3, #44]
 952:Task/Task_Control.c ****         return;
 3739              		.loc 1 952 9 view .LVU1087
 3740 0120 4046     		mov	r0, r8
 3741 0122 9847     		blx	r3
 3742              	.LVL299:
 953:Task/Task_Control.c ****     }
 3743              		.loc 1 953 9 is_stmt 1 view .LVU1088
 3744 0124 DFE7     		b	.L204
 3745              	.L220:
 3746 0126 00BF     		.align	2
 3747              	.L219:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 100


 3748 0128 00000000 		.word	SrvActuator
 3749 012c 00000000 		.word	SrvOsCommon
 3750 0130 00000000 		.word	SrvDataHub
 3751 0134 00000000 		.word	.LANCHOR0
 3752 0138 48000000 		.word	.LC20
 3753 013c 58000000 		.word	.LC37
 3754 0140 70000000 		.word	.LC38
 3755 0144 A0000000 		.word	.LC40
 3756 0148 B4010000 		.word	.LC32
 3757 014c 00000000 		.word	.LC18
 3758 0150 28000000 		.word	.LC19
 3759 0154 00000000 		.word	.LC34
 3760 0158 14000000 		.word	.LC35
 3761 015c 2C000000 		.word	.LC36
 3762 0160 88000000 		.word	.LC39
 3763              		.cfi_endproc
 3764              	.LFE2085:
 3766              		.section	.rodata.TaskControl_Close_CLI.str1.4,"aMS",%progbits,1
 3767              		.align	2
 3768              	.LC41:
 3769 0000 5461736B 		.ascii	"TaskControl CLI disable\015\012\000"
 3769      436F6E74 
 3769      726F6C20 
 3769      434C4920 
 3769      64697361 
 3770              		.section	.text.TaskControl_Close_CLI,"ax",%progbits
 3771              		.align	1
 3772              		.syntax unified
 3773              		.thumb
 3774              		.thumb_func
 3776              	TaskControl_Close_CLI:
 3777              	.LFB2086:
 971:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 3778              		.loc 1 971 1 view -0
 3779              		.cfi_startproc
 3780              		@ args = 0, pretend = 0, frame = 0
 3781              		@ frame_needed = 0, uses_anonymous_args = 0
 3782 0000 70B5     		push	{r4, r5, r6, lr}
 3783              	.LCFI48:
 3784              		.cfi_def_cfa_offset 16
 3785              		.cfi_offset 4, -16
 3786              		.cfi_offset 5, -12
 3787              		.cfi_offset 6, -8
 3788              		.cfi_offset 14, -4
 972:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 3789              		.loc 1 972 5 view .LVU1090
 972:Task/Task_Control.c ****     TaskControl_CLIData_TypeDef *p_CLIData = NULL;
 3790              		.loc 1 972 24 is_stmt 0 view .LVU1091
 3791 0002 FFF7FEFF 		bl	Shell_GetInstence
 3792              	.LVL300:
 3793 0006 0446     		mov	r4, r0
 3794              	.LVL301:
 973:Task/Task_Control.c ****     uint32_t time_stamp = SrvOsCommon.get_os_ms();
 3795              		.loc 1 973 5 is_stmt 1 view .LVU1092
 974:Task/Task_Control.c **** 
 3796              		.loc 1 974 5 view .LVU1093
 974:Task/Task_Control.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 101


 3797              		.loc 1 974 38 is_stmt 0 view .LVU1094
 3798 0008 1B4B     		ldr	r3, .L229
 3799 000a 1B68     		ldr	r3, [r3]
 974:Task/Task_Control.c **** 
 3800              		.loc 1 974 27 view .LVU1095
 3801 000c 9847     		blx	r3
 3802              	.LVL302:
 976:Task/Task_Control.c ****         return;
 3803              		.loc 1 976 5 is_stmt 1 view .LVU1096
 976:Task/Task_Control.c ****         return;
 3804              		.loc 1 976 7 is_stmt 0 view .LVU1097
 3805 000e DCB1     		cbz	r4, .L221
 3806 0010 0646     		mov	r6, r0
 979:Task/Task_Control.c ****     {
 3807              		.loc 1 979 5 is_stmt 1 view .LVU1098
 979:Task/Task_Control.c ****     {
 3808              		.loc 1 979 27 is_stmt 0 view .LVU1099
 3809 0012 1A4B     		ldr	r3, .L229+4
 3810 0014 D3F82433 		ldr	r3, [r3, #804]
 979:Task/Task_Control.c ****     {
 3811              		.loc 1 979 7 view .LVU1100
 3812 0018 BBB1     		cbz	r3, .L226
 985:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 3813              		.loc 1 985 5 is_stmt 1 view .LVU1101
 3814 001a 1949     		ldr	r1, .L229+8
 3815 001c 2046     		mov	r0, r4
 3816              	.LVL303:
 985:Task/Task_Control.c ****     p_CLIData = SrvOsCommon.malloc(sizeof(TaskControl_CLIData_TypeDef));
 3817              		.loc 1 985 5 is_stmt 0 view .LVU1102
 3818 001e FFF7FEFF 		bl	shellPrint
 3819              	.LVL304:
 986:Task/Task_Control.c ****     if (p_CLIData == NULL)
 3820              		.loc 1 986 5 is_stmt 1 view .LVU1103
 986:Task/Task_Control.c ****     if (p_CLIData == NULL)
 3821              		.loc 1 986 28 is_stmt 0 view .LVU1104
 3822 0022 154B     		ldr	r3, .L229
 3823 0024 9B6A     		ldr	r3, [r3, #40]
 986:Task/Task_Control.c ****     if (p_CLIData == NULL)
 3824              		.loc 1 986 17 view .LVU1105
 3825 0026 0820     		movs	r0, #8
 3826 0028 9847     		blx	r3
 3827              	.LVL305:
 987:Task/Task_Control.c ****     {
 3828              		.loc 1 987 5 is_stmt 1 view .LVU1106
 987:Task/Task_Control.c ****     {
 3829              		.loc 1 987 8 is_stmt 0 view .LVU1107
 3830 002a 0546     		mov	r5, r0
 3831 002c 90B1     		cbz	r0, .L227
 994:Task/Task_Control.c ****     p_CLIData->timestamp = time_stamp;
 3832              		.loc 1 994 5 is_stmt 1 view .LVU1108
 994:Task/Task_Control.c ****     p_CLIData->timestamp = time_stamp;
 3833              		.loc 1 994 25 is_stmt 0 view .LVU1109
 3834 002e 0023     		movs	r3, #0
 3835 0030 0371     		strb	r3, [r0, #4]
 995:Task/Task_Control.c ****     p_CLIData->index = 0;
 3836              		.loc 1 995 5 is_stmt 1 view .LVU1110
 995:Task/Task_Control.c ****     p_CLIData->index = 0;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 102


 3837              		.loc 1 995 26 is_stmt 0 view .LVU1111
 3838 0032 0660     		str	r6, [r0]
 996:Task/Task_Control.c ****     p_CLIData->value = 0;
 3839              		.loc 1 996 5 is_stmt 1 view .LVU1112
 996:Task/Task_Control.c ****     p_CLIData->value = 0;
 3840              		.loc 1 996 22 is_stmt 0 view .LVU1113
 3841 0034 4371     		strb	r3, [r0, #5]
 997:Task/Task_Control.c **** 
 3842              		.loc 1 997 5 is_stmt 1 view .LVU1114
 997:Task/Task_Control.c **** 
 3843              		.loc 1 997 22 is_stmt 0 view .LVU1115
 3844 0036 C380     		strh	r3, [r0, #6]	@ movhi
 999:Task/Task_Control.c ****     {
 3845              		.loc 1 999 5 is_stmt 1 view .LVU1116
 999:Task/Task_Control.c ****     {
 3846              		.loc 1 999 8 is_stmt 0 view .LVU1117
 3847 0038 0122     		movs	r2, #1
 3848 003a 0146     		mov	r1, r0
 3849 003c 0F4B     		ldr	r3, .L229+4
 3850 003e D3F82403 		ldr	r0, [r3, #804]
 3851              	.LVL306:
 999:Task/Task_Control.c ****     {
 3852              		.loc 1 999 8 view .LVU1118
 3853 0042 FFF7FEFF 		bl	osMessagePut
 3854              	.LVL307:
 999:Task/Task_Control.c ****     {
 3855              		.loc 1 999 7 view .LVU1119
 3856 0046 70B9     		cbnz	r0, .L228
 3857              	.LVL308:
 3858              	.L221:
1004:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
 3859              		.loc 1 1004 1 view .LVU1120
 3860 0048 70BD     		pop	{r4, r5, r6, pc}
 3861              	.LVL309:
 3862              	.L226:
 981:Task/Task_Control.c ****         return;
 3863              		.loc 1 981 9 is_stmt 1 view .LVU1121
 3864 004a 0E49     		ldr	r1, .L229+12
 3865 004c 2046     		mov	r0, r4
 3866              	.LVL310:
 981:Task/Task_Control.c ****         return;
 3867              		.loc 1 981 9 is_stmt 0 view .LVU1122
 3868 004e FFF7FEFF 		bl	shellPrint
 3869              	.LVL311:
 982:Task/Task_Control.c ****     }
 3870              		.loc 1 982 9 is_stmt 1 view .LVU1123
 3871 0052 F9E7     		b	.L221
 3872              	.LVL312:
 3873              	.L227:
 989:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3874              		.loc 1 989 9 view .LVU1124
 3875 0054 0C49     		ldr	r1, .L229+16
 3876 0056 2046     		mov	r0, r4
 3877              	.LVL313:
 989:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3878              		.loc 1 989 9 is_stmt 0 view .LVU1125
 3879 0058 FFF7FEFF 		bl	shellPrint
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 103


 3880              	.LVL314:
 990:Task/Task_Control.c ****         return;
 3881              		.loc 1 990 9 is_stmt 1 view .LVU1126
 990:Task/Task_Control.c ****         return;
 3882              		.loc 1 990 20 is_stmt 0 view .LVU1127
 3883 005c 064B     		ldr	r3, .L229
 3884 005e DB6A     		ldr	r3, [r3, #44]
 990:Task/Task_Control.c ****         return;
 3885              		.loc 1 990 9 view .LVU1128
 3886 0060 2846     		mov	r0, r5
 3887 0062 9847     		blx	r3
 3888              	.LVL315:
 991:Task/Task_Control.c ****     }
 3889              		.loc 1 991 9 is_stmt 1 view .LVU1129
 3890 0064 F0E7     		b	.L221
 3891              	.L228:
1001:Task/Task_Control.c ****         SrvOsCommon.free(p_CLIData);
 3892              		.loc 1 1001 9 view .LVU1130
 3893 0066 0949     		ldr	r1, .L229+20
 3894 0068 2046     		mov	r0, r4
 3895 006a FFF7FEFF 		bl	shellPrint
 3896              	.LVL316:
1002:Task/Task_Control.c ****     }
 3897              		.loc 1 1002 9 view .LVU1131
1002:Task/Task_Control.c ****     }
 3898              		.loc 1 1002 20 is_stmt 0 view .LVU1132
 3899 006e 024B     		ldr	r3, .L229
 3900 0070 DB6A     		ldr	r3, [r3, #44]
1002:Task/Task_Control.c ****     }
 3901              		.loc 1 1002 9 view .LVU1133
 3902 0072 2846     		mov	r0, r5
 3903 0074 9847     		blx	r3
 3904              	.LVL317:
 3905 0076 E7E7     		b	.L221
 3906              	.L230:
 3907              		.align	2
 3908              	.L229:
 3909 0078 00000000 		.word	SrvOsCommon
 3910 007c 00000000 		.word	.LANCHOR0
 3911 0080 00000000 		.word	.LC41
 3912 0084 00000000 		.word	.LC18
 3913 0088 D4010000 		.word	.LC33
 3914 008c B4010000 		.word	.LC32
 3915              		.cfi_endproc
 3916              	.LFE2086:
 3918              		.section	.rodata.TaskControl_Param_Set.str1.4,"aMS",%progbits,1
 3919              		.align	2
 3920              	.LC42:
 3921 0000 09696E70 		.ascii	"\011input param 1 selection list\015\012\000"
 3921      75742070 
 3921      6172616D 
 3921      20312073 
 3921      656C6563 
 3922              		.align	2
 3923              	.LC43:
 3924 0020 09207069 		.ascii	"\011 pitch ----- set pitch  pid object \015\012\000"
 3924      74636820 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 104


 3924      2D2D2D2D 
 3924      2D207365 
 3924      74207069 
 3925 0047 00       		.align	2
 3926              	.LC44:
 3927 0048 0920726F 		.ascii	"\011 roll  ----- set roll   pid object \015\012\000"
 3927      6C6C2020 
 3927      2D2D2D2D 
 3927      2D207365 
 3927      7420726F 
 3928 006f 00       		.align	2
 3929              	.LC45:
 3930 0070 09206778 		.ascii	"\011 gx -------- set gyro x pid object \015\012\000"
 3930      202D2D2D 
 3930      2D2D2D2D 
 3930      2D207365 
 3930      74206779 
 3931 0097 00       		.align	2
 3932              	.LC46:
 3933 0098 09206779 		.ascii	"\011 gy -------- set gyro y pid object \015\012\000"
 3933      202D2D2D 
 3933      2D2D2D2D 
 3933      2D207365 
 3933      74206779 
 3934 00bf 00       		.align	2
 3935              	.LC47:
 3936 00c0 0920677A 		.ascii	"\011 gz -------- set gyro z pid object \015\012\000"
 3936      202D2D2D 
 3936      2D2D2D2D 
 3936      2D207365 
 3936      74206779 
 3937 00e7 00       		.align	2
 3938              	.LC48:
 3939 00e8 09696E70 		.ascii	"\011input param 2 PID param select\015\012\000"
 3939      75742070 
 3939      6172616D 
 3939      20322050 
 3939      49442070 
 3940 010a 0000     		.align	2
 3941              	.LC49:
 3942 010c 09206750 		.ascii	"\011 gP -------- set PID gP section \015\012\000"
 3942      202D2D2D 
 3942      2D2D2D2D 
 3942      2D207365 
 3942      74205049 
 3943              		.align	2
 3944              	.LC50:
 3945 0130 09206750 		.ascii	"\011 gP_Diff --- set PID gP_Diff section \015\012\000"
 3945      5F446966 
 3945      66202D2D 
 3945      2D207365 
 3945      74205049 
 3946 0159 000000   		.align	2
 3947              	.LC51:
 3948 015c 09206749 		.ascii	"\011 gI -------- set PID gI section \015\012\000"
 3948      202D2D2D 
 3948      2D2D2D2D 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 105


 3948      2D207365 
 3948      74205049 
 3949              		.align	2
 3950              	.LC52:
 3951 0180 09206749 		.ascii	"\011 gI_range -- set PID gI Range section \015\012\000"
 3951      5F72616E 
 3951      6765202D 
 3951      2D207365 
 3951      74205049 
 3952 01aa 0000     		.align	2
 3953              	.LC53:
 3954 01ac 09206744 		.ascii	"\011 gD -------- set PID gD section \015\012\000"
 3954      202D2D2D 
 3954      2D2D2D2D 
 3954      2D207365 
 3954      74205049 
 3955              		.align	2
 3956              	.LC54:
 3957 01d0 09696E70 		.ascii	"\011input param 3 incomming value\015\012\000"
 3957      75742070 
 3957      6172616D 
 3957      20332069 
 3957      6E636F6D 
 3958 01f1 000000   		.align	2
 3959              	.LC55:
 3960 01f4 0920666F 		.ascii	"\011 for example: if u want set 0.81 then input 810"
 3960      72206578 
 3960      616D706C 
 3960      653A2069 
 3960      66207520 
 3961 0224 200D0A00 		.ascii	" \015\012\000"
 3962              		.align	2
 3963              	.LC56:
 3964 0228 09202020 		.ascii	"\011              actually value = set value / 1000"
 3964      20202020 
 3964      20202020 
 3964      20202061 
 3964      63747561 
 3965 0258 2E306620 		.ascii	".0f \015\012\000"
 3965      0D0A00
 3966 025f 00       		.align	2
 3967              	.LC57:
 3968 0260 09696E70 		.ascii	"\011input param 4 save choice\015\012\000"
 3968      75742070 
 3968      6172616D 
 3968      20342073 
 3968      61766520 
 3969 027d 000000   		.align	2
 3970              	.LC58:
 3971 0280 09205320 		.ascii	"\011 S ------ save new parameter \015\012\000"
 3971      2D2D2D2D 
 3971      2D2D2073 
 3971      61766520 
 3971      6E657720 
 3972 02a1 000000   		.align	2
 3973              	.LC59:
 3974 02a4 0D0A0920 		.ascii	"\015\012\011 Input value : %d \015\012\000"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 106


 3974      496E7075 
 3974      74207661 
 3974      6C756520 
 3974      3A202564 
 3975              		.align	2
 3976              	.LC60:
 3977 02bc 70697463 		.ascii	"pitch\000"
 3977      6800
 3978 02c2 0000     		.align	2
 3979              	.LC61:
 3980 02c4 095B2070 		.ascii	"\011[ pitch selected ]\015\012\000"
 3980      69746368 
 3980      2073656C 
 3980      65637465 
 3980      64205D0D 
 3981 02da 0000     		.align	2
 3982              	.LC62:
 3983 02dc 726F6C6C 		.ascii	"roll\000"
 3983      00
 3984 02e1 000000   		.align	2
 3985              	.LC63:
 3986 02e4 095B2072 		.ascii	"\011[ roll selected ]\015\012\000"
 3986      6F6C6C20 
 3986      73656C65 
 3986      63746564 
 3986      205D0D0A 
 3987 02f9 000000   		.align	2
 3988              	.LC64:
 3989 02fc 677800   		.ascii	"gx\000"
 3990 02ff 00       		.align	2
 3991              	.LC65:
 3992 0300 095B2067 		.ascii	"\011[ gyro x selected ]\015\012\000"
 3992      79726F20 
 3992      78207365 
 3992      6C656374 
 3992      6564205D 
 3993 0317 00       		.align	2
 3994              	.LC66:
 3995 0318 677900   		.ascii	"gy\000"
 3996 031b 00       		.align	2
 3997              	.LC67:
 3998 031c 095B2067 		.ascii	"\011[ gyro y selected ]\015\012\000"
 3998      79726F20 
 3998      79207365 
 3998      6C656374 
 3998      6564205D 
 3999 0333 00       		.align	2
 4000              	.LC68:
 4001 0334 677A00   		.ascii	"gz\000"
 4002 0337 00       		.align	2
 4003              	.LC69:
 4004 0338 095B2067 		.ascii	"\011[ gyro z selected ]\015\012\000"
 4004      79726F20 
 4004      7A207365 
 4004      6C656374 
 4004      6564205D 
 4005 034f 00       		.align	2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 107


 4006              	.LC70:
 4007 0350 09556E6B 		.ascii	"\011Unkonw Selection\015\012\000"
 4007      6F6E7720 
 4007      53656C65 
 4007      6374696F 
 4007      6E0D0A00 
 4008              		.align	2
 4009              	.LC71:
 4010 0364 675000   		.ascii	"gP\000"
 4011 0367 00       		.align	2
 4012              	.LC72:
 4013 0368 095B2067 		.ascii	"\011[ gP selected ]\015\012\000"
 4013      50207365 
 4013      6C656374 
 4013      6564205D 
 4013      0D0A00
 4014 037b 00       		.align	2
 4015              	.LC73:
 4016 037c 67505F44 		.ascii	"gP_Diff\000"
 4016      69666600 
 4017              		.align	2
 4018              	.LC74:
 4019 0384 095B2067 		.ascii	"\011[ gP_Diff selected ]\015\012\000"
 4019      505F4469 
 4019      66662073 
 4019      656C6563 
 4019      74656420 
 4020              		.align	2
 4021              	.LC75:
 4022 039c 674900   		.ascii	"gI\000"
 4023 039f 00       		.align	2
 4024              	.LC76:
 4025 03a0 095B2067 		.ascii	"\011[ gI selected ]\015\012\000"
 4025      49207365 
 4025      6C656374 
 4025      6564205D 
 4025      0D0A00
 4026 03b3 00       		.align	2
 4027              	.LC77:
 4028 03b4 67495F52 		.ascii	"gI_Range\000"
 4028      616E6765 
 4028      00
 4029 03bd 000000   		.align	2
 4030              	.LC78:
 4031 03c0 095B2067 		.ascii	"\011[ gI_Range selected ]\015\012\000"
 4031      495F5261 
 4031      6E676520 
 4031      73656C65 
 4031      63746564 
 4032 03d9 000000   		.align	2
 4033              	.LC79:
 4034 03dc 674400   		.ascii	"gD\000"
 4035 03df 00       		.align	2
 4036              	.LC80:
 4037 03e0 095B2067 		.ascii	"\011[ gD selected ]\015\012\000"
 4037      44207365 
 4037      6C656374 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 108


 4037      6564205D 
 4037      0D0A00
 4038 03f3 00       		.align	2
 4039              	.LC81:
 4040 03f4 5B202D20 		.ascii	"[ - New Param - ]\015\012\000"
 4040      4E657720 
 4040      50617261 
 4040      6D202D20 
 4040      5D0D0A00 
 4041              		.align	2
 4042              	.LC82:
 4043 0408 095B202D 		.ascii	"\011[ -- PID Parameter Store Accomplish -- ]\015\012"
 4043      2D205049 
 4043      44205061 
 4043      72616D65 
 4043      74657220 
 4044 0433 00       		.ascii	"\000"
 4045              		.align	2
 4046              	.LC83:
 4047 0434 095B202D 		.ascii	"\011[ -- PID Parameter Store Failed -- ]\015\012\000"
 4047      2D205049 
 4047      44205061 
 4047      72616D65 
 4047      74657220 
 4048              		.align	2
 4049              	.LC84:
 4050 045c 095B2069 		.ascii	"\011[ item slot addr : %lld ]\015\012\000"
 4050      74656D20 
 4050      736C6F74 
 4050      20616464 
 4050      72203A20 
 4051 0479 000000   		.align	2
 4052              	.LC85:
 4053 047c 095B2064 		.ascii	"\011[ data slot addr : %lld ]\015\012\000"
 4053      61746120 
 4053      736C6F74 
 4053      20616464 
 4053      72203A20 
 4054 0499 000000   		.align	2
 4055              	.LC86:
 4056 049c 095B202D 		.ascii	"\011[ -- PID parameter Storage Error -- ]\015\012\000"
 4056      2D205049 
 4056      44207061 
 4056      72616D65 
 4056      74657220 
 4057              		.section	.text.TaskControl_Param_Set,"ax",%progbits
 4058              		.align	1
 4059              		.syntax unified
 4060              		.thumb
 4061              		.thumb_func
 4063              	TaskControl_Param_Set:
 4064              	.LVL318:
 4065              	.LFB2090:
1057:Task/Task_Control.c **** SHELL_EXPORT_CMD(SHELL_CMD_PERMISSION(0) | SHELL_CMD_TYPE(SHELL_TYPE_CMD_FUNC) | SHELL_CMD_DISABLE_
1058:Task/Task_Control.c **** 
1059:Task/Task_Control.c **** static void TaskControl_Param_Set(const char *sel, const char *para_sel, uint16_t value, const char
1060:Task/Task_Control.c **** {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 109


 4066              		.loc 1 1060 1 is_stmt 1 view -0
 4067              		.cfi_startproc
 4068              		@ args = 0, pretend = 0, frame = 408
 4069              		@ frame_needed = 0, uses_anonymous_args = 0
 4070              		.loc 1 1060 1 is_stmt 0 view .LVU1135
 4071 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4072              	.LCFI49:
 4073              		.cfi_def_cfa_offset 24
 4074              		.cfi_offset 4, -24
 4075              		.cfi_offset 5, -20
 4076              		.cfi_offset 6, -16
 4077              		.cfi_offset 7, -12
 4078              		.cfi_offset 8, -8
 4079              		.cfi_offset 14, -4
 4080 0004 2DED028B 		vpush.64	{d8}
 4081              	.LCFI50:
 4082              		.cfi_def_cfa_offset 32
 4083              		.cfi_offset 80, -32
 4084              		.cfi_offset 81, -28
 4085 0008 F4B0     		sub	sp, sp, #464
 4086              	.LCFI51:
 4087              		.cfi_def_cfa_offset 496
 4088 000a 0646     		mov	r6, r0
 4089 000c 0F46     		mov	r7, r1
 4090 000e 0F92     		str	r2, [sp, #60]
 4091 0010 9846     		mov	r8, r3
1061:Task/Task_Control.c ****     Shell *shell_obj = Shell_GetInstence();
 4092              		.loc 1 1061 5 is_stmt 1 view .LVU1136
 4093              		.loc 1 1061 24 is_stmt 0 view .LVU1137
 4094 0012 FFF7FEFF 		bl	Shell_GetInstence
 4095              	.LVL319:
1062:Task/Task_Control.c ****     PIDObj_TypeDef *PID_Obj = NULL;
 4096              		.loc 1 1062 5 is_stmt 1 view .LVU1138
1063:Task/Task_Control.c ****     TaskControl_FlightParam_TypeDef Param;
 4097              		.loc 1 1063 5 view .LVU1139
1064:Task/Task_Control.c **** 
1065:Task/Task_Control.c ****     if(shell_obj == NULL)
 4098              		.loc 1 1065 5 view .LVU1140
 4099              		.loc 1 1065 7 is_stmt 0 view .LVU1141
 4100 0016 0028     		cmp	r0, #0
 4101 0018 78D0     		beq	.L231
 4102 001a 0446     		mov	r4, r0
1066:Task/Task_Control.c ****         return;
1067:Task/Task_Control.c **** 
1068:Task/Task_Control.c ****     memset(&Param, 0, sizeof(TaskControl_FlightParam_TypeDef));
 4103              		.loc 1 1068 5 is_stmt 1 view .LVU1142
 4104 001c C822     		movs	r2, #200
 4105 001e 0021     		movs	r1, #0
 4106 0020 42A8     		add	r0, sp, #264
 4107              	.LVL320:
 4108              		.loc 1 1068 5 is_stmt 0 view .LVU1143
 4109 0022 FFF7FEFF 		bl	memset
 4110              	.LVL321:
1069:Task/Task_Control.c **** 
1070:Task/Task_Control.c ****     shellPrint(shell_obj, "\tinput param 1 selection list\r\n");
 4111              		.loc 1 1070 5 is_stmt 1 view .LVU1144
 4112 0026 BE49     		ldr	r1, .L261
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 110


 4113 0028 2046     		mov	r0, r4
 4114 002a FFF7FEFF 		bl	shellPrint
 4115              	.LVL322:
1071:Task/Task_Control.c ****     shellPrint(shell_obj, "\t pitch ----- set pitch  pid object \r\n");
 4116              		.loc 1 1071 5 view .LVU1145
 4117 002e BD49     		ldr	r1, .L261+4
 4118 0030 2046     		mov	r0, r4
 4119 0032 FFF7FEFF 		bl	shellPrint
 4120              	.LVL323:
1072:Task/Task_Control.c ****     shellPrint(shell_obj, "\t roll  ----- set roll   pid object \r\n");
 4121              		.loc 1 1072 5 view .LVU1146
 4122 0036 BC49     		ldr	r1, .L261+8
 4123 0038 2046     		mov	r0, r4
 4124 003a FFF7FEFF 		bl	shellPrint
 4125              	.LVL324:
1073:Task/Task_Control.c ****     shellPrint(shell_obj, "\t gx -------- set gyro x pid object \r\n");
 4126              		.loc 1 1073 5 view .LVU1147
 4127 003e BB49     		ldr	r1, .L261+12
 4128 0040 2046     		mov	r0, r4
 4129 0042 FFF7FEFF 		bl	shellPrint
 4130              	.LVL325:
1074:Task/Task_Control.c ****     shellPrint(shell_obj, "\t gy -------- set gyro y pid object \r\n");
 4131              		.loc 1 1074 5 view .LVU1148
 4132 0046 BA49     		ldr	r1, .L261+16
 4133 0048 2046     		mov	r0, r4
 4134 004a FFF7FEFF 		bl	shellPrint
 4135              	.LVL326:
1075:Task/Task_Control.c ****     shellPrint(shell_obj, "\t gz -------- set gyro z pid object \r\n");
 4136              		.loc 1 1075 5 view .LVU1149
 4137 004e B949     		ldr	r1, .L261+20
 4138 0050 2046     		mov	r0, r4
 4139 0052 FFF7FEFF 		bl	shellPrint
 4140              	.LVL327:
1076:Task/Task_Control.c **** 
1077:Task/Task_Control.c ****     shellPrint(shell_obj, "\tinput param 2 PID param select\r\n");
 4141              		.loc 1 1077 5 view .LVU1150
 4142 0056 B849     		ldr	r1, .L261+24
 4143 0058 2046     		mov	r0, r4
 4144 005a FFF7FEFF 		bl	shellPrint
 4145              	.LVL328:
1078:Task/Task_Control.c ****     shellPrint(shell_obj, "\t gP -------- set PID gP section \r\n");
 4146              		.loc 1 1078 5 view .LVU1151
 4147 005e B749     		ldr	r1, .L261+28
 4148 0060 2046     		mov	r0, r4
 4149 0062 FFF7FEFF 		bl	shellPrint
 4150              	.LVL329:
1079:Task/Task_Control.c ****     shellPrint(shell_obj, "\t gP_Diff --- set PID gP_Diff section \r\n");
 4151              		.loc 1 1079 5 view .LVU1152
 4152 0066 B649     		ldr	r1, .L261+32
 4153 0068 2046     		mov	r0, r4
 4154 006a FFF7FEFF 		bl	shellPrint
 4155              	.LVL330:
1080:Task/Task_Control.c ****     shellPrint(shell_obj, "\t gI -------- set PID gI section \r\n");
 4156              		.loc 1 1080 5 view .LVU1153
 4157 006e B549     		ldr	r1, .L261+36
 4158 0070 2046     		mov	r0, r4
 4159 0072 FFF7FEFF 		bl	shellPrint
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 111


 4160              	.LVL331:
1081:Task/Task_Control.c ****     shellPrint(shell_obj, "\t gI_range -- set PID gI Range section \r\n");
 4161              		.loc 1 1081 5 view .LVU1154
 4162 0076 B449     		ldr	r1, .L261+40
 4163 0078 2046     		mov	r0, r4
 4164 007a FFF7FEFF 		bl	shellPrint
 4165              	.LVL332:
1082:Task/Task_Control.c ****     shellPrint(shell_obj, "\t gD -------- set PID gD section \r\n");
 4166              		.loc 1 1082 5 view .LVU1155
 4167 007e B349     		ldr	r1, .L261+44
 4168 0080 2046     		mov	r0, r4
 4169 0082 FFF7FEFF 		bl	shellPrint
 4170              	.LVL333:
1083:Task/Task_Control.c **** 
1084:Task/Task_Control.c ****     shellPrint(shell_obj, "\tinput param 3 incomming value\r\n");
 4171              		.loc 1 1084 5 view .LVU1156
 4172 0086 B249     		ldr	r1, .L261+48
 4173 0088 2046     		mov	r0, r4
 4174 008a FFF7FEFF 		bl	shellPrint
 4175              	.LVL334:
1085:Task/Task_Control.c ****     shellPrint(shell_obj, "\t for example: if u want set 0.81 then input 810 \r\n");
 4176              		.loc 1 1085 5 view .LVU1157
 4177 008e B149     		ldr	r1, .L261+52
 4178 0090 2046     		mov	r0, r4
 4179 0092 FFF7FEFF 		bl	shellPrint
 4180              	.LVL335:
1086:Task/Task_Control.c ****     shellPrint(shell_obj, "\t              actually value = set value / 1000.0f \r\n");
 4181              		.loc 1 1086 5 view .LVU1158
 4182 0096 B049     		ldr	r1, .L261+56
 4183 0098 2046     		mov	r0, r4
 4184 009a FFF7FEFF 		bl	shellPrint
 4185              	.LVL336:
1087:Task/Task_Control.c ****     shellPrint(shell_obj, "\tinput param 4 save choice\r\n");
 4186              		.loc 1 1087 5 view .LVU1159
 4187 009e AF49     		ldr	r1, .L261+60
 4188 00a0 2046     		mov	r0, r4
 4189 00a2 FFF7FEFF 		bl	shellPrint
 4190              	.LVL337:
1088:Task/Task_Control.c ****     shellPrint(shell_obj, "\t S ------ save new parameter \r\n");
 4191              		.loc 1 1088 5 view .LVU1160
 4192 00a6 AE49     		ldr	r1, .L261+64
 4193 00a8 2046     		mov	r0, r4
 4194 00aa FFF7FEFF 		bl	shellPrint
 4195              	.LVL338:
1089:Task/Task_Control.c ****     
1090:Task/Task_Control.c ****     shellPrint(shell_obj, "\r\n\t Input value : %d \r\n", value / 1000.0f);
 4196              		.loc 1 1090 5 view .LVU1161
 4197              		.loc 1 1090 65 is_stmt 0 view .LVU1162
 4198 00ae DDED0F7A 		vldr.32	s15, [sp, #60]	@ int
 4199 00b2 B8EEE77A 		vcvt.f32.s32	s14, s15
 4200 00b6 DFEDAB7A 		vldr.32	s15, .L261+68
 4201 00ba 87EE278A 		vdiv.f32	s16, s14, s15
 4202              		.loc 1 1090 5 view .LVU1163
 4203 00be 18EE100A 		vmov	r0, s16
 4204 00c2 FFF7FEFF 		bl	__aeabi_f2d
 4205              	.LVL339:
 4206 00c6 0246     		mov	r2, r0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 112


 4207 00c8 0B46     		mov	r3, r1
 4208 00ca A749     		ldr	r1, .L261+72
 4209 00cc 2046     		mov	r0, r4
 4210 00ce FFF7FEFF 		bl	shellPrint
 4211              	.LVL340:
1091:Task/Task_Control.c ****     shellPrint(shell_obj, "\r\n");
 4212              		.loc 1 1091 5 is_stmt 1 view .LVU1164
 4213 00d2 A649     		ldr	r1, .L261+76
 4214 00d4 2046     		mov	r0, r4
 4215 00d6 FFF7FEFF 		bl	shellPrint
 4216              	.LVL341:
1092:Task/Task_Control.c **** 
1093:Task/Task_Control.c ****     if ((strlen(sel) == strlen("pitch")) && (memcmp(sel, "pitch", strlen("pitch")) == 0))
 4217              		.loc 1 1093 5 view .LVU1165
 4218              		.loc 1 1093 10 is_stmt 0 view .LVU1166
 4219 00da 3046     		mov	r0, r6
 4220 00dc FFF7FEFF 		bl	strlen
 4221              	.LVL342:
 4222 00e0 0546     		mov	r5, r0
 4223              		.loc 1 1093 8 view .LVU1167
 4224 00e2 0528     		cmp	r0, #5
 4225 00e4 17D0     		beq	.L249
 4226              	.L233:
1094:Task/Task_Control.c ****     {
1095:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ pitch selected ]\r\n");
1096:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.PitchCtl_PIDObj;
1097:Task/Task_Control.c ****     }
1098:Task/Task_Control.c ****     else if ((strlen(sel) == strlen("roll")) && (memcmp(sel, "roll", strlen("roll")) == 0))
 4227              		.loc 1 1098 10 is_stmt 1 view .LVU1168
 4228              		.loc 1 1098 13 is_stmt 0 view .LVU1169
 4229 00e6 042D     		cmp	r5, #4
 4230 00e8 22D0     		beq	.L250
 4231              	.L235:
1099:Task/Task_Control.c ****     {
1100:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ roll selected ]\r\n");
1101:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.RollCtl_PIDObj;
1102:Task/Task_Control.c ****     }
1103:Task/Task_Control.c ****     else if ((strlen(sel) == strlen("gx")) && (memcmp(sel, "gx", strlen("gx")) == 0))
 4232              		.loc 1 1103 10 is_stmt 1 view .LVU1170
 4233              		.loc 1 1103 13 is_stmt 0 view .LVU1171
 4234 00ea 022D     		cmp	r5, #2
 4235 00ec 2DD0     		beq	.L251
 4236              	.L236:
1104:Task/Task_Control.c ****     {
1105:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ gyro x selected ]\r\n");
1106:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.GyrXCtl_PIDObj;
1107:Task/Task_Control.c ****     }
1108:Task/Task_Control.c ****     else if ((strlen(sel) == strlen("gy")) && (memcmp(sel, "gy", strlen("gy")) == 0))
 4237              		.loc 1 1108 10 is_stmt 1 view .LVU1172
 4238              		.loc 1 1108 13 is_stmt 0 view .LVU1173
 4239 00ee 022D     		cmp	r5, #2
 4240 00f0 38D0     		beq	.L252
 4241              	.L237:
1109:Task/Task_Control.c ****     {
1110:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ gyro y selected ]\r\n");
1111:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.GyrYCtl_PIDObj;
1112:Task/Task_Control.c ****     }
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 113


1113:Task/Task_Control.c ****     else if ((strlen(sel) == strlen("gz")) && (memcmp(sel, "gz", strlen("gz")) == 0))
 4242              		.loc 1 1113 10 is_stmt 1 view .LVU1174
 4243              		.loc 1 1113 13 is_stmt 0 view .LVU1175
 4244 00f2 022D     		cmp	r5, #2
 4245 00f4 06D1     		bne	.L238
 4246              		.loc 1 1113 48 discriminator 1 view .LVU1176
 4247 00f6 0222     		movs	r2, #2
 4248 00f8 9D49     		ldr	r1, .L261+80
 4249 00fa 3046     		mov	r0, r6
 4250 00fc FFF7FEFF 		bl	memcmp
 4251              	.LVL343:
 4252              		.loc 1 1113 44 discriminator 1 view .LVU1177
 4253 0100 0028     		cmp	r0, #0
 4254 0102 3CD0     		beq	.L253
 4255              	.L238:
1114:Task/Task_Control.c ****     {
1115:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ gyro z selected ]\r\n");
1116:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.GyrZCtl_PIDObj;
1117:Task/Task_Control.c ****     }
1118:Task/Task_Control.c ****     else
1119:Task/Task_Control.c ****     {
1120:Task/Task_Control.c ****         shellPrint(shell_obj, "\tUnkonw Selection\r\n");
 4256              		.loc 1 1120 9 is_stmt 1 view .LVU1178
 4257 0104 9B49     		ldr	r1, .L261+84
 4258 0106 2046     		mov	r0, r4
 4259 0108 FFF7FEFF 		bl	shellPrint
 4260              	.LVL344:
1121:Task/Task_Control.c ****         return;
 4261              		.loc 1 1121 9 view .LVU1179
 4262              	.L231:
1122:Task/Task_Control.c ****     }
1123:Task/Task_Control.c **** 
1124:Task/Task_Control.c ****     if ((strlen(para_sel) == strlen("gP")) && \
1125:Task/Task_Control.c ****         (memcmp(para_sel, "gP", strlen("gP")) == 0))
1126:Task/Task_Control.c ****     {
1127:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ gP selected ]\r\n");
1128:Task/Task_Control.c ****         PID_Obj->gP = value / 1000.0f;
1129:Task/Task_Control.c ****     }
1130:Task/Task_Control.c ****     else if ((strlen(para_sel) == strlen("gP_Diff")) && \
1131:Task/Task_Control.c ****              (memcmp(para_sel, "gP_Diff", strlen("gP_Diff")) == 0))
1132:Task/Task_Control.c ****     {
1133:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ gP_Diff selected ]\r\n");
1134:Task/Task_Control.c ****         PID_Obj->diff_max = value / 1000.0f;
1135:Task/Task_Control.c ****         PID_Obj->diff_min = -value / 1000.0f;
1136:Task/Task_Control.c ****     }
1137:Task/Task_Control.c ****     else if ((strlen(para_sel) == strlen("gI")) && \
1138:Task/Task_Control.c ****              (memcmp(para_sel, "gI", strlen("gI")) == 0))
1139:Task/Task_Control.c ****     {
1140:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ gI selected ]\r\n");
1141:Task/Task_Control.c ****         PID_Obj->gI = value / 1000.0f;
1142:Task/Task_Control.c ****     }
1143:Task/Task_Control.c ****     else if ((strlen(para_sel) == strlen("gI_Range")) && \
1144:Task/Task_Control.c ****              (memcmp(para_sel, "gI_Range", strlen("gI_Range")) == 0))
1145:Task/Task_Control.c ****     {
1146:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ gI_Range selected ]\r\n");
1147:Task/Task_Control.c ****         PID_Obj->gI_Max = value / 1000.0f;
1148:Task/Task_Control.c ****         PID_Obj->gI_Min = -value / 1000.0f;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 114


1149:Task/Task_Control.c ****     }
1150:Task/Task_Control.c ****     else if ((strlen(para_sel) == strlen("gD")) && \
1151:Task/Task_Control.c ****              (memcmp(para_sel, "gD", strlen("gD")) == 0))
1152:Task/Task_Control.c ****     {
1153:Task/Task_Control.c ****         shellPrint(shell_obj, "\t[ gD selected ]\r\n");
1154:Task/Task_Control.c ****         PID_Obj->gD = value / 1000.0f;
1155:Task/Task_Control.c ****     }
1156:Task/Task_Control.c **** 
1157:Task/Task_Control.c ****     /* show new param */
1158:Task/Task_Control.c ****     shellPrint(shell_obj, "[ - New Param - ]\r\n");
1159:Task/Task_Control.c ****     TaskControl_PID_Param_Print(shell_obj, *PID_Obj);
1160:Task/Task_Control.c **** 
1161:Task/Task_Control.c ****     if (save && (strlen(save) == 1) && (*save == 'S'))
1162:Task/Task_Control.c ****     {
1163:Task/Task_Control.c ****         if (TaskControl_Monitor.pid_store_info.item_addr && \
1164:Task/Task_Control.c ****             TaskControl_Monitor.pid_store_info.item.data_addr)
1165:Task/Task_Control.c ****         {
1166:Task/Task_Control.c ****             Param = TaskControl_Get_InuseParam();
1167:Task/Task_Control.c ****             if (Storage.update(Para_User, TaskControl_Monitor.pid_store_info.item.data_addr, \
1168:Task/Task_Control.c ****                                (uint8_t *)&Param, sizeof(TaskControl_FlightParam_TypeDef)) == Stora
1169:Task/Task_Control.c ****             {
1170:Task/Task_Control.c ****                 shellPrint(shell_obj, "\t[ -- PID Parameter Store Accomplish -- ]\r\n");
1171:Task/Task_Control.c ****                 return;
1172:Task/Task_Control.c ****             }
1173:Task/Task_Control.c **** 
1174:Task/Task_Control.c ****             shellPrint(shell_obj, "\t[ -- PID Parameter Store Failed -- ]\r\n");
1175:Task/Task_Control.c ****         }
1176:Task/Task_Control.c ****         else
1177:Task/Task_Control.c ****         {
1178:Task/Task_Control.c ****             shellPrint(shell_obj, "\t[ item slot addr : %lld ]\r\n", TaskControl_Monitor.pid_store_
1179:Task/Task_Control.c ****             shellPrint(shell_obj, "\t[ data slot addr : %lld ]\r\n", TaskControl_Monitor.pid_store_
1180:Task/Task_Control.c ****             shellPrint(shell_obj, "\t[ -- PID parameter Storage Error -- ]\r\n");
1181:Task/Task_Control.c ****         }
1182:Task/Task_Control.c ****     }
1183:Task/Task_Control.c **** }
 4263              		.loc 1 1183 1 is_stmt 0 view .LVU1180
 4264 010c 74B0     		add	sp, sp, #464
 4265              	.LCFI52:
 4266              		.cfi_remember_state
 4267              		.cfi_def_cfa_offset 32
 4268              		@ sp needed
 4269 010e BDEC028B 		vldm	sp!, {d8}
 4270              	.LCFI53:
 4271              		.cfi_restore 80
 4272              		.cfi_restore 81
 4273              		.cfi_def_cfa_offset 24
 4274 0112 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4275              	.LVL345:
 4276              	.L249:
 4277              	.LCFI54:
 4278              		.cfi_restore_state
1093:Task/Task_Control.c ****     {
 4279              		.loc 1 1093 46 discriminator 1 view .LVU1181
 4280 0116 0522     		movs	r2, #5
 4281 0118 9749     		ldr	r1, .L261+88
 4282 011a 3046     		mov	r0, r6
 4283 011c FFF7FEFF 		bl	memcmp
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 115


 4284              	.LVL346:
1093:Task/Task_Control.c ****     {
 4285              		.loc 1 1093 42 discriminator 1 view .LVU1182
 4286 0120 0028     		cmp	r0, #0
 4287 0122 E0D1     		bne	.L233
1095:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.PitchCtl_PIDObj;
 4288              		.loc 1 1095 9 is_stmt 1 view .LVU1183
 4289 0124 9549     		ldr	r1, .L261+92
 4290 0126 2046     		mov	r0, r4
 4291 0128 FFF7FEFF 		bl	shellPrint
 4292              	.LVL347:
1096:Task/Task_Control.c ****     }
 4293              		.loc 1 1096 9 view .LVU1184
1096:Task/Task_Control.c ****     }
 4294              		.loc 1 1096 17 is_stmt 0 view .LVU1185
 4295 012c 944E     		ldr	r6, .L261+96
 4296              	.LVL348:
1096:Task/Task_Control.c ****     }
 4297              		.loc 1 1096 17 view .LVU1186
 4298 012e 2BE0     		b	.L234
 4299              	.LVL349:
 4300              	.L250:
1098:Task/Task_Control.c ****     {
 4301              		.loc 1 1098 50 discriminator 1 view .LVU1187
 4302 0130 0422     		movs	r2, #4
 4303 0132 9449     		ldr	r1, .L261+100
 4304 0134 3046     		mov	r0, r6
 4305 0136 FFF7FEFF 		bl	memcmp
 4306              	.LVL350:
1098:Task/Task_Control.c ****     {
 4307              		.loc 1 1098 46 discriminator 1 view .LVU1188
 4308 013a 0028     		cmp	r0, #0
 4309 013c D5D1     		bne	.L235
1100:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.RollCtl_PIDObj;
 4310              		.loc 1 1100 9 is_stmt 1 view .LVU1189
 4311 013e 9249     		ldr	r1, .L261+104
 4312 0140 2046     		mov	r0, r4
 4313 0142 FFF7FEFF 		bl	shellPrint
 4314              	.LVL351:
1101:Task/Task_Control.c ****     }
 4315              		.loc 1 1101 9 view .LVU1190
1101:Task/Task_Control.c ****     }
 4316              		.loc 1 1101 17 is_stmt 0 view .LVU1191
 4317 0146 914E     		ldr	r6, .L261+108
 4318              	.LVL352:
1101:Task/Task_Control.c ****     }
 4319              		.loc 1 1101 17 view .LVU1192
 4320 0148 1EE0     		b	.L234
 4321              	.LVL353:
 4322              	.L251:
1103:Task/Task_Control.c ****     {
 4323              		.loc 1 1103 48 discriminator 1 view .LVU1193
 4324 014a 0222     		movs	r2, #2
 4325 014c 9049     		ldr	r1, .L261+112
 4326 014e 3046     		mov	r0, r6
 4327 0150 FFF7FEFF 		bl	memcmp
 4328              	.LVL354:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 116


1103:Task/Task_Control.c ****     {
 4329              		.loc 1 1103 44 discriminator 1 view .LVU1194
 4330 0154 0028     		cmp	r0, #0
 4331 0156 CAD1     		bne	.L236
1105:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.GyrXCtl_PIDObj;
 4332              		.loc 1 1105 9 is_stmt 1 view .LVU1195
 4333 0158 8E49     		ldr	r1, .L261+116
 4334 015a 2046     		mov	r0, r4
 4335 015c FFF7FEFF 		bl	shellPrint
 4336              	.LVL355:
1106:Task/Task_Control.c ****     }
 4337              		.loc 1 1106 9 view .LVU1196
1106:Task/Task_Control.c ****     }
 4338              		.loc 1 1106 17 is_stmt 0 view .LVU1197
 4339 0160 8D4E     		ldr	r6, .L261+120
 4340              	.LVL356:
1106:Task/Task_Control.c ****     }
 4341              		.loc 1 1106 17 view .LVU1198
 4342 0162 11E0     		b	.L234
 4343              	.LVL357:
 4344              	.L252:
1108:Task/Task_Control.c ****     {
 4345              		.loc 1 1108 48 discriminator 1 view .LVU1199
 4346 0164 0222     		movs	r2, #2
 4347 0166 8D49     		ldr	r1, .L261+124
 4348 0168 3046     		mov	r0, r6
 4349 016a FFF7FEFF 		bl	memcmp
 4350              	.LVL358:
1108:Task/Task_Control.c ****     {
 4351              		.loc 1 1108 44 discriminator 1 view .LVU1200
 4352 016e 0028     		cmp	r0, #0
 4353 0170 BFD1     		bne	.L237
1110:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.GyrYCtl_PIDObj;
 4354              		.loc 1 1110 9 is_stmt 1 view .LVU1201
 4355 0172 8B49     		ldr	r1, .L261+128
 4356 0174 2046     		mov	r0, r4
 4357 0176 FFF7FEFF 		bl	shellPrint
 4358              	.LVL359:
1111:Task/Task_Control.c ****     }
 4359              		.loc 1 1111 9 view .LVU1202
1111:Task/Task_Control.c ****     }
 4360              		.loc 1 1111 17 is_stmt 0 view .LVU1203
 4361 017a 8A4E     		ldr	r6, .L261+132
 4362              	.LVL360:
1111:Task/Task_Control.c ****     }
 4363              		.loc 1 1111 17 view .LVU1204
 4364 017c 04E0     		b	.L234
 4365              	.LVL361:
 4366              	.L253:
1115:Task/Task_Control.c ****         PID_Obj = &TaskControl_Monitor.GyrZCtl_PIDObj;
 4367              		.loc 1 1115 9 is_stmt 1 view .LVU1205
 4368 017e 8A49     		ldr	r1, .L261+136
 4369 0180 2046     		mov	r0, r4
 4370 0182 FFF7FEFF 		bl	shellPrint
 4371              	.LVL362:
1116:Task/Task_Control.c ****     }
 4372              		.loc 1 1116 9 view .LVU1206
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 117


1116:Task/Task_Control.c ****     }
 4373              		.loc 1 1116 17 is_stmt 0 view .LVU1207
 4374 0186 894E     		ldr	r6, .L261+140
 4375              	.LVL363:
 4376              	.L234:
1124:Task/Task_Control.c ****         (memcmp(para_sel, "gP", strlen("gP")) == 0))
 4377              		.loc 1 1124 5 is_stmt 1 view .LVU1208
1124:Task/Task_Control.c ****         (memcmp(para_sel, "gP", strlen("gP")) == 0))
 4378              		.loc 1 1124 10 is_stmt 0 view .LVU1209
 4379 0188 3846     		mov	r0, r7
 4380 018a FFF7FEFF 		bl	strlen
 4381              	.LVL364:
 4382 018e 0546     		mov	r5, r0
1124:Task/Task_Control.c ****         (memcmp(para_sel, "gP", strlen("gP")) == 0))
 4383              		.loc 1 1124 8 view .LVU1210
 4384 0190 0228     		cmp	r0, #2
 4385 0192 48D0     		beq	.L254
 4386              	.L239:
1130:Task/Task_Control.c ****              (memcmp(para_sel, "gP_Diff", strlen("gP_Diff")) == 0))
 4387              		.loc 1 1130 10 is_stmt 1 view .LVU1211
1130:Task/Task_Control.c ****              (memcmp(para_sel, "gP_Diff", strlen("gP_Diff")) == 0))
 4388              		.loc 1 1130 13 is_stmt 0 view .LVU1212
 4389 0194 072D     		cmp	r5, #7
 4390 0196 54D0     		beq	.L255
 4391              	.L241:
1137:Task/Task_Control.c ****              (memcmp(para_sel, "gI", strlen("gI")) == 0))
 4392              		.loc 1 1137 10 is_stmt 1 view .LVU1213
1137:Task/Task_Control.c ****              (memcmp(para_sel, "gI", strlen("gI")) == 0))
 4393              		.loc 1 1137 13 is_stmt 0 view .LVU1214
 4394 0198 022D     		cmp	r5, #2
 4395 019a 6CD0     		beq	.L256
 4396              	.L242:
1143:Task/Task_Control.c ****              (memcmp(para_sel, "gI_Range", strlen("gI_Range")) == 0))
 4397              		.loc 1 1143 10 is_stmt 1 view .LVU1215
1143:Task/Task_Control.c ****              (memcmp(para_sel, "gI_Range", strlen("gI_Range")) == 0))
 4398              		.loc 1 1143 13 is_stmt 0 view .LVU1216
 4399 019c 082D     		cmp	r5, #8
 4400 019e 78D0     		beq	.L257
 4401              	.L243:
1150:Task/Task_Control.c ****              (memcmp(para_sel, "gD", strlen("gD")) == 0))
 4402              		.loc 1 1150 10 is_stmt 1 view .LVU1217
1150:Task/Task_Control.c ****              (memcmp(para_sel, "gD", strlen("gD")) == 0))
 4403              		.loc 1 1150 13 is_stmt 0 view .LVU1218
 4404 01a0 022D     		cmp	r5, #2
 4405 01a2 00F09180 		beq	.L258
 4406              	.L240:
1158:Task/Task_Control.c ****     TaskControl_PID_Param_Print(shell_obj, *PID_Obj);
 4407              		.loc 1 1158 5 is_stmt 1 view .LVU1219
 4408 01a6 8249     		ldr	r1, .L261+144
 4409 01a8 2046     		mov	r0, r4
 4410 01aa FFF7FEFF 		bl	shellPrint
 4411              	.LVL365:
1159:Task/Task_Control.c **** 
 4412              		.loc 1 1159 5 view .LVU1220
 4413 01ae EC46     		mov	ip, sp
 4414 01b0 06F10C0E 		add	lr, r6, #12
 4415 01b4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 118


 4416 01b8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 4417 01bc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 4418 01c0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 4419 01c4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 4420 01c8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 4421 01cc DEF80030 		ldr	r3, [lr]
 4422 01d0 CCF80030 		str	r3, [ip]
 4423 01d4 96E80E00 		ldm	r6, {r1, r2, r3}
 4424 01d8 2046     		mov	r0, r4
 4425 01da FFF7FEFF 		bl	TaskControl_PID_Param_Print
 4426              	.LVL366:
1161:Task/Task_Control.c ****     {
 4427              		.loc 1 1161 5 view .LVU1221
1161:Task/Task_Control.c ****     {
 4428              		.loc 1 1161 8 is_stmt 0 view .LVU1222
 4429 01de B8F1000F 		cmp	r8, #0
 4430 01e2 93D0     		beq	.L231
1161:Task/Task_Control.c ****     {
 4431              		.loc 1 1161 18 discriminator 1 view .LVU1223
 4432 01e4 4046     		mov	r0, r8
 4433 01e6 FFF7FEFF 		bl	strlen
 4434              	.LVL367:
1161:Task/Task_Control.c ****     {
 4435              		.loc 1 1161 14 discriminator 1 view .LVU1224
 4436 01ea 0128     		cmp	r0, #1
 4437 01ec 8ED1     		bne	.L231
1161:Task/Task_Control.c ****     {
 4438              		.loc 1 1161 41 discriminator 2 view .LVU1225
 4439 01ee 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
1161:Task/Task_Control.c ****     {
 4440              		.loc 1 1161 37 discriminator 2 view .LVU1226
 4441 01f2 532B     		cmp	r3, #83
 4442 01f4 8AD1     		bne	.L231
1163:Task/Task_Control.c ****             TaskControl_Monitor.pid_store_info.item.data_addr)
 4443              		.loc 1 1163 9 is_stmt 1 view .LVU1227
1163:Task/Task_Control.c ****             TaskControl_Monitor.pid_store_info.item.data_addr)
 4444              		.loc 1 1163 47 is_stmt 0 view .LVU1228
 4445 01f6 6F4B     		ldr	r3, .L261+148
 4446 01f8 D3F80720 		ldr	r2, [r3, #7]	@ unaligned
1163:Task/Task_Control.c ****             TaskControl_Monitor.pid_store_info.item.data_addr)
 4447              		.loc 1 1163 12 view .LVU1229
 4448 01fc 1AB1     		cbz	r2, .L245
1164:Task/Task_Control.c ****         {
 4449              		.loc 1 1164 52 discriminator 1 view .LVU1230
 4450 01fe D3F83730 		ldr	r3, [r3, #55]	@ unaligned
1163:Task/Task_Control.c ****             TaskControl_Monitor.pid_store_info.item.data_addr)
 4451              		.loc 1 1163 58 discriminator 1 view .LVU1231
 4452 0202 002B     		cmp	r3, #0
 4453 0204 6FD1     		bne	.L259
 4454              	.L245:
1178:Task/Task_Control.c ****             shellPrint(shell_obj, "\t[ data slot addr : %lld ]\r\n", TaskControl_Monitor.pid_store_
 4455              		.loc 1 1178 13 is_stmt 1 view .LVU1232
 4456 0206 6C49     		ldr	r1, .L261+152
 4457 0208 2046     		mov	r0, r4
 4458 020a FFF7FEFF 		bl	shellPrint
 4459              	.LVL368:
1179:Task/Task_Control.c ****             shellPrint(shell_obj, "\t[ -- PID parameter Storage Error -- ]\r\n");
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 119


 4460              		.loc 1 1179 13 view .LVU1233
 4461 020e 694B     		ldr	r3, .L261+148
 4462 0210 D3F83720 		ldr	r2, [r3, #55]	@ unaligned
 4463 0214 6949     		ldr	r1, .L261+156
 4464 0216 2046     		mov	r0, r4
 4465 0218 FFF7FEFF 		bl	shellPrint
 4466              	.LVL369:
1180:Task/Task_Control.c ****         }
 4467              		.loc 1 1180 13 view .LVU1234
 4468 021c 6849     		ldr	r1, .L261+160
 4469 021e 2046     		mov	r0, r4
 4470 0220 FFF7FEFF 		bl	shellPrint
 4471              	.LVL370:
 4472 0224 72E7     		b	.L231
 4473              	.L254:
1125:Task/Task_Control.c ****     {
 4474              		.loc 1 1125 10 is_stmt 0 discriminator 1 view .LVU1235
 4475 0226 0222     		movs	r2, #2
 4476 0228 6649     		ldr	r1, .L261+164
 4477 022a 3846     		mov	r0, r7
 4478 022c FFF7FEFF 		bl	memcmp
 4479              	.LVL371:
1124:Task/Task_Control.c ****         (memcmp(para_sel, "gP", strlen("gP")) == 0))
 4480              		.loc 1 1124 44 discriminator 1 view .LVU1236
 4481 0230 0028     		cmp	r0, #0
 4482 0232 AFD1     		bne	.L239
1127:Task/Task_Control.c ****         PID_Obj->gP = value / 1000.0f;
 4483              		.loc 1 1127 9 is_stmt 1 view .LVU1237
 4484 0234 6449     		ldr	r1, .L261+168
 4485 0236 2046     		mov	r0, r4
 4486 0238 FFF7FEFF 		bl	shellPrint
 4487              	.LVL372:
1128:Task/Task_Control.c ****     }
 4488              		.loc 1 1128 9 view .LVU1238
1128:Task/Task_Control.c ****     }
 4489              		.loc 1 1128 21 is_stmt 0 view .LVU1239
 4490 023c 86ED058A 		vstr.32	s16, [r6, #20]
 4491 0240 B1E7     		b	.L240
 4492              	.L255:
1131:Task/Task_Control.c ****     {
 4493              		.loc 1 1131 15 discriminator 1 view .LVU1240
 4494 0242 0722     		movs	r2, #7
 4495 0244 6149     		ldr	r1, .L261+172
 4496 0246 3846     		mov	r0, r7
 4497 0248 FFF7FEFF 		bl	memcmp
 4498              	.LVL373:
1130:Task/Task_Control.c ****              (memcmp(para_sel, "gP_Diff", strlen("gP_Diff")) == 0))
 4499              		.loc 1 1130 54 discriminator 1 view .LVU1241
 4500 024c 0028     		cmp	r0, #0
 4501 024e A3D1     		bne	.L241
1133:Task/Task_Control.c ****         PID_Obj->diff_max = value / 1000.0f;
 4502              		.loc 1 1133 9 is_stmt 1 view .LVU1242
 4503 0250 5F49     		ldr	r1, .L261+176
 4504 0252 2046     		mov	r0, r4
 4505 0254 FFF7FEFF 		bl	shellPrint
 4506              	.LVL374:
1134:Task/Task_Control.c ****         PID_Obj->diff_min = -value / 1000.0f;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 120


 4507              		.loc 1 1134 9 view .LVU1243
1134:Task/Task_Control.c ****         PID_Obj->diff_min = -value / 1000.0f;
 4508              		.loc 1 1134 27 is_stmt 0 view .LVU1244
 4509 0258 86ED028A 		vstr.32	s16, [r6, #8]
1135:Task/Task_Control.c ****     }
 4510              		.loc 1 1135 9 is_stmt 1 view .LVU1245
1135:Task/Task_Control.c ****     }
 4511              		.loc 1 1135 29 is_stmt 0 view .LVU1246
 4512 025c 0F9B     		ldr	r3, [sp, #60]
 4513 025e 5B42     		rsbs	r3, r3, #0
 4514 0260 07EE903A 		vmov	s15, r3	@ int
1135:Task/Task_Control.c ****     }
 4515              		.loc 1 1135 36 view .LVU1247
 4516 0264 F8EEE77A 		vcvt.f32.s32	s15, s15
 4517 0268 DFED3E6A 		vldr.32	s13, .L261+68
 4518 026c 87EEA67A 		vdiv.f32	s14, s15, s13
1135:Task/Task_Control.c ****     }
 4519              		.loc 1 1135 27 view .LVU1248
 4520 0270 86ED037A 		vstr.32	s14, [r6, #12]
 4521 0274 97E7     		b	.L240
 4522              	.L256:
1138:Task/Task_Control.c ****     {
 4523              		.loc 1 1138 15 discriminator 1 view .LVU1249
 4524 0276 0222     		movs	r2, #2
 4525 0278 5649     		ldr	r1, .L261+180
 4526 027a 3846     		mov	r0, r7
 4527 027c FFF7FEFF 		bl	memcmp
 4528              	.LVL375:
1137:Task/Task_Control.c ****              (memcmp(para_sel, "gI", strlen("gI")) == 0))
 4529              		.loc 1 1137 49 discriminator 1 view .LVU1250
 4530 0280 0028     		cmp	r0, #0
 4531 0282 8BD1     		bne	.L242
1140:Task/Task_Control.c ****         PID_Obj->gI = value / 1000.0f;
 4532              		.loc 1 1140 9 is_stmt 1 view .LVU1251
 4533 0284 5449     		ldr	r1, .L261+184
 4534 0286 2046     		mov	r0, r4
 4535 0288 FFF7FEFF 		bl	shellPrint
 4536              	.LVL376:
1141:Task/Task_Control.c ****     }
 4537              		.loc 1 1141 9 view .LVU1252
1141:Task/Task_Control.c ****     }
 4538              		.loc 1 1141 21 is_stmt 0 view .LVU1253
 4539 028c 86ED078A 		vstr.32	s16, [r6, #28]
 4540 0290 89E7     		b	.L240
 4541              	.L257:
1144:Task/Task_Control.c ****     {
 4542              		.loc 1 1144 15 discriminator 1 view .LVU1254
 4543 0292 0822     		movs	r2, #8
 4544 0294 5149     		ldr	r1, .L261+188
 4545 0296 3846     		mov	r0, r7
 4546 0298 FFF7FEFF 		bl	memcmp
 4547              	.LVL377:
1143:Task/Task_Control.c ****              (memcmp(para_sel, "gI_Range", strlen("gI_Range")) == 0))
 4548              		.loc 1 1143 55 discriminator 1 view .LVU1255
 4549 029c 0028     		cmp	r0, #0
 4550 029e 7FF47FAF 		bne	.L243
1146:Task/Task_Control.c ****         PID_Obj->gI_Max = value / 1000.0f;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 121


 4551              		.loc 1 1146 9 is_stmt 1 view .LVU1256
 4552 02a2 4F49     		ldr	r1, .L261+192
 4553 02a4 2046     		mov	r0, r4
 4554 02a6 FFF7FEFF 		bl	shellPrint
 4555              	.LVL378:
1147:Task/Task_Control.c ****         PID_Obj->gI_Min = -value / 1000.0f;
 4556              		.loc 1 1147 9 view .LVU1257
1147:Task/Task_Control.c ****         PID_Obj->gI_Min = -value / 1000.0f;
 4557              		.loc 1 1147 25 is_stmt 0 view .LVU1258
 4558 02aa 86ED098A 		vstr.32	s16, [r6, #36]
1148:Task/Task_Control.c ****     }
 4559              		.loc 1 1148 9 is_stmt 1 view .LVU1259
1148:Task/Task_Control.c ****     }
 4560              		.loc 1 1148 27 is_stmt 0 view .LVU1260
 4561 02ae 0F9B     		ldr	r3, [sp, #60]
 4562 02b0 5B42     		rsbs	r3, r3, #0
 4563 02b2 07EE903A 		vmov	s15, r3	@ int
1148:Task/Task_Control.c ****     }
 4564              		.loc 1 1148 34 view .LVU1261
 4565 02b6 F8EEE77A 		vcvt.f32.s32	s15, s15
 4566 02ba DFED2A6A 		vldr.32	s13, .L261+68
 4567 02be 87EEA67A 		vdiv.f32	s14, s15, s13
1148:Task/Task_Control.c ****     }
 4568              		.loc 1 1148 25 view .LVU1262
 4569 02c2 86ED087A 		vstr.32	s14, [r6, #32]
 4570 02c6 6EE7     		b	.L240
 4571              	.L258:
1151:Task/Task_Control.c ****     {
 4572              		.loc 1 1151 15 discriminator 1 view .LVU1263
 4573 02c8 0222     		movs	r2, #2
 4574 02ca 4649     		ldr	r1, .L261+196
 4575 02cc 3846     		mov	r0, r7
 4576 02ce FFF7FEFF 		bl	memcmp
 4577              	.LVL379:
1150:Task/Task_Control.c ****              (memcmp(para_sel, "gD", strlen("gD")) == 0))
 4578              		.loc 1 1150 49 discriminator 1 view .LVU1264
 4579 02d2 0028     		cmp	r0, #0
 4580 02d4 7FF467AF 		bne	.L240
1153:Task/Task_Control.c ****         PID_Obj->gD = value / 1000.0f;
 4581              		.loc 1 1153 9 is_stmt 1 view .LVU1265
 4582 02d8 4349     		ldr	r1, .L261+200
 4583 02da 2046     		mov	r0, r4
 4584 02dc FFF7FEFF 		bl	shellPrint
 4585              	.LVL380:
1154:Task/Task_Control.c ****     }
 4586              		.loc 1 1154 9 view .LVU1266
1154:Task/Task_Control.c ****     }
 4587              		.loc 1 1154 21 is_stmt 0 view .LVU1267
 4588 02e0 86ED0C8A 		vstr.32	s16, [r6, #48]
 4589 02e4 5FE7     		b	.L240
 4590              	.L259:
1166:Task/Task_Control.c ****             if (Storage.update(Para_User, TaskControl_Monitor.pid_store_info.item.data_addr, \
 4591              		.loc 1 1166 13 is_stmt 1 view .LVU1268
1166:Task/Task_Control.c ****             if (Storage.update(Para_User, TaskControl_Monitor.pid_store_info.item.data_addr, \
 4592              		.loc 1 1166 21 is_stmt 0 view .LVU1269
 4593 02e6 10A8     		add	r0, sp, #64
 4594 02e8 FFF7FEFF 		bl	TaskControl_Get_InuseParam
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 122


 4595              	.LVL381:
 4596 02ec C825     		movs	r5, #200
 4597 02ee 2A46     		mov	r2, r5
 4598 02f0 10A9     		add	r1, sp, #64
 4599 02f2 42A8     		add	r0, sp, #264
 4600 02f4 FFF7FEFF 		bl	memcpy
 4601              	.LVL382:
1167:Task/Task_Control.c ****                                (uint8_t *)&Param, sizeof(TaskControl_FlightParam_TypeDef)) == Stora
 4602              		.loc 1 1167 13 is_stmt 1 view .LVU1270
1167:Task/Task_Control.c ****                                (uint8_t *)&Param, sizeof(TaskControl_FlightParam_TypeDef)) == Stora
 4603              		.loc 1 1167 24 is_stmt 0 view .LVU1271
 4604 02f8 3C4B     		ldr	r3, .L261+204
 4605 02fa DE68     		ldr	r6, [r3, #12]
 4606              	.LVL383:
1167:Task/Task_Control.c ****                                (uint8_t *)&Param, sizeof(TaskControl_FlightParam_TypeDef)) == Stora
 4607              		.loc 1 1167 17 view .LVU1272
 4608 02fc 2B46     		mov	r3, r5
 4609 02fe 42AA     		add	r2, sp, #264
 4610 0300 2C49     		ldr	r1, .L261+148
 4611 0302 D1F83710 		ldr	r1, [r1, #55]	@ unaligned
 4612 0306 0220     		movs	r0, #2
 4613 0308 B047     		blx	r6
 4614              	.LVL384:
1167:Task/Task_Control.c ****                                (uint8_t *)&Param, sizeof(TaskControl_FlightParam_TypeDef)) == Stora
 4615              		.loc 1 1167 16 view .LVU1273
 4616 030a 20B1     		cbz	r0, .L260
1174:Task/Task_Control.c ****         }
 4617              		.loc 1 1174 13 is_stmt 1 view .LVU1274
 4618 030c 3849     		ldr	r1, .L261+208
 4619 030e 2046     		mov	r0, r4
 4620 0310 FFF7FEFF 		bl	shellPrint
 4621              	.LVL385:
 4622 0314 FAE6     		b	.L231
 4623              	.L260:
1170:Task/Task_Control.c ****                 return;
 4624              		.loc 1 1170 17 view .LVU1275
 4625 0316 3749     		ldr	r1, .L261+212
 4626 0318 2046     		mov	r0, r4
 4627 031a FFF7FEFF 		bl	shellPrint
 4628              	.LVL386:
1171:Task/Task_Control.c ****             }
 4629              		.loc 1 1171 17 view .LVU1276
 4630 031e F5E6     		b	.L231
 4631              	.L262:
 4632              		.align	2
 4633              	.L261:
 4634 0320 00000000 		.word	.LC42
 4635 0324 20000000 		.word	.LC43
 4636 0328 48000000 		.word	.LC44
 4637 032c 70000000 		.word	.LC45
 4638 0330 98000000 		.word	.LC46
 4639 0334 C0000000 		.word	.LC47
 4640 0338 E8000000 		.word	.LC48
 4641 033c 0C010000 		.word	.LC49
 4642 0340 30010000 		.word	.LC50
 4643 0344 5C010000 		.word	.LC51
 4644 0348 80010000 		.word	.LC52
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 123


 4645 034c AC010000 		.word	.LC53
 4646 0350 D0010000 		.word	.LC54
 4647 0354 F4010000 		.word	.LC55
 4648 0358 28020000 		.word	.LC56
 4649 035c 60020000 		.word	.LC57
 4650 0360 80020000 		.word	.LC58
 4651 0364 00007A44 		.word	1148846080
 4652 0368 A4020000 		.word	.LC59
 4653 036c A8000000 		.word	.LC12
 4654 0370 34030000 		.word	.LC68
 4655 0374 50030000 		.word	.LC70
 4656 0378 BC020000 		.word	.LC60
 4657 037c C4020000 		.word	.LC61
 4658 0380 24020000 		.word	.LANCHOR0+548
 4659 0384 DC020000 		.word	.LC62
 4660 0388 E4020000 		.word	.LC63
 4661 038c E4010000 		.word	.LANCHOR0+484
 4662 0390 FC020000 		.word	.LC64
 4663 0394 00030000 		.word	.LC65
 4664 0398 64020000 		.word	.LANCHOR0+612
 4665 039c 18030000 		.word	.LC66
 4666 03a0 1C030000 		.word	.LC67
 4667 03a4 A4020000 		.word	.LANCHOR0+676
 4668 03a8 38030000 		.word	.LC69
 4669 03ac E4020000 		.word	.LANCHOR0+740
 4670 03b0 F4030000 		.word	.LC81
 4671 03b4 00000000 		.word	.LANCHOR0
 4672 03b8 5C040000 		.word	.LC84
 4673 03bc 7C040000 		.word	.LC85
 4674 03c0 9C040000 		.word	.LC86
 4675 03c4 64030000 		.word	.LC71
 4676 03c8 68030000 		.word	.LC72
 4677 03cc 7C030000 		.word	.LC73
 4678 03d0 84030000 		.word	.LC74
 4679 03d4 9C030000 		.word	.LC75
 4680 03d8 A0030000 		.word	.LC76
 4681 03dc B4030000 		.word	.LC77
 4682 03e0 C0030000 		.word	.LC78
 4683 03e4 DC030000 		.word	.LC79
 4684 03e8 E0030000 		.word	.LC80
 4685 03ec 00000000 		.word	Storage
 4686 03f0 34040000 		.word	.LC83
 4687 03f4 08040000 		.word	.LC82
 4688              		.cfi_endproc
 4689              	.LFE2090:
 4691              		.section	.text.TaskControl_Init,"ax",%progbits
 4692              		.align	1
 4693              		.global	TaskControl_Init
 4694              		.syntax unified
 4695              		.thumb
 4696              		.thumb_func
 4698              	TaskControl_Init:
 4699              	.LVL387:
 4700              	.LFB2071:
  84:Task/Task_Control.c ****     /* init monitor */
 4701              		.loc 1 84 1 view -0
 4702              		.cfi_startproc
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 124


 4703              		@ args = 0, pretend = 0, frame = 16
 4704              		@ frame_needed = 0, uses_anonymous_args = 0
  84:Task/Task_Control.c ****     /* init monitor */
 4705              		.loc 1 84 1 is_stmt 0 view .LVU1278
 4706 0000 70B5     		push	{r4, r5, r6, lr}
 4707              	.LCFI55:
 4708              		.cfi_def_cfa_offset 16
 4709              		.cfi_offset 4, -16
 4710              		.cfi_offset 5, -12
 4711              		.cfi_offset 6, -8
 4712              		.cfi_offset 14, -4
 4713 0002 84B0     		sub	sp, sp, #16
 4714              	.LCFI56:
 4715              		.cfi_def_cfa_offset 32
 4716 0004 0546     		mov	r5, r0
  86:Task/Task_Control.c **** 
 4717              		.loc 1 86 5 is_stmt 1 view .LVU1279
 4718 0006 174C     		ldr	r4, .L265
 4719 0008 4FF44A72 		mov	r2, #808
 4720 000c 0021     		movs	r1, #0
 4721 000e 2046     		mov	r0, r4
 4722              	.LVL388:
  86:Task/Task_Control.c **** 
 4723              		.loc 1 86 5 is_stmt 0 view .LVU1280
 4724 0010 FFF7FEFF 		bl	memset
 4725              	.LVL389:
  89:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_size = DataPipe_DataSize(ExpCtl);
 4726              		.loc 1 89 5 is_stmt 1 view .LVU1281
  89:Task/Task_Control.c ****     CtlData_smp_DataPipe.data_size = DataPipe_DataSize(ExpCtl);
 4727              		.loc 1 89 36 is_stmt 0 view .LVU1282
 4728 0014 144B     		ldr	r3, .L265+4
 4729 0016 154A     		ldr	r2, .L265+8
 4730 0018 C3F80D20 		str	r2, [r3, #13]	@ unaligned
  90:Task/Task_Control.c ****     DataPipe_Enable(&CtlData_smp_DataPipe);
 4731              		.loc 1 90 5 is_stmt 1 view .LVU1283
  90:Task/Task_Control.c ****     DataPipe_Enable(&CtlData_smp_DataPipe);
 4732              		.loc 1 90 36 is_stmt 0 view .LVU1284
 4733 001c 0026     		movs	r6, #0
 4734 001e 1C22     		movs	r2, #28
 4735 0020 5A74     		strb	r2, [r3, #17]
 4736 0022 9E74     		strb	r6, [r3, #18]
  91:Task/Task_Control.c **** 
 4737              		.loc 1 91 5 is_stmt 1 view .LVU1285
 4738              	.LVL390:
 4739              	.LBB11:
 4740              	.LBI11:
 4741              		.file 2 "System/DataPipe/DataPipe.h"
   1:System/DataPipe/DataPipe.h **** #ifndef __DATAPIPE_H
   2:System/DataPipe/DataPipe.h **** #define __DATAPIPE_H
   3:System/DataPipe/DataPipe.h **** 
   4:System/DataPipe/DataPipe.h **** #ifdef __cplusplus
   5:System/DataPipe/DataPipe.h **** extern "C" {
   6:System/DataPipe/DataPipe.h **** #endif
   7:System/DataPipe/DataPipe.h **** 
   8:System/DataPipe/DataPipe.h **** #include <stdint.h>
   9:System/DataPipe/DataPipe.h **** #include <string.h>
  10:System/DataPipe/DataPipe.h **** #include <stdbool.h>
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 125


  11:System/DataPipe/DataPipe.h **** 
  12:System/DataPipe/DataPipe.h **** typedef void (*Pipe_TransFinish_Callback)(void *pipe_obj);
  13:System/DataPipe/DataPipe.h **** typedef void (*Pipe_TransError_Callback)(void *pipe_obj);
  14:System/DataPipe/DataPipe.h **** typedef void (*Pipe_TimeOutProc_Callback)(void *pipe_obj);
  15:System/DataPipe/DataPipe.h **** 
  16:System/DataPipe/DataPipe.h **** #define DataPipeHandleToObj(x) ((DataPipeObj_TypeDef *)x)
  17:System/DataPipe/DataPipe.h **** #define DataPipe_CreateDataObj(type, name) static type name##_##PipeDataObj __attribute__((section(
  18:System/DataPipe/DataPipe.h **** #define DataPipe_DataObjAddr(name) (&name##_##PipeDataObj)
  19:System/DataPipe/DataPipe.h **** #define DataPipe_DataObj(name) name##_##PipeDataObj
  20:System/DataPipe/DataPipe.h **** #define DataPipe_DataSize(name) sizeof(name##_##PipeDataObj)
  21:System/DataPipe/DataPipe.h **** 
  22:System/DataPipe/DataPipe.h **** typedef enum
  23:System/DataPipe/DataPipe.h **** {
  24:System/DataPipe/DataPipe.h ****     Pipe_UnReady = 0,
  25:System/DataPipe/DataPipe.h ****     Pipe_Ready,
  26:System/DataPipe/DataPipe.h ****     Pipe_Busy,
  27:System/DataPipe/DataPipe.h ****     Pipe_Error,
  28:System/DataPipe/DataPipe.h **** } DataPipe_State_List;
  29:System/DataPipe/DataPipe.h **** 
  30:System/DataPipe/DataPipe.h **** #pragma pack(1)
  31:System/DataPipe/DataPipe.h **** typedef struct
  32:System/DataPipe/DataPipe.h **** {
  33:System/DataPipe/DataPipe.h ****     uint32_t min_rx_interval;
  34:System/DataPipe/DataPipe.h ****     uint32_t detect_interval;
  35:System/DataPipe/DataPipe.h ****     uint32_t rx_ms_rt;
  36:System/DataPipe/DataPipe.h **** 
  37:System/DataPipe/DataPipe.h ****     bool enable;
  38:System/DataPipe/DataPipe.h **** 
  39:System/DataPipe/DataPipe.h ****     uint32_t data_addr;
  40:System/DataPipe/DataPipe.h ****     uint16_t data_size;
  41:System/DataPipe/DataPipe.h **** 
  42:System/DataPipe/DataPipe.h ****     Pipe_TransFinish_Callback trans_finish_cb;
  43:System/DataPipe/DataPipe.h ****     Pipe_TransError_Callback trans_error_cb;
  44:System/DataPipe/DataPipe.h **** 
  45:System/DataPipe/DataPipe.h ****     uint32_t tx_cnt;
  46:System/DataPipe/DataPipe.h ****     uint32_t rx_cnt;
  47:System/DataPipe/DataPipe.h ****     uint32_t er_cnt;
  48:System/DataPipe/DataPipe.h **** } DataPipeObj_TypeDef;
  49:System/DataPipe/DataPipe.h **** #pragma pack()
  50:System/DataPipe/DataPipe.h **** 
  51:System/DataPipe/DataPipe.h **** typedef struct
  52:System/DataPipe/DataPipe.h **** {
  53:System/DataPipe/DataPipe.h ****     DataPipeObj_TypeDef *org;
  54:System/DataPipe/DataPipe.h ****     DataPipeObj_TypeDef *dst;
  55:System/DataPipe/DataPipe.h **** } Data_PlugedPipeObj_TypeDef;
  56:System/DataPipe/DataPipe.h **** 
  57:System/DataPipe/DataPipe.h **** bool DataPipe_Init(void);
  58:System/DataPipe/DataPipe.h **** bool DataPipe_DeInit(void);
  59:System/DataPipe/DataPipe.h **** bool DataPipe_SendTo(DataPipeObj_TypeDef *p_org, DataPipeObj_TypeDef *p_dst);
  60:System/DataPipe/DataPipe.h **** bool DataPipe_DealError(void);
  61:System/DataPipe/DataPipe.h **** 
  62:System/DataPipe/DataPipe.h **** inline bool DataPipe_Enable(DataPipeObj_TypeDef *obj)
 4742              		.loc 2 62 13 view .LVU1286
 4743              	.LBB12:
  63:System/DataPipe/DataPipe.h **** {
  64:System/DataPipe/DataPipe.h ****     if (obj == NULL)
 4744              		.loc 2 64 5 view .LVU1287
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 126


  65:System/DataPipe/DataPipe.h ****         return false;
  66:System/DataPipe/DataPipe.h **** 
  67:System/DataPipe/DataPipe.h ****     obj->enable = true;
 4745              		.loc 2 67 5 view .LVU1288
 4746              		.loc 2 67 17 is_stmt 0 view .LVU1289
 4747 0024 0122     		movs	r2, #1
 4748 0026 1A73     		strb	r2, [r3, #12]
  68:System/DataPipe/DataPipe.h **** 
  69:System/DataPipe/DataPipe.h ****     return true;
 4749              		.loc 2 69 5 is_stmt 1 view .LVU1290
 4750              	.LVL391:
 4751              		.loc 2 69 5 is_stmt 0 view .LVU1291
 4752              	.LBE12:
 4753              	.LBE11:
  94:Task/Task_Control.c **** 
 4754              		.loc 1 94 5 is_stmt 1 view .LVU1292
 4755 0028 FFF7FEFF 		bl	TaskControl_Get_StoreParam
 4756              	.LVL392:
  96:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
 4757              		.loc 1 96 5 view .LVU1293
  96:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
 4758              		.loc 1 96 49 is_stmt 0 view .LVU1294
 4759 002c 104B     		ldr	r3, .L265+12
 4760 002e 1B68     		ldr	r3, [r3]
  96:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
 4761              		.loc 1 96 38 view .LVU1295
 4762 0030 D4F85901 		ldr	r0, [r4, #345]	@ unaligned
 4763 0034 D4F85D11 		ldr	r1, [r4, #349]	@ unaligned
 4764 0038 9847     		blx	r3
 4765              	.LVL393:
  96:Task/Task_Control.c ****     SrvDataHub.get_imu_init_state(&imu_init_state);
 4766              		.loc 1 96 36 view .LVU1296
 4767 003a 2070     		strb	r0, [r4]
  97:Task/Task_Control.c **** 
 4768              		.loc 1 97 5 is_stmt 1 view .LVU1297
  97:Task/Task_Control.c **** 
 4769              		.loc 1 97 15 is_stmt 0 view .LVU1298
 4770 003c 0D4B     		ldr	r3, .L265+16
 4771 003e DB69     		ldr	r3, [r3, #28]
  97:Task/Task_Control.c **** 
 4772              		.loc 1 97 5 view .LVU1299
 4773 0040 0D48     		ldr	r0, .L265+20
 4774 0042 9847     		blx	r3
 4775              	.LVL394:
  99:Task/Task_Control.c ****     TaskControl_Monitor.CLIMessage_ID = osMessageCreate(osMessageQ(MotoCLI_Data), NULL);
 4776              		.loc 1 99 5 is_stmt 1 view .LVU1300
 4777 0044 0D4B     		ldr	r3, .L265+24
 4778 0046 EC46     		mov	ip, sp
 4779 0048 0FCB     		ldm	r3, {r0, r1, r2, r3}
 4780 004a 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 100:Task/Task_Control.c ****     
 4781              		.loc 1 100 5 view .LVU1301
 100:Task/Task_Control.c ****     
 4782              		.loc 1 100 41 is_stmt 0 view .LVU1302
 4783 004e 3146     		mov	r1, r6
 4784 0050 6046     		mov	r0, ip
 4785 0052 FFF7FEFF 		bl	osMessageCreate
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 127


 4786              	.LVL395:
 100:Task/Task_Control.c ****     
 4787              		.loc 1 100 39 view .LVU1303
 4788 0056 C4F82403 		str	r0, [r4, #804]
 102:Task/Task_Control.c **** }
 4789              		.loc 1 102 5 is_stmt 1 view .LVU1304
 102:Task/Task_Control.c **** }
 4790              		.loc 1 102 24 is_stmt 0 view .LVU1305
 4791 005a 094B     		ldr	r3, .L265+28
 4792 005c 1D60     		str	r5, [r3]
 103:Task/Task_Control.c **** 
 4793              		.loc 1 103 1 view .LVU1306
 4794 005e 04B0     		add	sp, sp, #16
 4795              	.LCFI57:
 4796              		.cfi_def_cfa_offset 16
 4797              		@ sp needed
 4798 0060 70BD     		pop	{r4, r5, r6, pc}
 4799              	.LVL396:
 4800              	.L266:
 103:Task/Task_Control.c **** 
 4801              		.loc 1 103 1 view .LVU1307
 4802 0062 00BF     		.align	2
 4803              	.L265:
 4804 0064 00000000 		.word	.LANCHOR0
 4805 0068 00000000 		.word	CtlData_smp_DataPipe
 4806 006c 00000000 		.word	.LANCHOR2
 4807 0070 00000000 		.word	SrvActuator
 4808 0074 00000000 		.word	SrvDataHub
 4809 0078 00000000 		.word	.LANCHOR5
 4810 007c 00000000 		.word	.LANCHOR10
 4811 0080 00000000 		.word	.LANCHOR11
 4812              		.cfi_endproc
 4813              	.LFE2071:
 4815              		.section	.text.TaskControl_Core,"ax",%progbits
 4816              		.align	1
 4817              		.global	TaskControl_Core
 4818              		.syntax unified
 4819              		.thumb
 4820              		.thumb_func
 4822              	TaskControl_Core:
 4823              	.LVL397:
 4824              	.LFB2076:
 289:Task/Task_Control.c ****     uint32_t sys_time = SrvOsCommon.get_os_ms();
 4825              		.loc 1 289 1 is_stmt 1 view -0
 4826              		.cfi_startproc
 4827              		@ Volatile: function does not return.
 4828              		@ args = 0, pretend = 0, frame = 112
 4829              		@ frame_needed = 0, uses_anonymous_args = 0
 289:Task/Task_Control.c ****     uint32_t sys_time = SrvOsCommon.get_os_ms();
 4830              		.loc 1 289 1 is_stmt 0 view .LVU1309
 4831 0000 00B5     		push	{lr}
 4832              	.LCFI58:
 4833              		.cfi_def_cfa_offset 4
 4834              		.cfi_offset 14, -4
 4835 0002 9DB0     		sub	sp, sp, #116
 4836              	.LCFI59:
 4837              		.cfi_def_cfa_offset 120
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 128


 290:Task/Task_Control.c ****     bool upgrade_state = false;
 4838              		.loc 1 290 5 is_stmt 1 view .LVU1310
 290:Task/Task_Control.c ****     bool upgrade_state = false;
 4839              		.loc 1 290 36 is_stmt 0 view .LVU1311
 4840 0004 1E4B     		ldr	r3, .L275
 4841 0006 1B68     		ldr	r3, [r3]
 290:Task/Task_Control.c ****     bool upgrade_state = false;
 4842              		.loc 1 290 25 view .LVU1312
 4843 0008 9847     		blx	r3
 4844              	.LVL398:
 290:Task/Task_Control.c ****     bool upgrade_state = false;
 4845              		.loc 1 290 14 view .LVU1313
 4846 000a 1B90     		str	r0, [sp, #108]
 291:Task/Task_Control.c ****     ControlData_TypeDef CtlData;
 4847              		.loc 1 291 5 is_stmt 1 view .LVU1314
 291:Task/Task_Control.c ****     ControlData_TypeDef CtlData;
 4848              		.loc 1 291 10 is_stmt 0 view .LVU1315
 4849 000c 0021     		movs	r1, #0
 4850 000e 8DF86B10 		strb	r1, [sp, #107]
 292:Task/Task_Control.c ****     bool USB_Attach = false;
 4851              		.loc 1 292 5 is_stmt 1 view .LVU1316
 293:Task/Task_Control.c ****     memset(&CtlData, 0, sizeof(ControlData_TypeDef));
 4852              		.loc 1 293 5 view .LVU1317
 293:Task/Task_Control.c ****     memset(&CtlData, 0, sizeof(ControlData_TypeDef));
 4853              		.loc 1 293 10 is_stmt 0 view .LVU1318
 4854 0012 8DF80310 		strb	r1, [sp, #3]
 294:Task/Task_Control.c ****     while(1)
 4855              		.loc 1 294 5 is_stmt 1 view .LVU1319
 4856 0016 6422     		movs	r2, #100
 4857 0018 01A8     		add	r0, sp, #4
 4858 001a FFF7FEFF 		bl	memset
 4859              	.LVL399:
 4860 001e 15E0     		b	.L273
 4861              	.L268:
 307:Task/Task_Control.c ****             {
 4862              		.loc 1 307 13 view .LVU1320
 307:Task/Task_Control.c ****             {
 4863              		.loc 1 307 37 is_stmt 0 view .LVU1321
 4864 0020 184B     		ldr	r3, .L275+4
 4865 0022 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 307:Task/Task_Control.c ****             {
 4866              		.loc 1 307 16 view .LVU1322
 4867 0024 002B     		cmp	r3, #0
 4868 0026 27D1     		bne	.L270
 310:Task/Task_Control.c ****                 {
 4869              		.loc 1 310 17 is_stmt 1 view .LVU1323
 310:Task/Task_Control.c ****                 {
 4870              		.loc 1 310 32 is_stmt 0 view .LVU1324
 4871 0028 174B     		ldr	r3, .L275+8
 4872 002a 9B69     		ldr	r3, [r3, #24]
 310:Task/Task_Control.c ****                 {
 4873              		.loc 1 310 22 view .LVU1325
 4874 002c 0DF10300 		add	r0, sp, #3
 4875 0030 9847     		blx	r3
 4876              	.LVL400:
 310:Task/Task_Control.c ****                 {
 4877              		.loc 1 310 20 view .LVU1326
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 129


 4878 0032 10B1     		cbz	r0, .L271
 310:Task/Task_Control.c ****                 {
 4879              		.loc 1 310 67 discriminator 1 view .LVU1327
 4880 0034 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 4881 0038 D3B1     		cbz	r3, .L272
 4882              	.L271:
 312:Task/Task_Control.c ****                 }
 4883              		.loc 1 312 21 is_stmt 1 view .LVU1328
 312:Task/Task_Control.c ****                 }
 4884              		.loc 1 312 32 is_stmt 0 view .LVU1329
 4885 003a 144B     		ldr	r3, .L275+12
 4886 003c DB68     		ldr	r3, [r3, #12]
 312:Task/Task_Control.c ****                 }
 4887              		.loc 1 312 21 view .LVU1330
 4888 003e 9847     		blx	r3
 4889              	.LVL401:
 4890              	.L269:
 330:Task/Task_Control.c ****     }
 4891              		.loc 1 330 9 is_stmt 1 view .LVU1331
 330:Task/Task_Control.c ****     }
 4892              		.loc 1 330 20 is_stmt 0 view .LVU1332
 4893 0040 0F4B     		ldr	r3, .L275
 4894 0042 9B68     		ldr	r3, [r3, #8]
 330:Task/Task_Control.c ****     }
 4895              		.loc 1 330 9 view .LVU1333
 4896 0044 124A     		ldr	r2, .L275+16
 4897 0046 1168     		ldr	r1, [r2]
 4898 0048 1BA8     		add	r0, sp, #108
 4899 004a 9847     		blx	r3
 4900              	.LVL402:
 295:Task/Task_Control.c ****     {
 4901              		.loc 1 295 10 is_stmt 1 view .LVU1334
 4902              	.L273:
 295:Task/Task_Control.c ****     {
 4903              		.loc 1 295 5 view .LVU1335
 298:Task/Task_Control.c **** 
 4904              		.loc 1 298 9 view .LVU1336
 298:Task/Task_Control.c **** 
 4905              		.loc 1 298 19 is_stmt 0 view .LVU1337
 4906 004c 0E4C     		ldr	r4, .L275+8
 4907 004e A36C     		ldr	r3, [r4, #72]
 298:Task/Task_Control.c **** 
 4908              		.loc 1 298 9 view .LVU1338
 4909 0050 01A8     		add	r0, sp, #4
 4910 0052 9847     		blx	r3
 4911              	.LVL403:
 300:Task/Task_Control.c ****         {
 4912              		.loc 1 300 9 is_stmt 1 view .LVU1339
 300:Task/Task_Control.c ****         {
 4913              		.loc 1 300 23 is_stmt 0 view .LVU1340
 4914 0054 2369     		ldr	r3, [r4, #16]
 300:Task/Task_Control.c ****         {
 4915              		.loc 1 300 13 view .LVU1341
 4916 0056 0DF16B00 		add	r0, sp, #107
 4917 005a 9847     		blx	r3
 4918              	.LVL404:
 300:Task/Task_Control.c ****         {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 130


 4919              		.loc 1 300 12 view .LVU1342
 4920 005c 0028     		cmp	r0, #0
 4921 005e DFD0     		beq	.L268
 300:Task/Task_Control.c ****         {
 4922              		.loc 1 300 58 discriminator 1 view .LVU1343
 4923 0060 9DF86B30 		ldrb	r3, [sp, #107]	@ zero_extendqisi2
 4924 0064 002B     		cmp	r3, #0
 4925 0066 DBD0     		beq	.L268
 303:Task/Task_Control.c ****         }
 4926              		.loc 1 303 13 is_stmt 1 view .LVU1344
 303:Task/Task_Control.c ****         }
 4927              		.loc 1 303 24 is_stmt 0 view .LVU1345
 4928 0068 084B     		ldr	r3, .L275+12
 4929 006a DB68     		ldr	r3, [r3, #12]
 303:Task/Task_Control.c ****         }
 4930              		.loc 1 303 13 view .LVU1346
 4931 006c 9847     		blx	r3
 4932              	.LVL405:
 4933 006e E7E7     		b	.L269
 4934              	.L272:
 316:Task/Task_Control.c ****             }
 4935              		.loc 1 316 21 is_stmt 1 view .LVU1347
 4936 0070 01A8     		add	r0, sp, #4
 4937 0072 FFF7FEFF 		bl	TaskControl_FlightControl_Polling
 4938              	.LVL406:
 4939 0076 E3E7     		b	.L269
 4940              	.L270:
 320:Task/Task_Control.c ****                 {
 4941              		.loc 1 320 17 view .LVU1348
 322:Task/Task_Control.c ****                 }
 4942              		.loc 1 322 21 view .LVU1349
 4943 0078 FFF7FEFF 		bl	TaskControl_CLI_Polling
 4944              	.LVL407:
 4945 007c E0E7     		b	.L269
 4946              	.L276:
 4947 007e 00BF     		.align	2
 4948              	.L275:
 4949 0080 00000000 		.word	SrvOsCommon
 4950 0084 00000000 		.word	.LANCHOR0
 4951 0088 00000000 		.word	SrvDataHub
 4952 008c 00000000 		.word	SrvActuator
 4953 0090 00000000 		.word	.LANCHOR11
 4954              		.cfi_endproc
 4955              	.LFE2076:
 4957              		.global	shellCommandSet_PID
 4958              		.global	shellDescSet_PID
 4959              		.global	shellCmdSet_PID
 4960              		.global	shellCommandPID_Outer_Param
 4961              		.global	shellDescPID_Outer_Param
 4962              		.global	shellCmdPID_Outer_Param
 4963              		.global	shellCommandPID_Inner_Param
 4964              		.global	shellDescPID_Inner_Param
 4965              		.global	shellCmdPID_Inner_Param
 4966              		.global	shellCommandlock_moto
 4967              		.global	shellDesclock_moto
 4968              		.global	shellCmdlock_moto
 4969              		.global	shellCommandrev_moto
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 131


 4970              		.global	shellDescrev_moto
 4971              		.global	shellCmdrev_moto
 4972              		.global	shellCommandmoto_spin
 4973              		.global	shellDescmoto_spin
 4974              		.global	shellCmdmoto_spin
 4975              		.global	TaskControl_Monitor
 4976              		.global	LstCyc_Rc_Data
 4977              		.global	LstCyc_IMU_Data
 4978              		.section	.rodata
 4979              		.align	2
 4980              		.set	.LANCHOR10,. + 0
 4981              	.LC0:
 4982 0000 40000000 		.word	64
 4983 0004 08000000 		.word	8
 4984 0008 00000000 		.word	0
 4985 000c 00000000 		.word	0
 4986              		.section	.Perph_Section,"aw"
 4987              		.align	2
 4988              		.set	.LANCHOR2,. + 0
 4991              	ExpCtl_PipeDataObj:
 4992 0000 00000000 		.space	28
 4992      00000000 
 4992      00000000 
 4992      00000000 
 4992      00000000 
 4993              		.section	.bss.CLIData.1,"aw",%nobits
 4994              		.align	2
 4995              		.set	.LANCHOR8,. + 0
 4998              	CLIData.1:
 4999 0000 00000000 		.space	8
 4999      00000000 
 5000              		.section	.bss.LstCyc_IMU_Data,"aw",%nobits
 5001              		.align	2
 5004              	LstCyc_IMU_Data:
 5005 0000 00000000 		.space	84
 5005      00000000 
 5005      00000000 
 5005      00000000 
 5005      00000000 
 5006              		.section	.bss.LstCyc_Rc_Data,"aw",%nobits
 5007              		.align	2
 5010              	LstCyc_Rc_Data:
 5011 0000 00000000 		.space	68
 5011      00000000 
 5011      00000000 
 5011      00000000 
 5011      00000000 
 5012              		.section	.bss.TaskControl_Period,"aw",%nobits
 5013              		.align	2
 5014              		.set	.LANCHOR11,. + 0
 5017              	TaskControl_Period:
 5018 0000 00000000 		.space	4
 5019              		.section	.bss.att_update,"aw",%nobits
 5020              		.set	.LANCHOR7,. + 0
 5023              	att_update:
 5024 0000 00       		.space	1
 5025              		.section	.bss.att_update_time,"aw",%nobits
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 132


 5026              		.align	2
 5027              		.set	.LANCHOR6,. + 0
 5030              	att_update_time:
 5031 0000 00000000 		.space	4
 5032              		.section	.bss.failsafe,"aw",%nobits
 5033              		.set	.LANCHOR1,. + 0
 5036              	failsafe:
 5037 0000 00       		.space	1
 5038              		.section	.bss.imu_err_code,"aw",%nobits
 5039              		.set	.LANCHOR4,. + 0
 5042              	imu_err_code:
 5043 0000 00       		.space	1
 5044              		.section	.bss.imu_init_state,"aw",%nobits
 5045              		.set	.LANCHOR5,. + 0
 5048              	imu_init_state:
 5049 0000 00       		.space	1
 5050              		.section	.bss.imu_update_time,"aw",%nobits
 5051              		.align	2
 5052              		.set	.LANCHOR3,. + 0
 5055              	imu_update_time:
 5056 0000 00000000 		.space	4
 5057              		.section	.bss.moto_ctl_buff.0,"aw",%nobits
 5058              		.align	2
 5059              		.set	.LANCHOR9,. + 0
 5062              	moto_ctl_buff.0:
 5063 0000 00000000 		.space	16
 5063      00000000 
 5063      00000000 
 5063      00000000 
 5064              		.section	.data.TaskControl_Monitor,"aw"
 5065              		.align	2
 5066              		.set	.LANCHOR0,. + 0
 5069              	TaskControl_Monitor:
 5070 0000 00       		.byte	0
 5071 0001 00       		.byte	0
 5072 0002 01       		.byte	1
 5073 0003 00       		.byte	0
 5074 0004 01       		.byte	1
 5075 0005 00000000 		.space	351
 5075      00000000 
 5075      00000000 
 5075      00000000 
 5075      00000000 
 5076 0164 00000000 		.word	0
 5077 0168 00000000 		.space	52
 5077      00000000 
 5077      00000000 
 5077      00000000 
 5077      00000000 
 5078 019c 00       		.byte	0
 5079 019d 00000000 		.space	58
 5079      00000000 
 5079      00000000 
 5079      00000000 
 5079      00000000 
 5080 01d7 00       		.byte	0
 5081 01d8 00000000 		.space	336
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 133


 5081      00000000 
 5081      00000000 
 5081      00000000 
 5081      00000000 
 5082              		.section	.rodata.shellCmdPID_Inner_Param,"a"
 5083              		.align	2
 5086              	shellCmdPID_Inner_Param:
 5087 0000 5049445F 		.ascii	"PID_Inner_Param\000"
 5087      496E6E65 
 5087      725F5061 
 5087      72616D00 
 5088              		.section	.rodata.shellCmdPID_Outer_Param,"a"
 5089              		.align	2
 5092              	shellCmdPID_Outer_Param:
 5093 0000 5049445F 		.ascii	"PID_Outer_Param\000"
 5093      4F757465 
 5093      725F5061 
 5093      72616D00 
 5094              		.section	.rodata.shellCmdSet_PID,"a"
 5095              		.align	2
 5098              	shellCmdSet_PID:
 5099 0000 5365745F 		.ascii	"Set_PID\000"
 5099      50494400 
 5100              		.section	.rodata.shellCmdlock_moto,"a"
 5101              		.align	2
 5104              	shellCmdlock_moto:
 5105 0000 6C6F636B 		.ascii	"lock_moto\000"
 5105      5F6D6F74 
 5105      6F00
 5106              		.section	.rodata.shellCmdmoto_spin,"a"
 5107              		.align	2
 5110              	shellCmdmoto_spin:
 5111 0000 6D6F746F 		.ascii	"moto_spin\000"
 5111      5F737069 
 5111      6E00
 5112              		.section	.rodata.shellCmdrev_moto,"a"
 5113              		.align	2
 5116              	shellCmdrev_moto:
 5117 0000 7265765F 		.ascii	"rev_moto\000"
 5117      6D6F746F 
 5117      00
 5118              		.section	.rodata.shellDescPID_Inner_Param,"a"
 5119              		.align	2
 5122              	shellDescPID_Inner_Param:
 5123 0000 67657420 		.ascii	"get controller parameter\000"
 5123      636F6E74 
 5123      726F6C6C 
 5123      65722070 
 5123      6172616D 
 5124              		.section	.rodata.shellDescPID_Outer_Param,"a"
 5125              		.align	2
 5128              	shellDescPID_Outer_Param:
 5129 0000 67657420 		.ascii	"get controller parameter\000"
 5129      636F6E74 
 5129      726F6C6C 
 5129      65722070 
 5129      6172616D 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 134


 5130              		.section	.rodata.shellDescSet_PID,"a"
 5131              		.align	2
 5134              	shellDescSet_PID:
 5135 0000 73657420 		.ascii	"set PID gP Paramter\000"
 5135      50494420 
 5135      67502050 
 5135      6172616D 
 5135      74657200 
 5136              		.section	.rodata.shellDesclock_moto,"a"
 5137              		.align	2
 5140              	shellDesclock_moto:
 5141 0000 64697361 		.ascii	"disable actuator test\000"
 5141      626C6520 
 5141      61637475 
 5141      61746F72 
 5141      20746573 
 5142              		.section	.rodata.shellDescmoto_spin,"a"
 5143              		.align	2
 5146              	shellDescmoto_spin:
 5147 0000 53696E67 		.ascii	"Single Moto Spin\000"
 5147      6C65204D 
 5147      6F746F20 
 5147      5370696E 
 5147      00
 5148              		.section	.rodata.shellDescrev_moto,"a"
 5149              		.align	2
 5152              	shellDescrev_moto:
 5153 0000 53657420 		.ascii	"Set Moto Spin Direction\000"
 5153      4D6F746F 
 5153      20537069 
 5153      6E204469 
 5153      72656374 
 5154              		.section	shellCommand,"a"
 5155              		.align	2
 5158              	shellCommandSet_PID:
 5159 0000 00210000 		.word	8448
 5160 0004 00000000 		.word	shellCmdSet_PID
 5161 0008 00000000 		.word	TaskControl_Param_Set
 5162 000c 00000000 		.word	shellDescSet_PID
 5165              	shellCommandPID_Outer_Param:
 5166 0010 00210000 		.word	8448
 5167 0014 00000000 		.word	shellCmdPID_Outer_Param
 5168 0018 00000000 		.word	TaskControl_Get_Outer_Controller_Parameter
 5169 001c 00000000 		.word	shellDescPID_Outer_Param
 5172              	shellCommandPID_Inner_Param:
 5173 0020 00210000 		.word	8448
 5174 0024 00000000 		.word	shellCmdPID_Inner_Param
 5175 0028 00000000 		.word	TaskControl_Get_Inner_Controller_Parameter
 5176 002c 00000000 		.word	shellDescPID_Inner_Param
 5179              	shellCommandlock_moto:
 5180 0030 00210000 		.word	8448
 5181 0034 00000000 		.word	shellCmdlock_moto
 5182 0038 00000000 		.word	TaskControl_Close_CLI
 5183 003c 00000000 		.word	shellDesclock_moto
 5186              	shellCommandrev_moto:
 5187 0040 00210000 		.word	8448
 5188 0044 00000000 		.word	shellCmdrev_moto
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 135


 5189 0048 00000000 		.word	TaskControl_CLI_Rev_MotoSpinDir
 5190 004c 00000000 		.word	shellDescrev_moto
 5193              	shellCommandmoto_spin:
 5194 0050 00210000 		.word	8448
 5195 0054 00000000 		.word	shellCmdmoto_spin
 5196 0058 00000000 		.word	TaskControl_CLI_MotoSpinTest
 5197 005c 00000000 		.word	shellDescmoto_spin
 5198              		.text
 5199              	.Letext0:
 5200              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 5201              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 5202              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\
 5203              		.file 6 "common/gen_physic_def/imu_data.h"
 5204              		.file 7 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
 5205              		.file 8 "System/FreeRTOS/include/portable.h"
 5206              		.file 9 "System/FreeRTOS/include/FreeRTOS.h"
 5207              		.file 10 "System/FreeRTOS/include/queue.h"
 5208              		.file 11 "System/FreeRTOS/CMSIS_RTOS/cmsis_os.h"
 5209              		.file 12 "Service/Srv_OsCommon.h"
 5210              		.file 13 "Algorithm/Control_Dep/pid.h"
 5211              		.file 14 "HW_Lib/AT32F435/drivers/inc/at32f435_437_tmr.h"
 5212              		.file 15 "Device/Dev_Dshot.h"
 5213              		.file 16 "Service/Srv_Actuator.h"
 5214              		.file 17 "Service/Srv_IMUSample.h"
 5215              		.file 18 "Service/control_data.h"
 5216              		.file 19 "Service/Srv_Receiver.h"
 5217              		.file 20 "Service/Srv_DataHub.h"
 5218              		.file 21 "Task/../System/storage/Storage.h"
 5219              		.file 22 "Task/Task_Control.h"
 5220              		.file 23 "System/shell/shell.h"
 5221              		.file 24 "System/FreeRTOS/FreeRTOSConfig.h"
 5222              		.file 25 "System/shell/shell_port.h"
 5223              		.file 26 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 5224              		.file 27 "<built-in>"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 136


DEFINED SYMBOLS
                            *ABS*:00000000 Task_Control.c
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:20     .text.TaskControl_Param_Copy:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:25     .text.TaskControl_Param_Copy:00000000 TaskControl_Param_Copy
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:102    .text.TaskControl_disarm_check:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:107    .text.TaskControl_disarm_check:00000000 TaskControl_disarm_check
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:204    .text.TaskControl_disarm_check:0000007c $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:209    .text.TaskControl_Actuator_ControlValue_Update:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:214    .text.TaskControl_Actuator_ControlValue_Update:00000000 TaskControl_Actuator_ControlValue_Update
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:286    .text.TaskControl_Actuator_ControlValue_Update:00000054 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:291    .text.TaskControl_Convert_CtlData:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:296    .text.TaskControl_Convert_CtlData:00000000 TaskControl_Convert_CtlData
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:742    .text.TaskControl_Convert_CtlData:00000278 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:748    .text.TaskControl_Get_DefaultParam:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:753    .text.TaskControl_Get_DefaultParam:00000000 TaskControl_Get_DefaultParam
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:947    .text.TaskControl_Get_DefaultParam:000000bc $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:963    .rodata.TaskControl_Get_StoreParam.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:970    .text.TaskControl_Get_StoreParam:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:975    .text.TaskControl_Get_StoreParam:00000000 TaskControl_Get_StoreParam
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1309   .text.TaskControl_Get_StoreParam:00000228 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1318   .text.TaskControl_Get_InuseParam:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1323   .text.TaskControl_Get_InuseParam:00000000 TaskControl_Get_InuseParam
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1542   .text.TaskControl_Get_InuseParam:000000f0 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1547   .text.TaskControl_AttitudeRing_PID_Update:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1552   .text.TaskControl_AttitudeRing_PID_Update:00000000 TaskControl_AttitudeRing_PID_Update
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1600   .text.TaskControl_AngularSpeedRing_PID_Update:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1605   .text.TaskControl_AngularSpeedRing_PID_Update:00000000 TaskControl_AngularSpeedRing_PID_Update
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1659   .text.TaskControl_FlightControl_Polling:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1664   .text.TaskControl_FlightControl_Polling:00000000 TaskControl_FlightControl_Polling
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1882   .text.TaskControl_FlightControl_Polling:00000144 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:1888   .text.TaskControl_FlightControl_Polling:0000014a $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2191   .text.TaskControl_FlightControl_Polling:000002c8 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2208   .text.TaskControl_FlightControl_Polling:000002fc $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2241   .text.TaskControl_FlightControl_Polling:00000330 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2246   .rodata.TaskControl_CLI_Polling.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2253   .text.TaskControl_CLI_Polling:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2258   .text.TaskControl_CLI_Polling:00000000 TaskControl_CLI_Polling
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2607   .text.TaskControl_CLI_Polling:00000188 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2620   .rodata.TaskControl_PID_Param_Print.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2645   .text.TaskControl_PID_Param_Print:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2650   .text.TaskControl_PID_Param_Print:00000000 TaskControl_PID_Param_Print
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2776   .text.TaskControl_PID_Param_Print:000000a4 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2788   .rodata.TaskControl_Get_Inner_Controller_Parameter.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2798   .text.TaskControl_Get_Inner_Controller_Parameter:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2803   .text.TaskControl_Get_Inner_Controller_Parameter:00000000 TaskControl_Get_Inner_Controller_Parameter
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2900   .text.TaskControl_Get_Inner_Controller_Parameter:000000c4 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2908   .rodata.TaskControl_Get_Outer_Controller_Parameter.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2915   .text.TaskControl_Get_Outer_Controller_Parameter:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2920   .text.TaskControl_Get_Outer_Controller_Parameter:00000000 TaskControl_Get_Outer_Controller_Parameter
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:2995   .text.TaskControl_Get_Outer_Controller_Parameter:00000088 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3002   .rodata.TaskControl_CLI_MotoSpinTest.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3052   .text.TaskControl_CLI_MotoSpinTest:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3057   .text.TaskControl_CLI_MotoSpinTest:00000000 TaskControl_CLI_MotoSpinTest
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3441   .text.TaskControl_CLI_MotoSpinTest:000001c8 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3465   .rodata.TaskControl_CLI_Rev_MotoSpinDir.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3487   .text.TaskControl_CLI_Rev_MotoSpinDir:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3492   .text.TaskControl_CLI_Rev_MotoSpinDir:00000000 TaskControl_CLI_Rev_MotoSpinDir
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 137


C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3748   .text.TaskControl_CLI_Rev_MotoSpinDir:00000128 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3767   .rodata.TaskControl_Close_CLI.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3771   .text.TaskControl_Close_CLI:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3776   .text.TaskControl_Close_CLI:00000000 TaskControl_Close_CLI
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3909   .text.TaskControl_Close_CLI:00000078 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:3919   .rodata.TaskControl_Param_Set.str1.4:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4058   .text.TaskControl_Param_Set:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4063   .text.TaskControl_Param_Set:00000000 TaskControl_Param_Set
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4634   .text.TaskControl_Param_Set:00000320 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4692   .text.TaskControl_Init:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4698   .text.TaskControl_Init:00000000 TaskControl_Init
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4804   .text.TaskControl_Init:00000064 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4816   .text.TaskControl_Core:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4822   .text.TaskControl_Core:00000000 TaskControl_Core
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4949   .text.TaskControl_Core:00000080 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5158   shellCommand:00000000 shellCommandSet_PID
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5134   .rodata.shellDescSet_PID:00000000 shellDescSet_PID
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5098   .rodata.shellCmdSet_PID:00000000 shellCmdSet_PID
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5165   shellCommand:00000010 shellCommandPID_Outer_Param
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5128   .rodata.shellDescPID_Outer_Param:00000000 shellDescPID_Outer_Param
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5092   .rodata.shellCmdPID_Outer_Param:00000000 shellCmdPID_Outer_Param
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5172   shellCommand:00000020 shellCommandPID_Inner_Param
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5122   .rodata.shellDescPID_Inner_Param:00000000 shellDescPID_Inner_Param
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5086   .rodata.shellCmdPID_Inner_Param:00000000 shellCmdPID_Inner_Param
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5179   shellCommand:00000030 shellCommandlock_moto
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5140   .rodata.shellDesclock_moto:00000000 shellDesclock_moto
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5104   .rodata.shellCmdlock_moto:00000000 shellCmdlock_moto
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5186   shellCommand:00000040 shellCommandrev_moto
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5152   .rodata.shellDescrev_moto:00000000 shellDescrev_moto
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5116   .rodata.shellCmdrev_moto:00000000 shellCmdrev_moto
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5193   shellCommand:00000050 shellCommandmoto_spin
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5146   .rodata.shellDescmoto_spin:00000000 shellDescmoto_spin
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5110   .rodata.shellCmdmoto_spin:00000000 shellCmdmoto_spin
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5069   .data.TaskControl_Monitor:00000000 TaskControl_Monitor
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5010   .bss.LstCyc_Rc_Data:00000000 LstCyc_Rc_Data
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5004   .bss.LstCyc_IMU_Data:00000000 LstCyc_IMU_Data
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4979   .rodata:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4987   .Perph_Section:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4991   .Perph_Section:00000000 ExpCtl_PipeDataObj
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4994   .bss.CLIData.1:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:4998   .bss.CLIData.1:00000000 CLIData.1
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5001   .bss.LstCyc_IMU_Data:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5007   .bss.LstCyc_Rc_Data:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5013   .bss.TaskControl_Period:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5017   .bss.TaskControl_Period:00000000 TaskControl_Period
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5023   .bss.att_update:00000000 att_update
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5024   .bss.att_update:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5026   .bss.att_update_time:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5030   .bss.att_update_time:00000000 att_update_time
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5036   .bss.failsafe:00000000 failsafe
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5037   .bss.failsafe:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5042   .bss.imu_err_code:00000000 imu_err_code
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5043   .bss.imu_err_code:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5048   .bss.imu_init_state:00000000 imu_init_state
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5049   .bss.imu_init_state:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5051   .bss.imu_update_time:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5055   .bss.imu_update_time:00000000 imu_update_time
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s 			page 138


C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5058   .bss.moto_ctl_buff.0:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5062   .bss.moto_ctl_buff.0:00000000 moto_ctl_buff.0
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5065   .data.TaskControl_Monitor:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5083   .rodata.shellCmdPID_Inner_Param:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5089   .rodata.shellCmdPID_Outer_Param:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5095   .rodata.shellCmdSet_PID:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5101   .rodata.shellCmdlock_moto:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5107   .rodata.shellCmdmoto_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5113   .rodata.shellCmdrev_moto:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5119   .rodata.shellDescPID_Inner_Param:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5125   .rodata.shellDescPID_Outer_Param:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5131   .rodata.shellDescSet_PID:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5137   .rodata.shellDesclock_moto:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5143   .rodata.shellDescmoto_spin:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5149   .rodata.shellDescrev_moto:00000000 $d
C:\Users\8bit\AppData\Local\Temp\cc6OA1sL.s:5155   shellCommand:00000000 $d

UNDEFINED SYMBOLS
SrvActuator
memset
memcpy
Storage
PID_Update
DataPipe_SendTo
CtlData_smp_DataPipe
CtlData_hub_DataPipe
CtlData_Log_DataPipe
SrvDataHub
Shell_GetInstence
osMessageGet
shellPrint
SrvOsCommon
__aeabi_f2d
osMessagePut
strlen
memcmp
osMessageCreate
