ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"port.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvTaskExitError,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	prvTaskExitError:
  26              	.LFB6:
  27              		.file 1 "System/FreeRTOS/portable/GCC/ARM_CM4F/port.c"
   1:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
   2:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS Kernel V10.3.1
   3:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
   5:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * the Software without restriction, including without limitation the rights to
   8:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * subject to the following conditions:
  11:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
  12:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * copies or substantial portions of the Software.
  14:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
  15:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
  22:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * http://www.FreeRTOS.org
  23:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * http://aws.amazon.com/freertos
  24:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
  25:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * 1 tab == 4 spaces!
  26:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
  27:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  28:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------
  29:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Implementation of functions defined in portable.h for the ARM CM4F port.
  30:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *----------------------------------------------------------*/
  31:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 2


  32:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Scheduler includes. */
  33:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #include "FreeRTOS.h"
  34:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #include "task.h"
  35:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  36:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #ifndef __VFP_FP__
  37:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#error This port can only be used when the project options are configured to enable hardware float
  38:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif
  39:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  40:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  41:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  42:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Ensure the SysTick is clocked at the same frequency as the core. */
  43:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 1UL << 2UL )
  44:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #else
  45:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* The way the SysTick is clocked is not modified in case it is not the same
  46:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	as the core. */
  47:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 0 )
  48:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif
  49:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  50:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the core.  Registers first... */
  51:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CTRL_REG			( * ( ( volatile uint32_t * ) 0xe000e010 ) )
  52:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_LOAD_REG			( * ( ( volatile uint32_t * ) 0xe000e014 ) )
  53:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG	( * ( ( volatile uint32_t * ) 0xe000e018 ) )
  54:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSPRI2_REG				( * ( ( volatile uint32_t * ) 0xe000ed20 ) )
  55:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* ...then bits in the registers. */
  56:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_INT_BIT			( 1UL << 1UL )
  57:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT			( 1UL << 0UL )
  58:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT		( 1UL << 16UL )
  59:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSVCLEAR_BIT 			( 1UL << 27UL )
  60:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT		( 1UL << 25UL )
  61:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  62:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants used to detect a Cortex-M7 r0p1 core, which should use the ARM_CM7
  63:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** r0p1 port. */
  64:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portCPUID							( * ( ( volatile uint32_t * ) 0xE000ed00 ) )
  65:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p1_ID				( 0x410FC271UL )
  66:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p0_ID				( 0x410FC270UL )
  67:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  68:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSV_PRI					( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 16UL )
  69:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_PRI				( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 24UL )
  70:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  71:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants required to check the validity of an interrupt priority. */
  72:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER		( 16 )
  73:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16 	( 0xE000E3F0 )
  74:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portAIRCR_REG						( * ( ( volatile uint32_t * ) 0xE000ED0C ) )
  75:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portMAX_8_BIT_VALUE					( ( uint8_t ) 0xff )
  76:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portTOP_BIT_OF_BYTE					( ( uint8_t ) 0x80 )
  77:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portMAX_PRIGROUP_BITS				( ( uint8_t ) 7 )
  78:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portPRIORITY_GROUP_MASK				( 0x07UL << 8UL )
  79:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portPRIGROUP_SHIFT					( 8UL )
  80:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  81:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  82:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portVECTACTIVE_MASK					( 0xFFUL )
  83:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  84:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the VFP. */
  85:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portFPCCR							( ( volatile uint32_t * ) 0xe000ef34 ) /* Floating point context control re
  86:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portASPEN_AND_LSPEN_BITS			( 0x3UL << 30UL )
  87:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  88:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants required to set up the initial stack. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 3


  89:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_XPSR					( 0x01000000 )
  90:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_EXC_RETURN				( 0xfffffffd )
  91:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  92:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* The systick is a 24-bit counter. */
  93:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
  94:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  95:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
  96:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  97:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portSTART_ADDRESS_MASK		( ( StackType_t ) 0xfffffffeUL )
  98:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  99:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
 100:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** occurred while the SysTick counter is stopped during tickless idle
 101:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** calculations. */
 102:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portMISSED_COUNTS_FACTOR			( 45UL )
 103:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 104:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
 105:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
 106:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** debugger. */
 107:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #ifdef configTASK_RETURN_ADDRESS
 108:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 109:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #else
 110:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 111:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif
 112:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 113:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 114:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 115:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * file is weak to allow application writers to change the timer used to
 116:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * generate the tick interrupt.
 117:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 118:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortSetupTimerInterrupt( void );
 119:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 120:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 121:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Exception handlers.
 122:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 123:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void ) __attribute__ (( naked ));
 124:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void );
 125:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void ) __attribute__ (( naked ));
 126:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 127:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 128:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 129:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 130:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void ) __attribute__ (( naked ));
 131:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 132:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 133:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Function to enable the VFP.
 134:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 135:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void ) __attribute__ (( naked ));
 136:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 137:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 138:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 139:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 140:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void );
 141:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 142:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 143:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 144:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 145:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** variable. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 4


 146:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 147:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 148:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 149:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * The number of SysTick increments that make up one tick period.
 150:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 151:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 152:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	static uint32_t ulTimerCountsForOneTick = 0;
 153:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 154:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 155:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 156:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 157:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * 24 bit resolution of the SysTick timer.
 158:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 159:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 160:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	static uint32_t xMaximumPossibleSuppressedTicks = 0;
 161:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 162:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 163:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 164:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 165:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * power functionality only.
 166:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 167:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 168:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	static uint32_t ulStoppedTimerCompensation = 0;
 169:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 170:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 171:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 172:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 173:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 174:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 175:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 176:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if( configASSERT_DEFINED == 1 )
 177:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	 static uint8_t ucMaxSysCallPriority = 0;
 178:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	 static uint32_t ulMaxPRIGROUPValue = 0;
 179:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * c
 180:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* configASSERT_DEFINED */
 181:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 182:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 183:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 184:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 185:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 186:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 187:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 188:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 189:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 190:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	interrupt. */
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 192:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Offset added to account for the way the MCU uses the stack on entry/exit
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	of interrupts, and to ensure alignment. */
 194:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 196:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 197:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 198:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 199:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 200:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 201:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 202:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Save code space by skipping register initialisation. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 5


 203:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 204:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 205:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 206:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* A save method is being used that requires each task to maintain its
 207:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	own exec return value. */
 208:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 209:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = portINITIAL_EXC_RETURN;
 210:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 211:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 212:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 213:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	return pxTopOfStack;
 214:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 215:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 216:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 217:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void )
 218:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
  28              		.loc 1 218 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
 219:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** volatile uint32_t ulDummy = 0;
  36              		.loc 1 219 1 view .LVU1
  37              		.loc 1 219 19 is_stmt 0 view .LVU2
  38 0002 0023     		movs	r3, #0
  39 0004 0193     		str	r3, [sp, #4]
 220:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 221:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* A function that implements a task must not exit or attempt to return to
 222:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	its caller as there is nothing to return to.  If a task wants to exit it
 223:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	should instead call vTaskDelete( NULL ).
 224:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 225:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	Artificially force an assert() to be triggered if configASSERT() is
 226:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	defined, then stop here so application writers can catch the error. */
 227:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting == ~0UL );
  40              		.loc 1 227 2 is_stmt 1 view .LVU3
  41 0006 0D4B     		ldr	r3, .L6
  42 0008 1B68     		ldr	r3, [r3]
  43 000a B3F1FF3F 		cmp	r3, #-1
  44 000e 08D0     		beq	.L2
  45              		.loc 1 227 2 view .LVU4
  46              	.LBB31:
  47              	.LBI31:
  48              		.file 2 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 6


  12:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 7


  69:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 8


 126:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 9


 183:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  49              		.loc 2 191 30 view .LVU5
  50              	.LBB32:
 192:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  51              		.loc 2 193 1 view .LVU6
 194:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  52              		.loc 2 195 2 view .LVU7
  53              		.syntax unified
  54              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
  55 0010 4FF05003 			mov r3, #80												
  56 0014 83F31188 		msr basepri, r3											
  57 0018 BFF36F8F 		isb														
  58 001c BFF34F8F 		dsb														
  59              	
  60              	@ 0 "" 2
  61              	.LVL0:
  62              		.thumb
  63              		.syntax unified
  64              	.L3:
  65              		.loc 2 195 2 is_stmt 0 view .LVU8
  66              	.LBE32:
  67              	.LBE31:
  68              		.loc 1 227 2 is_stmt 1 discriminator 1 view .LVU9
  69              		.loc 1 227 2 discriminator 1 view .LVU10
  70              		.loc 1 227 2 discriminator 1 view .LVU11
  71 0020 FEE7     		b	.L3
  72              	.L2:
  73              		.loc 1 227 43 view .LVU12
 228:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
  74              		.loc 1 228 2 view .LVU13
  75              	.LBB33:
  76              	.LBI33:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
  77              		.loc 2 191 30 view .LVU14
  78              	.LBB34:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  79              		.loc 2 193 1 view .LVU15
  80              		.loc 2 195 2 view .LVU16
  81              		.syntax unified
  82              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
  83 0022 4FF05003 			mov r3, #80												
  84 0026 83F31188 		msr basepri, r3											
  85 002a BFF36F8F 		isb														
  86 002e BFF34F8F 		dsb														
  87              	
  88              	@ 0 "" 2
  89              	.LVL1:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 10


  90              		.thumb
  91              		.syntax unified
  92              	.L4:
  93              		.loc 2 195 2 is_stmt 0 view .LVU17
  94              	.LBE34:
  95              	.LBE33:
 229:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
 230:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 231:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* This file calls prvTaskExitError() after the scheduler has been
 232:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		started to remove a compiler warning about the function being defined
 233:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		but never called.  ulDummy is used purely to quieten other warnings
 234:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		about code appearing after this function is called - making ulDummy
 235:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		volatile makes the compiler think the function could return and
 236:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		therefore not output an 'unreachable code' warning for code that appears
 237:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		after it. */
 238:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
  96              		.loc 1 238 2 is_stmt 1 discriminator 1 view .LVU18
 229:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
  97              		.loc 1 229 7 discriminator 1 view .LVU19
 229:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
  98              		.loc 1 229 17 is_stmt 0 discriminator 1 view .LVU20
  99 0032 019B     		ldr	r3, [sp, #4]
 229:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
 100              		.loc 1 229 7 discriminator 1 view .LVU21
 101 0034 002B     		cmp	r3, #0
 102 0036 FCD0     		beq	.L4
 239:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 103              		.loc 1 239 1 view .LVU22
 104 0038 02B0     		add	sp, sp, #8
 105              	.LCFI1:
 106              		.cfi_def_cfa_offset 0
 107              		@ sp needed
 108 003a 7047     		bx	lr
 109              	.L7:
 110              		.align	2
 111              	.L6:
 112 003c 00000000 		.word	.LANCHOR0
 113              		.cfi_endproc
 114              	.LFE6:
 116              		.section	.text.prvPortStartFirstTask,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	prvPortStartFirstTask:
 123              	.LFB8:
 240:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 241:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 242:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void )
 243:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 244:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile (
 245:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 246:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	ldr r1, [r3]					\n" /* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 247:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	ldr r0, [r1]					\n" /* The first item in pxCurrentTCB is the task top of stack. */
 248:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	ldmia r0!, {r4-r11, r14}		\n" /* Pop the registers that are not automatically saved on excep
 249:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	msr psp, r0						\n" /* Restore the task stack pointer. */
 250:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	isb								\n"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 11


 251:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	mov r0, #0 						\n"
 252:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	msr	basepri, r0					\n"
 253:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	bx r14							\n"
 254:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"									\n"
 255:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	.align 4						\n"
 256:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 257:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				);
 258:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 259:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 260:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 261:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void )
 262:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 124              		.loc 1 262 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ Naked Function: prologue and epilogue provided by programmer.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 263:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Start the first task.  This also clears the bit that indicates the FPU is
 264:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	in use in case the FPU was used before the scheduler was started - which
 265:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	would otherwise result in the unnecessary leaving of space in the SVC stack
 266:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	for lazy saving of FPU registers. */
 267:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile(
 129              		.loc 1 267 2 view .LVU24
 130              		.syntax unified
 131              	@ 267 "System/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 132 0000 0848     		 ldr r0, =0xE000ED08 	
 133 0002 0068     	 ldr r0, [r0] 			
 134 0004 0068     	 ldr r0, [r0] 			
 135 0006 80F30888 	 msr msp, r0			
 136 000a 4FF00000 	 mov r0, #0			
 137 000e 80F31488 	 msr control, r0		
 138 0012 62B6     	 cpsie i				
 139 0014 61B6     	 cpsie f				
 140 0016 BFF34F8F 	 dsb					
 141 001a BFF36F8F 	 isb					
 142 001e 00DF     	 svc 0					
 143 0020 00BF     	 nop					
 144              	
 145              	@ 0 "" 2
 268:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" ldr r0, =0xE000ED08 	\n" /* Use the NVIC offset register to locate the stack. */
 269:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" ldr r0, [r0] 			\n"
 270:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" ldr r0, [r0] 			\n"
 271:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" msr msp, r0			\n" /* Set the msp back to the start of the stack. */
 272:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" mov r0, #0			\n" /* Clear the bit that indicates the FPU is in use, see comment above. */
 273:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" msr control, r0		\n"
 274:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" cpsie i				\n" /* Globally enable interrupts. */
 275:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" cpsie f				\n"
 276:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" dsb					\n"
 277:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" isb					\n"
 278:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" svc 0					\n" /* System call to start first task. */
 279:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					" nop					\n"
 280:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				);
 281:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 146              		.loc 1 281 1 is_stmt 0 view .LVU25
 147              		.thumb
 148              		.syntax unified
 149              		.cfi_endproc
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 12


 150              	.LFE8:
 152 0022 0000     		.section	.text.vPortEnableVFP,"ax",%progbits
 153              		.align	1
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 158              	vPortEnableVFP:
 159              	.LFB16:
 282:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 283:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 284:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 285:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 286:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 287:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** BaseType_t xPortStartScheduler( void )
 288:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 289:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 290:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 291:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 292:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 293:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* This port can be used on all revisions of the Cortex-M7 core other than
 294:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	the r0p1 parts.  r0p1 parts should use the port from the
 295:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/source/portable/GCC/ARM_CM7/r0p1 directory. */
 296:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 297:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 298:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 299:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#if( configASSERT_DEFINED == 1 )
 300:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 301:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		volatile uint32_t ulOriginalPriority;
 302:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 303:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 304:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 305:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Determine the maximum priority from which ISR safe FreeRTOS API
 306:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		functions can be called.  ISR safe functions are those that end in
 307:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 308:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ensure interrupt entry is as fast and simple as possible.
 309:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 310:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		Save the interrupt priority value that is about to be clobbered. */
 311:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ulOriginalPriority = *pucFirstUserPriorityRegister;
 312:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 313:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Determine the number of priority bits available.  First write to all
 314:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		possible bits. */
 315:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 316:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 317:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Read the value back to see how many bits stuck. */
 318:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 319:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 320:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Use the same mask on the maximum system call priority. */
 321:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 322:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 323:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Calculate the maximum acceptable priority group value for the number
 324:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		of bits read back. */
 325:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 326:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 327:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 328:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			ulMaxPRIGROUPValue--;
 329:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 330:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 13


 331:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 332:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		#ifdef __NVIC_PRIO_BITS
 333:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 334:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Check the CMSIS configuration that defines the number of
 335:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			priority bits matches the number of priority bits actually queried
 336:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			from the hardware. */
 337:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
 338:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 339:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		#endif
 340:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 341:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		#ifdef configPRIO_BITS
 342:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 343:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Check the FreeRTOS configuration that defines the number of
 344:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			priority bits matches the number of priority bits actually queried
 345:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			from the hardware. */
 346:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 347:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 348:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		#endif
 349:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 350:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Shift the priority group value back to its position within the AIRCR
 351:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		register. */
 352:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 353:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 354:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 355:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Restore the clobbered interrupt priority register to its original
 356:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		value. */
 357:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		*pucFirstUserPriorityRegister = ulOriginalPriority;
 358:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 359:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#endif /* conifgASSERT_DEFINED */
 360:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 361:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Make PendSV and SysTick the lowest priority interrupts. */
 362:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 363:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 364:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 365:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 366:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	here already. */
 367:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	vPortSetupTimerInterrupt();
 368:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 369:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Initialise the critical nesting count ready for the first task. */
 370:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting = 0;
 371:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 372:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Ensure the VFP is enabled - it should be anyway. */
 373:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	vPortEnableVFP();
 374:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 375:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Lazy save always. */
 376:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 377:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 378:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Start the first task. */
 379:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	prvPortStartFirstTask();
 380:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 381:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Should never get here as the tasks will now be executing!  Call the task
 382:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	exit error function to prevent compiler warnings about a static function
 383:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	not being called in the case that the application writer overrides this
 384:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	functionality by defining configTASK_RETURN_ADDRESS.  Call
 385:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	vTaskSwitchContext() so link time optimisation does not remove the
 386:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	symbol. */
 387:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	vTaskSwitchContext();
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 14


 388:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	prvTaskExitError();
 389:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 390:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Should not get here! */
 391:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	return 0;
 392:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 393:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 394:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 395:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortEndScheduler( void )
 396:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 397:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 398:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	Artificially force an assert. */
 399:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting == 1000UL );
 400:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 401:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 402:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 403:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortEnterCritical( void )
 404:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 405:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 406:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting++;
 407:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 408:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* This is not the interrupt safe version of the enter critical function so
 409:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	assert() if it is being called from an interrupt context.  Only API
 410:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	functions that end in "FromISR" can be used in an interrupt.  Only assert if
 411:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	the critical nesting count is 1 to protect against recursive calls if the
 412:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	assert function also uses a critical section. */
 413:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 1 )
 414:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 415:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 416:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 417:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 418:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 419:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 420:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortExitCritical( void )
 421:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 422:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting );
 423:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 424:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 0 )
 425:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 426:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		portENABLE_INTERRUPTS();
 427:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 428:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 429:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 430:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 431:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void )
 432:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 433:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* This is a naked function. */
 434:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 435:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile
 436:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	(
 437:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	mrs r0, psp							\n"
 438:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	isb									\n"
 439:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 440:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 441:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	ldr	r2, [r3]						\n"
 442:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 443:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, push high vfp registers. *
 444:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	it eq								\n"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 15


 445:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	vstmdbeq r0!, {s16-s31}				\n"
 446:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 447:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	stmdb r0!, {r4-r11, r14}			\n" /* Save the core registers. */
 448:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	str r0, [r2]						\n" /* Save the new top of stack into the first member of the TCB. */
 449:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 450:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	stmdb sp!, {r0, r3}					\n"
 451:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	mov r0, %0 							\n"
 452:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	msr basepri, r0						\n"
 453:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	dsb									\n"
 454:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	isb									\n"
 455:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	bl vTaskSwitchContext				\n"
 456:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	mov r0, #0							\n"
 457:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	msr basepri, r0						\n"
 458:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	ldmia sp!, {r0, r3}					\n"
 459:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 460:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	ldr r1, [r3]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 461:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	ldr r0, [r1]						\n"
 462:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 463:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	ldmia r0!, {r4-r11, r14}			\n" /* Pop the core registers. */
 464:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 465:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, pop the high vfp registers
 466:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	it eq								\n"
 467:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	vldmiaeq r0!, {s16-s31}				\n"
 468:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 469:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	msr psp, r0							\n"
 470:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	isb									\n"
 471:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 472:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#ifdef WORKAROUND_PMU_CM001 /* XMC4000 specific errata workaround. */
 473:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		#if WORKAROUND_PMU_CM001 == 1
 474:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"			push { r14 }				\n"
 475:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"			pop { pc }					\n"
 476:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		#endif
 477:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#endif
 478:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 479:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	bx r14								\n"
 480:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 481:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"	.align 4							\n"
 482:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
 483:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
 484:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	);
 485:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 486:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 487:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 488:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void )
 489:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 490:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 491:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	executes all interrupts must be unmasked.  There is therefore no need to
 492:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	save and then restore the interrupt mask value as its value is already
 493:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	known. */
 494:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 495:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 496:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Increment the RTOS tick. */
 497:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		if( xTaskIncrementTick() != pdFALSE )
 498:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 499:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* A context switch is required.  Context switching is performed in
 500:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			the PendSV interrupt.  Pend the PendSV interrupt. */
 501:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 16


 502:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 503:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 504:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portENABLE_INTERRUPTS();
 505:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 506:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 507:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 508:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 509:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 510:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 511:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 512:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 513:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	TickType_t xModifiableIdleTime;
 514:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 515:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 516:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 517:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 518:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 519:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 520:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 521:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 522:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		is accounted for as best it can be, but using the tickless mode will
 523:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		inevitably result in some tiny drift of the time maintained by the
 524:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		kernel with respect to calendar time. */
 525:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 526:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 527:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 528:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		tick periods.  -1 is used because this code will execute part way
 529:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		through one of the tick periods. */
 530:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleT
 531:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 532:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 533:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			ulReloadValue -= ulStoppedTimerCompensation;
 534:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 535:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 536:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 537:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		method as that will mask interrupts that should exit sleep mode. */
 538:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "cpsid i" ::: "memory" );
 539:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "dsb" );
 540:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "isb" );
 541:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 542:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* If a context switch is pending or a task is waiting for the scheduler
 543:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		to be unsuspended then abandon the low power entry. */
 544:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 545:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 546:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Restart from whatever is left in the count register to complete
 547:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			this tick period. */
 548:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 549:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 550:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Restart SysTick. */
 551:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 552:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 553:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Reset the reload register to the value required for normal tick
 554:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			periods. */
 555:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 556:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 557:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 558:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			above. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 17


 559:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 560:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 561:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		else
 562:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 563:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Set the new reload value. */
 564:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 565:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 566:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Clear the SysTick count flag and set the count value back to
 567:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			zero. */
 568:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 569:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 570:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Restart SysTick. */
 571:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 572:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 573:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 574:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			set its parameter to 0 to indicate that its implementation contains
 575:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			its own wait for interrupt or wait for event instruction, and so wfi
 576:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			should not be executed again.  However, the original expected idle
 577:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			time variable must remain unmodified, so a copy is taken. */
 578:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			xModifiableIdleTime = xExpectedIdleTime;
 579:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 580:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			if( xModifiableIdleTime > 0 )
 581:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			{
 582:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				__asm volatile( "dsb" ::: "memory" );
 583:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				__asm volatile( "wfi" );
 584:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				__asm volatile( "isb" );
 585:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			}
 586:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 587:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 588:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Re-enable interrupts to allow the interrupt that brought the MCU
 589:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			out of sleep mode to execute immediately.  see comments above
 590:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			__disable_interrupt() call above. */
 591:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 592:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "dsb" );
 593:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "isb" );
 594:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 595:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Disable interrupts again because the clock is about to be stopped
 596:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			and interrupts that execute while the clock is stopped will increase
 597:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			any slippage between the time maintained by the RTOS and calendar
 598:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			time. */
 599:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsid i" ::: "memory" );
 600:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "dsb" );
 601:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "isb" );
 602:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 603:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Disable the SysTick clock without reading the
 604:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG register to ensure the
 605:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 606:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			the time the SysTick is stopped for is accounted for as best it can
 607:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			be, but using the tickless mode will inevitably result in some tiny
 608:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			drift of the time maintained by the kernel with respect to calendar
 609:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			time*/
 610:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT );
 611:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 612:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Determine if the SysTick clock has already counted to zero and
 613:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			been set back to the current reload value (the reload back being
 614:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			correct for the entire expected idle time) or if the SysTick is yet
 615:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			to count to zero (in which case an interrupt other than the SysTick
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 18


 616:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			must have brought the system out of sleep mode). */
 617:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 618:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			{
 619:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				uint32_t ulCalculatedLoadValue;
 620:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 621:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				/* The tick interrupt is already pending, and the SysTick count
 622:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				reloaded with ulReloadValue.  Reset the
 623:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 624:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				period. */
 625:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 626:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 627:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				/* Don't allow a tiny value, or values that have somehow
 628:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				underflowed because the post sleep hook did something
 629:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				that took too long. */
 630:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 631:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				{
 632:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 633:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				}
 634:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 635:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 636:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 637:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				/* As the pending tick will be processed as soon as this
 638:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				function exits, the tick value maintained by the tick is stepped
 639:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				forward by one less than the time spent waiting. */
 640:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 641:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			}
 642:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			else
 643:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			{
 644:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				/* Something other than the tick interrupt ended the sleep.
 645:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				Work out how long the sleep lasted rounded to complete tick
 646:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				periods (not the ulReload value which accounted for part
 647:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				ticks). */
 648:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 649:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 650:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				/* How many complete tick periods passed while the processor
 651:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				was waiting? */
 652:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 653:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 654:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				/* The reload value is set to whatever fraction of a single tick
 655:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				period remains. */
 656:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulC
 657:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			}
 658:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 659:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 660:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 661:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			value. */
 662:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 663:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 664:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			vTaskStepTick( ulCompleteTickPeriods );
 665:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 666:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 667:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Exit with interrupts enabled. */
 668:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 669:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 670:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 671:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 672:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* #if configUSE_TICKLESS_IDLE */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 19


 673:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 674:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 675:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 676:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 677:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * frequency.
 678:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 679:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
 680:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 681:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 682:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#if( configUSE_TICKLESS_IDLE == 1 )
 683:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 684:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 685:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 686:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 687:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 688:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	#endif /* configUSE_TICKLESS_IDLE */
 689:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 690:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Stop and clear the SysTick. */
 691:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 692:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 693:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 694:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Configure SysTick to interrupt at the requested rate. */
 695:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 696:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 697:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 698:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 699:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 700:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* This is a naked function. */
 701:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void )
 702:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 160              		.loc 1 702 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ Naked Function: prologue and epilogue provided by programmer.
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 703:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile
 165              		.loc 1 703 2 view .LVU27
 166              		.syntax unified
 167              	@ 703 "System/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 168 0000 DFF80C00 			ldr.w r0, =0xE000ED88		
 169 0004 0168     		ldr r1, [r0]				
 170              									
 171 0006 41F47001 		orr r1, r1, #( 0xf << 20 )	
 172 000a 0160     		str r1, [r0]				
 173 000c 7047     		bx r14						
 174              	@ 0 "" 2
 704:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	(
 705:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		"	ldr.w r0, =0xE000ED88		\n" /* The FPU enable bits are in the CPACR. */
 706:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		"	ldr r1, [r0]				\n"
 707:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		"								\n"
 708:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
 709:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		"	str r1, [r0]				\n"
 710:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		"	bx r14						"
 711:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	);
 712:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 175              		.loc 1 712 1 is_stmt 0 view .LVU28
 176              		.thumb
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 20


 177              		.syntax unified
 178              		.cfi_endproc
 179              	.LFE16:
 181 000e 0000     		.section	.text.pxPortInitialiseStack,"ax",%progbits
 182              		.align	1
 183              		.global	pxPortInitialiseStack
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	pxPortInitialiseStack:
 189              	.LVL2:
 190              	.LFB5:
 188:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 191              		.loc 1 188 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 194:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 196              		.loc 1 194 2 view .LVU30
 196:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 197              		.loc 1 196 2 view .LVU31
 196:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 198              		.loc 1 196 16 is_stmt 0 view .LVU32
 199 0000 4FF08073 		mov	r3, #16777216
 200 0004 40F8043C 		str	r3, [r0, #-4]
 197:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 201              		.loc 1 197 2 is_stmt 1 view .LVU33
 202              	.LVL3:
 198:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 203              		.loc 1 198 2 view .LVU34
 198:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 204              		.loc 1 198 45 is_stmt 0 view .LVU35
 205 0008 21F00101 		bic	r1, r1, #1
 206              	.LVL4:
 198:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 207              		.loc 1 198 16 view .LVU36
 208 000c 40F8081C 		str	r1, [r0, #-8]
 199:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 209              		.loc 1 199 2 is_stmt 1 view .LVU37
 210              	.LVL5:
 200:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 211              		.loc 1 200 2 view .LVU38
 200:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 212              		.loc 1 200 18 is_stmt 0 view .LVU39
 213 0010 054B     		ldr	r3, .L11
 200:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 214              		.loc 1 200 16 view .LVU40
 215 0012 40F80C3C 		str	r3, [r0, #-12]
 203:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 216              		.loc 1 203 2 is_stmt 1 view .LVU41
 217              	.LVL6:
 204:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 218              		.loc 1 204 2 view .LVU42
 204:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 219              		.loc 1 204 16 is_stmt 0 view .LVU43
 220 0016 40F8202C 		str	r2, [r0, #-32]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 21


 208:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = portINITIAL_EXC_RETURN;
 221              		.loc 1 208 2 is_stmt 1 view .LVU44
 222              	.LVL7:
 209:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 223              		.loc 1 209 2 view .LVU45
 209:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 224              		.loc 1 209 16 is_stmt 0 view .LVU46
 225 001a 6FF00203 		mvn	r3, #2
 226 001e 40F8243C 		str	r3, [r0, #-36]
 211:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 227              		.loc 1 211 2 is_stmt 1 view .LVU47
 228              	.LVL8:
 213:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 229              		.loc 1 213 2 view .LVU48
 214:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 230              		.loc 1 214 1 is_stmt 0 view .LVU49
 231 0022 4438     		subs	r0, r0, #68
 232              	.LVL9:
 214:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 233              		.loc 1 214 1 view .LVU50
 234 0024 7047     		bx	lr
 235              	.L12:
 236 0026 00BF     		.align	2
 237              	.L11:
 238 0028 00000000 		.word	prvTaskExitError
 239              		.cfi_endproc
 240              	.LFE5:
 242              		.section	.text.SVC_Handler,"ax",%progbits
 243              		.align	1
 244              		.global	SVC_Handler
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 249              	SVC_Handler:
 250              	.LFB7:
 243:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile (
 251              		.loc 1 243 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ Naked Function: prologue and epilogue provided by programmer.
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 244:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 256              		.loc 1 244 2 view .LVU52
 257              		.syntax unified
 258              	@ 244 "System/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 259 0000 074B     			ldr	r3, pxCurrentTCBConst2		
 260 0002 1968     		ldr r1, [r3]					
 261 0004 0868     		ldr r0, [r1]					
 262 0006 B0E8F04F 		ldmia r0!, {r4-r11, r14}		
 263 000a 80F30988 		msr psp, r0						
 264 000e BFF36F8F 		isb								
 265 0012 4FF00000 		mov r0, #0 						
 266 0016 80F31188 		msr	basepri, r0					
 267 001a 7047     		bx r14							
 268              										
 269 001c AFF30080 		.align 4						
 270 0020 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 22


 271              	
 272              	@ 0 "" 2
 258:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 273              		.loc 1 258 1 is_stmt 0 view .LVU53
 274              		.thumb
 275              		.syntax unified
 276              		.cfi_endproc
 277              	.LFE7:
 279              		.section	.text.vPortEndScheduler,"ax",%progbits
 280              		.align	1
 281              		.global	vPortEndScheduler
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	vPortEndScheduler:
 287              	.LFB10:
 396:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 288              		.loc 1 396 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 399:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 293              		.loc 1 399 2 view .LVU55
 294 0000 074B     		ldr	r3, .L17
 295 0002 1B68     		ldr	r3, [r3]
 296 0004 B3F57A7F 		cmp	r3, #1000
 297 0008 08D0     		beq	.L14
 399:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 298              		.loc 1 399 2 view .LVU56
 299              	.LBB35:
 300              	.LBI35:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 301              		.loc 2 191 30 view .LVU57
 302              	.LBB36:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 303              		.loc 2 193 1 view .LVU58
 304              		.loc 2 195 2 view .LVU59
 305              		.syntax unified
 306              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 307 000a 4FF05003 			mov r3, #80												
 308 000e 83F31188 		msr basepri, r3											
 309 0012 BFF36F8F 		isb														
 310 0016 BFF34F8F 		dsb														
 311              	
 312              	@ 0 "" 2
 313              	.LVL10:
 314              		.thumb
 315              		.syntax unified
 316              	.L16:
 317              		.loc 2 195 2 is_stmt 0 view .LVU60
 318              	.LBE36:
 319              	.LBE35:
 399:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 320              		.loc 1 399 2 is_stmt 1 discriminator 1 view .LVU61
 399:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 321              		.loc 1 399 2 discriminator 1 view .LVU62
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 23


 399:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 322              		.loc 1 399 2 discriminator 1 view .LVU63
 323 001a FEE7     		b	.L16
 324              	.L14:
 400:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 325              		.loc 1 400 1 is_stmt 0 view .LVU64
 326 001c 7047     		bx	lr
 327              	.L18:
 328 001e 00BF     		.align	2
 329              	.L17:
 330 0020 00000000 		.word	.LANCHOR0
 331              		.cfi_endproc
 332              	.LFE10:
 334              		.section	.text.vPortEnterCritical,"ax",%progbits
 335              		.align	1
 336              		.global	vPortEnterCritical
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 341              	vPortEnterCritical:
 342              	.LFB11:
 404:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 343              		.loc 1 404 1 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 405:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting++;
 348              		.loc 1 405 2 view .LVU66
 349              	.LBB37:
 350              	.LBI37:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 351              		.loc 2 191 30 view .LVU67
 352              	.LBB38:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 353              		.loc 2 193 1 view .LVU68
 354              		.loc 2 195 2 view .LVU69
 355              		.syntax unified
 356              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 357 0000 4FF05003 			mov r3, #80												
 358 0004 83F31188 		msr basepri, r3											
 359 0008 BFF36F8F 		isb														
 360 000c BFF34F8F 		dsb														
 361              	
 362              	@ 0 "" 2
 363              		.thumb
 364              		.syntax unified
 365              	.LBE38:
 366              	.LBE37:
 406:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 367              		.loc 1 406 2 view .LVU70
 406:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 368              		.loc 1 406 19 is_stmt 0 view .LVU71
 369 0010 0B4A     		ldr	r2, .L23
 370 0012 1368     		ldr	r3, [r2]
 371 0014 0133     		adds	r3, r3, #1
 372 0016 1360     		str	r3, [r2]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 24


 413:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 373              		.loc 1 413 2 is_stmt 1 view .LVU72
 413:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 374              		.loc 1 413 4 is_stmt 0 view .LVU73
 375 0018 012B     		cmp	r3, #1
 376 001a 00D0     		beq	.L22
 377              	.L19:
 417:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 378              		.loc 1 417 1 view .LVU74
 379 001c 7047     		bx	lr
 380              	.L22:
 415:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 381              		.loc 1 415 3 is_stmt 1 view .LVU75
 382 001e 4FF0E023 		mov	r3, #-536813568
 383 0022 D3F8043D 		ldr	r3, [r3, #3332]
 384 0026 13F0FF0F 		tst	r3, #255
 385 002a F7D0     		beq	.L19
 415:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 386              		.loc 1 415 3 view .LVU76
 387              	.LBB39:
 388              	.LBI39:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 389              		.loc 2 191 30 view .LVU77
 390              	.LBB40:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 391              		.loc 2 193 1 view .LVU78
 392              		.loc 2 195 2 view .LVU79
 393              		.syntax unified
 394              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 395 002c 4FF05003 			mov r3, #80												
 396 0030 83F31188 		msr basepri, r3											
 397 0034 BFF36F8F 		isb														
 398 0038 BFF34F8F 		dsb														
 399              	
 400              	@ 0 "" 2
 401              	.LVL11:
 402              		.thumb
 403              		.syntax unified
 404              	.L21:
 405              		.loc 2 195 2 is_stmt 0 view .LVU80
 406              	.LBE40:
 407              	.LBE39:
 415:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 408              		.loc 1 415 3 is_stmt 1 discriminator 1 view .LVU81
 415:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 409              		.loc 1 415 3 discriminator 1 view .LVU82
 415:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 410              		.loc 1 415 3 discriminator 1 view .LVU83
 411 003c FEE7     		b	.L21
 412              	.L24:
 413 003e 00BF     		.align	2
 414              	.L23:
 415 0040 00000000 		.word	.LANCHOR0
 416              		.cfi_endproc
 417              	.LFE11:
 419              		.section	.text.vPortExitCritical,"ax",%progbits
 420              		.align	1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 25


 421              		.global	vPortExitCritical
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 426              	vPortExitCritical:
 427              	.LFB12:
 421:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting );
 428              		.loc 1 421 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 422:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 433              		.loc 1 422 2 view .LVU85
 434 0000 094B     		ldr	r3, .L29
 435 0002 1B68     		ldr	r3, [r3]
 436 0004 43B9     		cbnz	r3, .L26
 422:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 437              		.loc 1 422 2 view .LVU86
 438              	.LBB41:
 439              	.LBI41:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 440              		.loc 2 191 30 view .LVU87
 441              	.LBB42:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 442              		.loc 2 193 1 view .LVU88
 443              		.loc 2 195 2 view .LVU89
 444              		.syntax unified
 445              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 446 0006 4FF05003 			mov r3, #80												
 447 000a 83F31188 		msr basepri, r3											
 448 000e BFF36F8F 		isb														
 449 0012 BFF34F8F 		dsb														
 450              	
 451              	@ 0 "" 2
 452              	.LVL12:
 453              		.thumb
 454              		.syntax unified
 455              	.L27:
 456              		.loc 2 195 2 is_stmt 0 view .LVU90
 457              	.LBE42:
 458              	.LBE41:
 422:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 459              		.loc 1 422 2 is_stmt 1 discriminator 1 view .LVU91
 422:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 460              		.loc 1 422 2 discriminator 1 view .LVU92
 422:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 461              		.loc 1 422 2 discriminator 1 view .LVU93
 462 0016 FEE7     		b	.L27
 463              	.L26:
 422:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 464              		.loc 1 422 35 discriminator 2 view .LVU94
 423:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 0 )
 465              		.loc 1 423 2 discriminator 2 view .LVU95
 423:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 0 )
 466              		.loc 1 423 19 is_stmt 0 discriminator 2 view .LVU96
 467 0018 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 26


 468 001a 034A     		ldr	r2, .L29
 469 001c 1360     		str	r3, [r2]
 424:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 470              		.loc 1 424 2 is_stmt 1 discriminator 2 view .LVU97
 424:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 471              		.loc 1 424 4 is_stmt 0 discriminator 2 view .LVU98
 472 001e 0BB9     		cbnz	r3, .L25
 426:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 473              		.loc 1 426 3 is_stmt 1 view .LVU99
 474              	.LVL13:
 475              	.LBB43:
 476              	.LBI43:
 196:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 212:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 224:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 477              		.loc 2 227 30 view .LVU100
 478              	.LBB44:
 228:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 479              		.loc 2 229 2 view .LVU101
 480              		.syntax unified
 481              	@ 229 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 482 0020 83F31188 			msr basepri, r3	
 483              	@ 0 "" 2
 484              	.LVL14:
 485              		.thumb
 486              		.syntax unified
 487              	.L25:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 27


 488              		.loc 2 229 2 is_stmt 0 view .LVU102
 489              	.LBE44:
 490              	.LBE43:
 428:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 491              		.loc 1 428 1 view .LVU103
 492 0024 7047     		bx	lr
 493              	.L30:
 494 0026 00BF     		.align	2
 495              	.L29:
 496 0028 00000000 		.word	.LANCHOR0
 497              		.cfi_endproc
 498              	.LFE12:
 500              		.section	.text.PendSV_Handler,"ax",%progbits
 501              		.align	1
 502              		.global	PendSV_Handler
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 507              	PendSV_Handler:
 508              	.LFB13:
 432:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* This is a naked function. */
 509              		.loc 1 432 1 is_stmt 1 view -0
 510              		.cfi_startproc
 511              		@ Naked Function: prologue and epilogue provided by programmer.
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 435:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	(
 514              		.loc 1 435 2 view .LVU105
 515              		.syntax unified
 516              	@ 435 "System/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 517 0000 EFF30980 			mrs r0, psp							
 518 0004 BFF36F8F 		isb									
 519              											
 520 0008 154B     		ldr	r3, pxCurrentTCBConst			
 521 000a 1A68     		ldr	r2, [r3]						
 522              											
 523 000c 1EF0100F 		tst r14, #0x10						
 524 0010 08BF     		it eq								
 525 0012 20ED108A 		vstmdbeq r0!, {s16-s31}				
 526              											
 527 0016 20E9F04F 		stmdb r0!, {r4-r11, r14}			
 528 001a 1060     		str r0, [r2]						
 529              											
 530 001c 2DE90900 		stmdb sp!, {r0, r3}					
 531 0020 4FF05000 		mov r0, #80 							
 532 0024 80F31188 		msr basepri, r0						
 533 0028 BFF34F8F 		dsb									
 534 002c BFF36F8F 		isb									
 535 0030 FFF7FEFF 		bl vTaskSwitchContext				
 536 0034 4FF00000 		mov r0, #0							
 537 0038 80F31188 		msr basepri, r0						
 538 003c 09BC     		ldmia sp!, {r0, r3}					
 539              											
 540 003e 1968     		ldr r1, [r3]						
 541 0040 0868     		ldr r0, [r1]						
 542              											
 543 0042 B0E8F04F 		ldmia r0!, {r4-r11, r14}			
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 28


 544              											
 545 0046 1EF0100F 		tst r14, #0x10						
 546 004a 08BF     		it eq								
 547 004c B0EC108A 		vldmiaeq r0!, {s16-s31}				
 548              											
 549 0050 80F30988 		msr psp, r0							
 550 0054 BFF36F8F 		isb									
 551              											
 552              											
 553 0058 7047     		bx r14								
 554              											
 555 005a 00BFAFF3 		.align 4							
 555      0080
 556 0060 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 557              	
 558              	@ 0 "" 2
 485:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 559              		.loc 1 485 1 is_stmt 0 view .LVU106
 560              		.thumb
 561              		.syntax unified
 562              		.cfi_endproc
 563              	.LFE13:
 565              		.section	.text.xPortSysTickHandler,"ax",%progbits
 566              		.align	1
 567              		.global	xPortSysTickHandler
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	xPortSysTickHandler:
 573              	.LFB14:
 489:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 574              		.loc 1 489 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578 0000 08B5     		push	{r3, lr}
 579              	.LCFI2:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 3, -8
 582              		.cfi_offset 14, -4
 494:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 583              		.loc 1 494 2 view .LVU108
 584              	.LBB45:
 585              	.LBI45:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 586              		.loc 2 191 30 view .LVU109
 587              	.LBB46:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 588              		.loc 2 193 1 view .LVU110
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 589              		.loc 2 195 2 view .LVU111
 590              		.syntax unified
 591              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 592 0002 4FF05003 			mov r3, #80												
 593 0006 83F31188 		msr basepri, r3											
 594 000a BFF36F8F 		isb														
 595 000e BFF34F8F 		dsb														
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 29


 596              	
 597              	@ 0 "" 2
 598              		.thumb
 599              		.syntax unified
 600              	.LBE46:
 601              	.LBE45:
 497:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 602              		.loc 1 497 3 view .LVU112
 497:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 603              		.loc 1 497 7 is_stmt 0 view .LVU113
 604 0012 FFF7FEFF 		bl	xTaskIncrementTick
 605              	.LVL15:
 497:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 606              		.loc 1 497 5 view .LVU114
 607 0016 28B1     		cbz	r0, .L33
 501:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 608              		.loc 1 501 4 is_stmt 1 view .LVU115
 501:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 609              		.loc 1 501 26 is_stmt 0 view .LVU116
 610 0018 4FF0E023 		mov	r3, #-536813568
 611 001c 4FF08052 		mov	r2, #268435456
 612 0020 C3F8042D 		str	r2, [r3, #3332]
 613              	.L33:
 504:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 614              		.loc 1 504 2 is_stmt 1 view .LVU117
 615              	.LVL16:
 616              	.LBB47:
 617              	.LBI47:
 227:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 618              		.loc 2 227 30 view .LVU118
 619              	.LBB48:
 620              		.loc 2 229 2 view .LVU119
 621 0024 0023     		movs	r3, #0
 622              		.syntax unified
 623              	@ 229 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 624 0026 83F31188 			msr basepri, r3	
 625              	@ 0 "" 2
 626              	.LVL17:
 627              		.loc 2 229 2 is_stmt 0 view .LVU120
 628              		.thumb
 629              		.syntax unified
 630              	.LBE48:
 631              	.LBE47:
 505:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 632              		.loc 1 505 1 view .LVU121
 633 002a 08BD     		pop	{r3, pc}
 634              		.cfi_endproc
 635              	.LFE14:
 637              		.section	.text.vPortSetupTimerInterrupt,"ax",%progbits
 638              		.align	1
 639              		.weak	vPortSetupTimerInterrupt
 640              		.syntax unified
 641              		.thumb
 642              		.thumb_func
 644              	vPortSetupTimerInterrupt:
 645              	.LFB15:
 680:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 30


 646              		.loc 1 680 1 is_stmt 1 view -0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 691:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 651              		.loc 1 691 2 view .LVU123
 691:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 652              		.loc 1 691 28 is_stmt 0 view .LVU124
 653 0000 4FF0E023 		mov	r3, #-536813568
 654 0004 0022     		movs	r2, #0
 655 0006 1A61     		str	r2, [r3, #16]
 692:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 656              		.loc 1 692 2 is_stmt 1 view .LVU125
 692:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 657              		.loc 1 692 37 is_stmt 0 view .LVU126
 658 0008 9A61     		str	r2, [r3, #24]
 695:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 659              		.loc 1 695 2 is_stmt 1 view .LVU127
 695:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 660              		.loc 1 695 28 is_stmt 0 view .LVU128
 661 000a 024A     		ldr	r2, .L36
 662 000c 5A61     		str	r2, [r3, #20]
 696:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 663              		.loc 1 696 2 is_stmt 1 view .LVU129
 696:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 664              		.loc 1 696 28 is_stmt 0 view .LVU130
 665 000e 0722     		movs	r2, #7
 666 0010 1A61     		str	r2, [r3, #16]
 697:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 667              		.loc 1 697 1 view .LVU131
 668 0012 7047     		bx	lr
 669              	.L37:
 670              		.align	2
 671              	.L36:
 672 0014 FF640400 		.word	287999
 673              		.cfi_endproc
 674              	.LFE15:
 676              		.section	.text.xPortStartScheduler,"ax",%progbits
 677              		.align	1
 678              		.global	xPortStartScheduler
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 683              	xPortStartScheduler:
 684              	.LFB9:
 288:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 685              		.loc 1 288 1 is_stmt 1 view -0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 8
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 291:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 689              		.loc 1 291 2 view .LVU133
 291:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 690              		.loc 1 291 54 view .LVU134
 296:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 691              		.loc 1 296 2 view .LVU135
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 31


 692 0000 4FF0E023 		mov	r3, #-536813568
 693 0004 D3F8002D 		ldr	r2, [r3, #3328]
 694 0008 3D4B     		ldr	r3, .L51
 695 000a 9A42     		cmp	r2, r3
 696 000c 1CD0     		beq	.L49
 296:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 697              		.loc 1 296 52 discriminator 2 view .LVU136
 297:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 698              		.loc 1 297 2 discriminator 2 view .LVU137
 699 000e 4FF0E023 		mov	r3, #-536813568
 700 0012 D3F8002D 		ldr	r2, [r3, #3328]
 701 0016 3B4B     		ldr	r3, .L51+4
 702 0018 9A42     		cmp	r2, r3
 703 001a 1ED0     		beq	.L50
 288:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 704              		.loc 1 288 1 is_stmt 0 discriminator 2 view .LVU138
 705 001c 30B5     		push	{r4, r5, lr}
 706              	.LCFI3:
 707              		.cfi_def_cfa_offset 12
 708              		.cfi_offset 4, -12
 709              		.cfi_offset 5, -8
 710              		.cfi_offset 14, -4
 711 001e 83B0     		sub	sp, sp, #12
 712              	.LCFI4:
 713              		.cfi_def_cfa_offset 24
 297:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 714              		.loc 1 297 52 is_stmt 1 discriminator 2 view .LVU139
 715              	.LBB49:
 301:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 716              		.loc 1 301 3 discriminator 2 view .LVU140
 302:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 717              		.loc 1 302 3 discriminator 2 view .LVU141
 718              	.LVL18:
 303:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 719              		.loc 1 303 3 discriminator 2 view .LVU142
 311:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 720              		.loc 1 311 3 discriminator 2 view .LVU143
 311:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 721              		.loc 1 311 24 is_stmt 0 discriminator 2 view .LVU144
 722 0020 394B     		ldr	r3, .L51+8
 723 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 724 0024 D2B2     		uxtb	r2, r2
 311:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 725              		.loc 1 311 22 discriminator 2 view .LVU145
 726 0026 0192     		str	r2, [sp, #4]
 315:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 727              		.loc 1 315 3 is_stmt 1 discriminator 2 view .LVU146
 315:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 728              		.loc 1 315 33 is_stmt 0 discriminator 2 view .LVU147
 729 0028 FF22     		movs	r2, #255
 730 002a 1A70     		strb	r2, [r3]
 318:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 731              		.loc 1 318 3 is_stmt 1 discriminator 2 view .LVU148
 318:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 732              		.loc 1 318 24 is_stmt 0 discriminator 2 view .LVU149
 733 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 734 002e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 32


 318:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 735              		.loc 1 318 22 discriminator 2 view .LVU150
 736 0030 8DF80330 		strb	r3, [sp, #3]
 321:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 737              		.loc 1 321 3 is_stmt 1 discriminator 2 view .LVU151
 321:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 738              		.loc 1 321 63 is_stmt 0 discriminator 2 view .LVU152
 739 0034 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 740 0038 03F05003 		and	r3, r3, #80
 321:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 741              		.loc 1 321 24 discriminator 2 view .LVU153
 742 003c 334A     		ldr	r2, .L51+12
 743 003e 1370     		strb	r3, [r2]
 325:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 744              		.loc 1 325 3 is_stmt 1 discriminator 2 view .LVU154
 325:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 745              		.loc 1 325 22 is_stmt 0 discriminator 2 view .LVU155
 746 0040 334B     		ldr	r3, .L51+16
 747 0042 0722     		movs	r2, #7
 748 0044 1A60     		str	r2, [r3]
 326:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 749              		.loc 1 326 3 is_stmt 1 discriminator 2 view .LVU156
 326:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 750              		.loc 1 326 8 is_stmt 0 discriminator 2 view .LVU157
 751 0046 1BE0     		b	.L43
 752              	.LVL19:
 753              	.L49:
 754              	.LCFI5:
 755              		.cfi_def_cfa_offset 0
 756              		.cfi_restore 4
 757              		.cfi_restore 5
 758              		.cfi_restore 14
 326:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 759              		.loc 1 326 8 discriminator 2 view .LVU158
 760              	.LBE49:
 296:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 761              		.loc 1 296 2 is_stmt 1 view .LVU159
 762              	.LBB52:
 763              	.LBI52:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 764              		.loc 2 191 30 view .LVU160
 765              	.LBB53:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 766              		.loc 2 193 1 view .LVU161
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 767              		.loc 2 195 2 view .LVU162
 768              		.syntax unified
 769              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 770 0048 4FF05003 			mov r3, #80												
 771 004c 83F31188 		msr basepri, r3											
 772 0050 BFF36F8F 		isb														
 773 0054 BFF34F8F 		dsb														
 774              	
 775              	@ 0 "" 2
 776              	.LVL20:
 777              		.thumb
 778              		.syntax unified
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 33


 779              	.L40:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 780              		.loc 2 195 2 is_stmt 0 view .LVU163
 781              	.LBE53:
 782              	.LBE52:
 296:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 783              		.loc 1 296 2 is_stmt 1 discriminator 2 view .LVU164
 296:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 784              		.loc 1 296 2 discriminator 2 view .LVU165
 296:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 785              		.loc 1 296 2 discriminator 2 view .LVU166
 786 0058 FEE7     		b	.L40
 787              	.L50:
 297:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 788              		.loc 1 297 2 view .LVU167
 789              	.LBB54:
 790              	.LBI54:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 791              		.loc 2 191 30 view .LVU168
 792              	.LBB55:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 793              		.loc 2 193 1 view .LVU169
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 794              		.loc 2 195 2 view .LVU170
 795              		.syntax unified
 796              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 797 005a 4FF05003 			mov r3, #80												
 798 005e 83F31188 		msr basepri, r3											
 799 0062 BFF36F8F 		isb														
 800 0066 BFF34F8F 		dsb														
 801              	
 802              	@ 0 "" 2
 803              	.LVL21:
 804              		.thumb
 805              		.syntax unified
 806              	.L42:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 807              		.loc 2 195 2 is_stmt 0 view .LVU171
 808              	.LBE55:
 809              	.LBE54:
 297:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 810              		.loc 1 297 2 is_stmt 1 discriminator 3 view .LVU172
 297:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 811              		.loc 1 297 2 discriminator 3 view .LVU173
 297:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 812              		.loc 1 297 2 discriminator 3 view .LVU174
 813 006a FEE7     		b	.L42
 814              	.LVL22:
 815              	.L44:
 816              	.LCFI6:
 817              		.cfi_def_cfa_offset 24
 818              		.cfi_offset 4, -12
 819              		.cfi_offset 5, -8
 820              		.cfi_offset 14, -4
 821              	.LBB56:
 328:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 822              		.loc 1 328 4 view .LVU175
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 34


 328:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 823              		.loc 1 328 22 is_stmt 0 view .LVU176
 824 006c 284A     		ldr	r2, .L51+16
 825 006e 1368     		ldr	r3, [r2]
 826 0070 013B     		subs	r3, r3, #1
 827 0072 1360     		str	r3, [r2]
 329:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 828              		.loc 1 329 4 is_stmt 1 view .LVU177
 329:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 829              		.loc 1 329 23 is_stmt 0 view .LVU178
 830 0074 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 831 0078 5B00     		lsls	r3, r3, #1
 832 007a DBB2     		uxtb	r3, r3
 833 007c 8DF80330 		strb	r3, [sp, #3]
 834              	.L43:
 326:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 835              		.loc 1 326 8 is_stmt 1 view .LVU179
 326:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 836              		.loc 1 326 31 is_stmt 0 view .LVU180
 837 0080 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 326:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 838              		.loc 1 326 8 view .LVU181
 839 0084 13F0800F 		tst	r3, #128
 840 0088 F0D1     		bne	.L44
 346:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 841              		.loc 1 346 4 is_stmt 1 view .LVU182
 842 008a 214B     		ldr	r3, .L51+16
 843 008c 1B68     		ldr	r3, [r3]
 844 008e 032B     		cmp	r3, #3
 845 0090 08D0     		beq	.L45
 346:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 846              		.loc 1 346 4 view .LVU183
 847              	.LBB50:
 848              	.LBI50:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 849              		.loc 2 191 30 view .LVU184
 850              	.LBB51:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 851              		.loc 2 193 1 view .LVU185
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 852              		.loc 2 195 2 view .LVU186
 853              		.syntax unified
 854              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 855 0092 4FF05003 			mov r3, #80												
 856 0096 83F31188 		msr basepri, r3											
 857 009a BFF36F8F 		isb														
 858 009e BFF34F8F 		dsb														
 859              	
 860              	@ 0 "" 2
 861              	.LVL23:
 862              		.thumb
 863              		.syntax unified
 864              	.L46:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 865              		.loc 2 195 2 is_stmt 0 view .LVU187
 866              	.LBE51:
 867              	.LBE50:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 35


 346:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 868              		.loc 1 346 4 is_stmt 1 discriminator 4 view .LVU188
 346:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 869              		.loc 1 346 4 discriminator 4 view .LVU189
 346:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 870              		.loc 1 346 4 discriminator 4 view .LVU190
 871 00a2 FEE7     		b	.L46
 872              	.L45:
 346:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 873              		.loc 1 346 85 discriminator 2 view .LVU191
 352:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 874              		.loc 1 352 3 discriminator 2 view .LVU192
 352:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 875              		.loc 1 352 22 is_stmt 0 discriminator 2 view .LVU193
 876 00a4 1B02     		lsls	r3, r3, #8
 877 00a6 1A4A     		ldr	r2, .L51+16
 878 00a8 1360     		str	r3, [r2]
 353:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 879              		.loc 1 353 3 is_stmt 1 discriminator 2 view .LVU194
 353:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 880              		.loc 1 353 22 is_stmt 0 discriminator 2 view .LVU195
 881 00aa 03F4E063 		and	r3, r3, #1792
 882 00ae 1360     		str	r3, [r2]
 357:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 883              		.loc 1 357 3 is_stmt 1 discriminator 2 view .LVU196
 357:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 884              		.loc 1 357 33 is_stmt 0 discriminator 2 view .LVU197
 885 00b0 019B     		ldr	r3, [sp, #4]
 886 00b2 DBB2     		uxtb	r3, r3
 887 00b4 144A     		ldr	r2, .L51+8
 888 00b6 1370     		strb	r3, [r2]
 889              	.LBE56:
 362:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 890              		.loc 1 362 2 is_stmt 1 discriminator 2 view .LVU198
 362:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 891              		.loc 1 362 23 is_stmt 0 discriminator 2 view .LVU199
 892 00b8 4FF0E024 		mov	r4, #-536813568
 893 00bc D4F8203D 		ldr	r3, [r4, #3360]
 894 00c0 43F47003 		orr	r3, r3, #15728640
 895 00c4 C4F8203D 		str	r3, [r4, #3360]
 363:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 896              		.loc 1 363 2 is_stmt 1 discriminator 2 view .LVU200
 363:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 897              		.loc 1 363 23 is_stmt 0 discriminator 2 view .LVU201
 898 00c8 D4F8203D 		ldr	r3, [r4, #3360]
 899 00cc 43F07043 		orr	r3, r3, #-268435456
 900 00d0 C4F8203D 		str	r3, [r4, #3360]
 367:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 901              		.loc 1 367 2 is_stmt 1 discriminator 2 view .LVU202
 902 00d4 FFF7FEFF 		bl	vPortSetupTimerInterrupt
 903              	.LVL24:
 370:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 904              		.loc 1 370 2 discriminator 2 view .LVU203
 370:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 905              		.loc 1 370 20 is_stmt 0 discriminator 2 view .LVU204
 906 00d8 0025     		movs	r5, #0
 907 00da 0E4B     		ldr	r3, .L51+20
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 36


 908 00dc 1D60     		str	r5, [r3]
 373:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 909              		.loc 1 373 2 is_stmt 1 discriminator 2 view .LVU205
 910 00de FFF7FEFF 		bl	vPortEnableVFP
 911              	.LVL25:
 376:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 912              		.loc 1 376 2 discriminator 2 view .LVU206
 376:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 913              		.loc 1 376 17 is_stmt 0 discriminator 2 view .LVU207
 914 00e2 D4F8343F 		ldr	r3, [r4, #3892]
 915 00e6 43F04043 		orr	r3, r3, #-1073741824
 916 00ea C4F8343F 		str	r3, [r4, #3892]
 379:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 917              		.loc 1 379 2 is_stmt 1 discriminator 2 view .LVU208
 918 00ee FFF7FEFF 		bl	prvPortStartFirstTask
 919              	.LVL26:
 387:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	prvTaskExitError();
 920              		.loc 1 387 2 discriminator 2 view .LVU209
 921 00f2 FFF7FEFF 		bl	vTaskSwitchContext
 922              	.LVL27:
 388:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 923              		.loc 1 388 2 discriminator 2 view .LVU210
 924 00f6 FFF7FEFF 		bl	prvTaskExitError
 925              	.LVL28:
 391:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 926              		.loc 1 391 2 discriminator 2 view .LVU211
 392:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 927              		.loc 1 392 1 is_stmt 0 discriminator 2 view .LVU212
 928 00fa 2846     		mov	r0, r5
 929 00fc 03B0     		add	sp, sp, #12
 930              	.LCFI7:
 931              		.cfi_def_cfa_offset 12
 932              		@ sp needed
 933 00fe 30BD     		pop	{r4, r5, pc}
 934              	.L52:
 935              		.align	2
 936              	.L51:
 937 0100 71C20F41 		.word	1091551857
 938 0104 70C20F41 		.word	1091551856
 939 0108 00E400E0 		.word	-536812544
 940 010c 00000000 		.word	.LANCHOR1
 941 0110 00000000 		.word	.LANCHOR2
 942 0114 00000000 		.word	.LANCHOR0
 943              		.cfi_endproc
 944              	.LFE9:
 946              		.section	.text.vPortValidateInterruptPriority,"ax",%progbits
 947              		.align	1
 948              		.global	vPortValidateInterruptPriority
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 953              	vPortValidateInterruptPriority:
 954              	.LFB17:
 713:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 714:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 715:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if( configASSERT_DEFINED == 1 )
 716:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 37


 717:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	void vPortValidateInterruptPriority( void )
 718:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	{
 955              		.loc 1 718 2 is_stmt 1 view -0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959              		@ link register save eliminated.
 719:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uint32_t ulCurrentInterrupt;
 960              		.loc 1 719 2 view .LVU214
 720:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	uint8_t ucCurrentPriority;
 961              		.loc 1 720 2 view .LVU215
 721:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 722:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Obtain the number of the currently executing interrupt. */
 723:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 962              		.loc 1 723 3 view .LVU216
 963              		.syntax unified
 964              	@ 723 "System/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 965 0000 EFF30583 		mrs r3, ipsr
 966              	@ 0 "" 2
 967              	.LVL29:
 724:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 725:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Is the interrupt number a user defined interrupt? */
 726:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 968              		.loc 1 726 3 view .LVU217
 969              		.loc 1 726 5 is_stmt 0 view .LVU218
 970              		.thumb
 971              		.syntax unified
 972 0004 0F2B     		cmp	r3, #15
 973 0006 0FD9     		bls	.L54
 727:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		{
 728:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* Look up the interrupt's priority. */
 729:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 974              		.loc 1 729 4 is_stmt 1 view .LVU219
 975              		.loc 1 729 52 is_stmt 0 view .LVU220
 976 0008 114A     		ldr	r2, .L58
 977              		.loc 1 729 22 view .LVU221
 978 000a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 979              	.LVL30:
 980              		.loc 1 729 22 view .LVU222
 981 000c DBB2     		uxtb	r3, r3
 982              	.LVL31:
 730:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 731:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			/* The following assertion will fail if a service routine (ISR) for
 732:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			an interrupt that has been assigned a priority above
 733:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY calls an ISR safe FreeRTOS API
 734:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			function.  ISR safe FreeRTOS API functions must *only* be called
 735:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			from interrupts that have been assigned a priority at or below
 736:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 737:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 738:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			Numerically low interrupt priority numbers represent logically high
 739:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			interrupt priorities, therefore the priority of the interrupt must
 740:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			be set to a value equal to or numerically *higher* than
 741:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 742:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 743:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			Interrupts that	use the FreeRTOS API must not be left at their
 744:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			default priority of	zero as that is the highest possible priority,
 745:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			which is guaranteed to be above configMAX_SYSCALL_INTERRUPT_PRIORITY,
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 38


 746:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			and	therefore also guaranteed to be invalid.
 747:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 748:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			FreeRTOS maintains separate thread and ISR API functions to ensure
 749:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			interrupt entry is as fast and simple as possible.
 750:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 751:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			The following links provide detailed information:
 752:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			http://www.freertos.org/RTOS-Cortex-M3-M4.html
 753:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			http://www.freertos.org/FAQHelp.html */
 754:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 983              		.loc 1 754 4 is_stmt 1 view .LVU223
 984 000e 114A     		ldr	r2, .L58+4
 985 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 986 0012 9A42     		cmp	r2, r3
 987 0014 08D9     		bls	.L54
 988              		.loc 1 754 4 view .LVU224
 989              	.LBB57:
 990              	.LBI57:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 991              		.loc 2 191 30 view .LVU225
 992              	.LBB58:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 993              		.loc 2 193 1 view .LVU226
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 994              		.loc 2 195 2 view .LVU227
 995              		.syntax unified
 996              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 997 0016 4FF05003 			mov r3, #80												
 998 001a 83F31188 		msr basepri, r3											
 999 001e BFF36F8F 		isb														
 1000 0022 BFF34F8F 		dsb														
 1001              	
 1002              	@ 0 "" 2
 1003              	.LVL32:
 1004              		.thumb
 1005              		.syntax unified
 1006              	.L55:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1007              		.loc 2 195 2 is_stmt 0 view .LVU228
 1008              	.LBE58:
 1009              	.LBE57:
 1010              		.loc 1 754 4 is_stmt 1 discriminator 1 view .LVU229
 1011              		.loc 1 754 4 discriminator 1 view .LVU230
 1012              		.loc 1 754 4 discriminator 1 view .LVU231
 1013 0026 FEE7     		b	.L55
 1014              	.L54:
 1015              		.loc 1 754 61 discriminator 2 view .LVU232
 755:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		}
 756:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 757:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		/* Priority grouping:  The interrupt controller (NVIC) allows the bits
 758:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		that define each interrupt's priority to be split between bits that
 759:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		define the interrupt's pre-emption priority bits and bits that define
 760:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		the interrupt's sub-priority.  For simplicity all bits must be defined
 761:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		to be pre-emption priority bits.  The following assertion will fail if
 762:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		this is not the case (if some bits represent a sub-priority).
 763:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 764:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		If the application only uses CMSIS libraries for interrupt
 765:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		configuration then the correct setting can be achieved on all Cortex-M
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 39


 766:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
 767:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		scheduler.  Note however that some vendor specific peripheral libraries
 768:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		assume a non-zero priority group setting, in which cases using a value
 769:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		of zero will result in unpredictable behaviour. */
 770:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 1016              		.loc 1 770 3 discriminator 2 view .LVU233
 1017 0028 4FF0E023 		mov	r3, #-536813568
 1018 002c D3F80C3D 		ldr	r3, [r3, #3340]
 1019 0030 03F4E063 		and	r3, r3, #1792
 1020 0034 084A     		ldr	r2, .L58+8
 1021 0036 1268     		ldr	r2, [r2]
 1022 0038 9342     		cmp	r3, r2
 1023 003a 08D9     		bls	.L53
 1024              		.loc 1 770 3 view .LVU234
 1025              	.LBB59:
 1026              	.LBI59:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1027              		.loc 2 191 30 view .LVU235
 1028              	.LBB60:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1029              		.loc 2 193 1 view .LVU236
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1030              		.loc 2 195 2 view .LVU237
 1031              		.syntax unified
 1032              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1033 003c 4FF05003 			mov r3, #80												
 1034 0040 83F31188 		msr basepri, r3											
 1035 0044 BFF36F8F 		isb														
 1036 0048 BFF34F8F 		dsb														
 1037              	
 1038              	@ 0 "" 2
 1039              	.LVL33:
 1040              		.thumb
 1041              		.syntax unified
 1042              	.L57:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1043              		.loc 2 195 2 is_stmt 0 view .LVU238
 1044              	.LBE60:
 1045              	.LBE59:
 1046              		.loc 1 770 3 is_stmt 1 discriminator 2 view .LVU239
 1047              		.loc 1 770 3 discriminator 2 view .LVU240
 1048              		.loc 1 770 3 discriminator 2 view .LVU241
 1049 004c FEE7     		b	.L57
 1050              	.L53:
 771:System/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 	}
 1051              		.loc 1 771 2 is_stmt 0 view .LVU242
 1052 004e 7047     		bx	lr
 1053              	.L59:
 1054              		.align	2
 1055              	.L58:
 1056 0050 F0E300E0 		.word	-536812560
 1057 0054 00000000 		.word	.LANCHOR1
 1058 0058 00000000 		.word	.LANCHOR2
 1059              		.cfi_endproc
 1060              	.LFE17:
 1062              		.section	.bss.ucMaxSysCallPriority,"aw",%nobits
 1063              		.set	.LANCHOR1,. + 0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 40


 1066              	ucMaxSysCallPriority:
 1067 0000 00       		.space	1
 1068              		.section	.bss.ulMaxPRIGROUPValue,"aw",%nobits
 1069              		.align	2
 1070              		.set	.LANCHOR2,. + 0
 1073              	ulMaxPRIGROUPValue:
 1074 0000 00000000 		.space	4
 1075              		.section	.data.uxCriticalNesting,"aw"
 1076              		.align	2
 1077              		.set	.LANCHOR0,. + 0
 1080              	uxCriticalNesting:
 1081 0000 AAAAAAAA 		.word	-1431655766
 1082              		.text
 1083              	.Letext0:
 1084              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1085              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1086              		.file 5 "System/FreeRTOS/include/projdefs.h"
 1087              		.file 6 "System/FreeRTOS/FreeRTOSConfig.h"
 1088              		.file 7 "System/FreeRTOS/include/task.h"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s 			page 41


DEFINED SYMBOLS
                            *ABS*:00000000 port.c
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:20     .text.prvTaskExitError:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:25     .text.prvTaskExitError:00000000 prvTaskExitError
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:112    .text.prvTaskExitError:0000003c $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:117    .text.prvPortStartFirstTask:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:122    .text.prvPortStartFirstTask:00000000 prvPortStartFirstTask
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:153    .text.vPortEnableVFP:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:158    .text.vPortEnableVFP:00000000 vPortEnableVFP
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:182    .text.pxPortInitialiseStack:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:188    .text.pxPortInitialiseStack:00000000 pxPortInitialiseStack
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:238    .text.pxPortInitialiseStack:00000028 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:243    .text.SVC_Handler:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:249    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:270    .text.SVC_Handler:00000020 pxCurrentTCBConst2
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:270    .text.SVC_Handler:00000020 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:280    .text.vPortEndScheduler:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:286    .text.vPortEndScheduler:00000000 vPortEndScheduler
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:330    .text.vPortEndScheduler:00000020 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:335    .text.vPortEnterCritical:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:341    .text.vPortEnterCritical:00000000 vPortEnterCritical
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:415    .text.vPortEnterCritical:00000040 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:420    .text.vPortExitCritical:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:426    .text.vPortExitCritical:00000000 vPortExitCritical
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:496    .text.vPortExitCritical:00000028 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:501    .text.PendSV_Handler:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:507    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:556    .text.PendSV_Handler:00000060 pxCurrentTCBConst
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:556    .text.PendSV_Handler:00000060 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:566    .text.xPortSysTickHandler:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:572    .text.xPortSysTickHandler:00000000 xPortSysTickHandler
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:638    .text.vPortSetupTimerInterrupt:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:644    .text.vPortSetupTimerInterrupt:00000000 vPortSetupTimerInterrupt
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:672    .text.vPortSetupTimerInterrupt:00000014 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:677    .text.xPortStartScheduler:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:683    .text.xPortStartScheduler:00000000 xPortStartScheduler
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:937    .text.xPortStartScheduler:00000100 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:947    .text.vPortValidateInterruptPriority:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:953    .text.vPortValidateInterruptPriority:00000000 vPortValidateInterruptPriority
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:1056   .text.vPortValidateInterruptPriority:00000050 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:1066   .bss.ucMaxSysCallPriority:00000000 ucMaxSysCallPriority
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:1067   .bss.ucMaxSysCallPriority:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:1069   .bss.ulMaxPRIGROUPValue:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:1073   .bss.ulMaxPRIGROUPValue:00000000 ulMaxPRIGROUPValue
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:1076   .data.uxCriticalNesting:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:1080   .data.uxCriticalNesting:00000000 uxCriticalNesting
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:181    .text.vPortEnableVFP:0000000e $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:2790   .text.vPortEnableVFP:00000010 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:152    .text.prvPortStartFirstTask:00000022 $d
C:\Users\8bit\AppData\Local\Temp\ccXbNJKg.s:2790   .text.prvPortStartFirstTask:00000024 $d

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
