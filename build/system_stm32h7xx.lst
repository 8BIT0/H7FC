ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system_stm32h7xx.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemInit,"ax",%progbits
  17              		.align	1
  18              		.global	SystemInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	SystemInit:
  26              	.LFB144:
  27              		.file 1 "HAL_Lib/Core/Src/system_stm32h7xx.c"
   1:HAL_Lib/Core/Src/system_stm32h7xx.c **** /**
   2:HAL_Lib/Core/Src/system_stm32h7xx.c ****  ******************************************************************************
   3:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @file    system_stm32h7xx.c
   4:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @author  MCD Application Team
   5:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
   7:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *   This file provides two functions and one global variable to be called from
   8:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *   user application:
   9:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *      - SystemInit(): This function is called at startup just after reset and
  10:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *                      before branch to main program. This call is made inside
  11:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *                      the "startup_stm32h7xx.s" file.
  12:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
  13:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *                                  by the user application to setup the SysTick
  15:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *                                  timer or configure other parameters.
  16:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
  17:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *                                 be called whenever the core clock is changed
  19:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *                                 during program execution.
  20:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
  21:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
  22:HAL_Lib/Core/Src/system_stm32h7xx.c ****  ******************************************************************************
  23:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @attention
  24:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
  25:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * Copyright (c) 2017 STMicroelectronics.
  26:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * All rights reserved.
  27:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
  28:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * This software is licensed under terms that can be found in the LICENSE file
  29:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * in the root directory of this software component.
  30:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  31:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 2


  32:HAL_Lib/Core/Src/system_stm32h7xx.c ****  ******************************************************************************
  33:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
  34:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  35:HAL_Lib/Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  36:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @{
  37:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
  38:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  39:HAL_Lib/Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  40:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @{
  41:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
  42:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  43:HAL_Lib/Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  44:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @{
  45:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
  46:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  47:HAL_Lib/Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  48:HAL_Lib/Core/Src/system_stm32h7xx.c **** #include <math.h>
  49:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if !defined(HSE_VALUE)
  50:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define HSE_VALUE ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  51:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif                                 /* HSE_VALUE */
  52:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  53:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if !defined(CSI_VALUE)
  54:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define CSI_VALUE ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  55:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif                                /* CSI_VALUE */
  56:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  57:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if !defined(HSI_VALUE)
  58:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define HSI_VALUE ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  59:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif                                 /* HSI_VALUE */
  60:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  61:HAL_Lib/Core/Src/system_stm32h7xx.c **** /**
  62:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @}
  63:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
  64:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  65:HAL_Lib/Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  66:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @{
  67:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
  68:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  69:HAL_Lib/Core/Src/system_stm32h7xx.c **** /**
  70:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @}
  71:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
  72:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  73:HAL_Lib/Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  74:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @{
  75:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
  76:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  77:HAL_Lib/Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  78:HAL_Lib/Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  79:HAL_Lib/Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  80:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  81:HAL_Lib/Core/Src/system_stm32h7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  82:HAL_Lib/Core/Src/system_stm32h7xx.c ****          configuration. */
  83:HAL_Lib/Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  84:HAL_Lib/Core/Src/system_stm32h7xx.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  85:HAL_Lib/Core/Src/system_stm32h7xx.c ****      remap of boot address selected */
  86:HAL_Lib/Core/Src/system_stm32h7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  87:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
  88:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 3


  89:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
  90:HAL_Lib/Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  91:HAL_Lib/Core/Src/system_stm32h7xx.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  92:HAL_Lib/Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  93:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
  94:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS D2_AXISRAM_BASE /*!< Vector Table base address field. \
  95:HAL_Lib/Core/Src/system_stm32h7xx.c ****                                                    This value must be a multiple of 0x200. */
  96:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET 0x00000000U           /*!< Vector Table base offset field. \
  97:HAL_Lib/Core/Src/system_stm32h7xx.c ****                                                    This value must be a multiple of 0x200. */
  98:HAL_Lib/Core/Src/system_stm32h7xx.c **** #else
  99:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS FLASH_BANK2_BASE /*!< Vector Table base address field. \
 100:HAL_Lib/Core/Src/system_stm32h7xx.c ****                                                     This value must be a multiple of 0x200. */
 101:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET 0x00000000U            /*!< Vector Table base offset field. \
 102:HAL_Lib/Core/Src/system_stm32h7xx.c ****                                                     This value must be a multiple of 0x200. */
 103:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif                                         /* VECT_TAB_SRAM */
 104:HAL_Lib/Core/Src/system_stm32h7xx.c **** #else
 105:HAL_Lib/Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 106:HAL_Lib/Core/Src/system_stm32h7xx.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 107:HAL_Lib/Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 108:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 109:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS D1_AXISRAM_BASE /*!< Vector Table base address field. \
 110:HAL_Lib/Core/Src/system_stm32h7xx.c ****                                                    This value must be a multiple of 0x200. */
 111:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET 0x00000000U           /*!< Vector Table base offset field. \
 112:HAL_Lib/Core/Src/system_stm32h7xx.c ****                                                    This value must be a multiple of 0x200. */
 113:HAL_Lib/Core/Src/system_stm32h7xx.c **** #else
 114:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS FLASH_BANK1_BASE /*!< Vector Table base address field. \
 115:HAL_Lib/Core/Src/system_stm32h7xx.c ****                                                     This value must be a multiple of 0x200. */
 116:HAL_Lib/Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET 0x00000000U            /*!< Vector Table base offset field. \
 117:HAL_Lib/Core/Src/system_stm32h7xx.c ****                                                     This value must be a multiple of 0x200. */
 118:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif                                         /* VECT_TAB_SRAM */
 119:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif                                         /* DUAL_CORE && CORE_CM4 */
 120:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif                                         /* USER_VECT_TAB_ADDRESS */
 121:HAL_Lib/Core/Src/system_stm32h7xx.c ****                                                /***************************************************
 122:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 123:HAL_Lib/Core/Src/system_stm32h7xx.c **** /**
 124:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @}
 125:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 126:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 127:HAL_Lib/Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 128:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @{
 129:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 130:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 131:HAL_Lib/Core/Src/system_stm32h7xx.c **** /**
 132:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @}
 133:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 134:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 135:HAL_Lib/Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 136:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @{
 137:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 138:HAL_Lib/Core/Src/system_stm32h7xx.c **** /* This variable is updated in three ways:
 139:HAL_Lib/Core/Src/system_stm32h7xx.c ****     1) by calling CMSIS function SystemCoreClockUpdate()
 140:HAL_Lib/Core/Src/system_stm32h7xx.c ****     2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 141:HAL_Lib/Core/Src/system_stm32h7xx.c ****     3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 142:HAL_Lib/Core/Src/system_stm32h7xx.c ****        Note: If you use this function to configure the system clock; then there
 143:HAL_Lib/Core/Src/system_stm32h7xx.c ****              is no need to call the 2 first functions listed above, since SystemCoreClock
 144:HAL_Lib/Core/Src/system_stm32h7xx.c ****              variable is updated automatically.
 145:HAL_Lib/Core/Src/system_stm32h7xx.c **** */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 4


 146:HAL_Lib/Core/Src/system_stm32h7xx.c **** uint32_t SystemCoreClock = 64000000;
 147:HAL_Lib/Core/Src/system_stm32h7xx.c **** uint32_t SystemD2Clock = 64000000;
 148:HAL_Lib/Core/Src/system_stm32h7xx.c **** const uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 149:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 150:HAL_Lib/Core/Src/system_stm32h7xx.c **** /**
 151:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @}
 152:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 153:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 154:HAL_Lib/Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 155:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @{
 156:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 157:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 158:HAL_Lib/Core/Src/system_stm32h7xx.c **** /**
 159:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @}
 160:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 161:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 162:HAL_Lib/Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 163:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @{
 164:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 165:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 166:HAL_Lib/Core/Src/system_stm32h7xx.c **** /**
 167:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @brief  Setup the microcontroller system
 168:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         Initialize the FPU setting and  vector table location
 169:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         configuration.
 170:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @param  None
 171:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @retval None
 172:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 173:HAL_Lib/Core/Src/system_stm32h7xx.c **** void SystemInit(void)
 174:HAL_Lib/Core/Src/system_stm32h7xx.c **** {
  28              		.loc 1 174 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 175:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(DATA_IN_D2_SRAM)
 176:HAL_Lib/Core/Src/system_stm32h7xx.c ****   __IO uint32_t tmpreg;
 177:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 178:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 179:HAL_Lib/Core/Src/system_stm32h7xx.c **** /* FPU settings ------------------------------------------------------------*/
 180:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 181:HAL_Lib/Core/Src/system_stm32h7xx.c ****   SCB->CPACR |= ((3UL << (10 * 2)) | (3UL << (11 * 2))); /* set CP10 and CP11 Full Access */
  33              		.loc 1 181 3 view .LVU1
  34              		.loc 1 181 14 is_stmt 0 view .LVU2
  35 0000 274A     		ldr	r2, .L5
  36 0002 D2F88830 		ldr	r3, [r2, #136]
  37 0006 43F47003 		orr	r3, r3, #15728640
  38 000a C2F88830 		str	r3, [r2, #136]
 182:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif
 183:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 184:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 185:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Increasing the CPU frequency */
 186:HAL_Lib/Core/Src/system_stm32h7xx.c ****   if (FLASH_LATENCY_DEFAULT > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  39              		.loc 1 186 3 is_stmt 1 view .LVU3
  40              		.loc 1 186 32 is_stmt 0 view .LVU4
  41 000e 254B     		ldr	r3, .L5+4
  42 0010 1B68     		ldr	r3, [r3]
  43 0012 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 5


  44              		.loc 1 186 6 view .LVU5
  45 0016 062B     		cmp	r3, #6
  46 0018 06D8     		bhi	.L2
 187:HAL_Lib/Core/Src/system_stm32h7xx.c ****   {
 188:HAL_Lib/Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 189:HAL_Lib/Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  47              		.loc 1 189 5 is_stmt 1 view .LVU6
  48 001a 224A     		ldr	r2, .L5+4
  49 001c 1368     		ldr	r3, [r2]
  50 001e 23F00F03 		bic	r3, r3, #15
  51 0022 43F00703 		orr	r3, r3, #7
  52 0026 1360     		str	r3, [r2]
  53              	.L2:
 190:HAL_Lib/Core/Src/system_stm32h7xx.c ****   }
 191:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 192:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 193:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  54              		.loc 1 193 3 view .LVU7
  55              		.loc 1 193 11 is_stmt 0 view .LVU8
  56 0028 1F4B     		ldr	r3, .L5+8
  57 002a 1A68     		ldr	r2, [r3]
  58 002c 42F00102 		orr	r2, r2, #1
  59 0030 1A60     		str	r2, [r3]
 194:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 195:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 196:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  60              		.loc 1 196 3 is_stmt 1 view .LVU9
  61              		.loc 1 196 13 is_stmt 0 view .LVU10
  62 0032 0022     		movs	r2, #0
  63 0034 1A61     		str	r2, [r3, #16]
 197:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 198:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 199:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  64              		.loc 1 199 3 is_stmt 1 view .LVU11
  65              		.loc 1 199 11 is_stmt 0 view .LVU12
  66 0036 1968     		ldr	r1, [r3]
  67 0038 1C4A     		ldr	r2, .L5+12
  68 003a 0A40     		ands	r2, r2, r1
  69 003c 1A60     		str	r2, [r3]
 200:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 201:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 202:HAL_Lib/Core/Src/system_stm32h7xx.c ****   if (FLASH_LATENCY_DEFAULT < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  70              		.loc 1 202 3 is_stmt 1 view .LVU13
  71              		.loc 1 202 32 is_stmt 0 view .LVU14
  72 003e 194B     		ldr	r3, .L5+4
  73 0040 1B68     		ldr	r3, [r3]
  74              		.loc 1 202 6 view .LVU15
  75 0042 13F0080F 		tst	r3, #8
  76 0046 06D0     		beq	.L3
 203:HAL_Lib/Core/Src/system_stm32h7xx.c ****   {
 204:HAL_Lib/Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 205:HAL_Lib/Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  77              		.loc 1 205 5 is_stmt 1 view .LVU16
  78 0048 164A     		ldr	r2, .L5+4
  79 004a 1368     		ldr	r3, [r2]
  80 004c 23F00F03 		bic	r3, r3, #15
  81 0050 43F00703 		orr	r3, r3, #7
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 6


  82 0054 1360     		str	r3, [r2]
  83              	.L3:
 206:HAL_Lib/Core/Src/system_stm32h7xx.c ****   }
 207:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 208:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 209:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 210:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
  84              		.loc 1 210 3 view .LVU17
  85              		.loc 1 210 15 is_stmt 0 view .LVU18
  86 0056 144B     		ldr	r3, .L5+8
  87 0058 0022     		movs	r2, #0
  88 005a 9A61     		str	r2, [r3, #24]
 211:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 212:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 213:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
  89              		.loc 1 213 3 is_stmt 1 view .LVU19
  90              		.loc 1 213 15 is_stmt 0 view .LVU20
  91 005c DA61     		str	r2, [r3, #28]
 214:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 215:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 216:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
  92              		.loc 1 216 3 is_stmt 1 view .LVU21
  93              		.loc 1 216 15 is_stmt 0 view .LVU22
  94 005e 1A62     		str	r2, [r3, #32]
 217:HAL_Lib/Core/Src/system_stm32h7xx.c **** #else
 218:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 219:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 220:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 221:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 222:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 223:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 224:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 225:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 226:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif
 227:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 228:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
  95              		.loc 1 228 3 is_stmt 1 view .LVU23
  96              		.loc 1 228 18 is_stmt 0 view .LVU24
  97 0060 1349     		ldr	r1, .L5+16
  98 0062 9962     		str	r1, [r3, #40]
 229:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 230:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 231:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
  99              		.loc 1 231 3 is_stmt 1 view .LVU25
 100              		.loc 1 231 16 is_stmt 0 view .LVU26
 101 0064 1349     		ldr	r1, .L5+20
 102 0066 D962     		str	r1, [r3, #44]
 232:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 233:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
 103              		.loc 1 233 3 is_stmt 1 view .LVU27
 104              		.loc 1 233 17 is_stmt 0 view .LVU28
 105 0068 1349     		ldr	r1, .L5+24
 106 006a 1963     		str	r1, [r3, #48]
 234:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 235:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
 107              		.loc 1 235 3 is_stmt 1 view .LVU29
 108              		.loc 1 235 18 is_stmt 0 view .LVU30
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 7


 109 006c 5A63     		str	r2, [r3, #52]
 236:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 237:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 238:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 110              		.loc 1 238 3 is_stmt 1 view .LVU31
 111              		.loc 1 238 17 is_stmt 0 view .LVU32
 112 006e 9963     		str	r1, [r3, #56]
 239:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 240:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 241:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 242:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
 113              		.loc 1 242 3 is_stmt 1 view .LVU33
 114              		.loc 1 242 18 is_stmt 0 view .LVU34
 115 0070 DA63     		str	r2, [r3, #60]
 243:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 244:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 116              		.loc 1 244 3 is_stmt 1 view .LVU35
 117              		.loc 1 244 17 is_stmt 0 view .LVU36
 118 0072 1964     		str	r1, [r3, #64]
 245:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 246:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 247:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 119              		.loc 1 247 3 is_stmt 1 view .LVU37
 120              		.loc 1 247 18 is_stmt 0 view .LVU38
 121 0074 5A64     		str	r2, [r3, #68]
 248:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 249:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 250:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 122              		.loc 1 250 3 is_stmt 1 view .LVU39
 123              		.loc 1 250 11 is_stmt 0 view .LVU40
 124 0076 1968     		ldr	r1, [r3]
 125 0078 21F48021 		bic	r1, r1, #262144
 126 007c 1960     		str	r1, [r3]
 251:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 252:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 253:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 127              		.loc 1 253 3 is_stmt 1 view .LVU41
 128              		.loc 1 253 13 is_stmt 0 view .LVU42
 129 007e 1A66     		str	r2, [r3, #96]
 254:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 255:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 256:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 257:HAL_Lib/Core/Src/system_stm32h7xx.c ****   if ((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 130              		.loc 1 257 3 is_stmt 1 view .LVU43
 131              		.loc 1 257 14 is_stmt 0 view .LVU44
 132 0080 0E4B     		ldr	r3, .L5+28
 133 0082 1A68     		ldr	r2, [r3]
 134              		.loc 1 257 23 view .LVU45
 135 0084 0E4B     		ldr	r3, .L5+32
 136 0086 1340     		ands	r3, r3, r2
 137              		.loc 1 257 6 view .LVU46
 138 0088 B3F1005F 		cmp	r3, #536870912
 139 008c 03D2     		bcs	.L4
 258:HAL_Lib/Core/Src/system_stm32h7xx.c ****   {
 259:HAL_Lib/Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 260:HAL_Lib/Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 261:HAL_Lib/Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t *)0x51008108) = 0x000000001U;
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 8


 140              		.loc 1 261 5 is_stmt 1 view .LVU47
 141              		.loc 1 261 36 is_stmt 0 view .LVU48
 142 008e 0D4B     		ldr	r3, .L5+36
 143 0090 0122     		movs	r2, #1
 144 0092 C3F80821 		str	r2, [r3, #264]
 145              	.L4:
 262:HAL_Lib/Core/Src/system_stm32h7xx.c ****   }
 263:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif
 264:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 265:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(DATA_IN_D2_SRAM)
 266:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM) , enable the D2 SRAM clock (AHB SRAM clock) 
 267:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 268:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 269:HAL_Lib/Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 270:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 271:HAL_Lib/Core/Src/system_stm32h7xx.c **** #else
 272:HAL_Lib/Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 273:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 274:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 275:HAL_Lib/Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 276:HAL_Lib/Core/Src/system_stm32h7xx.c ****   (void)tmpreg;
 277:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 278:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 279:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 280:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 281:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 282:HAL_Lib/Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 283:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif                                                 /* USER_VECT_TAB_ADDRESS */
 284:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 285:HAL_Lib/Core/Src/system_stm32h7xx.c **** #else
 286:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 287:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /*
 288:HAL_Lib/Core/Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 289:HAL_Lib/Core/Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 290:HAL_Lib/Core/Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 291:HAL_Lib/Core/Src/system_stm32h7xx.c ****    */
 292:HAL_Lib/Core/Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 146              		.loc 1 292 3 is_stmt 1 view .LVU49
 147              		.loc 1 292 24 is_stmt 0 view .LVU50
 148 0096 0C4B     		ldr	r3, .L5+40
 149 0098 43F2D202 		movw	r2, #12498
 150 009c 1A60     		str	r2, [r3]
 293:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 294:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 295:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 296:HAL_Lib/Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 297:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 298:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 299:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 300:HAL_Lib/Core/Src/system_stm32h7xx.c **** }
 151              		.loc 1 300 1 view .LVU51
 152 009e 7047     		bx	lr
 153              	.L6:
 154              		.align	2
 155              	.L5:
 156 00a0 00ED00E0 		.word	-536810240
 157 00a4 00200052 		.word	1375739904
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 9


 158 00a8 00440258 		.word	1476543488
 159 00ac 7FEDF6EA 		.word	-352916097
 160 00b0 00020202 		.word	33686016
 161 00b4 0000FF01 		.word	33488896
 162 00b8 80020101 		.word	16843392
 163 00bc 0010005C 		.word	1543507968
 164 00c0 0000FFFF 		.word	-65536
 165 00c4 00800051 		.word	1358987264
 166 00c8 00400052 		.word	1375748096
 167              		.cfi_endproc
 168              	.LFE144:
 170              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 171              		.align	1
 172              		.global	SystemCoreClockUpdate
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv5-d16
 178              	SystemCoreClockUpdate:
 179              	.LFB145:
 301:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 302:HAL_Lib/Core/Src/system_stm32h7xx.c **** /**
 303:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @brief  Update SystemCoreClock variable according to Clock Register Values.
 304:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         The SystemCoreClock variable contains the core clock , it can
 305:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         be used by the user application to setup the SysTick timer or configure
 306:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         other parameters.
 307:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
 308:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @note   Each time the core clock changes, this function must be called
 309:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         to update SystemCoreClock variable value. Otherwise, any configuration
 310:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         based on this variable will be incorrect.
 311:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
 312:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @note   - The system frequency computed by this function is not the real
 313:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *           frequency in the chip. It is calculated based on the predefined
 314:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *           constant and the selected clock source:
 315:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
 316:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 317:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 318:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 319:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 320:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 321:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
 322:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 323:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *             4 MHz) but the real value may vary depending on the variations
 324:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *             in voltage and temperature.
 325:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 326:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *             64 MHz) but the real value may vary depending on the variations
 327:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *             in voltage and temperature.
 328:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
 329:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 330:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 331:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *              frequency of the crystal used. Otherwise, this function may
 332:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *              have wrong result.
 333:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *
 334:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *         - The result of this function could be not correct when using fractional
 335:HAL_Lib/Core/Src/system_stm32h7xx.c ****  *           value for HSE crystal.
 336:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @param  None
 337:HAL_Lib/Core/Src/system_stm32h7xx.c ****  * @retval None
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 10


 338:HAL_Lib/Core/Src/system_stm32h7xx.c ****  */
 339:HAL_Lib/Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate(void)
 340:HAL_Lib/Core/Src/system_stm32h7xx.c **** {
 180              		.loc 1 340 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0000 10B4     		push	{r4}
 186              	.LCFI0:
 187              		.cfi_def_cfa_offset 4
 188              		.cfi_offset 4, -4
 341:HAL_Lib/Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 189              		.loc 1 341 3 view .LVU53
 342:HAL_Lib/Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 190              		.loc 1 342 3 view .LVU54
 343:HAL_Lib/Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 191              		.loc 1 343 3 view .LVU55
 344:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 345:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 346:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 347:HAL_Lib/Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 192              		.loc 1 347 3 view .LVU56
 193              		.loc 1 347 14 is_stmt 0 view .LVU57
 194 0002 7A4B     		ldr	r3, .L21
 195 0004 1B69     		ldr	r3, [r3, #16]
 196              		.loc 1 347 21 view .LVU58
 197 0006 03F03803 		and	r3, r3, #56
 198 000a 182B     		cmp	r3, #24
 199 000c 00F2E580 		bhi	.L8
 200 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 201              	.L10:
 202 0014 1B00     		.2byte	(.L13-.L10)/2
 203 0016 E300     		.2byte	(.L8-.L10)/2
 204 0018 E300     		.2byte	(.L8-.L10)/2
 205 001a E300     		.2byte	(.L8-.L10)/2
 206 001c E300     		.2byte	(.L8-.L10)/2
 207 001e E300     		.2byte	(.L8-.L10)/2
 208 0020 E300     		.2byte	(.L8-.L10)/2
 209 0022 E300     		.2byte	(.L8-.L10)/2
 210 0024 1900     		.2byte	(.L12-.L10)/2
 211 0026 E300     		.2byte	(.L8-.L10)/2
 212 0028 E300     		.2byte	(.L8-.L10)/2
 213 002a E300     		.2byte	(.L8-.L10)/2
 214 002c E300     		.2byte	(.L8-.L10)/2
 215 002e E300     		.2byte	(.L8-.L10)/2
 216 0030 E300     		.2byte	(.L8-.L10)/2
 217 0032 E300     		.2byte	(.L8-.L10)/2
 218 0034 EA00     		.2byte	(.L18-.L10)/2
 219 0036 E300     		.2byte	(.L8-.L10)/2
 220 0038 E300     		.2byte	(.L8-.L10)/2
 221 003a E300     		.2byte	(.L8-.L10)/2
 222 003c E300     		.2byte	(.L8-.L10)/2
 223 003e E300     		.2byte	(.L8-.L10)/2
 224 0040 E300     		.2byte	(.L8-.L10)/2
 225 0042 E300     		.2byte	(.L8-.L10)/2
 226 0044 3700     		.2byte	(.L9-.L10)/2
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 11


 227              		.p2align 1
 228              	.L12:
 229 0046 6A4A     		ldr	r2, .L21+4
 230 0048 05E0     		b	.L11
 231              	.L13:
 348:HAL_Lib/Core/Src/system_stm32h7xx.c ****   {
 349:HAL_Lib/Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI: /* HSI used as system clock source */
 350:HAL_Lib/Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t)(HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV) >> 3));
 232              		.loc 1 350 5 is_stmt 1 view .LVU59
 233              		.loc 1 350 56 is_stmt 0 view .LVU60
 234 004a 684B     		ldr	r3, .L21
 235 004c 1B68     		ldr	r3, [r3]
 236              		.loc 1 350 78 view .LVU61
 237 004e C3F3C103 		ubfx	r3, r3, #3, #2
 238              		.loc 1 350 25 view .LVU62
 239 0052 684A     		ldr	r2, .L21+8
 240 0054 DA40     		lsrs	r2, r2, r3
 241              	.LVL0:
 351:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 242              		.loc 1 351 5 is_stmt 1 view .LVU63
 243              	.L11:
 352:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 353:HAL_Lib/Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI: /* CSI used as system clock  source */
 354:HAL_Lib/Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 355:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 356:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 357:HAL_Lib/Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE: /* HSE used as system clock  source */
 358:HAL_Lib/Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 359:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 360:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 361:HAL_Lib/Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1: /* PLL1 used as system clock  source */
 362:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 363:HAL_Lib/Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 364:HAL_Lib/Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 365:HAL_Lib/Core/Src/system_stm32h7xx.c ****     */
 366:HAL_Lib/Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 367:HAL_Lib/Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
 368:HAL_Lib/Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 369:HAL_Lib/Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 370:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 371:HAL_Lib/Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 372:HAL_Lib/Core/Src/system_stm32h7xx.c ****     {
 373:HAL_Lib/Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 374:HAL_Lib/Core/Src/system_stm32h7xx.c ****       {
 375:HAL_Lib/Core/Src/system_stm32h7xx.c ****       case RCC_PLLCKSELR_PLLSRC_HSI: /* HSI used as PLL clock source */
 376:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 377:HAL_Lib/Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV) >> 3));
 378:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 379:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 380:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 381:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 382:HAL_Lib/Core/Src/system_stm32h7xx.c ****       case RCC_PLLCKSELR_PLLSRC_CSI: /* CSI used as PLL clock source */
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 384:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 385:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 386:HAL_Lib/Core/Src/system_stm32h7xx.c ****       case RCC_PLLCKSELR_PLLSRC_HSE: /* HSE used as PLL clock source */
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 12


 388:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 389:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 390:HAL_Lib/Core/Src/system_stm32h7xx.c ****       default:
 391:HAL_Lib/Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV) >> 3));
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 393:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 394:HAL_Lib/Core/Src/system_stm32h7xx.c ****       }
 395:HAL_Lib/Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U);
 396:HAL_Lib/Core/Src/system_stm32h7xx.c ****       common_system_clock = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 397:HAL_Lib/Core/Src/system_stm32h7xx.c ****     }
 398:HAL_Lib/Core/Src/system_stm32h7xx.c ****     else
 399:HAL_Lib/Core/Src/system_stm32h7xx.c ****     {
 400:HAL_Lib/Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 401:HAL_Lib/Core/Src/system_stm32h7xx.c ****     }
 402:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 403:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 404:HAL_Lib/Core/Src/system_stm32h7xx.c ****   default:
 405:HAL_Lib/Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t)(HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV) >> 3));
 406:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 407:HAL_Lib/Core/Src/system_stm32h7xx.c ****   }
 408:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 409:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 410:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(RCC_D1CFGR_D1CPRE)
 411:HAL_Lib/Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos];
 244              		.loc 1 411 3 view .LVU64
 245              		.loc 1 411 30 is_stmt 0 view .LVU65
 246 0056 6548     		ldr	r0, .L21
 247 0058 8369     		ldr	r3, [r0, #24]
 248              		.loc 1 411 60 view .LVU66
 249 005a C3F30323 		ubfx	r3, r3, #8, #4
 250              		.loc 1 411 25 view .LVU67
 251 005e 6649     		ldr	r1, .L21+12
 252 0060 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 253              	.LVL1:
 412:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 413:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 414:HAL_Lib/Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 254              		.loc 1 414 3 is_stmt 1 view .LVU68
 255              		.loc 1 414 23 is_stmt 0 view .LVU69
 256 0062 DA40     		lsrs	r2, r2, r3
 257              	.LVL2:
 415:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 416:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 417:HAL_Lib/Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC
 258              		.loc 1 417 3 is_stmt 1 view .LVU70
 259              		.loc 1 417 66 is_stmt 0 view .LVU71
 260 0064 8369     		ldr	r3, [r0, #24]
 261              	.LVL3:
 262              		.loc 1 417 94 view .LVU72
 263 0066 03F00F03 		and	r3, r3, #15
 264              		.loc 1 417 61 view .LVU73
 265 006a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 266              		.loc 1 417 119 view .LVU74
 267 006c 03F01F03 		and	r3, r3, #31
 268              		.loc 1 417 40 view .LVU75
 269 0070 22FA03F3 		lsr	r3, r2, r3
 270              		.loc 1 417 17 view .LVU76
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 13


 271 0074 6149     		ldr	r1, .L21+16
 272              		.loc 1 417 17 view .LVU77
 273 0076 0B60     		str	r3, [r1]
 418:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 419:HAL_Lib/Core/Src/system_stm32h7xx.c **** #else
 420:HAL_Lib/Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos];
 421:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 422:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 423:HAL_Lib/Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 424:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 425:HAL_Lib/Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 426:HAL_Lib/Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE) >> R
 427:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 428:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif
 429:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 430:HAL_Lib/Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 431:HAL_Lib/Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 432:HAL_Lib/Core/Src/system_stm32h7xx.c **** #else
 433:HAL_Lib/Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 274              		.loc 1 433 3 is_stmt 1 view .LVU78
 275              		.loc 1 433 19 is_stmt 0 view .LVU79
 276 0078 614B     		ldr	r3, .L21+20
 277 007a 1A60     		str	r2, [r3]
 434:HAL_Lib/Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 435:HAL_Lib/Core/Src/system_stm32h7xx.c **** }
 278              		.loc 1 435 1 view .LVU80
 279 007c 5DF8044B 		ldr	r4, [sp], #4
 280              	.LCFI1:
 281              		.cfi_remember_state
 282              		.cfi_restore 4
 283              		.cfi_def_cfa_offset 0
 284 0080 7047     		bx	lr
 285              	.LVL4:
 286              	.L9:
 287              	.LCFI2:
 288              		.cfi_restore_state
 366:HAL_Lib/Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
 289              		.loc 1 366 5 is_stmt 1 view .LVU81
 366:HAL_Lib/Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
 290              		.loc 1 366 21 is_stmt 0 view .LVU82
 291 0082 5A49     		ldr	r1, .L21
 292 0084 886A     		ldr	r0, [r1, #40]
 366:HAL_Lib/Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
 293              		.loc 1 366 15 view .LVU83
 294 0086 00F00300 		and	r0, r0, #3
 295              	.LVL5:
 367:HAL_Lib/Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 296              		.loc 1 367 5 is_stmt 1 view .LVU84
 367:HAL_Lib/Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 297              		.loc 1 367 17 is_stmt 0 view .LVU85
 298 008a 8C6A     		ldr	r4, [r1, #40]
 367:HAL_Lib/Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 299              		.loc 1 367 10 view .LVU86
 300 008c C4F30512 		ubfx	r2, r4, #4, #6
 301              	.LVL6:
 368:HAL_Lib/Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 302              		.loc 1 368 5 is_stmt 1 view .LVU87
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 14


 368:HAL_Lib/Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 303              		.loc 1 368 22 is_stmt 0 view .LVU88
 304 0090 CB6A     		ldr	r3, [r1, #44]
 368:HAL_Lib/Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 305              		.loc 1 368 15 view .LVU89
 306 0092 03F0010C 		and	ip, r3, #1
 307              	.LVL7:
 369:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 308              		.loc 1 369 5 is_stmt 1 view .LVU90
 369:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 309              		.loc 1 369 51 is_stmt 0 view .LVU91
 310 0096 4B6B     		ldr	r3, [r1, #52]
 369:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 311              		.loc 1 369 87 view .LVU92
 312 0098 C3F3CC03 		ubfx	r3, r3, #3, #13
 369:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 313              		.loc 1 369 23 view .LVU93
 314 009c 0CFB03F3 		mul	r3, ip, r3
 369:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 315              		.loc 1 369 12 view .LVU94
 316 00a0 07EE903A 		vmov	s15, r3	@ int
 317 00a4 F8EE677A 		vcvt.f32.u32	s15, s15
 318              	.LVL8:
 371:HAL_Lib/Core/Src/system_stm32h7xx.c ****     {
 319              		.loc 1 371 5 is_stmt 1 view .LVU95
 371:HAL_Lib/Core/Src/system_stm32h7xx.c ****     {
 320              		.loc 1 371 8 is_stmt 0 view .LVU96
 321 00a8 14F47C7F 		tst	r4, #1008
 322 00ac D3D0     		beq	.L11
 373:HAL_Lib/Core/Src/system_stm32h7xx.c ****       {
 323              		.loc 1 373 7 is_stmt 1 view .LVU97
 324 00ae 0128     		cmp	r0, #1
 325 00b0 59D0     		beq	.L14
 326 00b2 0228     		cmp	r0, #2
 327 00b4 74D0     		beq	.L15
 328 00b6 18B3     		cbz	r0, .L20
 391:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 329              		.loc 1 391 9 view .LVU98
 391:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 330              		.loc 1 391 39 is_stmt 0 view .LVU99
 331 00b8 4C48     		ldr	r0, .L21
 332              	.LVL9:
 391:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 333              		.loc 1 391 39 view .LVU100
 334 00ba 0168     		ldr	r1, [r0]
 391:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 335              		.loc 1 391 61 view .LVU101
 336 00bc C1F3C101 		ubfx	r1, r1, #3, #2
 391:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 337              		.loc 1 391 18 view .LVU102
 338 00c0 4C4B     		ldr	r3, .L21+8
 339 00c2 CB40     		lsrs	r3, r3, r1
 340              	.LVL10:
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 341              		.loc 1 392 9 is_stmt 1 view .LVU103
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 342              		.loc 1 392 19 is_stmt 0 view .LVU104
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 15


 343 00c4 07EE103A 		vmov	s14, r3	@ int
 344 00c8 F8EE476A 		vcvt.f32.u32	s13, s14
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 345              		.loc 1 392 39 view .LVU105
 346 00cc 07EE102A 		vmov	s14, r2	@ int
 347 00d0 B8EE476A 		vcvt.f32.u32	s12, s14
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 348              		.loc 1 392 37 view .LVU106
 349 00d4 86EE867A 		vdiv.f32	s14, s13, s12
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 350              		.loc 1 392 80 view .LVU107
 351 00d8 036B     		ldr	r3, [r0, #48]
 352              	.LVL11:
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 353              		.loc 1 392 66 view .LVU108
 354 00da C3F30803 		ubfx	r3, r3, #0, #9
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 355              		.loc 1 392 57 view .LVU109
 356 00de 06EE903A 		vmov	s13, r3	@ int
 357 00e2 F8EE666A 		vcvt.f32.u32	s13, s13
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 358              		.loc 1 392 120 view .LVU110
 359 00e6 9FED476A 		vldr.32	s12, .L21+24
 360 00ea 67EE867A 		vmul.f32	s15, s15, s12
 361              	.LVL12:
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 362              		.loc 1 392 110 view .LVU111
 363 00ee 76EEA77A 		vadd.f32	s15, s13, s15
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 364              		.loc 1 392 139 view .LVU112
 365 00f2 F7EE006A 		vmov.f32	s13, #1.0e+0
 366 00f6 77EEA67A 		vadd.f32	s15, s15, s13
 392:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 367              		.loc 1 392 16 view .LVU113
 368 00fa 27EE277A 		vmul.f32	s14, s14, s15
 369              	.LVL13:
 393:HAL_Lib/Core/Src/system_stm32h7xx.c ****       }
 370              		.loc 1 393 9 is_stmt 1 view .LVU114
 371 00fe 22E0     		b	.L17
 372              	.LVL14:
 373              	.L20:
 377:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 374              		.loc 1 377 9 view .LVU115
 377:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 375              		.loc 1 377 39 is_stmt 0 view .LVU116
 376 0100 0846     		mov	r0, r1
 377              	.LVL15:
 377:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 378              		.loc 1 377 39 view .LVU117
 379 0102 0968     		ldr	r1, [r1]
 377:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 380              		.loc 1 377 61 view .LVU118
 381 0104 C1F3C101 		ubfx	r1, r1, #3, #2
 377:HAL_Lib/Core/Src/system_stm32h7xx.c ****         pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL
 382              		.loc 1 377 18 view .LVU119
 383 0108 3A4B     		ldr	r3, .L21+8
 384 010a CB40     		lsrs	r3, r3, r1
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 16


 385              	.LVL16:
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 386              		.loc 1 378 9 is_stmt 1 view .LVU120
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 387              		.loc 1 378 19 is_stmt 0 view .LVU121
 388 010c 07EE103A 		vmov	s14, r3	@ int
 389 0110 F8EE476A 		vcvt.f32.u32	s13, s14
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 390              		.loc 1 378 39 view .LVU122
 391 0114 07EE102A 		vmov	s14, r2	@ int
 392 0118 B8EE476A 		vcvt.f32.u32	s12, s14
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 393              		.loc 1 378 37 view .LVU123
 394 011c 86EE867A 		vdiv.f32	s14, s13, s12
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 395              		.loc 1 378 80 view .LVU124
 396 0120 036B     		ldr	r3, [r0, #48]
 397              	.LVL17:
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 398              		.loc 1 378 66 view .LVU125
 399 0122 C3F30803 		ubfx	r3, r3, #0, #9
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 400              		.loc 1 378 57 view .LVU126
 401 0126 06EE903A 		vmov	s13, r3	@ int
 402 012a F8EE666A 		vcvt.f32.u32	s13, s13
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 403              		.loc 1 378 120 view .LVU127
 404 012e 9FED356A 		vldr.32	s12, .L21+24
 405 0132 67EE867A 		vmul.f32	s15, s15, s12
 406              	.LVL18:
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 407              		.loc 1 378 110 view .LVU128
 408 0136 76EEA77A 		vadd.f32	s15, s13, s15
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 409              		.loc 1 378 139 view .LVU129
 410 013a F7EE006A 		vmov.f32	s13, #1.0e+0
 411 013e 77EEA67A 		vadd.f32	s15, s15, s13
 378:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 412              		.loc 1 378 16 view .LVU130
 413 0142 27EE277A 		vmul.f32	s14, s14, s15
 414              	.LVL19:
 380:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 415              		.loc 1 380 9 is_stmt 1 view .LVU131
 416              	.L17:
 395:HAL_Lib/Core/Src/system_stm32h7xx.c ****       common_system_clock = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 417              		.loc 1 395 7 view .LVU132
 395:HAL_Lib/Core/Src/system_stm32h7xx.c ****       common_system_clock = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 418              		.loc 1 395 20 is_stmt 0 view .LVU133
 419 0146 294B     		ldr	r3, .L21
 420 0148 1B6B     		ldr	r3, [r3, #48]
 395:HAL_Lib/Core/Src/system_stm32h7xx.c ****       common_system_clock = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 421              		.loc 1 395 50 view .LVU134
 422 014a C3F34623 		ubfx	r3, r3, #9, #7
 395:HAL_Lib/Core/Src/system_stm32h7xx.c ****       common_system_clock = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 423              		.loc 1 395 12 view .LVU135
 424 014e 0133     		adds	r3, r3, #1
 425              	.LVL20:
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 17


 396:HAL_Lib/Core/Src/system_stm32h7xx.c ****     }
 426              		.loc 1 396 7 is_stmt 1 view .LVU136
 396:HAL_Lib/Core/Src/system_stm32h7xx.c ****     }
 427              		.loc 1 396 58 is_stmt 0 view .LVU137
 428 0150 07EE903A 		vmov	s15, r3	@ int
 429 0154 F8EE677A 		vcvt.f32.u32	s15, s15
 396:HAL_Lib/Core/Src/system_stm32h7xx.c ****     }
 430              		.loc 1 396 39 view .LVU138
 431 0158 C7EE276A 		vdiv.f32	s13, s14, s15
 396:HAL_Lib/Core/Src/system_stm32h7xx.c ****     }
 432              		.loc 1 396 27 view .LVU139
 433 015c FCEEE67A 		vcvt.u32.f32	s15, s13
 434 0160 17EE902A 		vmov	r2, s15	@ int
 435              	.LVL21:
 396:HAL_Lib/Core/Src/system_stm32h7xx.c ****     }
 436              		.loc 1 396 27 view .LVU140
 437 0164 77E7     		b	.L11
 438              	.LVL22:
 439              	.L14:
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 440              		.loc 1 383 9 is_stmt 1 view .LVU141
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 441              		.loc 1 383 40 is_stmt 0 view .LVU142
 442 0166 07EE102A 		vmov	s14, r2	@ int
 443 016a F8EE476A 		vcvt.f32.u32	s13, s14
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 444              		.loc 1 383 38 view .LVU143
 445 016e 9FED266A 		vldr.32	s12, .L21+28
 446 0172 86EE267A 		vdiv.f32	s14, s12, s13
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 447              		.loc 1 383 81 view .LVU144
 448 0176 1D4B     		ldr	r3, .L21
 449 0178 1B6B     		ldr	r3, [r3, #48]
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 450              		.loc 1 383 67 view .LVU145
 451 017a C3F30803 		ubfx	r3, r3, #0, #9
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 452              		.loc 1 383 58 view .LVU146
 453 017e 06EE903A 		vmov	s13, r3	@ int
 454 0182 F8EE666A 		vcvt.f32.u32	s13, s13
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 455              		.loc 1 383 121 view .LVU147
 456 0186 9FED1F6A 		vldr.32	s12, .L21+24
 457 018a 67EE867A 		vmul.f32	s15, s15, s12
 458              	.LVL23:
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 459              		.loc 1 383 111 view .LVU148
 460 018e 76EEA77A 		vadd.f32	s15, s13, s15
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 461              		.loc 1 383 140 view .LVU149
 462 0192 F7EE006A 		vmov.f32	s13, #1.0e+0
 463 0196 77EEA67A 		vadd.f32	s15, s15, s13
 383:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 464              		.loc 1 383 16 view .LVU150
 465 019a 27EE277A 		vmul.f32	s14, s14, s15
 466              	.LVL24:
 384:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 18


 467              		.loc 1 384 9 is_stmt 1 view .LVU151
 468 019e D2E7     		b	.L17
 469              	.LVL25:
 470              	.L15:
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 471              		.loc 1 387 9 view .LVU152
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 472              		.loc 1 387 40 is_stmt 0 view .LVU153
 473 01a0 07EE102A 		vmov	s14, r2	@ int
 474 01a4 F8EE476A 		vcvt.f32.u32	s13, s14
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 475              		.loc 1 387 38 view .LVU154
 476 01a8 9FED186A 		vldr.32	s12, .L21+32
 477 01ac 86EE267A 		vdiv.f32	s14, s12, s13
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 478              		.loc 1 387 81 view .LVU155
 479 01b0 0E4B     		ldr	r3, .L21
 480 01b2 1B6B     		ldr	r3, [r3, #48]
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 481              		.loc 1 387 67 view .LVU156
 482 01b4 C3F30803 		ubfx	r3, r3, #0, #9
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 483              		.loc 1 387 58 view .LVU157
 484 01b8 06EE903A 		vmov	s13, r3	@ int
 485 01bc F8EE666A 		vcvt.f32.u32	s13, s13
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 486              		.loc 1 387 121 view .LVU158
 487 01c0 9FED106A 		vldr.32	s12, .L21+24
 488 01c4 67EE867A 		vmul.f32	s15, s15, s12
 489              	.LVL26:
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 490              		.loc 1 387 111 view .LVU159
 491 01c8 76EEA77A 		vadd.f32	s15, s13, s15
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 492              		.loc 1 387 140 view .LVU160
 493 01cc F7EE006A 		vmov.f32	s13, #1.0e+0
 494 01d0 77EEA67A 		vadd.f32	s15, s15, s13
 387:HAL_Lib/Core/Src/system_stm32h7xx.c ****         break;
 495              		.loc 1 387 16 view .LVU161
 496 01d4 27EE277A 		vmul.f32	s14, s14, s15
 497              	.LVL27:
 388:HAL_Lib/Core/Src/system_stm32h7xx.c **** 
 498              		.loc 1 388 9 is_stmt 1 view .LVU162
 499 01d8 B5E7     		b	.L17
 500              	.LVL28:
 501              	.L8:
 405:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 502              		.loc 1 405 5 view .LVU163
 405:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 503              		.loc 1 405 56 is_stmt 0 view .LVU164
 504 01da 044B     		ldr	r3, .L21
 505 01dc 1B68     		ldr	r3, [r3]
 405:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 506              		.loc 1 405 78 view .LVU165
 507 01de C3F3C103 		ubfx	r3, r3, #3, #2
 405:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 508              		.loc 1 405 25 view .LVU166
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 19


 509 01e2 044A     		ldr	r2, .L21+8
 510 01e4 DA40     		lsrs	r2, r2, r3
 511              	.LVL29:
 406:HAL_Lib/Core/Src/system_stm32h7xx.c ****   }
 512              		.loc 1 406 5 is_stmt 1 view .LVU167
 513 01e6 36E7     		b	.L11
 514              	.LVL30:
 515              	.L18:
 358:HAL_Lib/Core/Src/system_stm32h7xx.c ****     break;
 516              		.loc 1 358 25 is_stmt 0 view .LVU168
 517 01e8 094A     		ldr	r2, .L21+36
 518 01ea 34E7     		b	.L11
 519              	.L22:
 520              		.align	2
 521              	.L21:
 522 01ec 00440258 		.word	1476543488
 523 01f0 00093D00 		.word	4000000
 524 01f4 0090D003 		.word	64000000
 525 01f8 00000000 		.word	.LANCHOR0
 526 01fc 00000000 		.word	.LANCHOR1
 527 0200 00000000 		.word	.LANCHOR2
 528 0204 00000039 		.word	956301312
 529 0208 0024744A 		.word	1249125376
 530 020c 0024F44A 		.word	1257513984
 531 0210 00127A00 		.word	8000000
 532              		.cfi_endproc
 533              	.LFE145:
 535              		.global	D1CorePrescTable
 536              		.global	SystemD2Clock
 537              		.global	SystemCoreClock
 538              		.section	.data.SystemCoreClock,"aw"
 539              		.align	2
 540              		.set	.LANCHOR2,. + 0
 543              	SystemCoreClock:
 544 0000 0090D003 		.word	64000000
 545              		.section	.data.SystemD2Clock,"aw"
 546              		.align	2
 547              		.set	.LANCHOR1,. + 0
 550              	SystemD2Clock:
 551 0000 0090D003 		.word	64000000
 552              		.section	.rodata.D1CorePrescTable,"a"
 553              		.align	2
 554              		.set	.LANCHOR0,. + 0
 557              	D1CorePrescTable:
 558 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 558      01020304 
 558      01020304 
 558      06
 559 000d 070809   		.ascii	"\007\010\011"
 560              		.text
 561              	.Letext0:
 562              		.file 2 "d:\\software\\zephyr_env_gcc\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\
 563              		.file 3 "d:\\software\\zephyr_env_gcc\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\
 564              		.file 4 "HAL_Lib/CMSIS/Core/Include/core_cm7.h"
 565              		.file 5 "HAL_Lib/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 566              		.file 6 "HAL_Lib/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 567              		.file 7 "d:\\software\\zephyr_env_gcc\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 20


ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32h7xx.c
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:17     .text.SystemInit:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:25     .text.SystemInit:00000000 SystemInit
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:156    .text.SystemInit:000000a0 $d
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:171    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:178    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:202    .text.SystemCoreClockUpdate:00000014 $d
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:227    .text.SystemCoreClockUpdate:00000046 $t
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:522    .text.SystemCoreClockUpdate:000001ec $d
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:557    .rodata.D1CorePrescTable:00000000 D1CorePrescTable
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:550    .data.SystemD2Clock:00000000 SystemD2Clock
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:543    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:539    .data.SystemCoreClock:00000000 $d
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:546    .data.SystemD2Clock:00000000 $d
C:\Users\HUAV\AppData\Local\Temp\cc15TkIk.s:553    .rodata.D1CorePrescTable:00000000 $d

NO UNDEFINED SYMBOLS
