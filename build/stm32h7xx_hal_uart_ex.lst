ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_uart_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.UARTEx_Wakeup_AddressConfig,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	UARTEx_Wakeup_AddressConfig:
  25              	.LVL0:
  26              	.LFB159:
  27              		.file 1 "HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c"
   1:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
   2:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ******************************************************************************
   3:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @file    stm32h7xx_hal_uart_ex.c
   4:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @author  MCD Application Team
   5:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief   Extended UART HAL module driver.
   6:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This file provides firmware functions to manage the following extended
   7:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *           + Initialization and de-initialization functions
   9:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *           + Peripheral Control functions
  10:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  11:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  12:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ******************************************************************************
  13:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @attention
  14:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  15:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  16:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * All rights reserved.
  17:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  18:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * in the root directory of this software component.
  20:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  22:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ******************************************************************************
  23:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   @verbatim
  24:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ==============================================================================
  25:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                ##### UART peripheral extended features  #####
  26:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ==============================================================================
  27:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  28:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  29:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  30:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) For the UART RS485 Driver Enable mode, initialize the UART registers
  31:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         by calling the HAL_RS485Ex_Init() API.
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 2


  32:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  33:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) FIFO mode enabling/disabling and RX/TX FIFO threshold programming.
  34:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  35:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         -@- When UART operates in FIFO mode, FIFO mode must be enabled prior
  36:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             starting RX/TX transfers. Also RX/TX FIFO thresholds must be
  37:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             configured prior starting RX/TX transfers.
  38:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  39:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   @endverbatim
  40:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ******************************************************************************
  41:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  42:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  43:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Includes ------------------------------------------------------------------*/
  44:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #include "stm32h7xx_hal.h"
  45:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  46:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  47:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  48:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  49:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  50:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx UARTEx
  51:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief UART Extended HAL module driver
  52:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  53:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  54:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  55:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #ifdef HAL_UART_MODULE_ENABLED
  56:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  57:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private typedef -----------------------------------------------------------*/
  58:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private define ------------------------------------------------------------*/
  59:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEX_Private_Constants UARTEx Private Constants
  60:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  61:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  62:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* UART RX FIFO depth */
  63:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #define RX_FIFO_DEPTH 16U
  64:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  65:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* UART TX FIFO depth */
  66:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #define TX_FIFO_DEPTH 16U
  67:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
  68:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
  69:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  70:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  71:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private macros ------------------------------------------------------------*/
  72:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private variables ---------------------------------------------------------*/
  73:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Private function prototypes -----------------------------------------------*/
  74:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Private_Functions UARTEx Private Functions
  75:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  76:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  77:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
  78:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart);
  79:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
  80:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
  81:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  82:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  83:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /* Exported functions --------------------------------------------------------*/
  84:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
  85:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions  UARTEx Exported Functions
  86:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
  87:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
  88:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 3


  89:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group1 Initialization and de-initialization functions
  90:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief    Extended Initialization and Configuration Functions
  91:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
  92:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @verbatim
  93:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** ===============================================================================
  94:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             ##### Initialization and Configuration functions #####
  95:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
  96:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     [..]
  97:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
  98:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     in asynchronous mode.
  99:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       (+) For the asynchronous mode the parameters below can be configured:
 100:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Baud Rate
 101:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Word Length
 102:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Stop Bit
 103:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 104:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****              in the data register is transmitted but is changed by the parity bit.
 105:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Hardware flow control
 106:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Receiver/transmitter modes
 107:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) Over Sampling Method
 108:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) One-Bit Sampling Method
 109:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 110:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) TX and/or RX pin level inversion
 111:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) data logical level inversion
 112:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) RX and TX pins swap
 113:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) RX overrun detection disabling
 114:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) DMA disabling on RX error
 115:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) MSB first on communication line
 116:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (++) auto Baud rate detection
 117:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     [..]
 118:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     The HAL_RS485Ex_Init() API follows the UART RS485 mode configuration
 119:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      procedures (details for the procedures are available in reference manual).
 120:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 121:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @endverbatim
 122:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 123:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 124:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 125:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   following table.
 126:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 127:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     Table 1. UART frame format.
 128:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 129:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 130:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 131:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 132:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 133:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 134:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 135:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 136:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 137:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 138:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 139:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 140:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 141:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 142:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 143:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 144:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
 145:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 4


 146:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 147:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 148:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 149:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 150:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart            UART handle.
 151:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Polarity         Select the driver enable polarity.
 152:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 153:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 154:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 155:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param AssertionTime    Driver Enable assertion time:
 156:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       5-bit value defining the time between the activation of the DE (Driver Enable)
 157:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       signal and the beginning of the start bit. It is expressed in sample time
 158:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       units (1/8 or 1/16 bit time, depending on the oversampling rate)
 159:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param DeassertionTime  Driver Enable deassertion time:
 160:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       5-bit value defining the time between the end of the last stop bit, in a
 161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       transmitted message, and the de-activation of the DE (Driver Enable) signal.
 162:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       It is expressed in sample time units (1/8 or 1/16 bit time, depending on the
 163:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       oversampling rate).
 164:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 165:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 166:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 167:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                    uint32_t DeassertionTime)
 168:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 169:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t temp;
 170:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 171:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart == NULL)
 173:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 174:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_ERROR;
 175:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 176:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the Driver Enable UART instance */
 177:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 178:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 179:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the Driver Enable polarity */
 180:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 181:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 182:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the Driver Enable assertion time */
 183:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 184:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 185:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the Driver Enable deassertion time */
 186:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 187:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 188:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 189:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 190:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Allocate lock resource and initialize it */
 191:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->Lock = HAL_UNLOCKED;
 192:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 193:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 194:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     UART_InitCallbacksToDefault(huart);
 195:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 196:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if (huart->MspInitCallback == NULL)
 197:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 198:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 199:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 200:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 201:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Init the low level hardware */
 202:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->MspInitCallback(huart);
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 5


 203:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #else
 204:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 205:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     HAL_UART_MspInit(huart);
 206:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 207:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 208:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 209:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 210:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 211:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 212:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 213:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 214:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the UART Communication parameters */
 215:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 216:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 217:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_ERROR;
 218:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 219:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 220:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 221:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 222:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     UART_AdvFeatureConfig(huart);
 223:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 224:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 225:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 226:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 227:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 228:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the Driver Enable polarity */
 229:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 230:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 231:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the Driver Enable assertion and deassertion times */
 232:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 233:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 234:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 235:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 236:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 237:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 238:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 239:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 240:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 241:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 242:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 243:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 244:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
 245:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 246:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 247:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group2 IO operation functions
 248:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *  @brief Extended functions
 249:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
 250:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @verbatim
 251:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
 252:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                       ##### IO operation functions #####
 253:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
 254:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     This subsection provides a set of Wakeup and FIFO mode related callback functions.
 255:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 256:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Wakeup from Stop mode Callback:
 257:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_WakeupCallback()
 258:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 259:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) TX/RX Fifos Callbacks:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 6


 260:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_RxFifoFullCallback()
 261:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_TxFifoEmptyCallback()
 262:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 263:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @endverbatim
 264:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
 265:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 266:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 267:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 268:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief UART wakeup from Stop mode callback.
 269:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 270:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 271:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 272:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** __weak void HAL_UARTEx_WakeupCallback(UART_HandleTypeDef *huart)
 273:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 274:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 275:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UNUSED(huart);
 276:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 277:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 278:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             the HAL_UARTEx_WakeupCallback can be implemented in the user file.
 279:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****    */
 280:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 281:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 282:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 283:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  UART RX Fifo full callback.
 284:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param  huart UART handle.
 285:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 286:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 287:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** __weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
 288:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 289:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 290:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UNUSED(huart);
 291:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 292:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 293:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             the HAL_UARTEx_RxFifoFullCallback can be implemented in the user file.
 294:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****    */
 295:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 296:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 297:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 298:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  UART TX Fifo empty callback.
 299:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param  huart UART handle.
 300:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 301:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 302:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** __weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
 303:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 304:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 305:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UNUSED(huart);
 306:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 307:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 308:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****             the HAL_UARTEx_TxFifoEmptyCallback can be implemented in the user file.
 309:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****    */
 310:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 311:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 312:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 313:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
 314:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 315:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 316:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group3 Peripheral Control functions
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 7


 317:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief    Extended Peripheral Control functions
 318:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *
 319:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @verbatim
 320:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
 321:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                       ##### Peripheral Control functions #####
 322:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****  ===============================================================================
 323:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     [..] This section provides the following functions:
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
 325:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
 326:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_StopModeWakeUpSourceConfig() API defines the wake-up from stop mode
 327:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****          trigger: address match, Start Bit detection or RXNE bit status.
 328:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableStopMode() API enables the UART to wake up the MCU from stop mode
 329:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableStopMode() API disables the above functionality
 330:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableFifoMode() API enables the FIFO mode
 331:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableFifoMode() API disables the FIFO mode
 332:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetTxFifoThreshold() API sets the TX FIFO threshold
 333:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetRxFifoThreshold() API sets the RX FIFO threshold
 334:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 335:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 336:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     services to user. (For example, these functions allow application to handle use cases
 337:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     where number of data to be received is unknown).
 338:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 339:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Compared to standard reception services which only consider number of received
 340:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         data elements as reception completion criteria, these functions also consider additional ev
 341:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         as triggers for updating reception status to caller :
 342:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 343:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 344:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                for 1 frame time, after last received byte.
 345:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           (++) RX inactivity detected by RTO, i.e. line has been in idle state
 346:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                for a programmable time, after last received byte.
 347:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****        (+) Detection that a specific character has been received.
 348:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 349:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) There are two mode of transfer:
 350:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 351:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            or till IDLE event occurs. Reception is handled only during function execution.
 352:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 353:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            are returned by function after finishing transfer.
 354:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 355:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            These API's return the HAL status.
 356:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            The end of the data processing will be indicated through the
 357:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 358:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 359:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 360:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 361:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Blocking mode API:
 362:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 363:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 364:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Non-Blocking mode API with Interrupt:
 365:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 366:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 367:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     (#) Non-Blocking mode API with DMA:
 368:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 369:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 370:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** @endverbatim
 371:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
 372:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 373:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 8


 374:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 375:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
 376:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
 377:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
 378:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        long).
 379:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
 380:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
 381:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart         UART handle.
 382:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param AddressLength This parameter can be one of the following values:
 383:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
 384:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
 385:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 386:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 387:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
 388:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 389:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 390:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart == NULL)
 391:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 392:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_ERROR;
 393:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 394:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 395:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the address length parameter */
 396:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
 397:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 398:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 399:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 400:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 401:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 402:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 403:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the address length */
 404:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 405:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 406:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 407:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 408:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 409:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
 410:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 411:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 412:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 413:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 414:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Set Wakeup from Stop mode interrupt flag selection.
 415:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note It is the application responsibility to enable the interrupt used as
 416:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       usart_wkup interrupt source before entering low-power mode.
 417:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart           UART handle.
 418:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param WakeUpSelection Address match, Start Bit detection or RXNE/RXFNE bit status.
 419:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 420:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_ADDRESS
 421:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_STARTBIT
 422:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_READDATA_NONEMPTY
 423:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 424:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 425:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_StopModeWakeUpSourceConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeD
 426:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 427:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 428:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tickstart;
 429:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 430:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* check the wake-up from stop mode UART instance */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 9


 431:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance));
 432:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* check the wake-up selection parameter */
 433:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_SELECTION(WakeUpSelection.WakeUpEvent));
 434:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 435:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 436:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 437:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 438:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 439:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 440:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 441:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 442:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 443:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the wake-up selection scheme */
 444:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_WUS, WakeUpSelection.WakeUpEvent);
 445:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 446:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (WakeUpSelection.WakeUpEvent == UART_WAKEUP_ON_ADDRESS)
 447:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 448:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     UARTEx_Wakeup_AddressConfig(huart, WakeUpSelection);
 449:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 450:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 451:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 452:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 453:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 454:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Init tickstart for timeout management */
 455:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tickstart = HAL_GetTick();
 456:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 457:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Wait until REACK flag is set */
 458:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE)
 459:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 460:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     status = HAL_TIMEOUT;
 461:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 462:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 463:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 464:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Initialize the UART State */
 465:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->gState = HAL_UART_STATE_READY;
 466:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 467:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 468:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 469:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 470:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 471:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return status;
 472:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 473:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 474:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 475:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Enable UART Stop Mode.
 476:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note The UART is able to wake up the MCU from Stop 1 mode as long as UART clock is HSI or LSE.
 477:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 478:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 479:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 480:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableStopMode(UART_HandleTypeDef *huart)
 481:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 482:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 483:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 484:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 485:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set UESM bit */
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_UESM);
 487:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 10


 488:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 489:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 490:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 491:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 492:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 493:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 494:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 495:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Disable UART Stop Mode.
 496:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 497:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 498:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 499:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableStopMode(UART_HandleTypeDef *huart)
 500:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 501:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 502:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 503:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 504:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Clear UESM bit */
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_UESM);
 506:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 507:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 508:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 509:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 510:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 511:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 512:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 513:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 514:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  Enable the FIFO mode.
 515:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart      UART handle.
 516:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 517:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 518:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableFifoMode(UART_HandleTypeDef *huart)
 519:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 520:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 521:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 522:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check parameters */
 523:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 524:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 525:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 526:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 527:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 528:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 529:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 530:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 531:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 532:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 533:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable UART */
 534:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 535:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 536:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable FIFO mode */
 537:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   SET_BIT(tmpcr1, USART_CR1_FIFOEN);
 538:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_ENABLE;
 539:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 540:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Restore UART configuration */
 541:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 542:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 543:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 544:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 11


 545:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 546:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 547:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 548:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 549:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 550:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 551:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 552:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 553:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 554:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 555:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  Disable the FIFO mode.
 556:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart      UART handle.
 557:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 558:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 559:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
 560:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 561:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 562:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 563:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check parameters */
 564:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 565:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 566:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 567:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 568:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 569:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 570:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 571:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 572:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 573:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 574:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable UART */
 575:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 576:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 577:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Enable FIFO mode */
 578:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 579:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_DISABLE;
 580:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 581:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Restore UART configuration */
 582:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 583:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 584:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 585:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 586:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 587:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 588:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 589:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 590:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 591:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 592:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 593:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  Set the TXFIFO threshold.
 594:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart      UART handle.
 595:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Threshold  TX FIFO threshold value
 596:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 597:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_8
 598:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_4
 599:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_2
 600:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_3_4
 601:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 12


 602:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
 603:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 604:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 605:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 606:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 607:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 608:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 609:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check parameters */
 610:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 611:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));
 612:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 613:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 614:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 615:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 616:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 617:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 618:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 619:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 620:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 621:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable UART */
 622:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 623:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 624:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Update TX threshold configuration */
 625:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 626:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 627:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 628:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 629:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 630:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Restore UART configuration */
 631:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 632:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 633:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 634:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 635:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 636:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 637:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 638:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 639:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 640:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 641:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 642:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief  Set the RXFIFO threshold.
 643:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart      UART handle.
 644:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Threshold  RX FIFO threshold value
 645:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 646:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_8
 647:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_4
 648:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_2
 649:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_3_4
 650:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
 651:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
 652:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 653:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 654:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 655:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 656:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 657:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 658:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the parameters */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 13


 659:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 660:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));
 661:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 662:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 663:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 664:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 665:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 666:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 667:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 668:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 669:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 670:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Disable UART */
 671:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 672:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 673:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Update RX threshold configuration */
 674:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 675:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 676:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 677:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 678:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 679:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Restore UART configuration */
 680:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 681:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 682:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 683:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 684:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Unlocked */
 685:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 686:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 687:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   return HAL_OK;
 688:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 689:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 690:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 691:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data
 692:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        is received or an IDLE event occurs.
 693:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  HAL_OK is returned if reception is completed (expected number of data has been received)
 694:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        or if reception is stopped after IDLE event (less than the expected number of data has b
 695:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        In this case, RxLen output parameter indicates number of data available in reception buf
 696:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 697:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        the received data is handled as a set of uint16_t. In this case, Size must indicate the 
 698:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        of uint16_t available through pData.
 699:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
 700:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       is not empty. Read operations from the RDR register are performed when
 701:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
 702:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       RXNE are mapped on the same bit-field.
 703:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart   UART handle.
 704:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
 705:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
 706:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param RxLen   Number of data elements finally received
 707:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *                (could be lower than Size, in case reception ends on IDLE event)
 708:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
 709:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 710:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 711:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
 712:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                            uint32_t Timeout)
 713:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 714:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
 715:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint16_t *pdata16bits;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 14


 716:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint16_t uhMask;
 717:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tickstart;
 718:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 719:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 720:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 721:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 722:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 723:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 724:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       return  HAL_ERROR;
 725:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 726:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 727:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     __HAL_LOCK(huart);
 728:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 729:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 730:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 731:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 732:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 733:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Init tickstart for timeout management */
 734:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tickstart = HAL_GetTick();
 735:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 736:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxXferSize  = Size;
 737:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 738:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 739:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Computation of UART mask to apply to RDR register */
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     UART_MASK_COMPUTATION(huart);
 741:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 742:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 743:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
 744:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 745:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 746:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata8bits  = NULL;
 747:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 748:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 749:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     else
 750:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 751:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata8bits  = pData;
 752:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata16bits = NULL;
 753:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 754:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 755:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     __HAL_UNLOCK(huart);
 756:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 757:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Initialize output number of received elements */
 758:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     *RxLen = 0U;
 759:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 760:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* as long as data have to be received */
 761:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     while (huart->RxXferCount > 0U)
 762:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 763:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       /* Check if IDLE flag is set */
 764:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 765:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 766:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* Clear IDLE flag in ISR */
 767:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 768:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 769:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
 770:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
 771:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         if (*RxLen > 0U)
 772:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 15


 773:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 774:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 775:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           return HAL_OK;
 776:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 777:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 778:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 779:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       /* Check if RXNE flag is set */
 780:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 781:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 782:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         if (pdata8bits == NULL)
 783:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 784:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 785:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata16bits++;
 786:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 787:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         else
 788:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 789:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 790:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata8bits++;
 791:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 792:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* Increment number of received elements */
 793:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         *RxLen += 1U;
 794:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         huart->RxXferCount--;
 795:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 796:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 797:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       /* Check for the Timeout */
 798:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (Timeout != HAL_MAX_DELAY)
 799:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 800:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 801:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 802:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 803:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 804:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           return HAL_TIMEOUT;
 805:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 806:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 807:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 808:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 809:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Set number of received elements in output parameter : RxLen */
 810:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 811:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 812:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_READY;
 813:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 814:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_OK;
 815:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 816:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 817:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 818:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_BUSY;
 819:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 820:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 821:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 822:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 823:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data
 824:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        is received or an IDLE event occurs.
 825:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  Reception is initiated by this function call. Further progress of reception is achieved 
 826:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        to UART interrupts raised by RXNE and IDLE events. Callback is called at end of receptio
 827:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        number of received data elements.
 828:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 829:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        the received data is handled as a set of uint16_t. In this case, Size must indicate the 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 16


 830:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        of uint16_t available through pData.
 831:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 832:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
 833:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
 834:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 835:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 836:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
 837:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 838:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 839:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 840:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 841:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 842:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 843:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 844:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 845:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       return HAL_ERROR;
 846:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 847:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 848:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     __HAL_LOCK(huart);
 849:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 850:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Set Reception type to reception till IDLE Event*/
 851:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 852:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 853:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 854:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 855:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Check Rx process has been successfully started */
 856:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if (status == HAL_OK)
 857:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 858:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 859:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 860:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 862:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 863:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       else
 864:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 865:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* In case of errors already pending when reception is started,
 866:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            Interrupts may have already been raised and lead to reception abortion.
 867:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            (Overrun error for instance).
 868:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
 869:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         status = HAL_ERROR;
 870:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 871:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 872:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 873:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return status;
 874:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 875:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 876:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 877:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_BUSY;
 878:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 879:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 880:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 881:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 882:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Receive an amount of data in DMA mode till either the expected number
 883:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        of data is received or an IDLE event occurs.
 884:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  Reception is initiated by this function call. Further progress of reception is achieved 
 885:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        to DMA services, transferring automatically received data elements in user reception buf
 886:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        calling registered callbacks at half/end of reception. UART IDLE events are also used to
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 17


 887:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        reception phase as ended. In all cases, callback execution will indicate number of recei
 888:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  When the UART parity is enabled (PCE = 1), the received data contain
 889:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        the parity bit (MSB position).
 890:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 891:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        the received data is handled as a set of uint16_t. In this case, Size must indicate the 
 892:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *        of uint16_t available through pData.
 893:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 894:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
 895:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
 896:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval HAL status
 897:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 898:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
 899:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
 900:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 901:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 902:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 903:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 904:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 905:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 906:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 907:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       return HAL_ERROR;
 908:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 909:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 910:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     __HAL_LOCK(huart);
 911:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 912:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Set Reception type to reception till IDLE Event*/
 913:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 914:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 915:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 916:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 917:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* Check Rx process has been successfully started */
 918:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     if (status == HAL_OK)
 919:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 920:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 921:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 922:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 924:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 925:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       else
 926:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 927:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         /* In case of errors already pending when reception is started,
 928:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            Interrupts may have already been raised and lead to reception abortion.
 929:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            (Overrun error for instance).
 930:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
 931:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         status = HAL_ERROR;
 932:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 933:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 934:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 935:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return status;
 936:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 937:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 938:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 939:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     return HAL_BUSY;
 940:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 941:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 942:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 943:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 18


 944:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
 945:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 946:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 947:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 948:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @}
 949:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 950:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 951:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /** @addtogroup UARTEx_Private_Functions
 952:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @{
 953:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 954:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 955:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 956:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
 957:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart           UART handle.
 958:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
 959:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 960:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 961:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
 962:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
  28              		.loc 1 962 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 962 1 is_stmt 0 view .LVU1
  34 0000 82B0     		sub	sp, sp, #8
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37 0002 02AB     		add	r3, sp, #8
  38 0004 03E90600 		stmdb	r3, {r1, r2}
 963:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
  39              		.loc 1 963 3 is_stmt 1 view .LVU2
 964:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 965:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the USART address length */
 966:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
  40              		.loc 1 966 3 view .LVU3
  41 0008 0268     		ldr	r2, [r0]
  42 000a 5368     		ldr	r3, [r2, #4]
  43 000c 23F01003 		bic	r3, r3, #16
  44 0010 BDF80410 		ldrh	r1, [sp, #4]
  45 0014 0B43     		orrs	r3, r3, r1
  46 0016 5360     		str	r3, [r2, #4]
 967:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 968:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Set the USART address node */
 969:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
  47              		.loc 1 969 3 view .LVU4
  48 0018 0268     		ldr	r2, [r0]
  49 001a 5368     		ldr	r3, [r2, #4]
  50 001c 23F07F43 		bic	r3, r3, #-16777216
  51 0020 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
  52 0024 43EA0163 		orr	r3, r3, r1, lsl #24
  53 0028 5360     		str	r3, [r2, #4]
 970:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
  54              		.loc 1 970 1 is_stmt 0 view .LVU5
  55 002a 02B0     		add	sp, sp, #8
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 19


  58              		@ sp needed
  59 002c 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE159:
  63              		.section	.text.UARTEx_SetNbDataToProcess,"ax",%progbits
  64              		.align	1
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv5-d16
  70              	UARTEx_SetNbDataToProcess:
  71              	.LVL1:
  72              	.LFB160:
 971:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 972:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** /**
 973:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @brief Calculate the number of data to process in RX/TX ISR.
 974:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @note The RX FIFO depth and the TX FIFO depth is extracted from
 975:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   *       the UART configuration registers.
 976:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @param huart UART handle.
 977:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   * @retval None
 978:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   */
 979:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
 980:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** {
  73              		.loc 1 980 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 981:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t rx_fifo_depth;
  78              		.loc 1 981 3 view .LVU7
 982:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t tx_fifo_depth;
  79              		.loc 1 982 3 view .LVU8
 983:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t rx_fifo_threshold;
  80              		.loc 1 983 3 view .LVU9
 984:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t tx_fifo_threshold;
  81              		.loc 1 984 3 view .LVU10
 985:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  82              		.loc 1 985 3 view .LVU11
 986:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
  83              		.loc 1 986 3 view .LVU12
 987:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 988:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   if (huart->FifoMode == UART_FIFOMODE_DISABLE)
  84              		.loc 1 988 3 view .LVU13
  85              		.loc 1 988 12 is_stmt 0 view .LVU14
  86 0000 436E     		ldr	r3, [r0, #100]
  87              		.loc 1 988 6 view .LVU15
  88 0002 2BB9     		cbnz	r3, .L4
 989:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 990:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = 1U;
  89              		.loc 1 990 5 is_stmt 1 view .LVU16
  90              		.loc 1 990 30 is_stmt 0 view .LVU17
  91 0004 0123     		movs	r3, #1
  92 0006 A0F86A30 		strh	r3, [r0, #106]	@ movhi
 991:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = 1U;
  93              		.loc 1 991 5 is_stmt 1 view .LVU18
  94              		.loc 1 991 30 is_stmt 0 view .LVU19
  95 000a A0F86830 		strh	r3, [r0, #104]	@ movhi
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 20


  96 000e 7047     		bx	lr
  97              	.L4:
 980:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t rx_fifo_depth;
  98              		.loc 1 980 1 view .LVU20
  99 0010 30B4     		push	{r4, r5}
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 5, -4
 992:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 993:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   else
 994:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 995:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     rx_fifo_depth = RX_FIFO_DEPTH;
 104              		.loc 1 995 5 is_stmt 1 view .LVU21
 105              	.LVL2:
 996:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tx_fifo_depth = TX_FIFO_DEPTH;
 106              		.loc 1 996 5 view .LVU22
 997:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RX
 107              		.loc 1 997 5 view .LVU23
 108              		.loc 1 997 35 is_stmt 0 view .LVU24
 109 0012 0368     		ldr	r3, [r0]
 110 0014 9A68     		ldr	r2, [r3, #8]
 111              		.loc 1 997 23 view .LVU25
 112 0016 C2F34262 		ubfx	r2, r2, #25, #3
 113              	.LVL3:
 998:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 114              		.loc 1 998 5 is_stmt 1 view .LVU26
 115              		.loc 1 998 35 is_stmt 0 view .LVU27
 116 001a 9968     		ldr	r1, [r3, #8]
 117              		.loc 1 998 23 view .LVU28
 118 001c 490F     		lsrs	r1, r1, #29
 119              	.LVL4:
 999:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 120              		.loc 1 999 5 is_stmt 1 view .LVU29
 121              		.loc 1 999 68 is_stmt 0 view .LVU30
 122 001e 094D     		ldr	r5, .L9
 123 0020 6B5C     		ldrb	r3, [r5, r1]	@ zero_extendqisi2
 124              		.loc 1 999 57 view .LVU31
 125 0022 1B01     		lsls	r3, r3, #4
1000:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 126              		.loc 1 1000 53 view .LVU32
 127 0024 084C     		ldr	r4, .L9+4
 128 0026 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 129              	.LVL5:
 999:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 130              		.loc 1 999 89 view .LVU33
 131 0028 93FBF1F3 		sdiv	r3, r3, r1
 999:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 132              		.loc 1 999 30 view .LVU34
 133 002c A0F86A30 		strh	r3, [r0, #106]	@ movhi
1001:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 134              		.loc 1 1001 5 is_stmt 1 view .LVU35
 135              		.loc 1 1001 68 is_stmt 0 view .LVU36
 136 0030 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 137              		.loc 1 1001 57 view .LVU37
 138 0032 1B01     		lsls	r3, r3, #4
1002:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 21


 139              		.loc 1 1002 53 view .LVU38
 140 0034 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 141              	.LVL6:
1001:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 142              		.loc 1 1001 89 view .LVU39
 143 0036 93FBF2F3 		sdiv	r3, r3, r2
1001:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 144              		.loc 1 1001 30 view .LVU40
 145 003a A0F86830 		strh	r3, [r0, #104]	@ movhi
1003:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
1004:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 146              		.loc 1 1004 1 view .LVU41
 147 003e 30BC     		pop	{r4, r5}
 148              	.LCFI3:
 149              		.cfi_restore 5
 150              		.cfi_restore 4
 151              		.cfi_def_cfa_offset 0
 152 0040 7047     		bx	lr
 153              	.L10:
 154 0042 00BF     		.align	2
 155              	.L9:
 156 0044 00000000 		.word	.LANCHOR0
 157 0048 00000000 		.word	.LANCHOR1
 158              		.cfi_endproc
 159              	.LFE160:
 161              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
 162              		.align	1
 163              		.global	HAL_RS485Ex_Init
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv5-d16
 169              	HAL_RS485Ex_Init:
 170              	.LVL7:
 171              	.LFB144:
 168:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t temp;
 172              		.loc 1 168 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 169:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 176              		.loc 1 169 3 view .LVU43
 172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 177              		.loc 1 172 3 view .LVU44
 172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 178              		.loc 1 172 6 is_stmt 0 view .LVU45
 179 0000 0028     		cmp	r0, #0
 180 0002 3CD0     		beq	.L15
 168:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t temp;
 181              		.loc 1 168 1 view .LVU46
 182 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 24
 185              		.cfi_offset 3, -24
 186              		.cfi_offset 4, -20
 187              		.cfi_offset 5, -16
 188              		.cfi_offset 6, -12
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 22


 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0006 0F46     		mov	r7, r1
 192 0008 1646     		mov	r6, r2
 193 000a 1D46     		mov	r5, r3
 194 000c 0446     		mov	r4, r0
 177:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 195              		.loc 1 177 3 is_stmt 1 view .LVU47
 180:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 196              		.loc 1 180 3 view .LVU48
 183:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 197              		.loc 1 183 3 view .LVU49
 186:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 198              		.loc 1 186 3 view .LVU50
 188:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 199              		.loc 1 188 3 view .LVU51
 188:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 200              		.loc 1 188 12 is_stmt 0 view .LVU52
 201 000e D0F88430 		ldr	r3, [r0, #132]
 202              	.LVL8:
 188:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 203              		.loc 1 188 6 view .LVU53
 204 0012 5BB3     		cbz	r3, .L20
 205              	.LVL9:
 206              	.L13:
 209:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 207              		.loc 1 209 3 is_stmt 1 view .LVU54
 209:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 208              		.loc 1 209 17 is_stmt 0 view .LVU55
 209 0014 2423     		movs	r3, #36
 210 0016 C4F88430 		str	r3, [r4, #132]
 212:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 211              		.loc 1 212 3 is_stmt 1 view .LVU56
 212 001a 2268     		ldr	r2, [r4]
 213 001c 1368     		ldr	r3, [r2]
 214 001e 23F00103 		bic	r3, r3, #1
 215 0022 1360     		str	r3, [r2]
 215:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 216              		.loc 1 215 3 view .LVU57
 215:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 217              		.loc 1 215 7 is_stmt 0 view .LVU58
 218 0024 2046     		mov	r0, r4
 219 0026 FFF7FEFF 		bl	UART_SetConfig
 220              	.LVL10:
 215:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 221              		.loc 1 215 6 view .LVU59
 222 002a 0128     		cmp	r0, #1
 223 002c 1DD0     		beq	.L12
 220:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 224              		.loc 1 220 3 is_stmt 1 view .LVU60
 220:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 225              		.loc 1 220 26 is_stmt 0 view .LVU61
 226 002e A36A     		ldr	r3, [r4, #40]
 220:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 227              		.loc 1 220 6 view .LVU62
 228 0030 0BBB     		cbnz	r3, .L21
 229              	.L14:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 23


 226:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 230              		.loc 1 226 3 is_stmt 1 view .LVU63
 231 0032 2268     		ldr	r2, [r4]
 232 0034 9368     		ldr	r3, [r2, #8]
 233 0036 43F48043 		orr	r3, r3, #16384
 234 003a 9360     		str	r3, [r2, #8]
 229:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 235              		.loc 1 229 3 view .LVU64
 236 003c 2268     		ldr	r2, [r4]
 237 003e 9368     		ldr	r3, [r2, #8]
 238 0040 23F40043 		bic	r3, r3, #32768
 239 0044 3B43     		orrs	r3, r3, r7
 240 0046 9360     		str	r3, [r2, #8]
 232:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 241              		.loc 1 232 3 view .LVU65
 242              	.LVL11:
 233:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 243              		.loc 1 233 3 view .LVU66
 233:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 244              		.loc 1 233 28 is_stmt 0 view .LVU67
 245 0048 2D04     		lsls	r5, r5, #16
 246              	.LVL12:
 233:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 247              		.loc 1 233 8 view .LVU68
 248 004a 45EA4655 		orr	r5, r5, r6, lsl #21
 249              	.LVL13:
 234:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 250              		.loc 1 234 3 is_stmt 1 view .LVU69
 251 004e 2268     		ldr	r2, [r4]
 252 0050 1168     		ldr	r1, [r2]
 253 0052 0C4B     		ldr	r3, .L22
 254 0054 0B40     		ands	r3, r3, r1
 255 0056 1D43     		orrs	r5, r5, r3
 256              	.LVL14:
 234:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 257              		.loc 1 234 3 is_stmt 0 view .LVU70
 258 0058 1560     		str	r5, [r2]
 237:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 259              		.loc 1 237 3 is_stmt 1 view .LVU71
 260 005a 2268     		ldr	r2, [r4]
 261 005c 1368     		ldr	r3, [r2]
 262 005e 43F00103 		orr	r3, r3, #1
 263 0062 1360     		str	r3, [r2]
 240:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 264              		.loc 1 240 3 view .LVU72
 240:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 265              		.loc 1 240 11 is_stmt 0 view .LVU73
 266 0064 2046     		mov	r0, r4
 267 0066 FFF7FEFF 		bl	UART_CheckIdleState
 268              	.LVL15:
 269              	.L12:
 241:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 270              		.loc 1 241 1 view .LVU74
 271 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 272              	.LVL16:
 273              	.L20:
 191:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 24


 274              		.loc 1 191 5 is_stmt 1 view .LVU75
 191:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 275              		.loc 1 191 17 is_stmt 0 view .LVU76
 276 006c 80F88030 		strb	r3, [r0, #128]
 205:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 277              		.loc 1 205 5 is_stmt 1 view .LVU77
 278 0070 FFF7FEFF 		bl	HAL_UART_MspInit
 279              	.LVL17:
 205:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 280              		.loc 1 205 5 is_stmt 0 view .LVU78
 281 0074 CEE7     		b	.L13
 282              	.L21:
 222:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 283              		.loc 1 222 5 is_stmt 1 view .LVU79
 284 0076 2046     		mov	r0, r4
 285 0078 FFF7FEFF 		bl	UART_AdvFeatureConfig
 286              	.LVL18:
 287 007c D9E7     		b	.L14
 288              	.LVL19:
 289              	.L15:
 290              	.LCFI5:
 291              		.cfi_def_cfa_offset 0
 292              		.cfi_restore 3
 293              		.cfi_restore 4
 294              		.cfi_restore 5
 295              		.cfi_restore 6
 296              		.cfi_restore 7
 297              		.cfi_restore 14
 174:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 298              		.loc 1 174 12 is_stmt 0 view .LVU80
 299 007e 0120     		movs	r0, #1
 300              	.LVL20:
 241:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 301              		.loc 1 241 1 view .LVU81
 302 0080 7047     		bx	lr
 303              	.L23:
 304 0082 00BF     		.align	2
 305              	.L22:
 306 0084 FFFF00FC 		.word	-67043329
 307              		.cfi_endproc
 308              	.LFE144:
 310              		.section	.text.HAL_UARTEx_WakeupCallback,"ax",%progbits
 311              		.align	1
 312              		.weak	HAL_UARTEx_WakeupCallback
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv5-d16
 318              	HAL_UARTEx_WakeupCallback:
 319              	.LVL21:
 320              	.LFB145:
 273:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 321              		.loc 1 273 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 25


 275:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 326              		.loc 1 275 3 view .LVU83
 280:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 327              		.loc 1 280 1 is_stmt 0 view .LVU84
 328 0000 7047     		bx	lr
 329              		.cfi_endproc
 330              	.LFE145:
 332              		.section	.text.HAL_UARTEx_RxFifoFullCallback,"ax",%progbits
 333              		.align	1
 334              		.weak	HAL_UARTEx_RxFifoFullCallback
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu fpv5-d16
 340              	HAL_UARTEx_RxFifoFullCallback:
 341              	.LVL22:
 342              	.LFB146:
 288:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 343              		.loc 1 288 1 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 290:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 348              		.loc 1 290 3 view .LVU86
 295:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 349              		.loc 1 295 1 is_stmt 0 view .LVU87
 350 0000 7047     		bx	lr
 351              		.cfi_endproc
 352              	.LFE146:
 354              		.section	.text.HAL_UARTEx_TxFifoEmptyCallback,"ax",%progbits
 355              		.align	1
 356              		.weak	HAL_UARTEx_TxFifoEmptyCallback
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv5-d16
 362              	HAL_UARTEx_TxFifoEmptyCallback:
 363              	.LVL23:
 364              	.LFB147:
 303:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 365              		.loc 1 303 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 305:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 370              		.loc 1 305 3 view .LVU89
 310:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 371              		.loc 1 310 1 is_stmt 0 view .LVU90
 372 0000 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE147:
 376              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 377              		.align	1
 378              		.global	HAL_MultiProcessorEx_AddressLength_Set
 379              		.syntax unified
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 26


 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv5-d16
 384              	HAL_MultiProcessorEx_AddressLength_Set:
 385              	.LVL24:
 386              	.LFB148:
 388:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 387              		.loc 1 388 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 390:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 391              		.loc 1 390 3 view .LVU92
 390:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 392              		.loc 1 390 6 is_stmt 0 view .LVU93
 393 0000 C0B1     		cbz	r0, .L29
 388:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 394              		.loc 1 388 1 view .LVU94
 395 0002 08B5     		push	{r3, lr}
 396              	.LCFI6:
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 3, -8
 399              		.cfi_offset 14, -4
 400 0004 0346     		mov	r3, r0
 396:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 401              		.loc 1 396 3 is_stmt 1 view .LVU95
 398:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 402              		.loc 1 398 3 view .LVU96
 398:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 403              		.loc 1 398 17 is_stmt 0 view .LVU97
 404 0006 2422     		movs	r2, #36
 405 0008 C0F88420 		str	r2, [r0, #132]
 401:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 406              		.loc 1 401 3 is_stmt 1 view .LVU98
 407 000c 0068     		ldr	r0, [r0]
 408              	.LVL25:
 401:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 409              		.loc 1 401 3 is_stmt 0 view .LVU99
 410 000e 0268     		ldr	r2, [r0]
 411 0010 22F00102 		bic	r2, r2, #1
 412 0014 0260     		str	r2, [r0]
 404:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 413              		.loc 1 404 3 is_stmt 1 view .LVU100
 414 0016 1868     		ldr	r0, [r3]
 415 0018 4268     		ldr	r2, [r0, #4]
 416 001a 22F01002 		bic	r2, r2, #16
 417 001e 1143     		orrs	r1, r1, r2
 418              	.LVL26:
 404:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 419              		.loc 1 404 3 is_stmt 0 view .LVU101
 420 0020 4160     		str	r1, [r0, #4]
 407:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 421              		.loc 1 407 3 is_stmt 1 view .LVU102
 422 0022 1968     		ldr	r1, [r3]
 423 0024 0A68     		ldr	r2, [r1]
 424 0026 42F00102 		orr	r2, r2, #1
 425 002a 0A60     		str	r2, [r1]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 27


 410:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 426              		.loc 1 410 3 view .LVU103
 410:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 427              		.loc 1 410 11 is_stmt 0 view .LVU104
 428 002c 1846     		mov	r0, r3
 429 002e FFF7FEFF 		bl	UART_CheckIdleState
 430              	.LVL27:
 411:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 431              		.loc 1 411 1 view .LVU105
 432 0032 08BD     		pop	{r3, pc}
 433              	.LVL28:
 434              	.L29:
 435              	.LCFI7:
 436              		.cfi_def_cfa_offset 0
 437              		.cfi_restore 3
 438              		.cfi_restore 14
 392:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 439              		.loc 1 392 12 view .LVU106
 440 0034 0120     		movs	r0, #1
 441              	.LVL29:
 411:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 442              		.loc 1 411 1 view .LVU107
 443 0036 7047     		bx	lr
 444              		.cfi_endproc
 445              	.LFE148:
 447              		.section	.text.HAL_UARTEx_StopModeWakeUpSourceConfig,"ax",%progbits
 448              		.align	1
 449              		.global	HAL_UARTEx_StopModeWakeUpSourceConfig
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv5-d16
 455              	HAL_UARTEx_StopModeWakeUpSourceConfig:
 456              	.LVL30:
 457              	.LFB149:
 426:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 458              		.loc 1 426 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 426:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 462              		.loc 1 426 1 is_stmt 0 view .LVU109
 463 0000 10B5     		push	{r4, lr}
 464              	.LCFI8:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468 0002 84B0     		sub	sp, sp, #16
 469              	.LCFI9:
 470              		.cfi_def_cfa_offset 24
 471 0004 04AB     		add	r3, sp, #16
 472 0006 03E90600 		stmdb	r3, {r1, r2}
 427:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tickstart;
 473              		.loc 1 427 3 is_stmt 1 view .LVU110
 474              	.LVL31:
 428:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 475              		.loc 1 428 3 view .LVU111
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 28


 431:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* check the wake-up selection parameter */
 476              		.loc 1 431 3 view .LVU112
 433:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 477              		.loc 1 433 3 view .LVU113
 436:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 478              		.loc 1 436 3 view .LVU114
 436:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 479              		.loc 1 436 3 view .LVU115
 480 000a 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 481 000e 012B     		cmp	r3, #1
 482 0010 35D0     		beq	.L38
 483 0012 0446     		mov	r4, r0
 436:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 484              		.loc 1 436 3 discriminator 2 view .LVU116
 485 0014 0123     		movs	r3, #1
 486 0016 80F88030 		strb	r3, [r0, #128]
 436:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 487              		.loc 1 436 3 discriminator 2 view .LVU117
 438:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 488              		.loc 1 438 3 discriminator 2 view .LVU118
 438:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 489              		.loc 1 438 17 is_stmt 0 discriminator 2 view .LVU119
 490 001a 2423     		movs	r3, #36
 491 001c C0F88430 		str	r3, [r0, #132]
 441:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 492              		.loc 1 441 3 is_stmt 1 discriminator 2 view .LVU120
 493 0020 0268     		ldr	r2, [r0]
 494 0022 1368     		ldr	r3, [r2]
 495 0024 23F00103 		bic	r3, r3, #1
 496 0028 1360     		str	r3, [r2]
 444:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 497              		.loc 1 444 3 discriminator 2 view .LVU121
 498 002a 0168     		ldr	r1, [r0]
 499 002c 8B68     		ldr	r3, [r1, #8]
 500 002e 23F44013 		bic	r3, r3, #3145728
 501 0032 029A     		ldr	r2, [sp, #8]
 502 0034 1343     		orrs	r3, r3, r2
 503 0036 8B60     		str	r3, [r1, #8]
 446:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 504              		.loc 1 446 3 discriminator 2 view .LVU122
 446:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 505              		.loc 1 446 6 is_stmt 0 discriminator 2 view .LVU123
 506 0038 AAB1     		cbz	r2, .L41
 507              	.LVL32:
 508              	.L36:
 452:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 509              		.loc 1 452 3 is_stmt 1 view .LVU124
 510 003a 2268     		ldr	r2, [r4]
 511 003c 1368     		ldr	r3, [r2]
 512 003e 43F00103 		orr	r3, r3, #1
 513 0042 1360     		str	r3, [r2]
 455:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 514              		.loc 1 455 3 view .LVU125
 455:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 515              		.loc 1 455 15 is_stmt 0 view .LVU126
 516 0044 FFF7FEFF 		bl	HAL_GetTick
 517              	.LVL33:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 29


 518 0048 0346     		mov	r3, r0
 519              	.LVL34:
 458:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 520              		.loc 1 458 3 is_stmt 1 view .LVU127
 458:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 521              		.loc 1 458 7 is_stmt 0 view .LVU128
 522 004a 6FF07E42 		mvn	r2, #-33554432
 523 004e 0092     		str	r2, [sp]
 524 0050 0022     		movs	r2, #0
 525 0052 4FF48001 		mov	r1, #4194304
 526 0056 2046     		mov	r0, r4
 527              	.LVL35:
 458:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 528              		.loc 1 458 7 view .LVU129
 529 0058 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 530              	.LVL36:
 458:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 531              		.loc 1 458 6 view .LVU130
 532 005c 48B9     		cbnz	r0, .L39
 465:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 533              		.loc 1 465 5 is_stmt 1 view .LVU131
 465:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 534              		.loc 1 465 19 is_stmt 0 view .LVU132
 535 005e 2023     		movs	r3, #32
 536 0060 C4F88430 		str	r3, [r4, #132]
 537 0064 06E0     		b	.L37
 538              	.LVL37:
 539              	.L41:
 448:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 540              		.loc 1 448 5 is_stmt 1 view .LVU133
 541 0066 04AB     		add	r3, sp, #16
 542 0068 13E90600 		ldmdb	r3, {r1, r2}
 543 006c FFF7FEFF 		bl	UARTEx_Wakeup_AddressConfig
 544              	.LVL38:
 448:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 545              		.loc 1 448 5 is_stmt 0 view .LVU134
 546 0070 E3E7     		b	.L36
 547              	.L39:
 460:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 548              		.loc 1 460 12 view .LVU135
 549 0072 0320     		movs	r0, #3
 550              	.L37:
 551              	.LVL39:
 469:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 552              		.loc 1 469 3 is_stmt 1 view .LVU136
 469:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 553              		.loc 1 469 3 view .LVU137
 554 0074 0023     		movs	r3, #0
 555 0076 84F88030 		strb	r3, [r4, #128]
 469:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 556              		.loc 1 469 3 view .LVU138
 471:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 557              		.loc 1 471 3 view .LVU139
 558              	.LVL40:
 559              	.L35:
 472:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 560              		.loc 1 472 1 is_stmt 0 view .LVU140
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 30


 561 007a 04B0     		add	sp, sp, #16
 562              	.LCFI10:
 563              		.cfi_remember_state
 564              		.cfi_def_cfa_offset 8
 565              		@ sp needed
 566 007c 10BD     		pop	{r4, pc}
 567              	.LVL41:
 568              	.L38:
 569              	.LCFI11:
 570              		.cfi_restore_state
 436:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 571              		.loc 1 436 3 view .LVU141
 572 007e 0220     		movs	r0, #2
 573              	.LVL42:
 436:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 574              		.loc 1 436 3 view .LVU142
 575 0080 FBE7     		b	.L35
 576              		.cfi_endproc
 577              	.LFE149:
 579              		.section	.text.HAL_UARTEx_EnableStopMode,"ax",%progbits
 580              		.align	1
 581              		.global	HAL_UARTEx_EnableStopMode
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv5-d16
 587              	HAL_UARTEx_EnableStopMode:
 588              	.LVL43:
 589              	.LFB150:
 481:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 590              		.loc 1 481 1 is_stmt 1 view -0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 483:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 595              		.loc 1 483 3 view .LVU144
 483:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 596              		.loc 1 483 3 view .LVU145
 597 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 598 0004 012B     		cmp	r3, #1
 599 0006 10D0     		beq	.L45
 483:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 600              		.loc 1 483 3 discriminator 2 view .LVU146
 601 0008 0123     		movs	r3, #1
 602 000a 80F88030 		strb	r3, [r0, #128]
 603              	.L44:
 483:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 604              		.loc 1 483 3 discriminator 1 view .LVU147
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 605              		.loc 1 486 3 discriminator 1 view .LVU148
 606              	.LBB22:
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 607              		.loc 1 486 3 discriminator 1 view .LVU149
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 608              		.loc 1 486 3 discriminator 1 view .LVU150
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 31


 609              		.loc 1 486 3 discriminator 1 view .LVU151
 610 000e 0268     		ldr	r2, [r0]
 611              	.LVL44:
 612              	.LBB23:
 613              	.LBI23:
 614              		.file 2 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h"
   1:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 32


  52:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 33


 109:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 34


 166:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 207:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 35


 223:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 264:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 36


 280:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 321:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 37


 337:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 38


 394:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 39


 451:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 40


 508:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 549:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 41


 565:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 42


 622:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 43


 679:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 44


 736:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 45


 793:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 46


 850:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 47


 907:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 948:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 949:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 950:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 951:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 955:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 957:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 959:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 960:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 961:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 962:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 48


 964:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 966:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 967:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 969:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 972:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 973:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 974:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 976:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 977:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 981:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 985:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 989:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 992:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 994:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 996:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1000:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
1006:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
1007:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1010:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1011:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
1012:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1013:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1014:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1015:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
1020:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 49


1021:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1023:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   {
1026:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
1027:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   }
1028:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
1030:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1032:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1033:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
1039:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1041:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1042:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1043:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
1047:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
1048:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1050:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1051:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1052:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
1057:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   {
1062:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
1063:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
1065:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   }
1066:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1068:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
1069:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
1070:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1071:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1072:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1073:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 50


1078:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1080:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
1086:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    */
1089:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
1090:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   {
1091:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
1092:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   }
1093:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
1095:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1096:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1097:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1102:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
1107:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1109:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1110:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1111:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
1114:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     */
1117:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1119:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
1121:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1122:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1123:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1124:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
1129:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1131:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
1132:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1133:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 51


1135:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
1136:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     */
1139:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1141:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
1143:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1144:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1145:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1146:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
1151:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 615              		.loc 2 1151 31 discriminator 1 view .LVU152
 616              	.LBB24:
1152:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1153:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 617              		.loc 2 1153 5 discriminator 1 view .LVU153
1154:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1155:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 618              		.loc 2 1155 4 discriminator 1 view .LVU154
 619              		.syntax unified
 620              	@ 1155 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 621 0010 52E8003F 		ldrex r3, [r2]
 622              	@ 0 "" 2
 623              	.LVL45:
1156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 624              		.loc 2 1156 4 discriminator 1 view .LVU155
 625              		.loc 2 1156 4 is_stmt 0 discriminator 1 view .LVU156
 626              		.thumb
 627              		.syntax unified
 628              	.LBE24:
 629              	.LBE23:
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 630              		.loc 1 486 3 discriminator 1 view .LVU157
 631 0014 43F00203 		orr	r3, r3, #2
 632              	.LVL46:
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 633              		.loc 1 486 3 is_stmt 1 discriminator 1 view .LVU158
 634              	.LBB25:
 635              	.LBI25:
1157:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
1158:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1160:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
1168:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 52


1169:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1170:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1171:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1174:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
1175:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1176:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1177:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1178:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
1185:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1187:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
1188:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1189:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
1191:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
1192:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1193:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1194:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
1195:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
1202:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 636              		.loc 2 1202 31 discriminator 1 view .LVU159
 637              	.LBB26:
1203:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
1204:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 638              		.loc 2 1204 4 discriminator 1 view .LVU160
1205:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
1206:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 639              		.loc 2 1206 4 discriminator 1 view .LVU161
 640              		.syntax unified
 641              	@ 1206 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 642 0018 42E80031 		strex r1, r3, [r2]
 643              	@ 0 "" 2
 644              	.LVL47:
1207:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 645              		.loc 2 1207 4 discriminator 1 view .LVU162
 646              		.loc 2 1207 4 is_stmt 0 discriminator 1 view .LVU163
 647              		.thumb
 648              		.syntax unified
 649              	.LBE26:
 650              	.LBE25:
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 651              		.loc 1 486 3 discriminator 1 view .LVU164
 652 001c 0029     		cmp	r1, #0
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 53


 653 001e F6D1     		bne	.L44
 654              	.LBE22:
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 655              		.loc 1 486 3 is_stmt 1 discriminator 2 view .LVU165
 489:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 656              		.loc 1 489 3 discriminator 2 view .LVU166
 489:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 657              		.loc 1 489 3 discriminator 2 view .LVU167
 658 0020 0023     		movs	r3, #0
 659              	.LVL48:
 489:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 660              		.loc 1 489 3 is_stmt 0 discriminator 2 view .LVU168
 661 0022 80F88030 		strb	r3, [r0, #128]
 489:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 662              		.loc 1 489 3 is_stmt 1 discriminator 2 view .LVU169
 491:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 663              		.loc 1 491 3 discriminator 2 view .LVU170
 491:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 664              		.loc 1 491 10 is_stmt 0 discriminator 2 view .LVU171
 665 0026 1846     		mov	r0, r3
 666              	.LVL49:
 491:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 667              		.loc 1 491 10 discriminator 2 view .LVU172
 668 0028 7047     		bx	lr
 669              	.LVL50:
 670              	.L45:
 483:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 671              		.loc 1 483 3 view .LVU173
 672 002a 0220     		movs	r0, #2
 673              	.LVL51:
 492:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 674              		.loc 1 492 1 view .LVU174
 675 002c 7047     		bx	lr
 676              		.cfi_endproc
 677              	.LFE150:
 679              		.section	.text.HAL_UARTEx_DisableStopMode,"ax",%progbits
 680              		.align	1
 681              		.global	HAL_UARTEx_DisableStopMode
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu fpv5-d16
 687              	HAL_UARTEx_DisableStopMode:
 688              	.LVL52:
 689              	.LFB151:
 500:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   /* Process Locked */
 690              		.loc 1 500 1 is_stmt 1 view -0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 502:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 695              		.loc 1 502 3 view .LVU176
 502:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 696              		.loc 1 502 3 view .LVU177
 697 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 698 0004 012B     		cmp	r3, #1
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 54


 699 0006 10D0     		beq	.L49
 502:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 700              		.loc 1 502 3 discriminator 2 view .LVU178
 701 0008 0123     		movs	r3, #1
 702 000a 80F88030 		strb	r3, [r0, #128]
 703              	.L48:
 502:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 704              		.loc 1 502 3 discriminator 1 view .LVU179
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 705              		.loc 1 505 3 discriminator 1 view .LVU180
 706              	.LBB27:
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 707              		.loc 1 505 3 discriminator 1 view .LVU181
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 708              		.loc 1 505 3 discriminator 1 view .LVU182
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 709              		.loc 1 505 3 discriminator 1 view .LVU183
 710 000e 0268     		ldr	r2, [r0]
 711              	.LVL53:
 712              	.LBB28:
 713              	.LBI28:
1151:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 714              		.loc 2 1151 31 discriminator 1 view .LVU184
 715              	.LBB29:
1153:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 716              		.loc 2 1153 5 discriminator 1 view .LVU185
1155:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 717              		.loc 2 1155 4 discriminator 1 view .LVU186
 718              		.syntax unified
 719              	@ 1155 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 720 0010 52E8003F 		ldrex r3, [r2]
 721              	@ 0 "" 2
 722              	.LVL54:
1156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 723              		.loc 2 1156 4 discriminator 1 view .LVU187
1156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 724              		.loc 2 1156 4 is_stmt 0 discriminator 1 view .LVU188
 725              		.thumb
 726              		.syntax unified
 727              	.LBE29:
 728              	.LBE28:
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 729              		.loc 1 505 3 discriminator 1 view .LVU189
 730 0014 23F00203 		bic	r3, r3, #2
 731              	.LVL55:
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 732              		.loc 1 505 3 is_stmt 1 discriminator 1 view .LVU190
 733              	.LBB30:
 734              	.LBI30:
1202:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 735              		.loc 2 1202 31 discriminator 1 view .LVU191
 736              	.LBB31:
1204:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 737              		.loc 2 1204 4 discriminator 1 view .LVU192
1206:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 738              		.loc 2 1206 4 discriminator 1 view .LVU193
 739              		.syntax unified
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 55


 740              	@ 1206 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 741 0018 42E80031 		strex r1, r3, [r2]
 742              	@ 0 "" 2
 743              	.LVL56:
 744              		.loc 2 1207 4 discriminator 1 view .LVU194
 745              		.loc 2 1207 4 is_stmt 0 discriminator 1 view .LVU195
 746              		.thumb
 747              		.syntax unified
 748              	.LBE31:
 749              	.LBE30:
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 750              		.loc 1 505 3 discriminator 1 view .LVU196
 751 001c 0029     		cmp	r1, #0
 752 001e F6D1     		bne	.L48
 753              	.LBE27:
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 754              		.loc 1 505 3 is_stmt 1 discriminator 2 view .LVU197
 508:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 755              		.loc 1 508 3 discriminator 2 view .LVU198
 508:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 756              		.loc 1 508 3 discriminator 2 view .LVU199
 757 0020 0023     		movs	r3, #0
 758              	.LVL57:
 508:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 759              		.loc 1 508 3 is_stmt 0 discriminator 2 view .LVU200
 760 0022 80F88030 		strb	r3, [r0, #128]
 508:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 761              		.loc 1 508 3 is_stmt 1 discriminator 2 view .LVU201
 510:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 762              		.loc 1 510 3 discriminator 2 view .LVU202
 510:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 763              		.loc 1 510 10 is_stmt 0 discriminator 2 view .LVU203
 764 0026 1846     		mov	r0, r3
 765              	.LVL58:
 510:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 766              		.loc 1 510 10 discriminator 2 view .LVU204
 767 0028 7047     		bx	lr
 768              	.LVL59:
 769              	.L49:
 502:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 770              		.loc 1 502 3 view .LVU205
 771 002a 0220     		movs	r0, #2
 772              	.LVL60:
 511:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 773              		.loc 1 511 1 view .LVU206
 774 002c 7047     		bx	lr
 775              		.cfi_endproc
 776              	.LFE151:
 778              		.section	.text.HAL_UARTEx_EnableFifoMode,"ax",%progbits
 779              		.align	1
 780              		.global	HAL_UARTEx_EnableFifoMode
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv5-d16
 786              	HAL_UARTEx_EnableFifoMode:
 787              	.LVL61:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 56


 788              	.LFB152:
 519:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 789              		.loc 1 519 1 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 520:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 793              		.loc 1 520 3 view .LVU208
 523:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 794              		.loc 1 523 3 view .LVU209
 526:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 795              		.loc 1 526 3 view .LVU210
 526:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 796              		.loc 1 526 3 view .LVU211
 797 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 798 0004 012B     		cmp	r3, #1
 799 0006 1DD0     		beq	.L52
 519:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 800              		.loc 1 519 1 is_stmt 0 discriminator 2 view .LVU212
 801 0008 10B5     		push	{r4, lr}
 802              	.LCFI12:
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 4, -8
 805              		.cfi_offset 14, -4
 806 000a 0446     		mov	r4, r0
 526:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 807              		.loc 1 526 3 is_stmt 1 discriminator 2 view .LVU213
 808 000c 0123     		movs	r3, #1
 809 000e 80F88030 		strb	r3, [r0, #128]
 526:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 810              		.loc 1 526 3 discriminator 2 view .LVU214
 528:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 811              		.loc 1 528 3 discriminator 2 view .LVU215
 528:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 812              		.loc 1 528 17 is_stmt 0 discriminator 2 view .LVU216
 813 0012 2423     		movs	r3, #36
 814 0014 C0F88430 		str	r3, [r0, #132]
 531:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 815              		.loc 1 531 3 is_stmt 1 discriminator 2 view .LVU217
 531:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 816              		.loc 1 531 12 is_stmt 0 discriminator 2 view .LVU218
 817 0018 0268     		ldr	r2, [r0]
 531:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 818              		.loc 1 531 10 discriminator 2 view .LVU219
 819 001a 1368     		ldr	r3, [r2]
 820              	.LVL62:
 534:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 821              		.loc 1 534 3 is_stmt 1 discriminator 2 view .LVU220
 822 001c 1168     		ldr	r1, [r2]
 823 001e 21F00101 		bic	r1, r1, #1
 824 0022 1160     		str	r1, [r2]
 537:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_ENABLE;
 825              		.loc 1 537 3 discriminator 2 view .LVU221
 826 0024 43F00053 		orr	r3, r3, #536870912
 827              	.LVL63:
 538:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 828              		.loc 1 538 3 discriminator 2 view .LVU222
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 57


 538:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 829              		.loc 1 538 19 is_stmt 0 discriminator 2 view .LVU223
 830 0028 4FF00052 		mov	r2, #536870912
 831 002c 4266     		str	r2, [r0, #100]
 541:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 832              		.loc 1 541 3 is_stmt 1 discriminator 2 view .LVU224
 833 002e 0268     		ldr	r2, [r0]
 834 0030 1360     		str	r3, [r2]
 544:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 835              		.loc 1 544 3 discriminator 2 view .LVU225
 836 0032 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 837              	.LVL64:
 546:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 838              		.loc 1 546 3 discriminator 2 view .LVU226
 546:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 839              		.loc 1 546 17 is_stmt 0 discriminator 2 view .LVU227
 840 0036 2023     		movs	r3, #32
 841 0038 C4F88430 		str	r3, [r4, #132]
 549:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 842              		.loc 1 549 3 is_stmt 1 discriminator 2 view .LVU228
 549:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 843              		.loc 1 549 3 discriminator 2 view .LVU229
 844 003c 0020     		movs	r0, #0
 845 003e 84F88000 		strb	r0, [r4, #128]
 549:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 846              		.loc 1 549 3 discriminator 2 view .LVU230
 551:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 847              		.loc 1 551 3 discriminator 2 view .LVU231
 552:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 848              		.loc 1 552 1 is_stmt 0 discriminator 2 view .LVU232
 849 0042 10BD     		pop	{r4, pc}
 850              	.LVL65:
 851              	.L52:
 852              	.LCFI13:
 853              		.cfi_def_cfa_offset 0
 854              		.cfi_restore 4
 855              		.cfi_restore 14
 526:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 856              		.loc 1 526 3 view .LVU233
 857 0044 0220     		movs	r0, #2
 858              	.LVL66:
 552:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 859              		.loc 1 552 1 view .LVU234
 860 0046 7047     		bx	lr
 861              		.cfi_endproc
 862              	.LFE152:
 864              		.section	.text.HAL_UARTEx_DisableFifoMode,"ax",%progbits
 865              		.align	1
 866              		.global	HAL_UARTEx_DisableFifoMode
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv5-d16
 872              	HAL_UARTEx_DisableFifoMode:
 873              	.LVL67:
 874              	.LFB153:
 560:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 58


 875              		.loc 1 560 1 is_stmt 1 view -0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 561:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 880              		.loc 1 561 3 view .LVU236
 564:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 881              		.loc 1 564 3 view .LVU237
 567:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 882              		.loc 1 567 3 view .LVU238
 567:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 883              		.loc 1 567 3 view .LVU239
 884 0000 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 885 0004 012B     		cmp	r3, #1
 886 0006 18D0     		beq	.L59
 567:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 887              		.loc 1 567 3 discriminator 2 view .LVU240
 888 0008 0123     		movs	r3, #1
 889 000a 80F88030 		strb	r3, [r0, #128]
 567:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 890              		.loc 1 567 3 discriminator 2 view .LVU241
 569:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 891              		.loc 1 569 3 discriminator 2 view .LVU242
 569:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 892              		.loc 1 569 17 is_stmt 0 discriminator 2 view .LVU243
 893 000e 2423     		movs	r3, #36
 894 0010 C0F88430 		str	r3, [r0, #132]
 572:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 895              		.loc 1 572 3 is_stmt 1 discriminator 2 view .LVU244
 572:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 896              		.loc 1 572 12 is_stmt 0 discriminator 2 view .LVU245
 897 0014 0368     		ldr	r3, [r0]
 572:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 898              		.loc 1 572 10 discriminator 2 view .LVU246
 899 0016 1A68     		ldr	r2, [r3]
 900              	.LVL68:
 575:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 901              		.loc 1 575 3 is_stmt 1 discriminator 2 view .LVU247
 902 0018 1968     		ldr	r1, [r3]
 903 001a 21F00101 		bic	r1, r1, #1
 904 001e 1960     		str	r1, [r3]
 578:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_DISABLE;
 905              		.loc 1 578 3 discriminator 2 view .LVU248
 906 0020 22F00052 		bic	r2, r2, #536870912
 907              	.LVL69:
 579:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 908              		.loc 1 579 3 discriminator 2 view .LVU249
 579:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 909              		.loc 1 579 19 is_stmt 0 discriminator 2 view .LVU250
 910 0024 0023     		movs	r3, #0
 911 0026 4366     		str	r3, [r0, #100]
 582:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 912              		.loc 1 582 3 is_stmt 1 discriminator 2 view .LVU251
 913 0028 0168     		ldr	r1, [r0]
 914 002a 0A60     		str	r2, [r1]
 584:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 59


 915              		.loc 1 584 3 discriminator 2 view .LVU252
 584:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 916              		.loc 1 584 17 is_stmt 0 discriminator 2 view .LVU253
 917 002c 2022     		movs	r2, #32
 918              	.LVL70:
 584:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 919              		.loc 1 584 17 discriminator 2 view .LVU254
 920 002e C0F88420 		str	r2, [r0, #132]
 921              	.LVL71:
 587:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 922              		.loc 1 587 3 is_stmt 1 discriminator 2 view .LVU255
 587:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 923              		.loc 1 587 3 discriminator 2 view .LVU256
 924 0032 80F88030 		strb	r3, [r0, #128]
 587:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 925              		.loc 1 587 3 discriminator 2 view .LVU257
 589:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 926              		.loc 1 589 3 discriminator 2 view .LVU258
 589:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 927              		.loc 1 589 10 is_stmt 0 discriminator 2 view .LVU259
 928 0036 1846     		mov	r0, r3
 929              	.LVL72:
 589:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 930              		.loc 1 589 10 discriminator 2 view .LVU260
 931 0038 7047     		bx	lr
 932              	.LVL73:
 933              	.L59:
 567:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 934              		.loc 1 567 3 view .LVU261
 935 003a 0220     		movs	r0, #2
 936              	.LVL74:
 590:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 937              		.loc 1 590 1 view .LVU262
 938 003c 7047     		bx	lr
 939              		.cfi_endproc
 940              	.LFE153:
 942              		.section	.text.HAL_UARTEx_SetTxFifoThreshold,"ax",%progbits
 943              		.align	1
 944              		.global	HAL_UARTEx_SetTxFifoThreshold
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu fpv5-d16
 950              	HAL_UARTEx_SetTxFifoThreshold:
 951              	.LVL75:
 952              	.LFB154:
 606:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 953              		.loc 1 606 1 is_stmt 1 view -0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 606:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 957              		.loc 1 606 1 is_stmt 0 view .LVU264
 958 0000 38B5     		push	{r3, r4, r5, lr}
 959              	.LCFI14:
 960              		.cfi_def_cfa_offset 16
 961              		.cfi_offset 3, -16
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 60


 962              		.cfi_offset 4, -12
 963              		.cfi_offset 5, -8
 964              		.cfi_offset 14, -4
 607:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 965              		.loc 1 607 3 is_stmt 1 view .LVU265
 610:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));
 966              		.loc 1 610 3 view .LVU266
 611:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 967              		.loc 1 611 3 view .LVU267
 614:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 968              		.loc 1 614 3 view .LVU268
 614:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 969              		.loc 1 614 3 view .LVU269
 970 0002 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 971 0006 012B     		cmp	r3, #1
 972 0008 1DD0     		beq	.L62
 973 000a 0446     		mov	r4, r0
 614:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 974              		.loc 1 614 3 discriminator 2 view .LVU270
 975 000c 0123     		movs	r3, #1
 976 000e 80F88030 		strb	r3, [r0, #128]
 614:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 977              		.loc 1 614 3 discriminator 2 view .LVU271
 616:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 978              		.loc 1 616 3 discriminator 2 view .LVU272
 616:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 979              		.loc 1 616 17 is_stmt 0 discriminator 2 view .LVU273
 980 0012 2423     		movs	r3, #36
 981 0014 C0F88430 		str	r3, [r0, #132]
 619:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 982              		.loc 1 619 3 is_stmt 1 discriminator 2 view .LVU274
 619:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 983              		.loc 1 619 12 is_stmt 0 discriminator 2 view .LVU275
 984 0018 0368     		ldr	r3, [r0]
 619:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 985              		.loc 1 619 10 discriminator 2 view .LVU276
 986 001a 1D68     		ldr	r5, [r3]
 987              	.LVL76:
 622:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 988              		.loc 1 622 3 is_stmt 1 discriminator 2 view .LVU277
 989 001c 1A68     		ldr	r2, [r3]
 990 001e 22F00102 		bic	r2, r2, #1
 991 0022 1A60     		str	r2, [r3]
 625:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 992              		.loc 1 625 3 discriminator 2 view .LVU278
 993 0024 0268     		ldr	r2, [r0]
 994 0026 9368     		ldr	r3, [r2, #8]
 995 0028 23F06043 		bic	r3, r3, #-536870912
 996 002c 1943     		orrs	r1, r1, r3
 997              	.LVL77:
 625:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 998              		.loc 1 625 3 is_stmt 0 discriminator 2 view .LVU279
 999 002e 9160     		str	r1, [r2, #8]
 628:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1000              		.loc 1 628 3 is_stmt 1 discriminator 2 view .LVU280
 1001 0030 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 1002              	.LVL78:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 61


 631:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1003              		.loc 1 631 3 discriminator 2 view .LVU281
 1004 0034 2368     		ldr	r3, [r4]
 1005 0036 1D60     		str	r5, [r3]
 633:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1006              		.loc 1 633 3 discriminator 2 view .LVU282
 633:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1007              		.loc 1 633 17 is_stmt 0 discriminator 2 view .LVU283
 1008 0038 2023     		movs	r3, #32
 1009 003a C4F88430 		str	r3, [r4, #132]
 636:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1010              		.loc 1 636 3 is_stmt 1 discriminator 2 view .LVU284
 636:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1011              		.loc 1 636 3 discriminator 2 view .LVU285
 1012 003e 0020     		movs	r0, #0
 1013 0040 84F88000 		strb	r0, [r4, #128]
 636:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1014              		.loc 1 636 3 discriminator 2 view .LVU286
 638:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 1015              		.loc 1 638 3 discriminator 2 view .LVU287
 1016              	.LVL79:
 1017              	.L61:
 639:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1018              		.loc 1 639 1 is_stmt 0 view .LVU288
 1019 0044 38BD     		pop	{r3, r4, r5, pc}
 1020              	.LVL80:
 1021              	.L62:
 614:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1022              		.loc 1 614 3 view .LVU289
 1023 0046 0220     		movs	r0, #2
 1024              	.LVL81:
 614:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1025              		.loc 1 614 3 view .LVU290
 1026 0048 FCE7     		b	.L61
 1027              		.cfi_endproc
 1028              	.LFE154:
 1030              		.section	.text.HAL_UARTEx_SetRxFifoThreshold,"ax",%progbits
 1031              		.align	1
 1032              		.global	HAL_UARTEx_SetRxFifoThreshold
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1036              		.fpu fpv5-d16
 1038              	HAL_UARTEx_SetRxFifoThreshold:
 1039              	.LVL82:
 1040              	.LFB155:
 655:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 1041              		.loc 1 655 1 is_stmt 1 view -0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 655:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 1045              		.loc 1 655 1 is_stmt 0 view .LVU292
 1046 0000 38B5     		push	{r3, r4, r5, lr}
 1047              	.LCFI15:
 1048              		.cfi_def_cfa_offset 16
 1049              		.cfi_offset 3, -16
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 62


 1050              		.cfi_offset 4, -12
 1051              		.cfi_offset 5, -8
 1052              		.cfi_offset 14, -4
 656:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1053              		.loc 1 656 3 is_stmt 1 view .LVU293
 659:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));
 1054              		.loc 1 659 3 view .LVU294
 660:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1055              		.loc 1 660 3 view .LVU295
 663:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1056              		.loc 1 663 3 view .LVU296
 663:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1057              		.loc 1 663 3 view .LVU297
 1058 0002 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1059 0006 012B     		cmp	r3, #1
 1060 0008 1DD0     		beq	.L66
 1061 000a 0446     		mov	r4, r0
 663:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1062              		.loc 1 663 3 discriminator 2 view .LVU298
 1063 000c 0123     		movs	r3, #1
 1064 000e 80F88030 		strb	r3, [r0, #128]
 663:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1065              		.loc 1 663 3 discriminator 2 view .LVU299
 665:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1066              		.loc 1 665 3 discriminator 2 view .LVU300
 665:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1067              		.loc 1 665 17 is_stmt 0 discriminator 2 view .LVU301
 1068 0012 2423     		movs	r3, #36
 1069 0014 C0F88430 		str	r3, [r0, #132]
 668:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1070              		.loc 1 668 3 is_stmt 1 discriminator 2 view .LVU302
 668:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1071              		.loc 1 668 12 is_stmt 0 discriminator 2 view .LVU303
 1072 0018 0368     		ldr	r3, [r0]
 668:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1073              		.loc 1 668 10 discriminator 2 view .LVU304
 1074 001a 1D68     		ldr	r5, [r3]
 1075              	.LVL83:
 671:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1076              		.loc 1 671 3 is_stmt 1 discriminator 2 view .LVU305
 1077 001c 1A68     		ldr	r2, [r3]
 1078 001e 22F00102 		bic	r2, r2, #1
 1079 0022 1A60     		str	r2, [r3]
 674:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1080              		.loc 1 674 3 discriminator 2 view .LVU306
 1081 0024 0268     		ldr	r2, [r0]
 1082 0026 9368     		ldr	r3, [r2, #8]
 1083 0028 23F06063 		bic	r3, r3, #234881024
 1084 002c 1943     		orrs	r1, r1, r3
 1085              	.LVL84:
 674:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1086              		.loc 1 674 3 is_stmt 0 discriminator 2 view .LVU307
 1087 002e 9160     		str	r1, [r2, #8]
 677:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1088              		.loc 1 677 3 is_stmt 1 discriminator 2 view .LVU308
 1089 0030 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 1090              	.LVL85:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 63


 680:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1091              		.loc 1 680 3 discriminator 2 view .LVU309
 1092 0034 2368     		ldr	r3, [r4]
 1093 0036 1D60     		str	r5, [r3]
 682:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1094              		.loc 1 682 3 discriminator 2 view .LVU310
 682:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1095              		.loc 1 682 17 is_stmt 0 discriminator 2 view .LVU311
 1096 0038 2023     		movs	r3, #32
 1097 003a C4F88430 		str	r3, [r4, #132]
 685:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1098              		.loc 1 685 3 is_stmt 1 discriminator 2 view .LVU312
 685:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1099              		.loc 1 685 3 discriminator 2 view .LVU313
 1100 003e 0020     		movs	r0, #0
 1101 0040 84F88000 		strb	r0, [r4, #128]
 685:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1102              		.loc 1 685 3 discriminator 2 view .LVU314
 687:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** }
 1103              		.loc 1 687 3 discriminator 2 view .LVU315
 1104              	.LVL86:
 1105              	.L65:
 688:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1106              		.loc 1 688 1 is_stmt 0 view .LVU316
 1107 0044 38BD     		pop	{r3, r4, r5, pc}
 1108              	.LVL87:
 1109              	.L66:
 663:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1110              		.loc 1 663 3 view .LVU317
 1111 0046 0220     		movs	r0, #2
 1112              	.LVL88:
 663:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1113              		.loc 1 663 3 view .LVU318
 1114 0048 FCE7     		b	.L65
 1115              		.cfi_endproc
 1116              	.LFE155:
 1118              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 1119              		.align	1
 1120              		.global	HAL_UARTEx_ReceiveToIdle
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu fpv5-d16
 1126              	HAL_UARTEx_ReceiveToIdle:
 1127              	.LVL89:
 1128              	.LFB156:
 713:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
 1129              		.loc 1 713 1 is_stmt 1 view -0
 1130              		.cfi_startproc
 1131              		@ args = 4, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 713:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
 1133              		.loc 1 713 1 is_stmt 0 view .LVU320
 1134 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1135              	.LCFI16:
 1136              		.cfi_def_cfa_offset 32
 1137              		.cfi_offset 4, -32
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 64


 1138              		.cfi_offset 5, -28
 1139              		.cfi_offset 6, -24
 1140              		.cfi_offset 7, -20
 1141              		.cfi_offset 8, -16
 1142              		.cfi_offset 9, -12
 1143              		.cfi_offset 10, -8
 1144              		.cfi_offset 14, -4
 1145 0004 1D46     		mov	r5, r3
 1146 0006 089E     		ldr	r6, [sp, #32]
 714:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint16_t *pdata16bits;
 1147              		.loc 1 714 3 is_stmt 1 view .LVU321
 715:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint16_t uhMask;
 1148              		.loc 1 715 3 view .LVU322
 716:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   uint32_t tickstart;
 1149              		.loc 1 716 3 view .LVU323
 717:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1150              		.loc 1 717 3 view .LVU324
 720:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 1151              		.loc 1 720 3 view .LVU325
 720:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 1152              		.loc 1 720 12 is_stmt 0 view .LVU326
 1153 0008 D0F88830 		ldr	r3, [r0, #136]
 1154              	.LVL90:
 720:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 1155              		.loc 1 720 6 view .LVU327
 1156 000c 202B     		cmp	r3, #32
 1157 000e 40F0A880 		bne	.L86
 1158 0012 0446     		mov	r4, r0
 1159 0014 0F46     		mov	r7, r1
 1160 0016 9146     		mov	r9, r2
 722:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1161              		.loc 1 722 5 is_stmt 1 view .LVU328
 722:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1162              		.loc 1 722 8 is_stmt 0 view .LVU329
 1163 0018 002A     		cmp	r2, #0
 1164 001a 18BF     		it	ne
 1165 001c 0029     		cmpne	r1, #0
 1166 001e 00F0A380 		beq	.L87
 727:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1167              		.loc 1 727 5 is_stmt 1 view .LVU330
 727:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1168              		.loc 1 727 5 view .LVU331
 1169 0022 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1170 0026 012B     		cmp	r3, #1
 1171 0028 00F0A080 		beq	.L88
 727:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1172              		.loc 1 727 5 discriminator 2 view .LVU332
 1173 002c 0123     		movs	r3, #1
 1174 002e 80F88030 		strb	r3, [r0, #128]
 727:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1175              		.loc 1 727 5 discriminator 2 view .LVU333
 729:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1176              		.loc 1 729 5 discriminator 2 view .LVU334
 729:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1177              		.loc 1 729 22 is_stmt 0 discriminator 2 view .LVU335
 1178 0032 0022     		movs	r2, #0
 1179              	.LVL91:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 65


 729:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1180              		.loc 1 729 22 discriminator 2 view .LVU336
 1181 0034 C0F88C20 		str	r2, [r0, #140]
 730:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1182              		.loc 1 730 5 is_stmt 1 discriminator 2 view .LVU337
 730:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1183              		.loc 1 730 20 is_stmt 0 discriminator 2 view .LVU338
 1184 0038 2222     		movs	r2, #34
 1185 003a C0F88820 		str	r2, [r0, #136]
 731:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1186              		.loc 1 731 5 is_stmt 1 discriminator 2 view .LVU339
 731:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1187              		.loc 1 731 26 is_stmt 0 discriminator 2 view .LVU340
 1188 003e C366     		str	r3, [r0, #108]
 734:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1189              		.loc 1 734 5 is_stmt 1 discriminator 2 view .LVU341
 734:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1190              		.loc 1 734 17 is_stmt 0 discriminator 2 view .LVU342
 1191 0040 FFF7FEFF 		bl	HAL_GetTick
 1192              	.LVL92:
 734:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1193              		.loc 1 734 17 discriminator 2 view .LVU343
 1194 0044 8046     		mov	r8, r0
 1195              	.LVL93:
 736:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 1196              		.loc 1 736 5 is_stmt 1 discriminator 2 view .LVU344
 736:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 1197              		.loc 1 736 24 is_stmt 0 discriminator 2 view .LVU345
 1198 0046 A4F85C90 		strh	r9, [r4, #92]	@ movhi
 737:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1199              		.loc 1 737 5 is_stmt 1 discriminator 2 view .LVU346
 737:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1200              		.loc 1 737 24 is_stmt 0 discriminator 2 view .LVU347
 1201 004a A4F85E90 		strh	r9, [r4, #94]	@ movhi
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1202              		.loc 1 740 5 is_stmt 1 discriminator 2 view .LVU348
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1203              		.loc 1 740 5 discriminator 2 view .LVU349
 1204 004e A368     		ldr	r3, [r4, #8]
 1205 0050 B3F5805F 		cmp	r3, #4096
 1206 0054 06D0     		beq	.L92
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1207              		.loc 1 740 5 discriminator 2 view .LVU350
 1208 0056 A3B9     		cbnz	r3, .L73
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1209              		.loc 1 740 5 discriminator 5 view .LVU351
 1210 0058 2269     		ldr	r2, [r4, #16]
 1211 005a 72B9     		cbnz	r2, .L74
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1212              		.loc 1 740 5 discriminator 7 view .LVU352
 1213 005c FF22     		movs	r2, #255
 1214 005e A4F86020 		strh	r2, [r4, #96]	@ movhi
 1215 0062 14E0     		b	.L72
 1216              	.L92:
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1217              		.loc 1 740 5 discriminator 1 view .LVU353
 1218 0064 2269     		ldr	r2, [r4, #16]
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 66


 1219 0066 22B9     		cbnz	r2, .L71
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1220              		.loc 1 740 5 discriminator 3 view .LVU354
 1221 0068 40F2FF12 		movw	r2, #511
 1222 006c A4F86020 		strh	r2, [r4, #96]	@ movhi
 1223 0070 0DE0     		b	.L72
 1224              	.L71:
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1225              		.loc 1 740 5 discriminator 4 view .LVU355
 1226 0072 FF22     		movs	r2, #255
 1227 0074 A4F86020 		strh	r2, [r4, #96]	@ movhi
 1228 0078 09E0     		b	.L72
 1229              	.L74:
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1230              		.loc 1 740 5 discriminator 8 view .LVU356
 1231 007a 7F22     		movs	r2, #127
 1232 007c A4F86020 		strh	r2, [r4, #96]	@ movhi
 1233 0080 05E0     		b	.L72
 1234              	.L73:
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1235              		.loc 1 740 5 discriminator 6 view .LVU357
 1236 0082 B3F1805F 		cmp	r3, #268435456
 1237 0086 0ED0     		beq	.L93
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1238              		.loc 1 740 5 discriminator 10 view .LVU358
 1239 0088 0022     		movs	r2, #0
 1240 008a A4F86020 		strh	r2, [r4, #96]	@ movhi
 1241              	.L72:
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1242              		.loc 1 740 5 discriminator 13 view .LVU359
 741:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1243              		.loc 1 741 5 discriminator 13 view .LVU360
 741:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1244              		.loc 1 741 12 is_stmt 0 discriminator 13 view .LVU361
 1245 008e B4F86090 		ldrh	r9, [r4, #96]
 1246              	.LVL94:
 744:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1247              		.loc 1 744 5 is_stmt 1 discriminator 13 view .LVU362
 744:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1248              		.loc 1 744 8 is_stmt 0 discriminator 13 view .LVU363
 1249 0092 B3F5805F 		cmp	r3, #4096
 1250 0096 10D0     		beq	.L94
 752:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 1251              		.loc 1 752 19 view .LVU364
 1252 0098 4FF0000A 		mov	r10, #0
 1253              	.LVL95:
 1254              	.L77:
 755:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1255              		.loc 1 755 5 is_stmt 1 view .LVU365
 755:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1256              		.loc 1 755 5 view .LVU366
 1257 009c 0023     		movs	r3, #0
 1258 009e 84F88030 		strb	r3, [r4, #128]
 755:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1259              		.loc 1 755 5 view .LVU367
 758:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1260              		.loc 1 758 5 view .LVU368
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 67


 758:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1261              		.loc 1 758 12 is_stmt 0 view .LVU369
 1262 00a2 2B80     		strh	r3, [r5]	@ movhi
 761:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1263              		.loc 1 761 5 is_stmt 1 view .LVU370
 761:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1264              		.loc 1 761 11 is_stmt 0 view .LVU371
 1265 00a4 28E0     		b	.L78
 1266              	.LVL96:
 1267              	.L93:
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1268              		.loc 1 740 5 is_stmt 1 discriminator 9 view .LVU372
 1269 00a6 2269     		ldr	r2, [r4, #16]
 1270 00a8 1AB9     		cbnz	r2, .L76
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1271              		.loc 1 740 5 discriminator 11 view .LVU373
 1272 00aa 7F22     		movs	r2, #127
 1273 00ac A4F86020 		strh	r2, [r4, #96]	@ movhi
 1274 00b0 EDE7     		b	.L72
 1275              	.L76:
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1276              		.loc 1 740 5 discriminator 12 view .LVU374
 1277 00b2 3F22     		movs	r2, #63
 1278 00b4 A4F86020 		strh	r2, [r4, #96]	@ movhi
 1279 00b8 E9E7     		b	.L72
 1280              	.LVL97:
 1281              	.L94:
 744:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1282              		.loc 1 744 71 is_stmt 0 discriminator 1 view .LVU375
 1283 00ba 2369     		ldr	r3, [r4, #16]
 744:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1284              		.loc 1 744 56 discriminator 1 view .LVU376
 1285 00bc 13B1     		cbz	r3, .L90
 752:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 1286              		.loc 1 752 19 view .LVU377
 1287 00be 4FF0000A 		mov	r10, #0
 1288 00c2 EBE7     		b	.L77
 1289              	.L90:
 747:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 1290              		.loc 1 747 19 view .LVU378
 1291 00c4 BA46     		mov	r10, r7
 746:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 1292              		.loc 1 746 19 view .LVU379
 1293 00c6 0027     		movs	r7, #0
 1294              	.LVL98:
 746:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 1295              		.loc 1 746 19 view .LVU380
 1296 00c8 E8E7     		b	.L77
 1297              	.LVL99:
 1298              	.L97:
 773:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1299              		.loc 1 773 11 is_stmt 1 view .LVU381
 773:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1300              		.loc 1 773 26 is_stmt 0 view .LVU382
 1301 00ca 2023     		movs	r3, #32
 1302 00cc C4F88830 		str	r3, [r4, #136]
 775:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 68


 1303              		.loc 1 775 11 is_stmt 1 view .LVU383
 775:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 1304              		.loc 1 775 18 is_stmt 0 view .LVU384
 1305 00d0 0020     		movs	r0, #0
 1306 00d2 47E0     		b	.L69
 1307              	.L98:
 784:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata16bits++;
 1308              		.loc 1 784 11 is_stmt 1 view .LVU385
 784:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata16bits++;
 1309              		.loc 1 784 52 is_stmt 0 view .LVU386
 1310 00d4 5B6A     		ldr	r3, [r3, #36]
 784:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata16bits++;
 1311              		.loc 1 784 26 view .LVU387
 1312 00d6 09EA0303 		and	r3, r9, r3
 784:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata16bits++;
 1313              		.loc 1 784 24 view .LVU388
 1314 00da 2AF8023B 		strh	r3, [r10], #2	@ movhi
 1315              	.LVL100:
 785:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 1316              		.loc 1 785 11 is_stmt 1 view .LVU389
 1317              	.L82:
 793:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         huart->RxXferCount--;
 1318              		.loc 1 793 9 view .LVU390
 793:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         huart->RxXferCount--;
 1319              		.loc 1 793 16 is_stmt 0 view .LVU391
 1320 00de 2B88     		ldrh	r3, [r5]
 1321 00e0 0133     		adds	r3, r3, #1
 1322 00e2 2B80     		strh	r3, [r5]	@ movhi
 794:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1323              		.loc 1 794 9 is_stmt 1 view .LVU392
 794:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1324              		.loc 1 794 14 is_stmt 0 view .LVU393
 1325 00e4 B4F85E30 		ldrh	r3, [r4, #94]
 1326 00e8 9BB2     		uxth	r3, r3
 794:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1327              		.loc 1 794 27 view .LVU394
 1328 00ea 013B     		subs	r3, r3, #1
 1329 00ec 9BB2     		uxth	r3, r3
 1330 00ee A4F85E30 		strh	r3, [r4, #94]	@ movhi
 1331              	.L80:
 798:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1332              		.loc 1 798 7 is_stmt 1 view .LVU395
 798:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1333              		.loc 1 798 10 is_stmt 0 view .LVU396
 1334 00f2 B6F1FF3F 		cmp	r6, #-1
 1335 00f6 1BD1     		bne	.L95
 1336              	.L78:
 761:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1337              		.loc 1 761 11 is_stmt 1 view .LVU397
 761:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1338              		.loc 1 761 17 is_stmt 0 view .LVU398
 1339 00f8 B4F85E20 		ldrh	r2, [r4, #94]
 1340 00fc 92B2     		uxth	r2, r2
 761:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1341              		.loc 1 761 11 view .LVU399
 1342 00fe 22B3     		cbz	r2, .L96
 764:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 69


 1343              		.loc 1 764 7 is_stmt 1 view .LVU400
 764:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1344              		.loc 1 764 11 is_stmt 0 view .LVU401
 1345 0100 2368     		ldr	r3, [r4]
 1346 0102 DA69     		ldr	r2, [r3, #28]
 764:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1347              		.loc 1 764 10 view .LVU402
 1348 0104 12F0100F 		tst	r2, #16
 1349 0108 04D0     		beq	.L79
 767:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1350              		.loc 1 767 9 is_stmt 1 view .LVU403
 1351 010a 1022     		movs	r2, #16
 1352 010c 1A62     		str	r2, [r3, #32]
 771:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1353              		.loc 1 771 9 view .LVU404
 771:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1354              		.loc 1 771 13 is_stmt 0 view .LVU405
 1355 010e 2B88     		ldrh	r3, [r5]
 771:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1356              		.loc 1 771 12 view .LVU406
 1357 0110 002B     		cmp	r3, #0
 1358 0112 DAD1     		bne	.L97
 1359              	.L79:
 780:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1360              		.loc 1 780 7 is_stmt 1 view .LVU407
 780:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1361              		.loc 1 780 11 is_stmt 0 view .LVU408
 1362 0114 2368     		ldr	r3, [r4]
 1363 0116 DA69     		ldr	r2, [r3, #28]
 780:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1364              		.loc 1 780 10 view .LVU409
 1365 0118 12F0200F 		tst	r2, #32
 1366 011c E9D0     		beq	.L80
 782:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1367              		.loc 1 782 9 is_stmt 1 view .LVU410
 782:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1368              		.loc 1 782 12 is_stmt 0 view .LVU411
 1369 011e 002F     		cmp	r7, #0
 1370 0120 D8D0     		beq	.L98
 789:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata8bits++;
 1371              		.loc 1 789 11 is_stmt 1 view .LVU412
 789:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata8bits++;
 1372              		.loc 1 789 50 is_stmt 0 view .LVU413
 1373 0122 5A6A     		ldr	r2, [r3, #36]
 789:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata8bits++;
 1374              		.loc 1 789 58 view .LVU414
 1375 0124 5FFA89F3 		uxtb	r3, r9
 789:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata8bits++;
 1376              		.loc 1 789 25 view .LVU415
 1377 0128 1340     		ands	r3, r3, r2
 789:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****           pdata8bits++;
 1378              		.loc 1 789 23 view .LVU416
 1379 012a 07F8013B 		strb	r3, [r7], #1
 1380              	.LVL101:
 790:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 1381              		.loc 1 790 11 is_stmt 1 view .LVU417
 790:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 70


 1382              		.loc 1 790 11 is_stmt 0 view .LVU418
 1383 012e D6E7     		b	.L82
 1384              	.L95:
 800:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1385              		.loc 1 800 9 is_stmt 1 view .LVU419
 800:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1386              		.loc 1 800 15 is_stmt 0 view .LVU420
 1387 0130 FFF7FEFF 		bl	HAL_GetTick
 1388              	.LVL102:
 800:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1389              		.loc 1 800 29 view .LVU421
 1390 0134 A0EB0800 		sub	r0, r0, r8
 800:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1391              		.loc 1 800 12 view .LVU422
 1392 0138 B042     		cmp	r0, r6
 1393 013a 01D8     		bhi	.L84
 800:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         {
 1394              		.loc 1 800 53 discriminator 1 view .LVU423
 1395 013c 002E     		cmp	r6, #0
 1396 013e DBD1     		bne	.L78
 1397              	.L84:
 802:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1398              		.loc 1 802 11 is_stmt 1 view .LVU424
 802:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1399              		.loc 1 802 26 is_stmt 0 view .LVU425
 1400 0140 2023     		movs	r3, #32
 1401 0142 C4F88830 		str	r3, [r4, #136]
 804:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 1402              		.loc 1 804 11 is_stmt 1 view .LVU426
 804:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         }
 1403              		.loc 1 804 18 is_stmt 0 view .LVU427
 1404 0146 0320     		movs	r0, #3
 1405 0148 0CE0     		b	.L69
 1406              	.L96:
 810:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1407              		.loc 1 810 5 is_stmt 1 view .LVU428
 810:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1408              		.loc 1 810 19 is_stmt 0 view .LVU429
 1409 014a B4F85C30 		ldrh	r3, [r4, #92]
 810:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1410              		.loc 1 810 39 view .LVU430
 1411 014e B4F85E20 		ldrh	r2, [r4, #94]
 1412 0152 92B2     		uxth	r2, r2
 810:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1413              		.loc 1 810 32 view .LVU431
 1414 0154 9B1A     		subs	r3, r3, r2
 810:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1415              		.loc 1 810 12 view .LVU432
 1416 0156 2B80     		strh	r3, [r5]	@ movhi
 812:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1417              		.loc 1 812 5 is_stmt 1 view .LVU433
 812:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1418              		.loc 1 812 20 is_stmt 0 view .LVU434
 1419 0158 2023     		movs	r3, #32
 1420 015a C4F88830 		str	r3, [r4, #136]
 814:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1421              		.loc 1 814 5 is_stmt 1 view .LVU435
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 71


 814:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1422              		.loc 1 814 12 is_stmt 0 view .LVU436
 1423 015e 0020     		movs	r0, #0
 1424 0160 00E0     		b	.L69
 1425              	.LVL103:
 1426              	.L86:
 818:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1427              		.loc 1 818 12 view .LVU437
 1428 0162 0220     		movs	r0, #2
 1429              	.LVL104:
 1430              	.L69:
 820:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1431              		.loc 1 820 1 view .LVU438
 1432 0164 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1433              	.LVL105:
 1434              	.L87:
 724:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 1435              		.loc 1 724 15 view .LVU439
 1436 0168 0120     		movs	r0, #1
 1437              	.LVL106:
 724:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 1438              		.loc 1 724 15 view .LVU440
 1439 016a FBE7     		b	.L69
 1440              	.LVL107:
 1441              	.L88:
 727:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1442              		.loc 1 727 5 view .LVU441
 1443 016c 0220     		movs	r0, #2
 1444              	.LVL108:
 727:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1445              		.loc 1 727 5 view .LVU442
 1446 016e F9E7     		b	.L69
 1447              		.cfi_endproc
 1448              	.LFE156:
 1450              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 1451              		.align	1
 1452              		.global	HAL_UARTEx_ReceiveToIdle_IT
 1453              		.syntax unified
 1454              		.thumb
 1455              		.thumb_func
 1456              		.fpu fpv5-d16
 1458              	HAL_UARTEx_ReceiveToIdle_IT:
 1459              	.LVL109:
 1460              	.LFB157:
 837:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1461              		.loc 1 837 1 is_stmt 1 view -0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 0
 1464              		@ frame_needed = 0, uses_anonymous_args = 0
 838:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1465              		.loc 1 838 3 view .LVU444
 841:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 1466              		.loc 1 841 3 view .LVU445
 841:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 1467              		.loc 1 841 12 is_stmt 0 view .LVU446
 1468 0000 D0F88830 		ldr	r3, [r0, #136]
 841:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 72


 1469              		.loc 1 841 6 view .LVU447
 1470 0004 202B     		cmp	r3, #32
 1471 0006 22D1     		bne	.L103
 837:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1472              		.loc 1 837 1 view .LVU448
 1473 0008 10B5     		push	{r4, lr}
 1474              	.LCFI17:
 1475              		.cfi_def_cfa_offset 8
 1476              		.cfi_offset 4, -8
 1477              		.cfi_offset 14, -4
 1478 000a 0446     		mov	r4, r0
 843:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1479              		.loc 1 843 5 is_stmt 1 view .LVU449
 843:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1480              		.loc 1 843 8 is_stmt 0 view .LVU450
 1481 000c 002A     		cmp	r2, #0
 1482 000e 18BF     		it	ne
 1483 0010 0029     		cmpne	r1, #0
 1484 0012 1ED0     		beq	.L104
 848:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1485              		.loc 1 848 5 is_stmt 1 view .LVU451
 848:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1486              		.loc 1 848 5 view .LVU452
 1487 0014 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1488 0018 012B     		cmp	r3, #1
 1489 001a 1CD0     		beq	.L105
 848:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1490              		.loc 1 848 5 discriminator 2 view .LVU453
 1491 001c 0123     		movs	r3, #1
 1492 001e 80F88030 		strb	r3, [r0, #128]
 848:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1493              		.loc 1 848 5 discriminator 2 view .LVU454
 851:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1494              		.loc 1 851 5 discriminator 2 view .LVU455
 851:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1495              		.loc 1 851 26 is_stmt 0 discriminator 2 view .LVU456
 1496 0022 C366     		str	r3, [r0, #108]
 853:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1497              		.loc 1 853 5 is_stmt 1 discriminator 2 view .LVU457
 853:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1498              		.loc 1 853 15 is_stmt 0 discriminator 2 view .LVU458
 1499 0024 FFF7FEFF 		bl	UART_Start_Receive_IT
 1500              	.LVL110:
 856:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1501              		.loc 1 856 5 is_stmt 1 discriminator 2 view .LVU459
 856:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1502              		.loc 1 856 8 is_stmt 0 discriminator 2 view .LVU460
 1503 0028 A0B9     		cbnz	r0, .L100
 858:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1504              		.loc 1 858 7 is_stmt 1 view .LVU461
 858:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1505              		.loc 1 858 16 is_stmt 0 view .LVU462
 1506 002a E36E     		ldr	r3, [r4, #108]
 858:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1507              		.loc 1 858 10 view .LVU463
 1508 002c 012B     		cmp	r3, #1
 1509 002e 01D0     		beq	.L111
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 73


 869:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1510              		.loc 1 869 16 view .LVU464
 1511 0030 0120     		movs	r0, #1
 1512              	.LVL111:
 873:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1513              		.loc 1 873 5 is_stmt 1 view .LVU465
 873:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1514              		.loc 1 873 12 is_stmt 0 view .LVU466
 1515 0032 0FE0     		b	.L100
 1516              	.LVL112:
 1517              	.L111:
 860:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 1518              		.loc 1 860 9 is_stmt 1 view .LVU467
 1519 0034 2368     		ldr	r3, [r4]
 1520 0036 1022     		movs	r2, #16
 1521 0038 1A62     		str	r2, [r3, #32]
 1522              	.L102:
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1523              		.loc 1 861 9 discriminator 1 view .LVU468
 1524              	.LBB32:
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1525              		.loc 1 861 9 discriminator 1 view .LVU469
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1526              		.loc 1 861 9 discriminator 1 view .LVU470
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1527              		.loc 1 861 9 discriminator 1 view .LVU471
 1528 003a 2268     		ldr	r2, [r4]
 1529              	.LVL113:
 1530              	.LBB33:
 1531              	.LBI33:
1151:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1532              		.loc 2 1151 31 discriminator 1 view .LVU472
 1533              	.LBB34:
1153:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 1534              		.loc 2 1153 5 discriminator 1 view .LVU473
1155:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 1535              		.loc 2 1155 4 discriminator 1 view .LVU474
 1536              		.syntax unified
 1537              	@ 1155 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1538 003c 52E8003F 		ldrex r3, [r2]
 1539              	@ 0 "" 2
 1540              	.LVL114:
1156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 1541              		.loc 2 1156 4 discriminator 1 view .LVU475
1156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 1542              		.loc 2 1156 4 is_stmt 0 discriminator 1 view .LVU476
 1543              		.thumb
 1544              		.syntax unified
 1545              	.LBE34:
 1546              	.LBE33:
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1547              		.loc 1 861 9 discriminator 1 view .LVU477
 1548 0040 43F01003 		orr	r3, r3, #16
 1549              	.LVL115:
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1550              		.loc 1 861 9 is_stmt 1 discriminator 1 view .LVU478
 1551              	.LBB35:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 74


 1552              	.LBI35:
1202:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1553              		.loc 2 1202 31 discriminator 1 view .LVU479
 1554              	.LBB36:
1204:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 1555              		.loc 2 1204 4 discriminator 1 view .LVU480
1206:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 1556              		.loc 2 1206 4 discriminator 1 view .LVU481
 1557              		.syntax unified
 1558              	@ 1206 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1559 0044 42E80031 		strex r1, r3, [r2]
 1560              	@ 0 "" 2
 1561              	.LVL116:
 1562              		.loc 2 1207 4 discriminator 1 view .LVU482
 1563              		.loc 2 1207 4 is_stmt 0 discriminator 1 view .LVU483
 1564              		.thumb
 1565              		.syntax unified
 1566              	.LBE36:
 1567              	.LBE35:
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1568              		.loc 1 861 9 discriminator 1 view .LVU484
 1569 0048 0029     		cmp	r1, #0
 1570 004a F6D1     		bne	.L102
 1571 004c 02E0     		b	.L100
 1572              	.LVL117:
 1573              	.L103:
 1574              	.LCFI18:
 1575              		.cfi_def_cfa_offset 0
 1576              		.cfi_restore 4
 1577              		.cfi_restore 14
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1578              		.loc 1 861 9 discriminator 1 view .LVU485
 1579              	.LBE32:
 877:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1580              		.loc 1 877 12 view .LVU486
 1581 004e 0220     		movs	r0, #2
 1582              	.LVL118:
 879:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1583              		.loc 1 879 1 view .LVU487
 1584 0050 7047     		bx	lr
 1585              	.LVL119:
 1586              	.L104:
 1587              	.LCFI19:
 1588              		.cfi_def_cfa_offset 8
 1589              		.cfi_offset 4, -8
 1590              		.cfi_offset 14, -4
 845:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 1591              		.loc 1 845 14 view .LVU488
 1592 0052 0120     		movs	r0, #1
 1593              	.LVL120:
 1594              	.L100:
 879:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1595              		.loc 1 879 1 view .LVU489
 1596 0054 10BD     		pop	{r4, pc}
 1597              	.LVL121:
 1598              	.L105:
 848:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 75


 1599              		.loc 1 848 5 view .LVU490
 1600 0056 0220     		movs	r0, #2
 1601              	.LVL122:
 848:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1602              		.loc 1 848 5 view .LVU491
 1603 0058 FCE7     		b	.L100
 1604              		.cfi_endproc
 1605              	.LFE157:
 1607              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 1608              		.align	1
 1609              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv5-d16
 1615              	HAL_UARTEx_ReceiveToIdle_DMA:
 1616              	.LVL123:
 1617              	.LFB158:
 899:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1618              		.loc 1 899 1 is_stmt 1 view -0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 0
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
 900:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1622              		.loc 1 900 3 view .LVU493
 903:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 1623              		.loc 1 903 3 view .LVU494
 903:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 1624              		.loc 1 903 12 is_stmt 0 view .LVU495
 1625 0000 D0F88830 		ldr	r3, [r0, #136]
 903:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   {
 1626              		.loc 1 903 6 view .LVU496
 1627 0004 202B     		cmp	r3, #32
 1628 0006 22D1     		bne	.L116
 899:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1629              		.loc 1 899 1 view .LVU497
 1630 0008 10B5     		push	{r4, lr}
 1631              	.LCFI20:
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 4, -8
 1634              		.cfi_offset 14, -4
 1635 000a 0446     		mov	r4, r0
 905:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1636              		.loc 1 905 5 is_stmt 1 view .LVU498
 905:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1637              		.loc 1 905 8 is_stmt 0 view .LVU499
 1638 000c 002A     		cmp	r2, #0
 1639 000e 18BF     		it	ne
 1640 0010 0029     		cmpne	r1, #0
 1641 0012 1ED0     		beq	.L117
 910:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1642              		.loc 1 910 5 is_stmt 1 view .LVU500
 910:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1643              		.loc 1 910 5 view .LVU501
 1644 0014 90F88030 		ldrb	r3, [r0, #128]	@ zero_extendqisi2
 1645 0018 012B     		cmp	r3, #1
 1646 001a 1CD0     		beq	.L118
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 76


 910:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1647              		.loc 1 910 5 discriminator 2 view .LVU502
 1648 001c 0123     		movs	r3, #1
 1649 001e 80F88030 		strb	r3, [r0, #128]
 910:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1650              		.loc 1 910 5 discriminator 2 view .LVU503
 913:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1651              		.loc 1 913 5 discriminator 2 view .LVU504
 913:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1652              		.loc 1 913 26 is_stmt 0 discriminator 2 view .LVU505
 1653 0022 C366     		str	r3, [r0, #108]
 915:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1654              		.loc 1 915 5 is_stmt 1 discriminator 2 view .LVU506
 915:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1655              		.loc 1 915 15 is_stmt 0 discriminator 2 view .LVU507
 1656 0024 FFF7FEFF 		bl	UART_Start_Receive_DMA
 1657              	.LVL124:
 918:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1658              		.loc 1 918 5 is_stmt 1 discriminator 2 view .LVU508
 918:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     {
 1659              		.loc 1 918 8 is_stmt 0 discriminator 2 view .LVU509
 1660 0028 A0B9     		cbnz	r0, .L113
 920:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1661              		.loc 1 920 7 is_stmt 1 view .LVU510
 920:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1662              		.loc 1 920 16 is_stmt 0 view .LVU511
 1663 002a E36E     		ldr	r3, [r4, #108]
 920:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       {
 1664              		.loc 1 920 10 view .LVU512
 1665 002c 012B     		cmp	r3, #1
 1666 002e 01D0     		beq	.L124
 931:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1667              		.loc 1 931 16 view .LVU513
 1668 0030 0120     		movs	r0, #1
 1669              	.LVL125:
 935:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1670              		.loc 1 935 5 is_stmt 1 view .LVU514
 935:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1671              		.loc 1 935 12 is_stmt 0 view .LVU515
 1672 0032 0FE0     		b	.L113
 1673              	.LVL126:
 1674              	.L124:
 922:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 1675              		.loc 1 922 9 is_stmt 1 view .LVU516
 1676 0034 2368     		ldr	r3, [r4]
 1677 0036 1022     		movs	r2, #16
 1678 0038 1A62     		str	r2, [r3, #32]
 1679              	.L115:
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1680              		.loc 1 923 9 discriminator 1 view .LVU517
 1681              	.LBB37:
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1682              		.loc 1 923 9 discriminator 1 view .LVU518
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1683              		.loc 1 923 9 discriminator 1 view .LVU519
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1684              		.loc 1 923 9 discriminator 1 view .LVU520
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 77


 1685 003a 2268     		ldr	r2, [r4]
 1686              	.LVL127:
 1687              	.LBB38:
 1688              	.LBI38:
1151:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1689              		.loc 2 1151 31 discriminator 1 view .LVU521
 1690              	.LBB39:
1153:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 1691              		.loc 2 1153 5 discriminator 1 view .LVU522
1155:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 1692              		.loc 2 1155 4 discriminator 1 view .LVU523
 1693              		.syntax unified
 1694              	@ 1155 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1695 003c 52E8003F 		ldrex r3, [r2]
 1696              	@ 0 "" 2
 1697              	.LVL128:
1156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 1698              		.loc 2 1156 4 discriminator 1 view .LVU524
1156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 1699              		.loc 2 1156 4 is_stmt 0 discriminator 1 view .LVU525
 1700              		.thumb
 1701              		.syntax unified
 1702              	.LBE39:
 1703              	.LBE38:
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1704              		.loc 1 923 9 discriminator 1 view .LVU526
 1705 0040 43F01003 		orr	r3, r3, #16
 1706              	.LVL129:
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1707              		.loc 1 923 9 is_stmt 1 discriminator 1 view .LVU527
 1708              	.LBB40:
 1709              	.LBI40:
1202:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1710              		.loc 2 1202 31 discriminator 1 view .LVU528
 1711              	.LBB41:
1204:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 1712              		.loc 2 1204 4 discriminator 1 view .LVU529
1206:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 1713              		.loc 2 1206 4 discriminator 1 view .LVU530
 1714              		.syntax unified
 1715              	@ 1206 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1716 0044 42E80031 		strex r1, r3, [r2]
 1717              	@ 0 "" 2
 1718              	.LVL130:
 1719              		.loc 2 1207 4 discriminator 1 view .LVU531
 1720              		.loc 2 1207 4 is_stmt 0 discriminator 1 view .LVU532
 1721              		.thumb
 1722              		.syntax unified
 1723              	.LBE41:
 1724              	.LBE40:
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1725              		.loc 1 923 9 discriminator 1 view .LVU533
 1726 0048 0029     		cmp	r1, #0
 1727 004a F6D1     		bne	.L115
 1728 004c 02E0     		b	.L113
 1729              	.LVL131:
 1730              	.L116:
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 78


 1731              	.LCFI21:
 1732              		.cfi_def_cfa_offset 0
 1733              		.cfi_restore 4
 1734              		.cfi_restore 14
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****       }
 1735              		.loc 1 923 9 discriminator 1 view .LVU534
 1736              	.LBE37:
 939:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****   }
 1737              		.loc 1 939 12 view .LVU535
 1738 004e 0220     		movs	r0, #2
 1739              	.LVL132:
 941:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1740              		.loc 1 941 1 view .LVU536
 1741 0050 7047     		bx	lr
 1742              	.LVL133:
 1743              	.L117:
 1744              	.LCFI22:
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 4, -8
 1747              		.cfi_offset 14, -4
 907:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c ****     }
 1748              		.loc 1 907 14 view .LVU537
 1749 0052 0120     		movs	r0, #1
 1750              	.LVL134:
 1751              	.L113:
 941:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1752              		.loc 1 941 1 view .LVU538
 1753 0054 10BD     		pop	{r4, pc}
 1754              	.LVL135:
 1755              	.L118:
 910:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1756              		.loc 1 910 5 view .LVU539
 1757 0056 0220     		movs	r0, #2
 1758              	.LVL136:
 910:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c **** 
 1759              		.loc 1 910 5 view .LVU540
 1760 0058 FCE7     		b	.L113
 1761              		.cfi_endproc
 1762              	.LFE158:
 1764              		.section	.rodata.denominator.0,"a"
 1765              		.align	2
 1766              		.set	.LANCHOR1,. + 0
 1769              	denominator.0:
 1770 0000 08040204 		.ascii	"\010\004\002\004\010\001\001\001"
 1770      08010101 
 1771              		.section	.rodata.numerator.1,"a"
 1772              		.align	2
 1773              		.set	.LANCHOR0,. + 0
 1776              	numerator.1:
 1777 0000 01010103 		.ascii	"\001\001\001\003\007\001\000\000"
 1777      07010000 
 1778              		.text
 1779              	.Letext0:
 1780              		.file 3 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/mac
 1781              		.file 4 "/usr/local/arm-none-eabi-gcc/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys
 1782              		.file 5 "HAL_Lib/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1783              		.file 6 "HAL_Lib/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 79


 1784              		.file 7 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1785              		.file 8 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1786              		.file 9 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 1787              		.file 10 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 1788              		.file 11 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s 			page 80


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_uart_ex.c
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:17     .text.UARTEx_Wakeup_AddressConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:24     .text.UARTEx_Wakeup_AddressConfig:0000000000000000 UARTEx_Wakeup_AddressConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:64     .text.UARTEx_SetNbDataToProcess:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:70     .text.UARTEx_SetNbDataToProcess:0000000000000000 UARTEx_SetNbDataToProcess
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:156    .text.UARTEx_SetNbDataToProcess:0000000000000044 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:162    .text.HAL_RS485Ex_Init:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:169    .text.HAL_RS485Ex_Init:0000000000000000 HAL_RS485Ex_Init
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:306    .text.HAL_RS485Ex_Init:0000000000000084 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:311    .text.HAL_UARTEx_WakeupCallback:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:318    .text.HAL_UARTEx_WakeupCallback:0000000000000000 HAL_UARTEx_WakeupCallback
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:333    .text.HAL_UARTEx_RxFifoFullCallback:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:340    .text.HAL_UARTEx_RxFifoFullCallback:0000000000000000 HAL_UARTEx_RxFifoFullCallback
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:355    .text.HAL_UARTEx_TxFifoEmptyCallback:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:362    .text.HAL_UARTEx_TxFifoEmptyCallback:0000000000000000 HAL_UARTEx_TxFifoEmptyCallback
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:377    .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:384    .text.HAL_MultiProcessorEx_AddressLength_Set:0000000000000000 HAL_MultiProcessorEx_AddressLength_Set
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:448    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:455    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:0000000000000000 HAL_UARTEx_StopModeWakeUpSourceConfig
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:580    .text.HAL_UARTEx_EnableStopMode:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:587    .text.HAL_UARTEx_EnableStopMode:0000000000000000 HAL_UARTEx_EnableStopMode
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:680    .text.HAL_UARTEx_DisableStopMode:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:687    .text.HAL_UARTEx_DisableStopMode:0000000000000000 HAL_UARTEx_DisableStopMode
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:779    .text.HAL_UARTEx_EnableFifoMode:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:786    .text.HAL_UARTEx_EnableFifoMode:0000000000000000 HAL_UARTEx_EnableFifoMode
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:865    .text.HAL_UARTEx_DisableFifoMode:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:872    .text.HAL_UARTEx_DisableFifoMode:0000000000000000 HAL_UARTEx_DisableFifoMode
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:943    .text.HAL_UARTEx_SetTxFifoThreshold:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:950    .text.HAL_UARTEx_SetTxFifoThreshold:0000000000000000 HAL_UARTEx_SetTxFifoThreshold
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1031   .text.HAL_UARTEx_SetRxFifoThreshold:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1038   .text.HAL_UARTEx_SetRxFifoThreshold:0000000000000000 HAL_UARTEx_SetRxFifoThreshold
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1119   .text.HAL_UARTEx_ReceiveToIdle:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1126   .text.HAL_UARTEx_ReceiveToIdle:0000000000000000 HAL_UARTEx_ReceiveToIdle
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1451   .text.HAL_UARTEx_ReceiveToIdle_IT:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1458   .text.HAL_UARTEx_ReceiveToIdle_IT:0000000000000000 HAL_UARTEx_ReceiveToIdle_IT
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1608   .text.HAL_UARTEx_ReceiveToIdle_DMA:0000000000000000 $t
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1615   .text.HAL_UARTEx_ReceiveToIdle_DMA:0000000000000000 HAL_UARTEx_ReceiveToIdle_DMA
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1765   .rodata.denominator.0:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1769   .rodata.denominator.0:0000000000000000 denominator.0
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1772   .rodata.numerator.1:0000000000000000 $d
/var/folders/lx/hc4sn_b53233_zkc9xbbl97r0000gp/T//ccsKZJ5A.s:1776   .rodata.numerator.1:0000000000000000 numerator.1

UNDEFINED SYMBOLS
UART_SetConfig
UART_CheckIdleState
HAL_UART_MspInit
UART_AdvFeatureConfig
HAL_GetTick
UART_WaitOnFlagUntilTimeout
UART_Start_Receive_IT
UART_Start_Receive_DMA
