ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_flash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
  19              		.align	1
  20              		.weak	HAL_FLASH_EndOfOperationCallback
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_FLASH_EndOfOperationCallback:
  26              	.LVL0:
  27              	.LFB147:
  28              		.file 1 "HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c"
   1:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
   2:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
   3:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @file    stm32h7xx_hal_flash.c
   4:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @author  MCD Application Team
   5:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Program operations functions
   9:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Memory Control functions
  10:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  12:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @verbatim
  13:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  14:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  16:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  17:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AXI I-Code and D-Code accesses
  18:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  19:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        and the read and write protection mechanisms.
  20:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  21:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The FLASH main features are:
  22:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory read operations
  23:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory program/erase operations
  24:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Read / write protections
  25:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Option bytes programming
  26:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 266-bits word
  27:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (10 bits added per flash word)
  28:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  29:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### How to use this driver #####
  30:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ==============================================================================
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 2


  31:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
  32:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  33:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       memory of all STM32H7xx devices.
  34:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  35:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) FLASH Memory IO Programming functions:
  36:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  37:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  38:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Program functions: 256-bit word only
  39:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) There Two modes of programming :
  40:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  41:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  42:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  43:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Interrupts and flags management functions :
  44:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  45:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  46:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  47:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  48:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Get error flag status by calling HAL_FLASH_GetError()
  49:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  50:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Option bytes management functions :
  51:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  52:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  53:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_OB_Launch() function.
  54:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 In this case, a reset is generated
  55:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
  56:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  57:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       to handle the following operations:
  58:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Set the latency
  59:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Enable/Disable the FLASH interrupts
  60:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Monitor the FLASH flags status
  61:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      [..]
  62:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) For any Flash memory program operation (erase or program), the CPU clock frequency
  63:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         (HCLK) must be at least 1MHz.
  64:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) The contents of the Flash memory are not guaranteed if a device reset occurs during
  65:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         a Flash memory operation.
  66:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) The application can simultaneously request a read and a write operation through each AXI
  67:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         interface.
  68:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         As the Flash memory is divided into two independent banks, the embedded Flash
  69:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         memory interface can drive different operations at the same time on each bank. For
  70:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         example a read, write or erase operation can be executed on bank 1 while another read,
  71:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         write or erase operation is executed on bank 2.
  72:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  73:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @endverbatim
  74:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
  75:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @attention
  76:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  77:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * Copyright (c) 2017 STMicroelectronics.
  78:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * All rights reserved.
  79:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  80:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  81:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * the root directory of this software component.
  82:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  83:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
  84:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  85:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  86:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  87:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #include "stm32h7xx_hal.h"
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 3


  88:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  89:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup STM32H7xx_HAL_Driver
  90:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
  91:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  92:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  93:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH FLASH
  94:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief FLASH HAL module driver
  95:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
  96:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  97:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  98:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  99:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 100:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 101:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private define ------------------------------------------------------------*/
 102:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
 103:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 104:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 105:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #define FLASH_TIMEOUT_VALUE              50000U /* 50 s */
 106:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 107:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 108:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 109:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private macro -------------------------------------------------------------*/
 110:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 111:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash;
 112:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 113:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Exported functions ---------------------------------------------------------*/
 114:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 115:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported functions
 116:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 117:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 118:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 119:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 120:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Programming operation functions
 121:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 122:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 123:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 124:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                   ##### Programming operation functions #####
 125:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 126:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 127:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 128:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     program operations.
 129:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 130:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 131:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 132:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 133:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 134:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 135:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program a flash word at a specified address
 136:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 137:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter can be a value of @ref FLASH_Type_Program
 138:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
 139:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be aligned to the Flash word:
 140:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H74x/5X devices (8x 32bits words)
 141:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 128 bits for STM32H7Ax/BX devices (4x 32bits words)
 142:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H72x/3X devices (8x 32bits words)
 143:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data to be programmed.
 144:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be 32-bit aligned
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 4


 145:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 146:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 147:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 148:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t FlashAddress, uint32_t DataAddre
 149:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 150:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 151:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)FlashAddress;
 152:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 153:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 154:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 155:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 156:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 157:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 158:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 159:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 160:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 162:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 163:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 164:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress)) || (IS_FLASH_PROGRAM_ADDRESS_OTP(FlashAddress))
 165:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 166:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
 167:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 168:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 169:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
 170:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 171:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if(IS_FLASH_PROGRAM_ADDRESS_BANK2(FlashAddress))
 173:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 174:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;
 175:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 176:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 177:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 178:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 179:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 180:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 181:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 182:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Reset error code */
 183:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 184:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 185:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 186:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 187:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 188:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(status == HAL_OK)
 189:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 190:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 191:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 192:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 193:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 194:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 195:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 196:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set OTP_PG bit */
 197:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 198:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 199:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 200:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 201:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 5


 202:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set PG bit */
 203:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->CR1, FLASH_CR_PG);
 204:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 205:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 206:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 207:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 208:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 209:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR2, FLASH_CR_PG);
 210:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 211:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else /* Single Bank */
 212:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 213:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 214:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 215:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set OTP_PG bit */
 216:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 217:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 218:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 219:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 220:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 221:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set PG bit */
 222:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->CR1, FLASH_CR_PG);
 223:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 224:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 225:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 226:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 227:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 228:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 229:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 230:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 231:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 232:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program an OTP word (16 bits) */
 233:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       *(__IO uint16_t *)FlashAddress = *(__IO uint16_t*)DataAddress;
 234:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 235:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 236:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 237:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 238:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program the flash word */
 239:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       do
 240:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 241:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         *dest_addr = *src_addr;
 242:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 243:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 244:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 245:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      } while (row_index != 0U);
 246:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 247:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 248:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 249:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 250:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 251:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Wait for last operation to be completed */
 252:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 253:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 254:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 255:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 256:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 257:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 258:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the OTP_PG */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 6


 259:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 260:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 261:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 262:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 263:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 264:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(bank == FLASH_BANK_1)
 265:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 266:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* If the program operation is completed, disable the PG */
 267:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         CLEAR_BIT(FLASH->CR1, FLASH_CR_PG);
 268:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 269:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 270:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 271:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* If the program operation is completed, disable the PG */
 272:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         CLEAR_BIT(FLASH->CR2, FLASH_CR_PG);
 273:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 274:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 275:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else /* Single Bank */
 276:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 277:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 278:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 279:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the OTP_PG */
 280:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 281:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 282:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 283:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 284:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 285:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the PG */
 286:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->CR1, FLASH_CR_PG);
 287:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 288:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 289:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 290:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 291:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Unlocked */
 292:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 293:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 294:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 295:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 296:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 297:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 298:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program a flash word at a specified address with interrupt enabled.
 299:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 300:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                      This parameter can be a value of @ref FLASH_Type_Program
 301:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
 302:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be aligned to the Flash word:
 303:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H74x/5X devices (8x 32bits words)
 304:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 128 bits for STM32H7Ax/BX devices (4x 32bits words)
 305:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          - 256 bits for STM32H72x/3X devices (8x 32bits words)
 306:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data to be programmed.
 307:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter shall be 32-bit aligned
 308:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 309:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 310:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 311:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t FlashAddress, uint32_t DataAd
 312:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 313:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 314:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t*)FlashAddress;
 315:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 7


 316:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 317:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 318:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 319:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 320:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 321:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 322:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 323:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 325:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 326:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Reset error code */
 327:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 328:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 329:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 330:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress)) || (IS_FLASH_PROGRAM_ADDRESS_OTP(FlashAddress))
 331:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 332:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
 333:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 334:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 335:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
 336:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 337:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 338:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if(IS_FLASH_PROGRAM_ADDRESS_BANK2(FlashAddress))
 339:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 340:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;
 341:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 342:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 343:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 344:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 345:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 346:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 347:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 348:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 349:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 350:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 351:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (status != HAL_OK)
 352:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 353:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Process Unlocked */
 354:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 355:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 356:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 357:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 358:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.Address = FlashAddress;
 359:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 360:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 361:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 362:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 363:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set internal variables used by the IRQ handler */
 364:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK1;
 365:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 366:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 367:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 368:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 369:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set OTP_PG bit */
 370:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 371:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 372:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 8


 373:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 374:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 375:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Set PG bit */
 376:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         SET_BIT(FLASH->CR1, FLASH_CR_PG);
 377:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 378:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 379:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank 1 */
 380:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 381:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 382:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 383:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 384:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 385:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 386:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 387:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 388:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 389:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 390:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set internal variables used by the IRQ handler */
 391:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK2;
 392:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 393:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 394:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR2, FLASH_CR_PG);
 395:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 396:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank2 */
 397:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 398:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2     | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_
 399:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_B
 400:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 401:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2     | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_
 402:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2);
 403:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 404:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 405:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else /* Single Bank */
 406:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Set internal variables used by the IRQ handler */
 407:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK1;
 408:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 409:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 410:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 411:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 412:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set OTP_PG bit */
 413:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->OPTCR, FLASH_OPTCR_PG_OTP);
 414:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 415:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 416:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 417:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 418:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 419:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR1, FLASH_CR_PG);
 420:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 421:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 422:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank 1 */
 423:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 424:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 425:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 426:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 427:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 428:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 429:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 9


 430:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 431:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 432:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 433:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 434:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 435:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_OPTCR_PG_OTP)
 436:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_OTPWORD)
 437:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 438:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program an OTP word (16 bits) */
 439:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       *(__IO uint16_t *)FlashAddress = *(__IO uint16_t*)DataAddress;
 440:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 441:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 442:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 443:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 444:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Program the flash word */
 445:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       do
 446:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 447:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         *dest_addr = *src_addr;
 448:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 449:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 450:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 451:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       } while (row_index != 0U);
 452:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 453:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 454:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 455:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 456:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 457:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 458:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 459:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 460:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 461:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 462:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief This function handles FLASH interrupt request.
 463:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 464:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 465:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 466:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 467:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t temp;
 468:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag;
 469:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
 470:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 471:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 End of Operation flag  */
 472:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_SR_EOP) != RESET)
 473:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 474:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK1)
 475:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 476:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Nb of sector to erased can be decreased */
 477:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 478:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 479:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase */
 480:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0U)
 481:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 482:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Indicate user which sector has been erased */
 483:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 484:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 485:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 1 End of Operation pending bit */
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 10


 487:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 488:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Increment sector number */
 489:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector++;
 490:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 491:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 492:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 493:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 494:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 495:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* No more sectors to Erase, user callback can be called */
 496:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Reset Sector and stop Erase sectors procedure */
 497:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 498:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 499:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 500:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 501:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 502:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 503:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 504:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 505:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 506:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 507:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 508:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 509:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 510:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 511:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure == FLASH_PROC_MASSERASE_BANK1) || (procedure == FLASH_PROC_ALLBANK_MASSERASE))
 512:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 513:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* MassErase ended. Return the selected bank */
 514:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 515:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_1);
 516:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 517:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else if(procedure == FLASH_PROC_PROGRAM_BANK1)
 518:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 519:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Program ended. Return the selected address */
 520:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 521:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 522:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 523:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 524:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 525:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Nothing to do */
 526:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 527:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 528:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure != FLASH_PROC_SECTERASE_BANK2) && \
 529:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 530:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 531:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 532:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 533:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 534:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 535:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 536:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 537:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 538:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 539:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 540:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  /* Check FLASH Bank2 End of Operation flag  */
 541:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_SR_EOP) != RESET)
 542:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 543:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK2)
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 11


 544:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 545:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*Nb of sector to erased can be decreased*/
 546:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 547:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 548:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase*/
 549:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0U)
 550:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 551:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Indicate user which sector has been erased*/
 552:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 553:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 554:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 2 End of Operation pending bit */
 555:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 556:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 557:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Increment sector number*/
 558:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector++;
 559:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 560:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_2, pFlash.VoltageForErase);
 561:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 562:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 563:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 564:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* No more sectors to Erase, user callback can be called */
 565:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Reset Sector and stop Erase sectors procedure */
 566:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 567:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 568:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 569:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 570:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 571:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 572:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 573:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 574:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 575:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 576:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 577:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 578:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 579:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 580:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure == FLASH_PROC_MASSERASE_BANK2) || (procedure == FLASH_PROC_ALLBANK_MASSERASE))
 581:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 582:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*MassErase ended. Return the selected bank*/
 583:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 584:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_2);
 585:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 586:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else if(procedure == FLASH_PROC_PROGRAM_BANK2)
 587:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 588:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Program ended. Return the selected address */
 589:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 590:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 591:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 592:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 593:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 594:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Nothing to do */
 595:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 596:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 597:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure != FLASH_PROC_SECTERASE_BANK1) && \
 598:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK1) && \
 599:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK1))
 600:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 12


 601:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 602:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 603:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 604:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 605:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 606:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 607:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 608:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 609:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 operation error flags */
 610:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_SR_OPERR)
 611:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR1 & (FLASH_FLAG_WRPERR_BANK1 | FLASH_FLAG_PGSERR_BANK1 | FLASH_FLAG_STRBERR_
 612:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OPERR_BANK1);
 613:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 614:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR1 & (FLASH_FLAG_WRPERR_BANK1 | FLASH_FLAG_PGSERR_BANK1 | FLASH_FLAG_STRBERR_
 615:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1);
 616:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_SR_OPERR */
 617:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 618:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 619:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 620:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 621:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
 622:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 623:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 624:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK1(errorflag);
 625:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 626:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 627:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 628:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(procedure == FLASH_PROC_SECTERASE_BANK1)
 629:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 630:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty sector */
 631:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 632:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 633:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 634:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((procedure == FLASH_PROC_MASSERASE_BANK1) || (procedure == FLASH_PROC_ALLBANK_MASSERASE
 635:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 636:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty bank */
 637:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_1;
 638:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 639:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 640:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 641:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty address */
 642:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 643:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 644:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 645:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Stop the procedure ongoing*/
 646:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 647:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 648:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 649:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 650:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 651:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 652:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 653:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank2 operation error flags */
 654:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_SR_OPERR)
 655:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR2 & ((FLASH_FLAG_WRPERR_BANK2 | FLASH_FLAG_PGSERR_BANK2 | FLASH_FLAG_STRBERR
 656:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                              FLASH_FLAG_INCERR_BANK2 | FLASH_FLAG_OPERR_BANK2) & 0x7FFFFFFFU);
 657:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 13


 658:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR2 & ((FLASH_FLAG_WRPERR_BANK2 | FLASH_FLAG_PGSERR_BANK2 | FLASH_FLAG_STRBERR
 659:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                              FLASH_FLAG_INCERR_BANK2) & 0x7FFFFFFFU);
 660:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_SR_OPERR */
 661:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 662:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 663:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 664:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 665:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= (errorflag | 0x80000000U);
 666:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 667:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 668:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK2(errorflag);
 669:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 670:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 671:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 672:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(procedure== FLASH_PROC_SECTERASE_BANK2)
 673:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 674:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty sector*/
 675:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 676:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 677:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 678:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((procedure == FLASH_PROC_MASSERASE_BANK2) || (procedure == FLASH_PROC_ALLBANK_MASSERASE
 679:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 680:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty bank*/
 681:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_2;
 682:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 683:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 684:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 685:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty address*/
 686:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 687:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 688:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 689:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Stop the procedure ongoing*/
 690:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 691:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 692:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 693:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 694:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 695:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 696:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 697:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 698:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 699:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (FLASH_CR_OPERRIE)
 700:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank1 Operation and Error source interrupt */
 701:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK1(FLASH_IT_EOP_BANK1    | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_BA
 702:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BA
 703:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 704:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 705:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank2 Operation and Error source interrupt */
 706:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK2(FLASH_IT_EOP_BANK2    | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_BA
 707:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_BA
 708:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 709:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #else
 710:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank1 Operation and Error source interrupt */
 711:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK1(FLASH_IT_EOP_BANK1    | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_BA
 712:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1);
 713:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 714:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 14


 715:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank2 Operation and Error source interrupt */
 716:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK2(FLASH_IT_EOP_BANK2    | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_BA
 717:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2);
 718:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 719:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_CR_OPERRIE */
 720:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 721:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Process Unlocked */
 722:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 723:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 724:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 725:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 726:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 727:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback
 728:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 729:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Mass Erase: Bank number which has been requested to erase
 730:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Sectors Erase: Sector which has been erased
 731:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                    (if 0xFFFFFFFF, it means that all the selected sectors have been erased)
 732:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Program: Address which was selected for data program
 733:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 734:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 735:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 736:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
  29              		.loc 1 736 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 737:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 738:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   UNUSED(ReturnValue);
  34              		.loc 1 738 3 view .LVU1
 739:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 740:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 741:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 742:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */
 743:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
  35              		.loc 1 743 1 is_stmt 0 view .LVU2
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE147:
  40              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
  41              		.align	1
  42              		.weak	HAL_FLASH_OperationErrorCallback
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	HAL_FLASH_OperationErrorCallback:
  48              	.LVL1:
  49              	.LFB148:
 744:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 745:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 746:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback
 747:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 748:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Mass Erase: Bank number which has been requested to erase
 749:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Sectors Erase: Sector number which returned an error
 750:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Program: Address which was selected for data program
 751:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 752:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 15


 753:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 754:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
  50              		.loc 1 754 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 755:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 756:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   UNUSED(ReturnValue);
  55              		.loc 1 756 3 view .LVU4
 757:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 758:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 759:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 760:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */
 761:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
  56              		.loc 1 761 1 is_stmt 0 view .LVU5
  57 0000 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE148:
  61              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
  62              		.align	1
  63              		.global	HAL_FLASH_IRQHandler
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  68              	HAL_FLASH_IRQHandler:
  69              	.LFB146:
 466:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t temp;
  70              		.loc 1 466 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74 0000 10B5     		push	{r4, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 4, -8
  78              		.cfi_offset 14, -4
 467:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag;
  79              		.loc 1 467 3 view .LVU7
 468:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
  80              		.loc 1 468 3 view .LVU8
 469:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  81              		.loc 1 469 3 view .LVU9
 472:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
  82              		.loc 1 472 3 view .LVU10
 472:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
  83              		.loc 1 472 6 is_stmt 0 view .LVU11
  84 0002 7B4B     		ldr	r3, .L32
  85 0004 1B69     		ldr	r3, [r3, #16]
 472:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
  86              		.loc 1 472 5 view .LVU12
  87 0006 13F4803F 		tst	r3, #65536
  88 000a 18D0     		beq	.L4
 474:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  89              		.loc 1 474 5 is_stmt 1 view .LVU13
 474:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  90              		.loc 1 474 14 is_stmt 0 view .LVU14
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 16


  91 000c 794B     		ldr	r3, .L32+4
  92 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93 0010 DBB2     		uxtb	r3, r3
 474:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  94              		.loc 1 474 7 view .LVU15
  95 0012 012B     		cmp	r3, #1
  96 0014 4AD0     		beq	.L24
 509:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  97              		.loc 1 509 7 is_stmt 1 view .LVU16
 509:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  98              		.loc 1 509 17 is_stmt 0 view .LVU17
  99 0016 774B     		ldr	r3, .L32+4
 100 0018 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 101 001a E4B2     		uxtb	r4, r4
 102              	.LVL2:
 511:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 103              		.loc 1 511 7 is_stmt 1 view .LVU18
 511:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 104              		.loc 1 511 9 is_stmt 0 view .LVU19
 105 001c 072C     		cmp	r4, #7
 106 001e 18BF     		it	ne
 107 0020 022C     		cmpne	r4, #2
 108 0022 68D0     		beq	.L25
 517:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 109              		.loc 1 517 12 is_stmt 1 view .LVU20
 517:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 110              		.loc 1 517 14 is_stmt 0 view .LVU21
 111 0024 032C     		cmp	r4, #3
 112 0026 6AD0     		beq	.L26
 113              	.L8:
 526:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 114              		.loc 1 526 7 is_stmt 1 view .LVU22
 528:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 115              		.loc 1 528 7 view .LVU23
 529:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 116              		.loc 1 529 52 is_stmt 0 view .LVU24
 117 0028 043C     		subs	r4, r4, #4
 118              	.LVL3:
 529:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 119              		.loc 1 529 52 view .LVU25
 120 002a E4B2     		uxtb	r4, r4
 121              	.LVL4:
 528:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 122              		.loc 1 528 9 view .LVU26
 123 002c 022C     		cmp	r4, #2
 124 002e 06D9     		bls	.L4
 532:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 125              		.loc 1 532 9 is_stmt 1 view .LVU27
 532:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 126              		.loc 1 532 33 is_stmt 0 view .LVU28
 127 0030 704B     		ldr	r3, .L32+4
 128 0032 0022     		movs	r2, #0
 129 0034 1A70     		strb	r2, [r3]
 534:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 130              		.loc 1 534 9 is_stmt 1 view .LVU29
 131 0036 6E4B     		ldr	r3, .L32
 132 0038 4FF48032 		mov	r2, #65536
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 17


 133 003c 5A61     		str	r2, [r3, #20]
 134              	.L4:
 541:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 135              		.loc 1 541 3 view .LVU30
 541:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 136              		.loc 1 541 6 is_stmt 0 view .LVU31
 137 003e 6C4B     		ldr	r3, .L32
 138 0040 D3F81031 		ldr	r3, [r3, #272]
 541:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 139              		.loc 1 541 5 view .LVU32
 140 0044 13F4803F 		tst	r3, #65536
 141 0048 19D0     		beq	.L9
 543:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 142              		.loc 1 543 5 is_stmt 1 view .LVU33
 543:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 143              		.loc 1 543 14 is_stmt 0 view .LVU34
 144 004a 6A4B     		ldr	r3, .L32+4
 145 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 146 004e DBB2     		uxtb	r3, r3
 543:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 147              		.loc 1 543 7 view .LVU35
 148 0050 042B     		cmp	r3, #4
 149 0052 59D0     		beq	.L27
 578:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 150              		.loc 1 578 7 is_stmt 1 view .LVU36
 578:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 151              		.loc 1 578 17 is_stmt 0 view .LVU37
 152 0054 674B     		ldr	r3, .L32+4
 153 0056 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 154 0058 E4B2     		uxtb	r4, r4
 155              	.LVL5:
 580:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 156              		.loc 1 580 7 is_stmt 1 view .LVU38
 580:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 157              		.loc 1 580 9 is_stmt 0 view .LVU39
 158 005a 072C     		cmp	r4, #7
 159 005c 18BF     		it	ne
 160 005e 052C     		cmpne	r4, #5
 161 0060 79D0     		beq	.L28
 586:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 162              		.loc 1 586 12 is_stmt 1 view .LVU40
 586:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 163              		.loc 1 586 14 is_stmt 0 view .LVU41
 164 0062 062C     		cmp	r4, #6
 165 0064 7BD0     		beq	.L29
 166              	.L13:
 595:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 167              		.loc 1 595 7 is_stmt 1 view .LVU42
 597:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK1) && \
 168              		.loc 1 597 7 view .LVU43
 598:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK1))
 169              		.loc 1 598 52 is_stmt 0 view .LVU44
 170 0066 013C     		subs	r4, r4, #1
 171              	.LVL6:
 598:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK1))
 172              		.loc 1 598 52 view .LVU45
 173 0068 E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 18


 174              	.LVL7:
 597:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK1) && \
 175              		.loc 1 597 9 view .LVU46
 176 006a 022C     		cmp	r4, #2
 177 006c 07D9     		bls	.L9
 601:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 178              		.loc 1 601 9 is_stmt 1 view .LVU47
 601:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 179              		.loc 1 601 33 is_stmt 0 view .LVU48
 180 006e 614B     		ldr	r3, .L32+4
 181 0070 0022     		movs	r2, #0
 182 0072 1A70     		strb	r2, [r3]
 603:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 183              		.loc 1 603 9 is_stmt 1 view .LVU49
 184 0074 5E4B     		ldr	r3, .L32
 185 0076 4FF48032 		mov	r2, #65536
 186 007a C3F81421 		str	r2, [r3, #276]
 187              	.L9:
 611:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OPERR_BANK1);
 188              		.loc 1 611 3 view .LVU50
 611:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OPERR_BANK1);
 189              		.loc 1 611 20 is_stmt 0 view .LVU51
 190 007e 5C4B     		ldr	r3, .L32
 191 0080 1B69     		ldr	r3, [r3, #16]
 192              	.LVL8:
 618:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 193              		.loc 1 618 3 is_stmt 1 view .LVU52
 618:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 194              		.loc 1 618 5 is_stmt 0 view .LVU53
 195 0082 13F4DC03 		ands	r3, r3, #7208960
 196              	.LVL9:
 618:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 197              		.loc 1 618 5 view .LVU54
 198 0086 79D0     		beq	.L14
 621:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 199              		.loc 1 621 5 is_stmt 1 view .LVU55
 621:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 200              		.loc 1 621 22 is_stmt 0 view .LVU56
 201 0088 5A4A     		ldr	r2, .L32+4
 202 008a 9169     		ldr	r1, [r2, #24]
 203 008c 1943     		orrs	r1, r1, r3
 204 008e 9161     		str	r1, [r2, #24]
 624:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 205              		.loc 1 624 5 is_stmt 1 view .LVU57
 206 0090 5749     		ldr	r1, .L32
 207 0092 4B61     		str	r3, [r1, #20]
 626:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 208              		.loc 1 626 5 view .LVU58
 626:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 209              		.loc 1 626 15 is_stmt 0 view .LVU59
 210 0094 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 211              	.LVL10:
 626:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 212              		.loc 1 626 15 view .LVU60
 213 0096 DBB2     		uxtb	r3, r3
 214              	.LVL11:
 628:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 19


 215              		.loc 1 628 5 is_stmt 1 view .LVU61
 628:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 216              		.loc 1 628 7 is_stmt 0 view .LVU62
 217 0098 012B     		cmp	r3, #1
 218 009a 65D0     		beq	.L30
 634:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 219              		.loc 1 634 10 is_stmt 1 view .LVU63
 634:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 220              		.loc 1 634 12 is_stmt 0 view .LVU64
 221 009c 072B     		cmp	r3, #7
 222 009e 18BF     		it	ne
 223 00a0 022B     		cmpne	r3, #2
 224 00a2 00F08580 		beq	.L21
 642:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 225              		.loc 1 642 7 is_stmt 1 view .LVU65
 642:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 226              		.loc 1 642 12 is_stmt 0 view .LVU66
 227 00a6 534B     		ldr	r3, .L32+4
 228              	.LVL12:
 642:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 229              		.loc 1 642 12 view .LVU67
 230 00a8 1869     		ldr	r0, [r3, #16]
 231              	.LVL13:
 642:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 232              		.loc 1 642 12 view .LVU68
 233 00aa 62E0     		b	.L16
 234              	.LVL14:
 235              	.L24:
 477:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 236              		.loc 1 477 7 is_stmt 1 view .LVU69
 477:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 237              		.loc 1 477 13 is_stmt 0 view .LVU70
 238 00ac 514B     		ldr	r3, .L32+4
 239 00ae 5A68     		ldr	r2, [r3, #4]
 477:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 240              		.loc 1 477 30 view .LVU71
 241 00b0 013A     		subs	r2, r2, #1
 242 00b2 5A60     		str	r2, [r3, #4]
 480:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 243              		.loc 1 480 7 is_stmt 1 view .LVU72
 480:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 244              		.loc 1 480 16 is_stmt 0 view .LVU73
 245 00b4 5B68     		ldr	r3, [r3, #4]
 480:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 246              		.loc 1 480 9 view .LVU74
 247 00b6 83B1     		cbz	r3, .L6
 483:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 248              		.loc 1 483 9 is_stmt 1 view .LVU75
 249 00b8 4E4C     		ldr	r4, .L32+4
 250 00ba E068     		ldr	r0, [r4, #12]
 251 00bc FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 252              	.LVL15:
 486:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 253              		.loc 1 486 9 view .LVU76
 254 00c0 4B4B     		ldr	r3, .L32
 255 00c2 4FF48032 		mov	r2, #65536
 256 00c6 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 20


 489:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 257              		.loc 1 489 9 view .LVU77
 489:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 258              		.loc 1 489 15 is_stmt 0 view .LVU78
 259 00c8 E368     		ldr	r3, [r4, #12]
 489:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 260              		.loc 1 489 22 view .LVU79
 261 00ca 0133     		adds	r3, r3, #1
 262 00cc E360     		str	r3, [r4, #12]
 490:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 263              		.loc 1 490 9 is_stmt 1 view .LVU80
 490:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 264              		.loc 1 490 14 is_stmt 0 view .LVU81
 265 00ce E068     		ldr	r0, [r4, #12]
 266              	.LVL16:
 491:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 267              		.loc 1 491 9 is_stmt 1 view .LVU82
 268 00d0 A268     		ldr	r2, [r4, #8]
 269 00d2 0121     		movs	r1, #1
 270 00d4 FFF7FEFF 		bl	FLASH_Erase_Sector
 271              	.LVL17:
 491:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 272              		.loc 1 491 9 is_stmt 0 view .LVU83
 273 00d8 B1E7     		b	.L4
 274              	.L6:
 497:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 275              		.loc 1 497 9 is_stmt 1 view .LVU84
 497:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 276              		.loc 1 497 23 is_stmt 0 view .LVU85
 277 00da 464B     		ldr	r3, .L32+4
 278 00dc 4FF0FF32 		mov	r2, #-1
 279 00e0 DA60     		str	r2, [r3, #12]
 498:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 280              		.loc 1 498 9 is_stmt 1 view .LVU86
 498:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 281              		.loc 1 498 33 is_stmt 0 view .LVU87
 282 00e2 0022     		movs	r2, #0
 283 00e4 1A70     		strb	r2, [r3]
 501:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 284              		.loc 1 501 9 is_stmt 1 view .LVU88
 285 00e6 D868     		ldr	r0, [r3, #12]
 286 00e8 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 287              	.LVL18:
 504:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 288              		.loc 1 504 9 view .LVU89
 289 00ec 404B     		ldr	r3, .L32
 290 00ee 4FF48032 		mov	r2, #65536
 291 00f2 5A61     		str	r2, [r3, #20]
 292 00f4 A3E7     		b	.L4
 293              	.LVL19:
 294              	.L25:
 515:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 295              		.loc 1 515 9 view .LVU90
 296 00f6 0120     		movs	r0, #1
 297 00f8 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 298              	.LVL20:
 299 00fc 94E7     		b	.L8
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 21


 300              	.L26:
 521:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 301              		.loc 1 521 9 view .LVU91
 302 00fe 3D4B     		ldr	r3, .L32+4
 303 0100 1869     		ldr	r0, [r3, #16]
 304 0102 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 305              	.LVL21:
 306 0106 8FE7     		b	.L8
 307              	.LVL22:
 308              	.L27:
 546:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 309              		.loc 1 546 7 view .LVU92
 546:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 310              		.loc 1 546 13 is_stmt 0 view .LVU93
 311 0108 3A4B     		ldr	r3, .L32+4
 312 010a 5A68     		ldr	r2, [r3, #4]
 546:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 313              		.loc 1 546 30 view .LVU94
 314 010c 013A     		subs	r2, r2, #1
 315 010e 5A60     		str	r2, [r3, #4]
 549:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 316              		.loc 1 549 7 is_stmt 1 view .LVU95
 549:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 317              		.loc 1 549 16 is_stmt 0 view .LVU96
 318 0110 5B68     		ldr	r3, [r3, #4]
 549:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 319              		.loc 1 549 9 view .LVU97
 320 0112 8BB1     		cbz	r3, .L11
 552:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 321              		.loc 1 552 9 is_stmt 1 view .LVU98
 322 0114 374C     		ldr	r4, .L32+4
 323 0116 E068     		ldr	r0, [r4, #12]
 324 0118 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 325              	.LVL23:
 555:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 326              		.loc 1 555 9 view .LVU99
 327 011c 344B     		ldr	r3, .L32
 328 011e 4FF48032 		mov	r2, #65536
 329 0122 C3F81421 		str	r2, [r3, #276]
 558:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 330              		.loc 1 558 9 view .LVU100
 558:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 331              		.loc 1 558 15 is_stmt 0 view .LVU101
 332 0126 E368     		ldr	r3, [r4, #12]
 558:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 333              		.loc 1 558 22 view .LVU102
 334 0128 0133     		adds	r3, r3, #1
 335 012a E360     		str	r3, [r4, #12]
 559:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_2, pFlash.VoltageForErase);
 336              		.loc 1 559 9 is_stmt 1 view .LVU103
 559:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_2, pFlash.VoltageForErase);
 337              		.loc 1 559 14 is_stmt 0 view .LVU104
 338 012c E068     		ldr	r0, [r4, #12]
 339              	.LVL24:
 560:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 340              		.loc 1 560 9 is_stmt 1 view .LVU105
 341 012e A268     		ldr	r2, [r4, #8]
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 22


 342 0130 0221     		movs	r1, #2
 343 0132 FFF7FEFF 		bl	FLASH_Erase_Sector
 344              	.LVL25:
 560:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 345              		.loc 1 560 9 is_stmt 0 view .LVU106
 346 0136 A2E7     		b	.L9
 347              	.L11:
 566:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 348              		.loc 1 566 9 is_stmt 1 view .LVU107
 566:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 349              		.loc 1 566 23 is_stmt 0 view .LVU108
 350 0138 2E4B     		ldr	r3, .L32+4
 351 013a 4FF0FF32 		mov	r2, #-1
 352 013e DA60     		str	r2, [r3, #12]
 567:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 353              		.loc 1 567 9 is_stmt 1 view .LVU109
 567:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 354              		.loc 1 567 33 is_stmt 0 view .LVU110
 355 0140 0022     		movs	r2, #0
 356 0142 1A70     		strb	r2, [r3]
 570:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 357              		.loc 1 570 9 is_stmt 1 view .LVU111
 358 0144 D868     		ldr	r0, [r3, #12]
 359 0146 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 360              	.LVL26:
 573:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 361              		.loc 1 573 9 view .LVU112
 362 014a 294B     		ldr	r3, .L32
 363 014c 4FF48032 		mov	r2, #65536
 364 0150 C3F81421 		str	r2, [r3, #276]
 365 0154 93E7     		b	.L9
 366              	.LVL27:
 367              	.L28:
 584:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 368              		.loc 1 584 9 view .LVU113
 369 0156 0220     		movs	r0, #2
 370 0158 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 371              	.LVL28:
 372 015c 83E7     		b	.L13
 373              	.L29:
 590:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 374              		.loc 1 590 9 view .LVU114
 375 015e 254B     		ldr	r3, .L32+4
 376 0160 1869     		ldr	r0, [r3, #16]
 377 0162 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 378              	.LVL29:
 379 0166 7EE7     		b	.L13
 380              	.LVL30:
 381              	.L30:
 631:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 382              		.loc 1 631 7 view .LVU115
 631:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 383              		.loc 1 631 12 is_stmt 0 view .LVU116
 384 0168 1346     		mov	r3, r2
 385              	.LVL31:
 631:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 386              		.loc 1 631 12 view .LVU117
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 23


 387 016a D068     		ldr	r0, [r2, #12]
 388              	.LVL32:
 632:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 389              		.loc 1 632 7 is_stmt 1 view .LVU118
 632:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 390              		.loc 1 632 21 is_stmt 0 view .LVU119
 391 016c 4FF0FF32 		mov	r2, #-1
 392 0170 DA60     		str	r2, [r3, #12]
 393              	.LVL33:
 394              	.L16:
 646:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 395              		.loc 1 646 5 is_stmt 1 view .LVU120
 646:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 396              		.loc 1 646 29 is_stmt 0 view .LVU121
 397 0172 204B     		ldr	r3, .L32+4
 398 0174 0022     		movs	r2, #0
 399 0176 1A70     		strb	r2, [r3]
 400              	.LVL34:
 649:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 401              		.loc 1 649 5 is_stmt 1 view .LVU122
 402 0178 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 403              	.LVL35:
 404              	.L14:
 655:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                              FLASH_FLAG_INCERR_BANK2 | FLASH_FLAG_OPERR_BANK2) & 0x7FFFFFFFU);
 405              		.loc 1 655 3 view .LVU123
 655:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                              FLASH_FLAG_INCERR_BANK2 | FLASH_FLAG_OPERR_BANK2) & 0x7FFFFFFFU);
 406              		.loc 1 655 20 is_stmt 0 view .LVU124
 407 017c 1C4B     		ldr	r3, .L32
 408 017e D3F81031 		ldr	r3, [r3, #272]
 409              	.LVL36:
 662:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 410              		.loc 1 662 3 is_stmt 1 view .LVU125
 662:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 411              		.loc 1 662 5 is_stmt 0 view .LVU126
 412 0182 13F4DC03 		ands	r3, r3, #7208960
 413              	.LVL37:
 662:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 414              		.loc 1 662 5 view .LVU127
 415 0186 1ED0     		beq	.L17
 665:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 416              		.loc 1 665 5 is_stmt 1 view .LVU128
 665:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 417              		.loc 1 665 22 is_stmt 0 view .LVU129
 418 0188 1A49     		ldr	r1, .L32+4
 419 018a 8A69     		ldr	r2, [r1, #24]
 420 018c 1A43     		orrs	r2, r2, r3
 421 018e 42F00042 		orr	r2, r2, #-2147483648
 422 0192 8A61     		str	r2, [r1, #24]
 668:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 423              		.loc 1 668 5 is_stmt 1 view .LVU130
 424 0194 164A     		ldr	r2, .L32
 425 0196 C2F81431 		str	r3, [r2, #276]
 670:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 426              		.loc 1 670 5 view .LVU131
 670:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 427              		.loc 1 670 15 is_stmt 0 view .LVU132
 428 019a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 24


 429              	.LVL38:
 670:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 430              		.loc 1 670 15 view .LVU133
 431 019c DBB2     		uxtb	r3, r3
 432              	.LVL39:
 672:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 433              		.loc 1 672 5 is_stmt 1 view .LVU134
 672:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 434              		.loc 1 672 7 is_stmt 0 view .LVU135
 435 019e 042B     		cmp	r3, #4
 436 01a0 08D0     		beq	.L31
 678:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 437              		.loc 1 678 10 is_stmt 1 view .LVU136
 678:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 438              		.loc 1 678 12 is_stmt 0 view .LVU137
 439 01a2 072B     		cmp	r3, #7
 440 01a4 18BF     		it	ne
 441 01a6 052B     		cmpne	r3, #5
 442 01a8 1FD0     		beq	.L22
 686:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 443              		.loc 1 686 7 is_stmt 1 view .LVU138
 686:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 444              		.loc 1 686 12 is_stmt 0 view .LVU139
 445 01aa 124B     		ldr	r3, .L32+4
 446              	.LVL40:
 686:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 447              		.loc 1 686 12 view .LVU140
 448 01ac 1869     		ldr	r0, [r3, #16]
 449              	.LVL41:
 686:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 450              		.loc 1 686 12 view .LVU141
 451 01ae 05E0     		b	.L19
 452              	.LVL42:
 453              	.L21:
 637:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 454              		.loc 1 637 12 view .LVU142
 455 01b0 0120     		movs	r0, #1
 456 01b2 DEE7     		b	.L16
 457              	.LVL43:
 458              	.L31:
 675:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 459              		.loc 1 675 7 is_stmt 1 view .LVU143
 675:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 460              		.loc 1 675 12 is_stmt 0 view .LVU144
 461 01b4 C868     		ldr	r0, [r1, #12]
 462              	.LVL44:
 676:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 463              		.loc 1 676 7 is_stmt 1 view .LVU145
 676:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 464              		.loc 1 676 21 is_stmt 0 view .LVU146
 465 01b6 4FF0FF32 		mov	r2, #-1
 466              	.LVL45:
 676:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 467              		.loc 1 676 21 view .LVU147
 468 01ba CA60     		str	r2, [r1, #12]
 469              	.LVL46:
 470              	.L19:
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 25


 690:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 471              		.loc 1 690 5 is_stmt 1 view .LVU148
 690:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 472              		.loc 1 690 29 is_stmt 0 view .LVU149
 473 01bc 0D4B     		ldr	r3, .L32+4
 474 01be 0022     		movs	r2, #0
 475 01c0 1A70     		strb	r2, [r3]
 476              	.LVL47:
 693:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 477              		.loc 1 693 5 is_stmt 1 view .LVU150
 478 01c2 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 479              	.LVL48:
 480              	.L17:
 697:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 481              		.loc 1 697 3 view .LVU151
 697:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 482              		.loc 1 697 12 is_stmt 0 view .LVU152
 483 01c6 0B4B     		ldr	r3, .L32+4
 484 01c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 697:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 485              		.loc 1 697 5 view .LVU153
 486 01ca 6BB9     		cbnz	r3, .L3
 701:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BA
 487              		.loc 1 701 5 is_stmt 1 view .LVU154
 488 01cc 084B     		ldr	r3, .L32
 489 01ce DA68     		ldr	r2, [r3, #12]
 490 01d0 22F4DE02 		bic	r2, r2, #7274496
 491 01d4 DA60     		str	r2, [r3, #12]
 706:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_BA
 492              		.loc 1 706 5 view .LVU155
 493 01d6 D3F80C21 		ldr	r2, [r3, #268]
 494 01da 22F4DE02 		bic	r2, r2, #7274496
 495 01de C3F80C21 		str	r2, [r3, #268]
 722:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 496              		.loc 1 722 5 view .LVU156
 722:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 497              		.loc 1 722 5 view .LVU157
 498 01e2 044B     		ldr	r3, .L32+4
 499 01e4 0022     		movs	r2, #0
 500 01e6 1A75     		strb	r2, [r3, #20]
 722:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 501              		.loc 1 722 5 view .LVU158
 502              	.L3:
 724:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 503              		.loc 1 724 1 is_stmt 0 view .LVU159
 504 01e8 10BD     		pop	{r4, pc}
 505              	.LVL49:
 506              	.L22:
 681:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 507              		.loc 1 681 12 view .LVU160
 508 01ea 0220     		movs	r0, #2
 509 01ec E6E7     		b	.L19
 510              	.L33:
 511 01ee 00BF     		.align	2
 512              	.L32:
 513 01f0 00200052 		.word	1375739904
 514 01f4 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 26


 515              		.cfi_endproc
 516              	.LFE146:
 518              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 519              		.align	1
 520              		.global	HAL_FLASH_Unlock
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 525              	HAL_FLASH_Unlock:
 526              	.LFB149:
 762:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 763:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 764:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 765:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 766:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 767:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 768:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Management functions
 769:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 770:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 771:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 772:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 773:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 774:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 775:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 776:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     memory operations.
 777:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 778:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 779:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 780:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 781:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 782:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 783:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH control registers access
 784:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 785:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 786:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 787:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 527              		.loc 1 787 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 788:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 532              		.loc 1 788 3 view .LVU162
 533              		.loc 1 788 6 is_stmt 0 view .LVU163
 534 0000 144B     		ldr	r3, .L40
 535 0002 DB68     		ldr	r3, [r3, #12]
 536              		.loc 1 788 5 view .LVU164
 537 0004 13F0010F 		tst	r3, #1
 538 0008 09D0     		beq	.L35
 789:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 790:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH Bank1 Registers access */
 791:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY1);
 539              		.loc 1 791 5 is_stmt 1 view .LVU165
 540 000a 124B     		ldr	r3, .L40
 541 000c 124A     		ldr	r2, .L40+4
 542 000e 5A60     		str	r2, [r3, #4]
 792:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY2);
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 27


 543              		.loc 1 792 5 view .LVU166
 544 0010 02F18832 		add	r2, r2, #-2004318072
 545 0014 5A60     		str	r2, [r3, #4]
 793:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 794:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify Flash Bank1 is unlocked */
 795:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 546              		.loc 1 795 5 view .LVU167
 547              		.loc 1 795 9 is_stmt 0 view .LVU168
 548 0016 DB68     		ldr	r3, [r3, #12]
 549              		.loc 1 795 8 view .LVU169
 550 0018 13F0010F 		tst	r3, #1
 551 001c 14D1     		bne	.L37
 552              	.L35:
 796:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 797:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 798:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 799:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 800:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 801:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 802:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 553              		.loc 1 802 3 is_stmt 1 view .LVU170
 554              		.loc 1 802 6 is_stmt 0 view .LVU171
 555 001e 0D4B     		ldr	r3, .L40
 556 0020 D3F80C31 		ldr	r3, [r3, #268]
 557              		.loc 1 802 5 view .LVU172
 558 0024 13F0010F 		tst	r3, #1
 559 0028 10D0     		beq	.L38
 803:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 804:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH Bank2 Registers access */
 805:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY1);
 560              		.loc 1 805 5 is_stmt 1 view .LVU173
 561 002a 0A4B     		ldr	r3, .L40
 562 002c 0A4A     		ldr	r2, .L40+4
 563 002e C3F80421 		str	r2, [r3, #260]
 806:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY2);
 564              		.loc 1 806 5 view .LVU174
 565 0032 02F18832 		add	r2, r2, #-2004318072
 566 0036 C3F80421 		str	r2, [r3, #260]
 807:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 808:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify Flash Bank2 is unlocked */
 809:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 567              		.loc 1 809 5 view .LVU175
 568              		.loc 1 809 9 is_stmt 0 view .LVU176
 569 003a D3F80C31 		ldr	r3, [r3, #268]
 570              		.loc 1 809 8 view .LVU177
 571 003e 13F0010F 		tst	r3, #1
 572 0042 05D1     		bne	.L39
 810:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 811:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 812:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 813:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 814:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 815:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 816:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 573              		.loc 1 816 10 view .LVU178
 574 0044 0020     		movs	r0, #0
 575 0046 7047     		bx	lr
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 28


 576              	.L37:
 797:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 577              		.loc 1 797 14 view .LVU179
 578 0048 0120     		movs	r0, #1
 579 004a 7047     		bx	lr
 580              	.L38:
 581              		.loc 1 816 10 view .LVU180
 582 004c 0020     		movs	r0, #0
 583 004e 7047     		bx	lr
 584              	.L39:
 811:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 585              		.loc 1 811 14 view .LVU181
 586 0050 0120     		movs	r0, #1
 817:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 587              		.loc 1 817 1 view .LVU182
 588 0052 7047     		bx	lr
 589              	.L41:
 590              		.align	2
 591              	.L40:
 592 0054 00200052 		.word	1375739904
 593 0058 23016745 		.word	1164378403
 594              		.cfi_endproc
 595              	.LFE149:
 597              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 598              		.align	1
 599              		.global	HAL_FLASH_Lock
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 604              	HAL_FLASH_Lock:
 605              	.LFB150:
 818:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 819:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 820:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Locks the FLASH control registers access
 821:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 822:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 823:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 824:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 606              		.loc 1 824 1 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 825:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Bank1 Control Register access */
 826:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR1, FLASH_CR_LOCK);
 611              		.loc 1 826 3 view .LVU184
 612 0000 0D4B     		ldr	r3, .L46
 613 0002 DA68     		ldr	r2, [r3, #12]
 614 0004 42F00102 		orr	r2, r2, #1
 615 0008 DA60     		str	r2, [r3, #12]
 827:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 828:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify Flash Bank1 is locked */
 829:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->CR1, FLASH_CR_LOCK) == 0U)
 616              		.loc 1 829 3 view .LVU185
 617              		.loc 1 829 7 is_stmt 0 view .LVU186
 618 000a DB68     		ldr	r3, [r3, #12]
 619              		.loc 1 829 6 view .LVU187
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 29


 620 000c 13F0010F 		tst	r3, #1
 621 0010 0DD0     		beq	.L44
 830:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 831:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 832:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 833:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 834:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 835:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Bank2 Control Register access */
 836:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR2, FLASH_CR_LOCK);
 622              		.loc 1 836 3 is_stmt 1 view .LVU188
 623 0012 094B     		ldr	r3, .L46
 624 0014 D3F80C21 		ldr	r2, [r3, #268]
 625 0018 42F00102 		orr	r2, r2, #1
 626 001c C3F80C21 		str	r2, [r3, #268]
 837:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 838:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify Flash Bank2 is locked */
 839:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) == 0U)
 627              		.loc 1 839 3 view .LVU189
 628              		.loc 1 839 7 is_stmt 0 view .LVU190
 629 0020 D3F80C31 		ldr	r3, [r3, #268]
 630              		.loc 1 839 6 view .LVU191
 631 0024 13F0010F 		tst	r3, #1
 632 0028 03D0     		beq	.L45
 840:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 841:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 842:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 843:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 844:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 845:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 633              		.loc 1 845 10 view .LVU192
 634 002a 0020     		movs	r0, #0
 635 002c 7047     		bx	lr
 636              	.L44:
 831:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 637              		.loc 1 831 12 view .LVU193
 638 002e 0120     		movs	r0, #1
 639 0030 7047     		bx	lr
 640              	.L45:
 841:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 641              		.loc 1 841 12 view .LVU194
 642 0032 0120     		movs	r0, #1
 846:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 643              		.loc 1 846 1 view .LVU195
 644 0034 7047     		bx	lr
 645              	.L47:
 646 0036 00BF     		.align	2
 647              	.L46:
 648 0038 00200052 		.word	1375739904
 649              		.cfi_endproc
 650              	.LFE150:
 652              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 653              		.align	1
 654              		.global	HAL_FLASH_OB_Unlock
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 659              	HAL_FLASH_OB_Unlock:
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 30


 660              	.LFB151:
 847:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 848:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 849:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Control Registers access.
 850:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 851:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 852:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 853:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 661              		.loc 1 853 1 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 854:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != 0U)
 666              		.loc 1 854 3 view .LVU197
 667              		.loc 1 854 6 is_stmt 0 view .LVU198
 668 0000 0A4B     		ldr	r3, .L52
 669 0002 9B69     		ldr	r3, [r3, #24]
 670              		.loc 1 854 5 view .LVU199
 671 0004 13F0010F 		tst	r3, #1
 672 0008 0BD0     		beq	.L50
 855:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 856:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorizes the Option Byte registers programming */
 857:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY1);
 673              		.loc 1 857 5 is_stmt 1 view .LVU200
 674 000a 084B     		ldr	r3, .L52
 675 000c 084A     		ldr	r2, .L52+4
 676 000e 9A60     		str	r2, [r3, #8]
 858:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY2);
 677              		.loc 1 858 5 view .LVU201
 678 0010 02F14432 		add	r2, r2, #1145324612
 679 0014 9A60     		str	r2, [r3, #8]
 859:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 860:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify that the Option Bytes are unlocked */
 861:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != 0U)
 680              		.loc 1 861 5 view .LVU202
 681              		.loc 1 861 9 is_stmt 0 view .LVU203
 682 0016 9B69     		ldr	r3, [r3, #24]
 683              		.loc 1 861 8 view .LVU204
 684 0018 13F0010F 		tst	r3, #1
 685 001c 03D1     		bne	.L51
 862:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 863:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 864:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 865:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 866:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 867:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 686              		.loc 1 867 10 view .LVU205
 687 001e 0020     		movs	r0, #0
 688 0020 7047     		bx	lr
 689              	.L50:
 690 0022 0020     		movs	r0, #0
 691 0024 7047     		bx	lr
 692              	.L51:
 863:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 693              		.loc 1 863 14 view .LVU206
 694 0026 0120     		movs	r0, #1
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 31


 868:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 695              		.loc 1 868 1 view .LVU207
 696 0028 7047     		bx	lr
 697              	.L53:
 698 002a 00BF     		.align	2
 699              	.L52:
 700 002c 00200052 		.word	1375739904
 701 0030 3B2A1908 		.word	135866939
 702              		.cfi_endproc
 703              	.LFE151:
 705              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 706              		.align	1
 707              		.global	HAL_FLASH_OB_Lock
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 712              	HAL_FLASH_OB_Lock:
 713              	.LFB152:
 869:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 870:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 871:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Lock the FLASH Option Control Registers access.
 872:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 873:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 874:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 875:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 714              		.loc 1 875 1 is_stmt 1 view -0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 876:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 877:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK);
 719              		.loc 1 877 3 view .LVU209
 720 0000 064B     		ldr	r3, .L57
 721 0002 9A69     		ldr	r2, [r3, #24]
 722 0004 42F00102 		orr	r2, r2, #1
 723 0008 9A61     		str	r2, [r3, #24]
 878:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 879:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify that the Option Bytes are locked */
 880:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) == 0U)
 724              		.loc 1 880 3 view .LVU210
 725              		.loc 1 880 7 is_stmt 0 view .LVU211
 726 000a 9B69     		ldr	r3, [r3, #24]
 727              		.loc 1 880 6 view .LVU212
 728 000c 13F0010F 		tst	r3, #1
 729 0010 01D0     		beq	.L56
 881:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 882:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 883:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 884:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 885:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 730              		.loc 1 885 10 view .LVU213
 731 0012 0020     		movs	r0, #0
 732 0014 7047     		bx	lr
 733              	.L56:
 882:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 734              		.loc 1 882 12 view .LVU214
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 32


 735 0016 0120     		movs	r0, #1
 886:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 736              		.loc 1 886 1 view .LVU215
 737 0018 7047     		bx	lr
 738              	.L58:
 739 001a 00BF     		.align	2
 740              	.L57:
 741 001c 00200052 		.word	1375739904
 742              		.cfi_endproc
 743              	.LFE152:
 745              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 746              		.align	1
 747              		.global	HAL_FLASH_GetError
 748              		.syntax unified
 749              		.thumb
 750              		.thumb_func
 752              	HAL_FLASH_GetError:
 753              	.LFB154:
 887:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 888:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 889:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Launch the option bytes loading.
 890:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 891:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 892:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 893:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 894:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 895:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 896:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for CRC computation to be completed */
 897:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1) != HAL_OK)
 898:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 899:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_ERROR;
 900:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 901:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
 902:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if (FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2) != HAL_OK)
 903:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 904:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_ERROR;
 905:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 906:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
 907:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 908:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 909:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_OK;
 910:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 911:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 912:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (status == HAL_OK)
 913:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 914:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Set OPTSTRT Bit */
 915:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTSTART);
 916:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 917:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Wait for OB change operation to be completed */
 918:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = FLASH_OB_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 919:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 920:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 921:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 922:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 923:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 924:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 925:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 33


 926:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 927:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 928:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 929:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Peripheral Errors functions
 930:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 931:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 932:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 933:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 934:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 935:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 936:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 937:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 938:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 939:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 940:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 941:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 942:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 943:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 944:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_FLASH_ERRORCode The returned value can be:
 945:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_NONE       : No error set
 946:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 947:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK1  : Write Protection Error on Bank 1
 948:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK1  : Program Sequence Error on Bank 1
 949:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK1 : Strobe Error on Bank 1
 950:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK1  : Inconsistency Error on Bank 1
 951:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK1  : Operation Error on Bank 1
 952:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK1  : Read Protection Error on Bank 1
 953:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK1  : Read Secured Error on Bank 1
 954:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK1: ECC Single Correction Error on Bank 1
 955:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK1: ECC Double Detection Error on Bank 1
 956:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_CRCRD_BANK1: CRC Read Error on Bank 1
 957:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 958:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK2  : Write Protection Error on Bank 2
 959:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK2  : Program Sequence Error on Bank 2
 960:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK2 : Strobe Error on Bank 2
 961:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK2  : Inconsistency Error on Bank 2
 962:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK2  : Operation Error on Bank 2
 963:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK2  : Read Protection Error on Bank 2
 964:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK2  : Read Secured Error on Bank 2
 965:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK2: SNECC Error on Bank 2
 966:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK2: Double Detection ECC on Bank 2
 967:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_CRCRD_BANK2: CRC Read Error on Bank 2
 968:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** */
 969:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 970:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 971:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 754              		.loc 1 971 1 is_stmt 1 view -0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 972:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    return pFlash.ErrorCode;
 759              		.loc 1 972 4 view .LVU217
 760              		.loc 1 972 17 is_stmt 0 view .LVU218
 761 0000 014B     		ldr	r3, .L60
 762 0002 9869     		ldr	r0, [r3, #24]
 973:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 34


 763              		.loc 1 973 1 view .LVU219
 764 0004 7047     		bx	lr
 765              	.L61:
 766 0006 00BF     		.align	2
 767              	.L60:
 768 0008 00000000 		.word	.LANCHOR0
 769              		.cfi_endproc
 770              	.LFE154:
 772              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 773              		.align	1
 774              		.global	FLASH_WaitForLastOperation
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 779              	FLASH_WaitForLastOperation:
 780              	.LVL50:
 781              	.LFB155:
 974:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 975:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 976:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 977:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 978:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 979:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 980:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 981:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 982:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 983:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 984:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 985:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 986:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 987:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 988:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 989:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 990:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 991:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
 992:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Bank flash FLASH_BANK_1 or FLASH_BANK_2
 993:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 994:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 995:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout, uint32_t Bank)
 996:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 782              		.loc 1 996 1 is_stmt 1 view -0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		.loc 1 996 1 is_stmt 0 view .LVU221
 787 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 788              	.LCFI1:
 789              		.cfi_def_cfa_offset 24
 790              		.cfi_offset 3, -24
 791              		.cfi_offset 4, -20
 792              		.cfi_offset 5, -16
 793              		.cfi_offset 6, -12
 794              		.cfi_offset 7, -8
 795              		.cfi_offset 14, -4
 796 0002 0546     		mov	r5, r0
 797 0004 0E46     		mov	r6, r1
 997:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on QW flag to be reset.
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 35


 998:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      Even if the FLASH operation fails, the QW flag will be reset and an error
 999:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      flag will be set */
1000:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1001:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bsyflag = FLASH_FLAG_QW_BANK1;
 798              		.loc 1 1001 3 is_stmt 1 view .LVU222
 799              	.LVL51:
1002:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag = 0;
 800              		.loc 1 1002 3 view .LVU223
1003:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 801              		.loc 1 1003 3 view .LVU224
 802              		.loc 1 1003 24 is_stmt 0 view .LVU225
 803 0006 FFF7FEFF 		bl	HAL_GetTick
 804              	.LVL52:
 805              		.loc 1 1003 24 view .LVU226
 806 000a 0746     		mov	r7, r0
 807              	.LVL53:
1004:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1005:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Bank));
 808              		.loc 1 1005 3 is_stmt 1 view .LVU227
1006:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1007:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1008:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1009:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (Bank == FLASH_BANK_2)
 809              		.loc 1 1009 3 view .LVU228
 810              		.loc 1 1009 6 is_stmt 0 view .LVU229
 811 000c 022E     		cmp	r6, #2
 812 000e 09D0     		beq	.L84
1001:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag = 0;
 813              		.loc 1 1001 12 view .LVU230
 814 0010 0424     		movs	r4, #4
 815 0012 17E0     		b	.L65
 816              	.LVL54:
 817              	.L86:
1010:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1011:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Select bsyflag depending on Bank */
1012:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_QW_BANK2;
1013:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1014:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1015:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1016:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(bsyflag))
1017:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1018:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
1019:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1020:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 818              		.loc 1 1020 7 is_stmt 1 view .LVU231
 819              		.loc 1 1020 12 is_stmt 0 view .LVU232
 820 0014 FFF7FEFF 		bl	HAL_GetTick
 821              	.LVL55:
 822              		.loc 1 1020 26 view .LVU233
 823 0018 C01B     		subs	r0, r0, r7
 824              		.loc 1 1020 9 view .LVU234
 825 001a A842     		cmp	r0, r5
 826 001c 5ED8     		bhi	.L78
 827              		.loc 1 1020 50 discriminator 1 view .LVU235
 828 001e 8DB9     		cbnz	r5, .L65
1021:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
1022:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 36


 829              		.loc 1 1022 16 view .LVU236
 830 0020 0320     		movs	r0, #3
 831 0022 4CE0     		b	.L66
 832              	.LVL56:
 833              	.L84:
1012:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 834              		.loc 1 1012 13 view .LVU237
 835 0024 304C     		ldr	r4, .L91
 836              	.LVL57:
1012:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 837              		.loc 1 1012 13 view .LVU238
 838 0026 0DE0     		b	.L65
 839              	.LVL58:
 840              	.L68:
1016:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 841              		.loc 1 1016 9 discriminator 2 view .LVU239
 842 0028 304B     		ldr	r3, .L91+4
 843 002a D3F81031 		ldr	r3, [r3, #272]
 844 002e 24EA0303 		bic	r3, r4, r3
 845 0032 33F00043 		bics	r3, r3, #-2147483648
 846 0036 0CBF     		ite	eq
 847 0038 0123     		moveq	r3, #1
 848 003a 0023     		movne	r3, #0
 849              	.L69:
1016:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 850              		.loc 1 1016 8 discriminator 4 view .LVU240
 851 003c 6BB1     		cbz	r3, .L85
1018:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 852              		.loc 1 1018 5 is_stmt 1 view .LVU241
1018:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 853              		.loc 1 1018 7 is_stmt 0 view .LVU242
 854 003e B5F1FF3F 		cmp	r5, #-1
 855 0042 E7D1     		bne	.L86
 856              	.LVL59:
 857              	.L65:
1016:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 858              		.loc 1 1016 8 is_stmt 1 view .LVU243
1016:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 859              		.loc 1 1016 9 is_stmt 0 view .LVU244
 860 0044 34F00403 		bics	r3, r4, #4
 861 0048 EED1     		bne	.L68
1016:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 862              		.loc 1 1016 9 discriminator 1 view .LVU245
 863 004a 284B     		ldr	r3, .L91+4
 864 004c 1B69     		ldr	r3, [r3, #16]
 865 004e 34EA0303 		bics	r3, r4, r3
 866 0052 0CBF     		ite	eq
 867 0054 0123     		moveq	r3, #1
 868 0056 0023     		movne	r3, #0
 869 0058 F0E7     		b	.L69
 870              	.L85:
1023:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
1024:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1025:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1026:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1027:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Get Error Flags */
1028:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (Bank == FLASH_BANK_1)
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 37


 871              		.loc 1 1028 3 is_stmt 1 view .LVU246
 872              		.loc 1 1028 6 is_stmt 0 view .LVU247
 873 005a 012E     		cmp	r6, #1
 874 005c 1CD0     		beq	.L87
1029:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1030:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = FLASH->SR1 & FLASH_FLAG_ALL_ERRORS_BANK1;
1031:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1032:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1033:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1034:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1035:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = (FLASH->SR2 & FLASH_FLAG_ALL_ERRORS_BANK2) | 0x80000000U;
 875              		.loc 1 1035 5 is_stmt 1 view .LVU248
 876              		.loc 1 1035 23 is_stmt 0 view .LVU249
 877 005e 234B     		ldr	r3, .L91+4
 878 0060 D3F81031 		ldr	r3, [r3, #272]
 879              		.loc 1 1035 60 view .LVU250
 880 0064 23F06843 		bic	r3, r3, #-402653184
 881 0068 23F48013 		bic	r3, r3, #1048576
 882 006c 5B0C     		lsrs	r3, r3, #17
 883 006e 5B04     		lsls	r3, r3, #17
 884              		.loc 1 1035 15 view .LVU251
 885 0070 43F00043 		orr	r3, r3, #-2147483648
 886              	.LVL60:
 887              	.L72:
1036:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1037:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1038:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1039:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* In case of error reported in Flash SR1 or SR2 register */
1040:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((errorflag & 0x7FFFFFFFU) != 0U)
 888              		.loc 1 1040 3 is_stmt 1 view .LVU252
 889              		.loc 1 1040 5 is_stmt 0 view .LVU253
 890 0074 33F00041 		bics	r1, r3, #-2147483648
 891 0078 17D1     		bne	.L88
1041:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1042:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Save the error code*/
1043:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
1044:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1045:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
1046:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(errorflag);
1047:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1048:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
1049:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1050:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1051:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
1052:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 892              		.loc 1 1052 3 is_stmt 1 view .LVU254
 893              		.loc 1 1052 5 is_stmt 0 view .LVU255
 894 007a 012E     		cmp	r6, #1
 895 007c 23D0     		beq	.L89
1053:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1054:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_EOP_BANK1))
1055:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1056:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH End of Operation pending bit */
1057:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
1058:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1059:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1060:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 38


1061:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1062:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1063:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_EOP_BANK2))
 896              		.loc 1 1063 5 is_stmt 1 view .LVU256
 897              		.loc 1 1063 9 is_stmt 0 view .LVU257
 898 007e 1B4B     		ldr	r3, .L91+4
 899              	.LVL61:
 900              		.loc 1 1063 9 view .LVU258
 901 0080 D3F81031 		ldr	r3, [r3, #272]
 902              		.loc 1 1063 8 view .LVU259
 903 0084 13F4803F 		tst	r3, #65536
 904 0088 2CD0     		beq	.L81
1064:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1065:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH End of Operation pending bit */
1066:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 905              		.loc 1 1066 7 is_stmt 1 view .LVU260
 906 008a 184B     		ldr	r3, .L91+4
 907 008c 4FF48032 		mov	r2, #65536
 908 0090 C3F81421 		str	r2, [r3, #276]
1067:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1068:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1069:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1070:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1071:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 909              		.loc 1 1071 10 is_stmt 0 view .LVU261
 910 0094 0020     		movs	r0, #0
 911 0096 12E0     		b	.L66
 912              	.LVL62:
 913              	.L87:
1030:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 914              		.loc 1 1030 5 is_stmt 1 view .LVU262
1030:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 915              		.loc 1 1030 22 is_stmt 0 view .LVU263
 916 0098 144B     		ldr	r3, .L91+4
 917 009a 1B69     		ldr	r3, [r3, #16]
1030:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 918              		.loc 1 1030 15 view .LVU264
 919 009c 23F06843 		bic	r3, r3, #-402653184
 920 00a0 23F48013 		bic	r3, r3, #1048576
 921 00a4 5B0C     		lsrs	r3, r3, #17
 922 00a6 5B04     		lsls	r3, r3, #17
 923              	.LVL63:
1030:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 924              		.loc 1 1030 15 view .LVU265
 925 00a8 E4E7     		b	.L72
 926              	.L88:
1043:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 927              		.loc 1 1043 5 is_stmt 1 view .LVU266
1043:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 928              		.loc 1 1043 22 is_stmt 0 view .LVU267
 929 00aa 1148     		ldr	r0, .L91+8
 930 00ac 8269     		ldr	r2, [r0, #24]
 931 00ae 1A43     		orrs	r2, r2, r3
 932 00b0 8261     		str	r2, [r0, #24]
1046:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 933              		.loc 1 1046 5 is_stmt 1 view .LVU268
 934 00b2 002B     		cmp	r3, #0
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 39


 935 00b4 04DA     		bge	.L90
1046:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 936              		.loc 1 1046 5 is_stmt 0 discriminator 2 view .LVU269
 937 00b6 0D4B     		ldr	r3, .L91+4
 938              	.LVL64:
1046:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 939              		.loc 1 1046 5 discriminator 2 view .LVU270
 940 00b8 C3F81411 		str	r1, [r3, #276]
 941              	.L75:
1048:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 942              		.loc 1 1048 5 is_stmt 1 view .LVU271
1048:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 943              		.loc 1 1048 12 is_stmt 0 view .LVU272
 944 00bc 0120     		movs	r0, #1
 945              	.L66:
1072:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 946              		.loc 1 1072 1 view .LVU273
 947 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 948              	.LVL65:
 949              	.L90:
1046:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 950              		.loc 1 1046 5 discriminator 1 view .LVU274
 951 00c0 0A4A     		ldr	r2, .L91+4
 952 00c2 5361     		str	r3, [r2, #20]
 953 00c4 FAE7     		b	.L75
 954              	.L89:
1054:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 955              		.loc 1 1054 5 is_stmt 1 view .LVU275
1054:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 956              		.loc 1 1054 9 is_stmt 0 view .LVU276
 957 00c6 094B     		ldr	r3, .L91+4
 958              	.LVL66:
1054:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 959              		.loc 1 1054 9 view .LVU277
 960 00c8 1B69     		ldr	r3, [r3, #16]
1054:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 961              		.loc 1 1054 8 view .LVU278
 962 00ca 13F4803F 		tst	r3, #65536
 963 00ce 07D0     		beq	.L80
1057:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 964              		.loc 1 1057 7 is_stmt 1 view .LVU279
 965 00d0 064B     		ldr	r3, .L91+4
 966 00d2 4FF48032 		mov	r2, #65536
 967 00d6 5A61     		str	r2, [r3, #20]
1071:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 968              		.loc 1 1071 10 is_stmt 0 view .LVU280
 969 00d8 0020     		movs	r0, #0
 970 00da F0E7     		b	.L66
 971              	.LVL67:
 972              	.L78:
1022:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 973              		.loc 1 1022 16 view .LVU281
 974 00dc 0320     		movs	r0, #3
 975 00de EEE7     		b	.L66
 976              	.LVL68:
 977              	.L80:
1071:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 40


 978              		.loc 1 1071 10 view .LVU282
 979 00e0 0020     		movs	r0, #0
 980 00e2 ECE7     		b	.L66
 981              	.L81:
 982 00e4 0020     		movs	r0, #0
 983 00e6 EAE7     		b	.L66
 984              	.L92:
 985              		.align	2
 986              	.L91:
 987 00e8 04000080 		.word	-2147483644
 988 00ec 00200052 		.word	1375739904
 989 00f0 00000000 		.word	.LANCHOR0
 990              		.cfi_endproc
 991              	.LFE155:
 993              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 994              		.align	1
 995              		.global	HAL_FLASH_Program
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 1000              	HAL_FLASH_Program:
 1001              	.LVL69:
 1002              	.LFB144:
 149:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1003              		.loc 1 149 1 is_stmt 1 view -0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 150:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)FlashAddress;
 1007              		.loc 1 150 3 view .LVU284
 151:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 1008              		.loc 1 151 3 view .LVU285
 152:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 1009              		.loc 1 152 3 view .LVU286
 153:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 1010              		.loc 1 153 3 view .LVU287
 154:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1011              		.loc 1 154 3 view .LVU288
 157:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 1012              		.loc 1 157 3 view .LVU289
 158:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1013              		.loc 1 158 3 view .LVU290
 161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1014              		.loc 1 161 3 view .LVU291
 161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1015              		.loc 1 161 3 view .LVU292
 1016 0000 2D4B     		ldr	r3, .L110
 1017 0002 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1018 0004 012B     		cmp	r3, #1
 1019 0006 53D0     		beq	.L101
 149:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1020              		.loc 1 149 1 is_stmt 0 discriminator 2 view .LVU293
 1021 0008 70B5     		push	{r4, r5, r6, lr}
 1022              	.LCFI2:
 1023              		.cfi_def_cfa_offset 16
 1024              		.cfi_offset 4, -16
 1025              		.cfi_offset 5, -12
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 41


 1026              		.cfi_offset 6, -8
 1027              		.cfi_offset 14, -4
 1028 000a 0D46     		mov	r5, r1
 1029 000c 1446     		mov	r4, r2
 161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1030              		.loc 1 161 3 is_stmt 1 discriminator 2 view .LVU294
 1031 000e 2A4B     		ldr	r3, .L110
 1032 0010 0122     		movs	r2, #1
 1033              	.LVL70:
 161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1034              		.loc 1 161 3 is_stmt 0 discriminator 2 view .LVU295
 1035 0012 1A75     		strb	r2, [r3, #20]
 161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1036              		.loc 1 161 3 is_stmt 1 discriminator 2 view .LVU296
 166:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 1037              		.loc 1 166 3 discriminator 2 view .LVU297
 166:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 1038              		.loc 1 166 6 is_stmt 0 discriminator 2 view .LVU298
 1039 0014 01F17843 		add	r3, r1, #-134217728
 166:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 1040              		.loc 1 166 5 discriminator 2 view .LVU299
 1041 0018 B3F5801F 		cmp	r3, #1048576
 1042 001c 3AD3     		bcc	.L102
 172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1043              		.loc 1 172 8 is_stmt 1 view .LVU300
 172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1044              		.loc 1 172 11 is_stmt 0 view .LVU301
 1045 001e A1F10161 		sub	r1, r1, #135266304
 1046              	.LVL71:
 172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1047              		.loc 1 172 10 view .LVU302
 1048 0022 B1F5801F 		cmp	r1, #1048576
 1049 0026 45D2     		bcs	.L103
 174:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1050              		.loc 1 174 10 view .LVU303
 1051 0028 0226     		movs	r6, #2
 1052              	.L95:
 1053              	.LVL72:
 183:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1054              		.loc 1 183 3 is_stmt 1 view .LVU304
 183:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1055              		.loc 1 183 20 is_stmt 0 view .LVU305
 1056 002a 234B     		ldr	r3, .L110
 1057 002c 0022     		movs	r2, #0
 1058 002e 9A61     		str	r2, [r3, #24]
 186:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1059              		.loc 1 186 3 is_stmt 1 view .LVU306
 186:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1060              		.loc 1 186 12 is_stmt 0 view .LVU307
 1061 0030 3146     		mov	r1, r6
 1062 0032 4CF25030 		movw	r0, #50000
 1063              	.LVL73:
 186:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1064              		.loc 1 186 12 view .LVU308
 1065 0036 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1066              	.LVL74:
 188:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 42


 1067              		.loc 1 188 3 is_stmt 1 view .LVU309
 188:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1068              		.loc 1 188 5 is_stmt 0 view .LVU310
 1069 003a 38BB     		cbnz	r0, .L96
 191:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1070              		.loc 1 191 5 is_stmt 1 view .LVU311
 191:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1071              		.loc 1 191 7 is_stmt 0 view .LVU312
 1072 003c 012E     		cmp	r6, #1
 1073 003e 2BD0     		beq	.L108
 209:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1074              		.loc 1 209 7 is_stmt 1 view .LVU313
 1075 0040 1E4A     		ldr	r2, .L110+4
 1076 0042 D2F80C31 		ldr	r3, [r2, #268]
 1077 0046 43F00203 		orr	r3, r3, #2
 1078 004a C2F80C31 		str	r3, [r2, #268]
 1079              	.L98:
 226:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 1080              		.loc 1 226 5 view .LVU314
 1081              	.LBB18:
 1082              	.LBI18:
 1083              		.file 2 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h"
   1:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 43


  36:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 44


  93:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 130:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 135:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 141:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 146:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 45


 150:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  
 157:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  
 163:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 166:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 189:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 190:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 191:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 192:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 196:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 198:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 200:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 201:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 202:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 203:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 46


 207:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 209:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 211:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 212:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 214:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 217:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 218:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 220:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 221:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 222:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 224:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 225:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 226:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 241:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 243:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 244:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 248:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 250:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 252:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 253:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 254:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 256:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 260:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 262:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 47


 264:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 265:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 267:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 268:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 272:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 274:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 275:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 276:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 278:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 279:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 280:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 281:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 282:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 286:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 288:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 289:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 290:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 292:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 294:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 296:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 300:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 302:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 303:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 306:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 307:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 308:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 310:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 314:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 316:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 317:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 318:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 320:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 48


 321:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 322:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 323:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 325:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 329:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 331:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 332:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 335:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 336:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 337:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 344:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 346:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 348:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 360:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 361:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 362:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 363:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 364:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 368:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 370:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 371:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 372:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 374:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 375:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 49


 378:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 379:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 383:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 385:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 386:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 387:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 389:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 390:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 391:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 392:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 393:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 394:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 398:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 400:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 402:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 403:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 404:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 406:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 410:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 412:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 414:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 415:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 416:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 419:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 422:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 423:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 425:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 426:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 427:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 429:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 430:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 432:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 433:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 50


 435:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 437:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 439:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 441:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 442:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 443:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 445:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 449:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 451:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 452:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 453:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 455:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 456:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 457:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 460:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 464:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 466:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 467:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 468:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 470:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 471:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 472:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 473:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 474:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 475:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 479:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 481:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 51


 492:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 496:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 498:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 502:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 506:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 508:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 510:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 511:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 512:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 513:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 517:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 519:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 521:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 523:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 524:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 528:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 530:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 531:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 532:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 534:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 535:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 537:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 539:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 543:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 545:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 546:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 547:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 52


 549:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 550:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 551:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 553:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 554:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 558:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 560:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 562:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 564:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 566:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 570:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 572:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 574:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 575:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 576:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 577:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 578:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 583:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 585:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 587:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 588:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 589:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 590:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 594:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 596:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 597:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 598:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 600:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 601:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 603:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 605:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 53


 606:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 609:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 611:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 612:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 613:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 615:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 616:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 617:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 618:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 619:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 620:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 624:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 626:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 628:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 629:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 630:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 632:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 636:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 638:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 640:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 641:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 642:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 647:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 650:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 655:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 656:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 659:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 661:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 54


 663:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 665:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 666:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 667:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 669:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 670:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 678:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 681:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 683:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 686:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 687:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 688:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 690:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 691:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 692:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 693:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 694:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 695:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 696:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 700:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   
 701:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 704:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 706:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 711:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 713:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 714:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 718:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 55


 720:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 731:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 733:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 734:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 735:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 736:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 738:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 742:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 752:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 753:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 754:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 756:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 757:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 758:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 759:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 769:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 771:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 774:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 775:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 776:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 56


 777:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 778:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 779:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 780:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 782:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 783:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 784:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 788:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 789:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 799:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 801:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 802:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 803:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 804:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 806:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 813:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 815:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 819:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 821:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 822:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 823:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 827:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 828:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 829:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 833:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 57


 834:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 835:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 843:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 844:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 847:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 848:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 849:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 850:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 851:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 852:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 854:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 855:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 859:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 861:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 869:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 871:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 872:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 873:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 874:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 875:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 876:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 879:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 880:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 884:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** */
 885:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 886:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 58


 891:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #else
 894:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 898:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 901:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 903:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 905:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 906:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 909:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 912:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 913:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 917:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 919:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 920:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 921:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 922:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 926:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 927:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 928:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 933:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 1084              		.loc 2 933 27 view .LVU315
 1085              	.LBB19:
 934:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 935:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 1086              		.loc 2 935 3 view .LVU316
 1087              		.syntax unified
 1088              	@ 935 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1089 004e BFF36F8F 		isb 0xF
 1090              	@ 0 "" 2
 1091              		.thumb
 1092              		.syntax unified
 1093              	.LBE19:
 1094              	.LBE18:
 227:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 59


 1095              		.loc 1 227 5 view .LVU317
 1096              	.LBB20:
 1097              	.LBI20:
 936:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 937:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** 
 939:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** /**
 940:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****  */
 944:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1098              		.loc 2 944 27 view .LVU318
 1099              	.LBB21:
 945:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 946:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1100              		.loc 2 946 3 view .LVU319
 1101              		.syntax unified
 1102              	@ 946 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1103 0052 BFF34F8F 		dsb 0xF
 1104              	@ 0 "" 2
 1105              		.thumb
 1106              		.syntax unified
 1107              	.LBE21:
 1108              	.LBE20:
 154:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1109              		.loc 1 154 11 is_stmt 0 view .LVU320
 1110 0056 0823     		movs	r3, #8
 1111              	.LVL75:
 1112              	.L99:
 239:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1113              		.loc 1 239 7 is_stmt 1 discriminator 1 view .LVU321
 241:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1114              		.loc 1 241 9 discriminator 1 view .LVU322
 241:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1115              		.loc 1 241 22 is_stmt 0 discriminator 1 view .LVU323
 1116 0058 54F8042B 		ldr	r2, [r4], #4
 1117              	.LVL76:
 241:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1118              		.loc 1 241 20 discriminator 1 view .LVU324
 1119 005c 45F8042B 		str	r2, [r5], #4
 1120              	.LVL77:
 242:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 1121              		.loc 1 242 9 is_stmt 1 discriminator 1 view .LVU325
 243:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 1122              		.loc 1 243 9 discriminator 1 view .LVU326
 244:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      } while (row_index != 0U);
 1123              		.loc 1 244 9 discriminator 1 view .LVU327
 244:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      } while (row_index != 0U);
 1124              		.loc 1 244 18 is_stmt 0 discriminator 1 view .LVU328
 1125 0060 013B     		subs	r3, r3, #1
 1126              	.LVL78:
 245:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1127              		.loc 1 245 14 is_stmt 1 discriminator 1 view .LVU329
 245:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1128              		.loc 1 245 6 is_stmt 0 discriminator 1 view .LVU330
 1129 0062 13F0FF03 		ands	r3, r3, #255
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 60


 1130              	.LVL79:
 245:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1131              		.loc 1 245 6 discriminator 1 view .LVU331
 1132 0066 F7D1     		bne	.L99
 248:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 1133              		.loc 1 248 5 is_stmt 1 view .LVU332
 1134              	.LBB22:
 1135              	.LBI22:
 933:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1136              		.loc 2 933 27 view .LVU333
 1137              	.LBB23:
 935:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 1138              		.loc 2 935 3 view .LVU334
 1139              		.syntax unified
 1140              	@ 935 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1141 0068 BFF36F8F 		isb 0xF
 1142              	@ 0 "" 2
 1143              		.thumb
 1144              		.syntax unified
 1145              	.LBE23:
 1146              	.LBE22:
 249:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1147              		.loc 1 249 5 view .LVU335
 1148              	.LBB24:
 1149              	.LBI24:
 944:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1150              		.loc 2 944 27 view .LVU336
 1151              	.LBB25:
 1152              		.loc 2 946 3 view .LVU337
 1153              		.syntax unified
 1154              	@ 946 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1155 006c BFF34F8F 		dsb 0xF
 1156              	@ 0 "" 2
 1157              		.thumb
 1158              		.syntax unified
 1159              	.LBE25:
 1160              	.LBE24:
 252:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1161              		.loc 1 252 5 view .LVU338
 252:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1162              		.loc 1 252 14 is_stmt 0 view .LVU339
 1163 0070 3146     		mov	r1, r6
 1164 0072 4CF25030 		movw	r0, #50000
 1165              	.LVL80:
 252:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1166              		.loc 1 252 14 view .LVU340
 1167 0076 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1168              	.LVL81:
 264:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1169              		.loc 1 264 7 is_stmt 1 view .LVU341
 264:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1170              		.loc 1 264 9 is_stmt 0 view .LVU342
 1171 007a 012E     		cmp	r6, #1
 1172 007c 12D0     		beq	.L109
 272:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1173              		.loc 1 272 9 is_stmt 1 view .LVU343
 1174 007e 0F4A     		ldr	r2, .L110+4
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 61


 1175 0080 D2F80C31 		ldr	r3, [r2, #268]
 1176 0084 23F00203 		bic	r3, r3, #2
 1177 0088 C2F80C31 		str	r3, [r2, #268]
 1178              	.LVL82:
 1179              	.L96:
 292:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1180              		.loc 1 292 3 view .LVU344
 292:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1181              		.loc 1 292 3 view .LVU345
 1182 008c 0A4B     		ldr	r3, .L110
 1183 008e 0022     		movs	r2, #0
 1184 0090 1A75     		strb	r2, [r3, #20]
 292:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1185              		.loc 1 292 3 view .LVU346
 294:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1186              		.loc 1 294 3 view .LVU347
 1187              	.LVL83:
 1188              	.L94:
 295:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1189              		.loc 1 295 1 is_stmt 0 view .LVU348
 1190 0092 70BD     		pop	{r4, r5, r6, pc}
 1191              	.LVL84:
 1192              	.L102:
 169:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1193              		.loc 1 169 10 view .LVU349
 1194 0094 0126     		movs	r6, #1
 1195 0096 C8E7     		b	.L95
 1196              	.LVL85:
 1197              	.L108:
 203:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1198              		.loc 1 203 9 is_stmt 1 view .LVU350
 1199 0098 084A     		ldr	r2, .L110+4
 1200 009a D368     		ldr	r3, [r2, #12]
 1201 009c 43F00203 		orr	r3, r3, #2
 1202 00a0 D360     		str	r3, [r2, #12]
 1203 00a2 D4E7     		b	.L98
 1204              	.LVL86:
 1205              	.L109:
 267:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1206              		.loc 1 267 9 view .LVU351
 1207 00a4 054A     		ldr	r2, .L110+4
 1208 00a6 D368     		ldr	r3, [r2, #12]
 1209 00a8 23F00203 		bic	r3, r3, #2
 1210 00ac D360     		str	r3, [r2, #12]
 1211 00ae EDE7     		b	.L96
 1212              	.LVL87:
 1213              	.L101:
 1214              	.LCFI3:
 1215              		.cfi_def_cfa_offset 0
 1216              		.cfi_restore 4
 1217              		.cfi_restore 5
 1218              		.cfi_restore 6
 1219              		.cfi_restore 14
 161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1220              		.loc 1 161 3 is_stmt 0 view .LVU352
 1221 00b0 0220     		movs	r0, #2
 1222              	.LVL88:
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 62


 295:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1223              		.loc 1 295 1 view .LVU353
 1224 00b2 7047     		bx	lr
 1225              	.LVL89:
 1226              	.L103:
 1227              	.LCFI4:
 1228              		.cfi_def_cfa_offset 16
 1229              		.cfi_offset 4, -16
 1230              		.cfi_offset 5, -12
 1231              		.cfi_offset 6, -8
 1232              		.cfi_offset 14, -4
 179:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1233              		.loc 1 179 12 view .LVU354
 1234 00b4 0120     		movs	r0, #1
 1235              	.LVL90:
 179:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1236              		.loc 1 179 12 view .LVU355
 1237 00b6 ECE7     		b	.L94
 1238              	.L111:
 1239              		.align	2
 1240              	.L110:
 1241 00b8 00000000 		.word	.LANCHOR0
 1242 00bc 00200052 		.word	1375739904
 1243              		.cfi_endproc
 1244              	.LFE144:
 1246              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 1247              		.align	1
 1248              		.global	HAL_FLASH_Program_IT
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1253              	HAL_FLASH_Program_IT:
 1254              	.LVL91:
 1255              	.LFB145:
 312:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1256              		.loc 1 312 1 is_stmt 1 view -0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 312:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1260              		.loc 1 312 1 is_stmt 0 view .LVU357
 1261 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1262              	.LCFI5:
 1263              		.cfi_def_cfa_offset 24
 1264              		.cfi_offset 3, -24
 1265              		.cfi_offset 4, -20
 1266              		.cfi_offset 5, -16
 1267              		.cfi_offset 6, -12
 1268              		.cfi_offset 7, -8
 1269              		.cfi_offset 14, -4
 313:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t*)FlashAddress;
 1270              		.loc 1 313 3 is_stmt 1 view .LVU358
 314:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 1271              		.loc 1 314 3 view .LVU359
 1272              	.LVL92:
 315:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 1273              		.loc 1 315 3 view .LVU360
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 63


 316:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 1274              		.loc 1 316 3 view .LVU361
 317:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1275              		.loc 1 317 3 view .LVU362
 320:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 1276              		.loc 1 320 3 view .LVU363
 321:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1277              		.loc 1 321 3 view .LVU364
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1278              		.loc 1 324 3 view .LVU365
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1279              		.loc 1 324 3 view .LVU366
 1280 0002 2C4B     		ldr	r3, .L124
 1281 0004 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1282 0006 012B     		cmp	r3, #1
 1283 0008 50D0     		beq	.L119
 1284 000a 0E46     		mov	r6, r1
 1285 000c 0D46     		mov	r5, r1
 1286 000e 1446     		mov	r4, r2
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1287              		.loc 1 324 3 discriminator 2 view .LVU367
 1288 0010 284B     		ldr	r3, .L124
 1289 0012 0122     		movs	r2, #1
 1290              	.LVL93:
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1291              		.loc 1 324 3 is_stmt 0 discriminator 2 view .LVU368
 1292 0014 1A75     		strb	r2, [r3, #20]
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1293              		.loc 1 324 3 is_stmt 1 discriminator 2 view .LVU369
 327:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1294              		.loc 1 327 3 discriminator 2 view .LVU370
 327:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1295              		.loc 1 327 20 is_stmt 0 discriminator 2 view .LVU371
 1296 0016 0022     		movs	r2, #0
 1297 0018 9A61     		str	r2, [r3, #24]
 332:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 1298              		.loc 1 332 3 is_stmt 1 discriminator 2 view .LVU372
 332:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 1299              		.loc 1 332 6 is_stmt 0 discriminator 2 view .LVU373
 1300 001a 01F17843 		add	r3, r1, #-134217728
 332:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* FLASH_OPTCR_PG_OTP */
 1301              		.loc 1 332 5 discriminator 2 view .LVU374
 1302 001e B3F5801F 		cmp	r3, #1048576
 1303 0022 0FD3     		bcc	.L120
 338:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1304              		.loc 1 338 8 is_stmt 1 view .LVU375
 338:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1305              		.loc 1 338 11 is_stmt 0 view .LVU376
 1306 0024 A1F10163 		sub	r3, r1, #135266304
 338:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1307              		.loc 1 338 10 view .LVU377
 1308 0028 B3F5801F 		cmp	r3, #1048576
 1309 002c 40D2     		bcs	.L121
 340:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1310              		.loc 1 340 10 view .LVU378
 1311 002e 0227     		movs	r7, #2
 1312              	.L114:
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 64


 1313              	.LVL94:
 349:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1314              		.loc 1 349 3 is_stmt 1 view .LVU379
 349:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1315              		.loc 1 349 12 is_stmt 0 view .LVU380
 1316 0030 3946     		mov	r1, r7
 1317              	.LVL95:
 349:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1318              		.loc 1 349 12 view .LVU381
 1319 0032 4CF25030 		movw	r0, #50000
 1320              	.LVL96:
 349:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1321              		.loc 1 349 12 view .LVU382
 1322 0036 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1323              	.LVL97:
 351:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1324              		.loc 1 351 3 is_stmt 1 view .LVU383
 351:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1325              		.loc 1 351 6 is_stmt 0 view .LVU384
 1326 003a 28B1     		cbz	r0, .L115
 354:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1327              		.loc 1 354 5 is_stmt 1 view .LVU385
 354:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1328              		.loc 1 354 5 view .LVU386
 1329 003c 1D4B     		ldr	r3, .L124
 1330 003e 0022     		movs	r2, #0
 1331 0040 1A75     		strb	r2, [r3, #20]
 354:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1332              		.loc 1 354 5 view .LVU387
 1333              	.LVL98:
 1334              	.L113:
 459:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1335              		.loc 1 459 1 is_stmt 0 view .LVU388
 1336 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1337              	.LVL99:
 1338              	.L120:
 335:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1339              		.loc 1 335 10 view .LVU389
 1340 0044 0127     		movs	r7, #1
 1341 0046 F3E7     		b	.L114
 1342              	.LVL100:
 1343              	.L115:
 358:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1344              		.loc 1 358 5 is_stmt 1 view .LVU390
 358:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1345              		.loc 1 358 20 is_stmt 0 view .LVU391
 1346 0048 1A4B     		ldr	r3, .L124
 1347 004a 1E61     		str	r6, [r3, #16]
 361:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1348              		.loc 1 361 5 is_stmt 1 view .LVU392
 361:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1349              		.loc 1 361 7 is_stmt 0 view .LVU393
 1350 004c 012F     		cmp	r7, #1
 1351 004e 21D0     		beq	.L123
 391:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1352              		.loc 1 391 7 is_stmt 1 view .LVU394
 391:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 65


 1353              		.loc 1 391 31 is_stmt 0 view .LVU395
 1354 0050 184B     		ldr	r3, .L124
 1355 0052 0622     		movs	r2, #6
 1356 0054 1A70     		strb	r2, [r3]
 394:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1357              		.loc 1 394 7 is_stmt 1 view .LVU396
 1358 0056 184B     		ldr	r3, .L124+4
 1359 0058 D3F80C21 		ldr	r2, [r3, #268]
 1360 005c 42F00202 		orr	r2, r2, #2
 1361 0060 C3F80C21 		str	r2, [r3, #268]
 398:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_B
 1362              		.loc 1 398 7 view .LVU397
 1363 0064 D3F80C21 		ldr	r2, [r3, #268]
 1364 0068 42F4DE02 		orr	r2, r2, #7274496
 1365 006c C3F80C21 		str	r2, [r3, #268]
 1366              	.L117:
 432:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 1367              		.loc 1 432 5 view .LVU398
 1368              	.LBB26:
 1369              	.LBI26:
 933:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1370              		.loc 2 933 27 view .LVU399
 1371              	.LBB27:
 935:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 1372              		.loc 2 935 3 view .LVU400
 1373              		.syntax unified
 1374              	@ 935 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1375 0070 BFF36F8F 		isb 0xF
 1376              	@ 0 "" 2
 1377              		.thumb
 1378              		.syntax unified
 1379              	.LBE27:
 1380              	.LBE26:
 433:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1381              		.loc 1 433 5 view .LVU401
 1382              	.LBB28:
 1383              	.LBI28:
 944:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1384              		.loc 2 944 27 view .LVU402
 1385              	.LBB29:
 1386              		.loc 2 946 3 view .LVU403
 1387              		.syntax unified
 1388              	@ 946 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1389 0074 BFF34F8F 		dsb 0xF
 1390              	@ 0 "" 2
 1391              		.thumb
 1392              		.syntax unified
 1393              	.LBE29:
 1394              	.LBE28:
 317:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1395              		.loc 1 317 11 is_stmt 0 view .LVU404
 1396 0078 0823     		movs	r3, #8
 1397              	.LVL101:
 1398              	.L118:
 445:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1399              		.loc 1 445 7 is_stmt 1 discriminator 1 view .LVU405
 447:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 66


 1400              		.loc 1 447 9 discriminator 1 view .LVU406
 447:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1401              		.loc 1 447 22 is_stmt 0 discriminator 1 view .LVU407
 1402 007a 54F8042B 		ldr	r2, [r4], #4
 1403              	.LVL102:
 447:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         dest_addr++;
 1404              		.loc 1 447 20 discriminator 1 view .LVU408
 1405 007e 45F8042B 		str	r2, [r5], #4
 1406              	.LVL103:
 448:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         src_addr++;
 1407              		.loc 1 448 9 is_stmt 1 discriminator 1 view .LVU409
 449:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         row_index--;
 1408              		.loc 1 449 9 discriminator 1 view .LVU410
 450:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       } while (row_index != 0U);
 1409              		.loc 1 450 9 discriminator 1 view .LVU411
 450:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       } while (row_index != 0U);
 1410              		.loc 1 450 18 is_stmt 0 discriminator 1 view .LVU412
 1411 0082 013B     		subs	r3, r3, #1
 1412              	.LVL104:
 451:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1413              		.loc 1 451 15 is_stmt 1 discriminator 1 view .LVU413
 451:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1414              		.loc 1 451 7 is_stmt 0 discriminator 1 view .LVU414
 1415 0084 13F0FF03 		ands	r3, r3, #255
 1416              	.LVL105:
 451:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1417              		.loc 1 451 7 discriminator 1 view .LVU415
 1418 0088 F7D1     		bne	.L118
 454:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 1419              		.loc 1 454 5 is_stmt 1 view .LVU416
 1420              	.LBB30:
 1421              	.LBI30:
 933:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1422              		.loc 2 933 27 view .LVU417
 1423              	.LBB31:
 935:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 1424              		.loc 2 935 3 view .LVU418
 1425              		.syntax unified
 1426              	@ 935 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1427 008a BFF36F8F 		isb 0xF
 1428              	@ 0 "" 2
 1429              		.thumb
 1430              		.syntax unified
 1431              	.LBE31:
 1432              	.LBE30:
 455:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1433              		.loc 1 455 5 view .LVU419
 1434              	.LBB32:
 1435              	.LBI32:
 944:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** {
 1436              		.loc 2 944 27 view .LVU420
 1437              	.LBB33:
 1438              		.loc 2 946 3 view .LVU421
 1439              		.syntax unified
 1440              	@ 946 "HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h" 1
 1441 008e BFF34F8F 		dsb 0xF
 1442              	@ 0 "" 2
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 67


 947:HAL_Lib/CMSIS/Core/Include/cmsis_gcc.h **** }
 1443              		.loc 2 947 1 is_stmt 0 view .LVU422
 1444              		.thumb
 1445              		.syntax unified
 1446 0092 D6E7     		b	.L113
 1447              	.LVL106:
 1448              	.L123:
 1449              		.loc 2 947 1 view .LVU423
 1450              	.LBE33:
 1451              	.LBE32:
 364:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1452              		.loc 1 364 7 is_stmt 1 view .LVU424
 364:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1453              		.loc 1 364 31 is_stmt 0 view .LVU425
 1454 0094 0322     		movs	r2, #3
 1455 0096 1A70     		strb	r2, [r3]
 376:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1456              		.loc 1 376 9 is_stmt 1 view .LVU426
 1457 0098 074B     		ldr	r3, .L124+4
 1458 009a DA68     		ldr	r2, [r3, #12]
 1459 009c 42F00202 		orr	r2, r2, #2
 1460 00a0 DA60     		str	r2, [r3, #12]
 381:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 1461              		.loc 1 381 7 view .LVU427
 1462 00a2 DA68     		ldr	r2, [r3, #12]
 1463 00a4 42F4DE02 		orr	r2, r2, #7274496
 1464 00a8 DA60     		str	r2, [r3, #12]
 1465 00aa E1E7     		b	.L117
 1466              	.LVL107:
 1467              	.L119:
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1468              		.loc 1 324 3 is_stmt 0 view .LVU428
 1469 00ac 0220     		movs	r0, #2
 1470              	.LVL108:
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1471              		.loc 1 324 3 view .LVU429
 1472 00ae C8E7     		b	.L113
 1473              	.LVL109:
 1474              	.L121:
 345:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1475              		.loc 1 345 12 view .LVU430
 1476 00b0 0120     		movs	r0, #1
 1477              	.LVL110:
 345:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1478              		.loc 1 345 12 view .LVU431
 1479 00b2 C6E7     		b	.L113
 1480              	.L125:
 1481              		.align	2
 1482              	.L124:
 1483 00b4 00000000 		.word	.LANCHOR0
 1484 00b8 00200052 		.word	1375739904
 1485              		.cfi_endproc
 1486              	.LFE145:
 1488              		.section	.text.FLASH_OB_WaitForLastOperation,"ax",%progbits
 1489              		.align	1
 1490              		.global	FLASH_OB_WaitForLastOperation
 1491              		.syntax unified
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 68


 1492              		.thumb
 1493              		.thumb_func
 1495              	FLASH_OB_WaitForLastOperation:
 1496              	.LVL111:
 1497              	.LFB156:
1073:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1074:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1075:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH Option Bytes change operation to complete.
1076:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
1077:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
1078:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1079:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_OB_WaitForLastOperation(uint32_t Timeout)
1080:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1498              		.loc 1 1080 1 is_stmt 1 view -0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502              		.loc 1 1080 1 is_stmt 0 view .LVU433
 1503 0000 38B5     		push	{r3, r4, r5, lr}
 1504              	.LCFI6:
 1505              		.cfi_def_cfa_offset 16
 1506              		.cfi_offset 3, -16
 1507              		.cfi_offset 4, -12
 1508              		.cfi_offset 5, -8
 1509              		.cfi_offset 14, -4
 1510 0002 0446     		mov	r4, r0
1081:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Get timeout */
1082:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 1511              		.loc 1 1082 3 is_stmt 1 view .LVU434
 1512              		.loc 1 1082 24 is_stmt 0 view .LVU435
 1513 0004 FFF7FEFF 		bl	HAL_GetTick
 1514              	.LVL112:
 1515              		.loc 1 1082 24 view .LVU436
 1516 0008 0546     		mov	r5, r0
 1517              	.LVL113:
1083:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1084:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH Option Bytes change operation to complete by polling on OPT_BUSY flag to be
1085:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(READ_BIT(FLASH->OPTSR_CUR, FLASH_OPTSR_OPT_BUSY) != 0U)
 1518              		.loc 1 1085 3 is_stmt 1 view .LVU437
 1519              	.L128:
 1520              		.loc 1 1085 8 view .LVU438
 1521              		.loc 1 1085 9 is_stmt 0 view .LVU439
 1522 000a 134B     		ldr	r3, .L137
 1523 000c DB69     		ldr	r3, [r3, #28]
 1524              		.loc 1 1085 8 view .LVU440
 1525 000e 13F0010F 		tst	r3, #1
 1526 0012 0BD0     		beq	.L135
1086:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1087:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1527              		.loc 1 1087 5 is_stmt 1 view .LVU441
 1528              		.loc 1 1087 7 is_stmt 0 view .LVU442
 1529 0014 B4F1FF3F 		cmp	r4, #-1
 1530 0018 F7D0     		beq	.L128
1088:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1089:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1531              		.loc 1 1089 7 is_stmt 1 view .LVU443
 1532              		.loc 1 1089 12 is_stmt 0 view .LVU444
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 69


 1533 001a FFF7FEFF 		bl	HAL_GetTick
 1534              	.LVL114:
 1535              		.loc 1 1089 26 view .LVU445
 1536 001e 401B     		subs	r0, r0, r5
 1537              		.loc 1 1089 9 view .LVU446
 1538 0020 A042     		cmp	r0, r4
 1539 0022 16D8     		bhi	.L131
 1540              		.loc 1 1089 50 discriminator 1 view .LVU447
 1541 0024 002C     		cmp	r4, #0
 1542 0026 F0D1     		bne	.L128
1090:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
1091:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1543              		.loc 1 1091 16 view .LVU448
 1544 0028 0320     		movs	r0, #3
 1545 002a 05E0     		b	.L129
 1546              	.L135:
1092:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
1093:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1094:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1095:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1096:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check option byte change error */
1097:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTSR_CUR, FLASH_OPTSR_OPTCHANGEERR) != 0U)
 1547              		.loc 1 1097 3 is_stmt 1 view .LVU449
 1548              		.loc 1 1097 6 is_stmt 0 view .LVU450
 1549 002c 0A4B     		ldr	r3, .L137
 1550 002e DB69     		ldr	r3, [r3, #28]
 1551              		.loc 1 1097 5 view .LVU451
 1552 0030 13F0804F 		tst	r3, #1073741824
 1553 0034 01D1     		bne	.L136
1098:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1099:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
1100:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_OB_CHANGE;
1101:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1102:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear the OB error flag */
1103:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     FLASH->OPTCCR |= FLASH_OPTCCR_CLR_OPTCHANGEERR;
1104:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1105:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
1106:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1107:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1108:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is no error flag set */
1109:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1554              		.loc 1 1109 10 view .LVU452
 1555 0036 0020     		movs	r0, #0
 1556              	.L129:
1110:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1557              		.loc 1 1110 1 view .LVU453
 1558 0038 38BD     		pop	{r3, r4, r5, pc}
 1559              	.LVL115:
 1560              	.L136:
1100:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1561              		.loc 1 1100 5 is_stmt 1 view .LVU454
1100:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1562              		.loc 1 1100 22 is_stmt 0 view .LVU455
 1563 003a 084A     		ldr	r2, .L137+4
 1564 003c 9369     		ldr	r3, [r2, #24]
 1565 003e 43F08043 		orr	r3, r3, #1073741824
 1566 0042 9361     		str	r3, [r2, #24]
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 70


1103:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1567              		.loc 1 1103 5 is_stmt 1 view .LVU456
1103:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1568              		.loc 1 1103 19 is_stmt 0 view .LVU457
 1569 0044 044A     		ldr	r2, .L137
 1570 0046 536A     		ldr	r3, [r2, #36]
 1571 0048 43F08043 		orr	r3, r3, #1073741824
 1572 004c 5362     		str	r3, [r2, #36]
1105:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1573              		.loc 1 1105 5 is_stmt 1 view .LVU458
1105:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1574              		.loc 1 1105 12 is_stmt 0 view .LVU459
 1575 004e 0120     		movs	r0, #1
 1576 0050 F2E7     		b	.L129
 1577              	.L131:
1091:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1578              		.loc 1 1091 16 view .LVU460
 1579 0052 0320     		movs	r0, #3
 1580 0054 F0E7     		b	.L129
 1581              	.L138:
 1582 0056 00BF     		.align	2
 1583              	.L137:
 1584 0058 00200052 		.word	1375739904
 1585 005c 00000000 		.word	.LANCHOR0
 1586              		.cfi_endproc
 1587              	.LFE156:
 1589              		.section	.text.FLASH_CRC_WaitForLastOperation,"ax",%progbits
 1590              		.align	1
 1591              		.global	FLASH_CRC_WaitForLastOperation
 1592              		.syntax unified
 1593              		.thumb
 1594              		.thumb_func
 1596              	FLASH_CRC_WaitForLastOperation:
 1597              	.LVL116:
 1598              	.LFB157:
1111:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1112:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
1113:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH CRC computation to complete.
1114:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
1115:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Bank flash FLASH_BANK_1 or FLASH_BANK_2
1116:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
1117:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
1118:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_CRC_WaitForLastOperation(uint32_t Timeout, uint32_t Bank)
1119:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1599              		.loc 1 1119 1 is_stmt 1 view -0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              		.loc 1 1119 1 is_stmt 0 view .LVU462
 1604 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1605              	.LCFI7:
 1606              		.cfi_def_cfa_offset 24
 1607              		.cfi_offset 3, -24
 1608              		.cfi_offset 4, -20
 1609              		.cfi_offset 5, -16
 1610              		.cfi_offset 6, -12
 1611              		.cfi_offset 7, -8
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 71


 1612              		.cfi_offset 14, -4
 1613 0002 0546     		mov	r5, r0
 1614 0004 0E46     		mov	r6, r1
1120:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bsyflag;
 1615              		.loc 1 1120 3 is_stmt 1 view .LVU463
1121:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 1616              		.loc 1 1121 3 view .LVU464
 1617              		.loc 1 1121 24 is_stmt 0 view .LVU465
 1618 0006 FFF7FEFF 		bl	HAL_GetTick
 1619              	.LVL117:
 1620              		.loc 1 1121 24 view .LVU466
 1621 000a 0746     		mov	r7, r0
 1622              	.LVL118:
1122:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1123:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Bank));
 1623              		.loc 1 1123 3 is_stmt 1 view .LVU467
1124:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1125:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Select bsyflag depending on Bank */
1126:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1624              		.loc 1 1126 3 view .LVU468
 1625              		.loc 1 1126 5 is_stmt 0 view .LVU469
 1626 000c 012E     		cmp	r6, #1
 1627 000e 09D0     		beq	.L140
1127:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1128:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_CRC_BUSY_BANK1;
1129:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1130:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1131:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1132:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_CRC_BUSY_BANK2;
 1628              		.loc 1 1132 13 view .LVU470
 1629 0010 274C     		ldr	r4, .L159
 1630 0012 17E0     		b	.L142
 1631              	.LVL119:
 1632              	.L155:
1133:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1134:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1135:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH CRC computation to complete by polling on CRC_BUSY flag to be reset */
1136:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(bsyflag))
1137:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1138:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
1139:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1140:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1633              		.loc 1 1140 7 is_stmt 1 view .LVU471
 1634              		.loc 1 1140 12 is_stmt 0 view .LVU472
 1635 0014 FFF7FEFF 		bl	HAL_GetTick
 1636              	.LVL120:
 1637              		.loc 1 1140 26 view .LVU473
 1638 0018 C01B     		subs	r0, r0, r7
 1639              		.loc 1 1140 9 view .LVU474
 1640 001a A842     		cmp	r0, r5
 1641 001c 45D8     		bhi	.L149
 1642              		.loc 1 1140 50 discriminator 1 view .LVU475
 1643 001e 8DB9     		cbnz	r5, .L142
1141:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
1142:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1644              		.loc 1 1142 16 view .LVU476
 1645 0020 0320     		movs	r0, #3
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 72


 1646 0022 23E0     		b	.L143
 1647              	.LVL121:
 1648              	.L140:
1128:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1649              		.loc 1 1128 13 view .LVU477
 1650 0024 0824     		movs	r4, #8
 1651 0026 0DE0     		b	.L142
 1652              	.LVL122:
 1653              	.L145:
1136:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1654              		.loc 1 1136 9 discriminator 2 view .LVU478
 1655 0028 224B     		ldr	r3, .L159+4
 1656 002a D3F81031 		ldr	r3, [r3, #272]
 1657 002e 24EA0303 		bic	r3, r4, r3
 1658 0032 33F00043 		bics	r3, r3, #-2147483648
 1659 0036 0CBF     		ite	eq
 1660 0038 0123     		moveq	r3, #1
 1661 003a 0023     		movne	r3, #0
 1662              	.L146:
1136:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1663              		.loc 1 1136 8 discriminator 4 view .LVU479
 1664 003c 6BB1     		cbz	r3, .L154
1138:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1665              		.loc 1 1138 5 is_stmt 1 view .LVU480
1138:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1666              		.loc 1 1138 7 is_stmt 0 view .LVU481
 1667 003e B5F1FF3F 		cmp	r5, #-1
 1668 0042 E7D1     		bne	.L155
 1669              	.LVL123:
 1670              	.L142:
1136:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1671              		.loc 1 1136 8 is_stmt 1 view .LVU482
1136:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1672              		.loc 1 1136 9 is_stmt 0 view .LVU483
 1673 0044 34F00803 		bics	r3, r4, #8
 1674 0048 EED1     		bne	.L145
1136:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1675              		.loc 1 1136 9 discriminator 1 view .LVU484
 1676 004a 1A4B     		ldr	r3, .L159+4
 1677 004c 1B69     		ldr	r3, [r3, #16]
 1678 004e 34EA0303 		bics	r3, r4, r3
 1679 0052 0CBF     		ite	eq
 1680 0054 0123     		moveq	r3, #1
 1681 0056 0023     		movne	r3, #0
 1682 0058 F0E7     		b	.L146
 1683              	.L154:
1143:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
1144:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1145:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1146:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1147:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH CRC read error flag  */
1148:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1684              		.loc 1 1148 3 is_stmt 1 view .LVU485
 1685              		.loc 1 1148 5 is_stmt 0 view .LVU486
 1686 005a 012E     		cmp	r6, #1
 1687 005c 07D0     		beq	.L156
1149:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 73


1150:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_CRCRDERR_BANK1))
1151:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1152:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Save the error code */
1153:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_CRCRD_BANK1;
1154:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1155:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH CRC read error pending bit */
1156:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_CRCRDERR_BANK1);
1157:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1158:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
1159:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1160:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #if defined (DUAL_BANK)
1162:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
1163:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
1164:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_CRCRDERR_BANK2))
 1688              		.loc 1 1164 5 is_stmt 1 view .LVU487
 1689              		.loc 1 1164 9 is_stmt 0 view .LVU488
 1690 005e 154B     		ldr	r3, .L159+4
 1691 0060 D3F81031 		ldr	r3, [r3, #272]
 1692              		.loc 1 1164 8 view .LVU489
 1693 0064 13F0805F 		tst	r3, #268435456
 1694 0068 13D1     		bne	.L157
1165:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
1166:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Save the error code */
1167:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_CRCRD_BANK2;
1168:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1169:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH CRC read error pending bit */
1170:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_CRCRDERR_BANK2);
1171:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
1173:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
1174:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
1175:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #endif /* DUAL_BANK */
1176:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
1177:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is no error flag set */
1178:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1695              		.loc 1 1178 10 view .LVU490
 1696 006a 0020     		movs	r0, #0
 1697              	.L143:
1179:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1698              		.loc 1 1179 1 view .LVU491
 1699 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1700              	.LVL124:
 1701              	.L156:
1150:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1702              		.loc 1 1150 5 is_stmt 1 view .LVU492
1150:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1703              		.loc 1 1150 9 is_stmt 0 view .LVU493
 1704 006e 114B     		ldr	r3, .L159+4
 1705 0070 1B69     		ldr	r3, [r3, #16]
1150:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1706              		.loc 1 1150 8 view .LVU494
 1707 0072 13F0805F 		tst	r3, #268435456
 1708 0076 01D1     		bne	.L158
1178:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1709              		.loc 1 1178 10 view .LVU495
 1710 0078 0020     		movs	r0, #0
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 74


 1711 007a F7E7     		b	.L143
 1712              	.L158:
1153:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1713              		.loc 1 1153 7 is_stmt 1 view .LVU496
1153:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1714              		.loc 1 1153 24 is_stmt 0 view .LVU497
 1715 007c 0E4A     		ldr	r2, .L159+8
 1716 007e 9369     		ldr	r3, [r2, #24]
 1717 0080 43F08053 		orr	r3, r3, #268435456
 1718 0084 9361     		str	r3, [r2, #24]
1156:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1719              		.loc 1 1156 7 is_stmt 1 view .LVU498
 1720 0086 0B4B     		ldr	r3, .L159+4
 1721 0088 4FF08052 		mov	r2, #268435456
 1722 008c 5A61     		str	r2, [r3, #20]
1158:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1723              		.loc 1 1158 7 view .LVU499
1158:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1724              		.loc 1 1158 14 is_stmt 0 view .LVU500
 1725 008e 0120     		movs	r0, #1
 1726 0090 ECE7     		b	.L143
 1727              	.L157:
1167:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1728              		.loc 1 1167 7 is_stmt 1 view .LVU501
1167:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1729              		.loc 1 1167 24 is_stmt 0 view .LVU502
 1730 0092 094A     		ldr	r2, .L159+8
 1731 0094 9369     		ldr	r3, [r2, #24]
 1732 0096 43F01043 		orr	r3, r3, #-1879048192
 1733 009a 9361     		str	r3, [r2, #24]
1170:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1734              		.loc 1 1170 7 is_stmt 1 view .LVU503
 1735 009c 054B     		ldr	r3, .L159+4
 1736 009e 4FF08052 		mov	r2, #268435456
 1737 00a2 C3F81421 		str	r2, [r3, #276]
1172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1738              		.loc 1 1172 7 view .LVU504
1172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1739              		.loc 1 1172 14 is_stmt 0 view .LVU505
 1740 00a6 0120     		movs	r0, #1
 1741 00a8 E0E7     		b	.L143
 1742              	.L149:
1142:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1743              		.loc 1 1142 16 view .LVU506
 1744 00aa 0320     		movs	r0, #3
 1745 00ac DEE7     		b	.L143
 1746              	.L160:
 1747 00ae 00BF     		.align	2
 1748              	.L159:
 1749 00b0 08000080 		.word	-2147483640
 1750 00b4 00200052 		.word	1375739904
 1751 00b8 00000000 		.word	.LANCHOR0
 1752              		.cfi_endproc
 1753              	.LFE157:
 1755              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 1756              		.align	1
 1757              		.global	HAL_FLASH_OB_Launch
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 75


 1758              		.syntax unified
 1759              		.thumb
 1760              		.thumb_func
 1762              	HAL_FLASH_OB_Launch:
 1763              	.LFB153:
 893:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 1764              		.loc 1 893 1 is_stmt 1 view -0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768 0000 08B5     		push	{r3, lr}
 1769              	.LCFI8:
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 3, -8
 1772              		.cfi_offset 14, -4
 894:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1773              		.loc 1 894 3 view .LVU508
 897:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1774              		.loc 1 897 3 view .LVU509
 897:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1775              		.loc 1 897 7 is_stmt 0 view .LVU510
 1776 0002 0121     		movs	r1, #1
 1777 0004 4CF25030 		movw	r0, #50000
 1778 0008 FFF7FEFF 		bl	FLASH_CRC_WaitForLastOperation
 1779              	.LVL125:
 897:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1780              		.loc 1 897 6 view .LVU511
 1781 000c 08B1     		cbz	r0, .L166
 899:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1782              		.loc 1 899 12 view .LVU512
 1783 000e 0120     		movs	r0, #1
 1784              	.L162:
 1785              	.LVL126:
 921:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1786              		.loc 1 921 3 is_stmt 1 view .LVU513
 922:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1787              		.loc 1 922 1 is_stmt 0 view .LVU514
 1788 0010 08BD     		pop	{r3, pc}
 1789              	.LVL127:
 1790              	.L166:
 902:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1791              		.loc 1 902 8 is_stmt 1 view .LVU515
 902:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1792              		.loc 1 902 12 is_stmt 0 view .LVU516
 1793 0012 0221     		movs	r1, #2
 1794 0014 4CF25030 		movw	r0, #50000
 1795 0018 FFF7FEFF 		bl	FLASH_CRC_WaitForLastOperation
 1796              	.LVL128:
 902:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1797              		.loc 1 902 11 view .LVU517
 1798 001c 08B1     		cbz	r0, .L167
 904:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1799              		.loc 1 904 12 view .LVU518
 1800 001e 0120     		movs	r0, #1
 1801 0020 F6E7     		b	.L162
 1802              	.L167:
 909:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 76


 1803              		.loc 1 909 5 is_stmt 1 view .LVU519
 1804              	.LVL129:
 912:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1805              		.loc 1 912 3 view .LVU520
 915:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1806              		.loc 1 915 5 view .LVU521
 1807 0022 054A     		ldr	r2, .L168
 1808 0024 9369     		ldr	r3, [r2, #24]
 1809 0026 43F00203 		orr	r3, r3, #2
 1810 002a 9361     		str	r3, [r2, #24]
 918:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1811              		.loc 1 918 5 view .LVU522
 918:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1812              		.loc 1 918 14 is_stmt 0 view .LVU523
 1813 002c 4CF25030 		movw	r0, #50000
 1814 0030 FFF7FEFF 		bl	FLASH_OB_WaitForLastOperation
 1815              	.LVL130:
 918:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1816              		.loc 1 918 14 view .LVU524
 1817 0034 ECE7     		b	.L162
 1818              	.L169:
 1819 0036 00BF     		.align	2
 1820              	.L168:
 1821 0038 00200052 		.word	1375739904
 1822              		.cfi_endproc
 1823              	.LFE153:
 1825              		.global	pFlash
 1826              		.section	.bss.pFlash,"aw",%nobits
 1827              		.align	2
 1828              		.set	.LANCHOR0,. + 0
 1831              	pFlash:
 1832 0000 00000000 		.space	28
 1832      00000000 
 1832      00000000 
 1832      00000000 
 1832      00000000 
 1833              		.text
 1834              	.Letext0:
 1835              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1836              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1837              		.file 5 "HAL_Lib/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1838              		.file 6 "HAL_Lib/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1839              		.file 7 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1840              		.file 8 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1841              		.file 9 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1842              		.file 10 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash_ex.h"
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s 			page 77


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_flash.c
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:19     .text.HAL_FLASH_EndOfOperationCallback:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:25     .text.HAL_FLASH_EndOfOperationCallback:00000000 HAL_FLASH_EndOfOperationCallback
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:41     .text.HAL_FLASH_OperationErrorCallback:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:47     .text.HAL_FLASH_OperationErrorCallback:00000000 HAL_FLASH_OperationErrorCallback
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:62     .text.HAL_FLASH_IRQHandler:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:68     .text.HAL_FLASH_IRQHandler:00000000 HAL_FLASH_IRQHandler
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:513    .text.HAL_FLASH_IRQHandler:000001f0 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:519    .text.HAL_FLASH_Unlock:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:525    .text.HAL_FLASH_Unlock:00000000 HAL_FLASH_Unlock
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:592    .text.HAL_FLASH_Unlock:00000054 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:598    .text.HAL_FLASH_Lock:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:604    .text.HAL_FLASH_Lock:00000000 HAL_FLASH_Lock
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:648    .text.HAL_FLASH_Lock:00000038 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:653    .text.HAL_FLASH_OB_Unlock:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:659    .text.HAL_FLASH_OB_Unlock:00000000 HAL_FLASH_OB_Unlock
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:700    .text.HAL_FLASH_OB_Unlock:0000002c $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:706    .text.HAL_FLASH_OB_Lock:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:712    .text.HAL_FLASH_OB_Lock:00000000 HAL_FLASH_OB_Lock
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:741    .text.HAL_FLASH_OB_Lock:0000001c $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:746    .text.HAL_FLASH_GetError:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:752    .text.HAL_FLASH_GetError:00000000 HAL_FLASH_GetError
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:768    .text.HAL_FLASH_GetError:00000008 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:773    .text.FLASH_WaitForLastOperation:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:779    .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:987    .text.FLASH_WaitForLastOperation:000000e8 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:994    .text.HAL_FLASH_Program:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1000   .text.HAL_FLASH_Program:00000000 HAL_FLASH_Program
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1241   .text.HAL_FLASH_Program:000000b8 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1247   .text.HAL_FLASH_Program_IT:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1253   .text.HAL_FLASH_Program_IT:00000000 HAL_FLASH_Program_IT
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1483   .text.HAL_FLASH_Program_IT:000000b4 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1489   .text.FLASH_OB_WaitForLastOperation:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1495   .text.FLASH_OB_WaitForLastOperation:00000000 FLASH_OB_WaitForLastOperation
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1584   .text.FLASH_OB_WaitForLastOperation:00000058 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1590   .text.FLASH_CRC_WaitForLastOperation:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1596   .text.FLASH_CRC_WaitForLastOperation:00000000 FLASH_CRC_WaitForLastOperation
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1749   .text.FLASH_CRC_WaitForLastOperation:000000b0 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1756   .text.HAL_FLASH_OB_Launch:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1762   .text.HAL_FLASH_OB_Launch:00000000 HAL_FLASH_OB_Launch
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1821   .text.HAL_FLASH_OB_Launch:00000038 $d
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1831   .bss.pFlash:00000000 pFlash
C:\Users\HUAV\AppData\Local\Temp\cc34CK4A.s:1827   .bss.pFlash:00000000 $d

UNDEFINED SYMBOLS
FLASH_Erase_Sector
HAL_GetTick
