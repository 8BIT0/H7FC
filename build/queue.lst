ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	prvGetDisinheritPriorityAfterTimeout:
  26              	.LVL0:
  27              	.LFB29:
  28              		.file 1 "System/FreeRTOS/queue.c"
   1:System/FreeRTOS/queue.c **** /*
   2:System/FreeRTOS/queue.c ****  * FreeRTOS Kernel V10.3.1
   3:System/FreeRTOS/queue.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:System/FreeRTOS/queue.c ****  *
   5:System/FreeRTOS/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:System/FreeRTOS/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:System/FreeRTOS/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:System/FreeRTOS/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:System/FreeRTOS/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:System/FreeRTOS/queue.c ****  * subject to the following conditions:
  11:System/FreeRTOS/queue.c ****  *
  12:System/FreeRTOS/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:System/FreeRTOS/queue.c ****  * copies or substantial portions of the Software.
  14:System/FreeRTOS/queue.c ****  *
  15:System/FreeRTOS/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:System/FreeRTOS/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:System/FreeRTOS/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:System/FreeRTOS/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:System/FreeRTOS/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:System/FreeRTOS/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:System/FreeRTOS/queue.c ****  *
  22:System/FreeRTOS/queue.c ****  * http://www.FreeRTOS.org
  23:System/FreeRTOS/queue.c ****  * http://aws.amazon.com/freertos
  24:System/FreeRTOS/queue.c ****  *
  25:System/FreeRTOS/queue.c ****  * 1 tab == 4 spaces!
  26:System/FreeRTOS/queue.c ****  */
  27:System/FreeRTOS/queue.c **** 
  28:System/FreeRTOS/queue.c **** #include <stdlib.h>
  29:System/FreeRTOS/queue.c **** #include <string.h>
  30:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 2


  31:System/FreeRTOS/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:System/FreeRTOS/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:System/FreeRTOS/queue.c **** task.h is included from an application file. */
  34:System/FreeRTOS/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:System/FreeRTOS/queue.c **** 
  36:System/FreeRTOS/queue.c **** #include "FreeRTOS.h"
  37:System/FreeRTOS/queue.c **** #include "task.h"
  38:System/FreeRTOS/queue.c **** #include "queue.h"
  39:System/FreeRTOS/queue.c **** 
  40:System/FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:System/FreeRTOS/queue.c **** 	#include "croutine.h"
  42:System/FreeRTOS/queue.c **** #endif
  43:System/FreeRTOS/queue.c **** 
  44:System/FreeRTOS/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:System/FreeRTOS/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:System/FreeRTOS/queue.c **** for the header files above, but not in this file, in order to generate the
  47:System/FreeRTOS/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:System/FreeRTOS/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:System/FreeRTOS/queue.c **** 
  50:System/FreeRTOS/queue.c **** 
  51:System/FreeRTOS/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:System/FreeRTOS/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:System/FreeRTOS/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:System/FreeRTOS/queue.c **** 
  55:System/FreeRTOS/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:System/FreeRTOS/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:System/FreeRTOS/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:System/FreeRTOS/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:System/FreeRTOS/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:System/FreeRTOS/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:System/FreeRTOS/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:System/FreeRTOS/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:System/FreeRTOS/queue.c **** being used for. */
  64:System/FreeRTOS/queue.c **** #define uxQueueType						pcHead
  65:System/FreeRTOS/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:System/FreeRTOS/queue.c **** 
  67:System/FreeRTOS/queue.c **** typedef struct QueuePointers
  68:System/FreeRTOS/queue.c **** {
  69:System/FreeRTOS/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:System/FreeRTOS/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:System/FreeRTOS/queue.c **** } QueuePointers_t;
  72:System/FreeRTOS/queue.c **** 
  73:System/FreeRTOS/queue.c **** typedef struct SemaphoreData
  74:System/FreeRTOS/queue.c **** {
  75:System/FreeRTOS/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:System/FreeRTOS/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:System/FreeRTOS/queue.c **** } SemaphoreData_t;
  78:System/FreeRTOS/queue.c **** 
  79:System/FreeRTOS/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:System/FreeRTOS/queue.c **** zero. */
  81:System/FreeRTOS/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:System/FreeRTOS/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:System/FreeRTOS/queue.c **** 
  84:System/FreeRTOS/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:System/FreeRTOS/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:System/FreeRTOS/queue.c **** 	performed just because a higher priority task has been woken. */
  87:System/FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 3


  88:System/FreeRTOS/queue.c **** #else
  89:System/FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  90:System/FreeRTOS/queue.c **** #endif
  91:System/FreeRTOS/queue.c **** 
  92:System/FreeRTOS/queue.c **** /*
  93:System/FreeRTOS/queue.c ****  * Definition of the queue used by the scheduler.
  94:System/FreeRTOS/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:System/FreeRTOS/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:System/FreeRTOS/queue.c ****  */
  97:System/FreeRTOS/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:System/FreeRTOS/queue.c **** {
  99:System/FreeRTOS/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:System/FreeRTOS/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:System/FreeRTOS/queue.c **** 
 102:System/FreeRTOS/queue.c **** 	union
 103:System/FreeRTOS/queue.c **** 	{
 104:System/FreeRTOS/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:System/FreeRTOS/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:System/FreeRTOS/queue.c **** 	} u;
 107:System/FreeRTOS/queue.c **** 
 108:System/FreeRTOS/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:System/FreeRTOS/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:System/FreeRTOS/queue.c **** 
 111:System/FreeRTOS/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:System/FreeRTOS/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:System/FreeRTOS/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:System/FreeRTOS/queue.c **** 
 115:System/FreeRTOS/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:System/FreeRTOS/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:System/FreeRTOS/queue.c **** 
 118:System/FreeRTOS/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:System/FreeRTOS/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:System/FreeRTOS/queue.c **** 	#endif
 121:System/FreeRTOS/queue.c **** 
 122:System/FreeRTOS/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:System/FreeRTOS/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:System/FreeRTOS/queue.c **** 	#endif
 125:System/FreeRTOS/queue.c **** 
 126:System/FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:System/FreeRTOS/queue.c **** 		UBaseType_t uxQueueNumber;
 128:System/FreeRTOS/queue.c **** 		uint8_t ucQueueType;
 129:System/FreeRTOS/queue.c **** 	#endif
 130:System/FreeRTOS/queue.c **** 
 131:System/FreeRTOS/queue.c **** } xQUEUE;
 132:System/FreeRTOS/queue.c **** 
 133:System/FreeRTOS/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:System/FreeRTOS/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:System/FreeRTOS/queue.c **** typedef xQUEUE Queue_t;
 136:System/FreeRTOS/queue.c **** 
 137:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 138:System/FreeRTOS/queue.c **** 
 139:System/FreeRTOS/queue.c **** /*
 140:System/FreeRTOS/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:System/FreeRTOS/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:System/FreeRTOS/queue.c ****  */
 143:System/FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 4


 145:System/FreeRTOS/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:System/FreeRTOS/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 147:System/FreeRTOS/queue.c **** 	more user friendly. */
 148:System/FreeRTOS/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:System/FreeRTOS/queue.c **** 	{
 150:System/FreeRTOS/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:System/FreeRTOS/queue.c **** 		QueueHandle_t xHandle;
 152:System/FreeRTOS/queue.c **** 	} xQueueRegistryItem;
 153:System/FreeRTOS/queue.c **** 
 154:System/FreeRTOS/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:System/FreeRTOS/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:System/FreeRTOS/queue.c **** 	debuggers. */
 157:System/FreeRTOS/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:System/FreeRTOS/queue.c **** 
 159:System/FreeRTOS/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:System/FreeRTOS/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:System/FreeRTOS/queue.c **** 	array position being vacant. */
 162:System/FreeRTOS/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:System/FreeRTOS/queue.c **** 
 164:System/FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:System/FreeRTOS/queue.c **** 
 166:System/FreeRTOS/queue.c **** /*
 167:System/FreeRTOS/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:System/FreeRTOS/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:System/FreeRTOS/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:System/FreeRTOS/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:System/FreeRTOS/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:System/FreeRTOS/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:System/FreeRTOS/queue.c ****  */
 174:System/FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:System/FreeRTOS/queue.c **** 
 176:System/FreeRTOS/queue.c **** /*
 177:System/FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:System/FreeRTOS/queue.c ****  *
 179:System/FreeRTOS/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:System/FreeRTOS/queue.c ****  */
 181:System/FreeRTOS/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:System/FreeRTOS/queue.c **** 
 183:System/FreeRTOS/queue.c **** /*
 184:System/FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:System/FreeRTOS/queue.c ****  *
 186:System/FreeRTOS/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:System/FreeRTOS/queue.c ****  */
 188:System/FreeRTOS/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:System/FreeRTOS/queue.c **** 
 190:System/FreeRTOS/queue.c **** /*
 191:System/FreeRTOS/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:System/FreeRTOS/queue.c ****  * back of the queue.
 193:System/FreeRTOS/queue.c ****  */
 194:System/FreeRTOS/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:System/FreeRTOS/queue.c **** 
 196:System/FreeRTOS/queue.c **** /*
 197:System/FreeRTOS/queue.c ****  * Copies an item out of a queue.
 198:System/FreeRTOS/queue.c ****  */
 199:System/FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:System/FreeRTOS/queue.c **** 
 201:System/FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 5


 202:System/FreeRTOS/queue.c **** 	/*
 203:System/FreeRTOS/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 204:System/FreeRTOS/queue.c **** 	 * the queue set that the queue contains data.
 205:System/FreeRTOS/queue.c **** 	 */
 206:System/FreeRTOS/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 207:System/FreeRTOS/queue.c **** #endif
 208:System/FreeRTOS/queue.c **** 
 209:System/FreeRTOS/queue.c **** /*
 210:System/FreeRTOS/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:System/FreeRTOS/queue.c ****  * dynamically to fill in the structure's members.
 212:System/FreeRTOS/queue.c ****  */
 213:System/FreeRTOS/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:System/FreeRTOS/queue.c **** 
 215:System/FreeRTOS/queue.c **** /*
 216:System/FreeRTOS/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:System/FreeRTOS/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:System/FreeRTOS/queue.c ****  * as a mutex.
 219:System/FreeRTOS/queue.c ****  */
 220:System/FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:System/FreeRTOS/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:System/FreeRTOS/queue.c **** #endif
 223:System/FreeRTOS/queue.c **** 
 224:System/FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:System/FreeRTOS/queue.c **** 	/*
 226:System/FreeRTOS/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:System/FreeRTOS/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:System/FreeRTOS/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:System/FreeRTOS/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:System/FreeRTOS/queue.c **** 	 * that priority.
 231:System/FreeRTOS/queue.c **** 	 */
 232:System/FreeRTOS/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:System/FreeRTOS/queue.c **** #endif
 234:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 235:System/FreeRTOS/queue.c **** 
 236:System/FreeRTOS/queue.c **** /*
 237:System/FreeRTOS/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:System/FreeRTOS/queue.c ****  * accessing the queue event lists.
 239:System/FreeRTOS/queue.c ****  */
 240:System/FreeRTOS/queue.c **** #define prvLockQueue( pxQueue )								\
 241:System/FreeRTOS/queue.c **** 	taskENTER_CRITICAL();									\
 242:System/FreeRTOS/queue.c **** 	{														\
 243:System/FreeRTOS/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:System/FreeRTOS/queue.c **** 		{													\
 245:System/FreeRTOS/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:System/FreeRTOS/queue.c **** 		}													\
 247:System/FreeRTOS/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:System/FreeRTOS/queue.c **** 		{													\
 249:System/FreeRTOS/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:System/FreeRTOS/queue.c **** 		}													\
 251:System/FreeRTOS/queue.c **** 	}														\
 252:System/FreeRTOS/queue.c **** 	taskEXIT_CRITICAL()
 253:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 254:System/FreeRTOS/queue.c **** 
 255:System/FreeRTOS/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:System/FreeRTOS/queue.c **** {
 257:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 258:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 6


 259:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 260:System/FreeRTOS/queue.c **** 
 261:System/FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 262:System/FreeRTOS/queue.c **** 	{
 263:System/FreeRTOS/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
 264:System/FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265:System/FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 266:System/FreeRTOS/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 267:System/FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 268:System/FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 269:System/FreeRTOS/queue.c **** 
 270:System/FreeRTOS/queue.c **** 		if( xNewQueue == pdFALSE )
 271:System/FreeRTOS/queue.c **** 		{
 272:System/FreeRTOS/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:System/FreeRTOS/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:System/FreeRTOS/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:System/FreeRTOS/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:System/FreeRTOS/queue.c **** 			it will be possible to write to it. */
 277:System/FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 278:System/FreeRTOS/queue.c **** 			{
 279:System/FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 280:System/FreeRTOS/queue.c **** 				{
 281:System/FreeRTOS/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 282:System/FreeRTOS/queue.c **** 				}
 283:System/FreeRTOS/queue.c **** 				else
 284:System/FreeRTOS/queue.c **** 				{
 285:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:System/FreeRTOS/queue.c **** 				}
 287:System/FreeRTOS/queue.c **** 			}
 288:System/FreeRTOS/queue.c **** 			else
 289:System/FreeRTOS/queue.c **** 			{
 290:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:System/FreeRTOS/queue.c **** 			}
 292:System/FreeRTOS/queue.c **** 		}
 293:System/FreeRTOS/queue.c **** 		else
 294:System/FreeRTOS/queue.c **** 		{
 295:System/FreeRTOS/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:System/FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 297:System/FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 298:System/FreeRTOS/queue.c **** 		}
 299:System/FreeRTOS/queue.c **** 	}
 300:System/FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 301:System/FreeRTOS/queue.c **** 
 302:System/FreeRTOS/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:System/FreeRTOS/queue.c **** 	versions. */
 304:System/FreeRTOS/queue.c **** 	return pdPASS;
 305:System/FreeRTOS/queue.c **** }
 306:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 307:System/FreeRTOS/queue.c **** 
 308:System/FreeRTOS/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:System/FreeRTOS/queue.c **** 
 310:System/FreeRTOS/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:System/FreeRTOS/queue.c **** 	{
 312:System/FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 313:System/FreeRTOS/queue.c **** 
 314:System/FreeRTOS/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 7


 316:System/FreeRTOS/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:System/FreeRTOS/queue.c **** 		supplied. */
 318:System/FreeRTOS/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 319:System/FreeRTOS/queue.c **** 
 320:System/FreeRTOS/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:System/FreeRTOS/queue.c **** 		should not be provided if the item size is 0. */
 322:System/FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:System/FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:System/FreeRTOS/queue.c **** 
 325:System/FreeRTOS/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:System/FreeRTOS/queue.c **** 		{
 327:System/FreeRTOS/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:System/FreeRTOS/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:System/FreeRTOS/queue.c **** 			the real queue and semaphore structures. */
 330:System/FreeRTOS/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:System/FreeRTOS/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:System/FreeRTOS/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:System/FreeRTOS/queue.c **** 		}
 334:System/FreeRTOS/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:System/FreeRTOS/queue.c **** 
 336:System/FreeRTOS/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:System/FreeRTOS/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:System/FreeRTOS/queue.c **** 		but is already set. */
 339:System/FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:System/FreeRTOS/queue.c **** 
 341:System/FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 342:System/FreeRTOS/queue.c **** 		{
 343:System/FreeRTOS/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:System/FreeRTOS/queue.c **** 			{
 345:System/FreeRTOS/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:System/FreeRTOS/queue.c **** 				note this queue was allocated statically in case the queue is
 347:System/FreeRTOS/queue.c **** 				later deleted. */
 348:System/FreeRTOS/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:System/FreeRTOS/queue.c **** 			}
 350:System/FreeRTOS/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:System/FreeRTOS/queue.c **** 
 352:System/FreeRTOS/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:System/FreeRTOS/queue.c **** 		}
 354:System/FreeRTOS/queue.c **** 		else
 355:System/FreeRTOS/queue.c **** 		{
 356:System/FreeRTOS/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:System/FreeRTOS/queue.c **** 		}
 359:System/FreeRTOS/queue.c **** 
 360:System/FreeRTOS/queue.c **** 		return pxNewQueue;
 361:System/FreeRTOS/queue.c **** 	}
 362:System/FreeRTOS/queue.c **** 
 363:System/FreeRTOS/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 365:System/FreeRTOS/queue.c **** 
 366:System/FreeRTOS/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:System/FreeRTOS/queue.c **** 
 368:System/FreeRTOS/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:System/FreeRTOS/queue.c **** 	{
 370:System/FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 371:System/FreeRTOS/queue.c **** 	size_t xQueueSizeInBytes;
 372:System/FreeRTOS/queue.c **** 	uint8_t *pucQueueStorage;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 8


 373:System/FreeRTOS/queue.c **** 
 374:System/FreeRTOS/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 375:System/FreeRTOS/queue.c **** 
 376:System/FreeRTOS/queue.c **** 		/* Allocate enough space to hold the maximum number of items that
 377:System/FreeRTOS/queue.c **** 		can be in the queue at any time.  It is valid for uxItemSize to be
 378:System/FreeRTOS/queue.c **** 		zero in the case the queue is used as a semaphore. */
 379:System/FreeRTOS/queue.c **** 		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as th
 380:System/FreeRTOS/queue.c **** 
 381:System/FreeRTOS/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 382:System/FreeRTOS/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 383:System/FreeRTOS/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 384:System/FreeRTOS/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 385:System/FreeRTOS/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 386:System/FreeRTOS/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 387:System/FreeRTOS/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 388:System/FreeRTOS/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 389:System/FreeRTOS/queue.c **** 		two bytes). */
 390:System/FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 391:System/FreeRTOS/queue.c **** 
 392:System/FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 393:System/FreeRTOS/queue.c **** 		{
 394:System/FreeRTOS/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 395:System/FreeRTOS/queue.c **** 			storage area. */
 396:System/FreeRTOS/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 397:System/FreeRTOS/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 398:System/FreeRTOS/queue.c **** 
 399:System/FreeRTOS/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 400:System/FreeRTOS/queue.c **** 			{
 401:System/FreeRTOS/queue.c **** 				/* Queues can be created either statically or dynamically, so
 402:System/FreeRTOS/queue.c **** 				note this task was created dynamically in case it is later
 403:System/FreeRTOS/queue.c **** 				deleted. */
 404:System/FreeRTOS/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 405:System/FreeRTOS/queue.c **** 			}
 406:System/FreeRTOS/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 407:System/FreeRTOS/queue.c **** 
 408:System/FreeRTOS/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 409:System/FreeRTOS/queue.c **** 		}
 410:System/FreeRTOS/queue.c **** 		else
 411:System/FreeRTOS/queue.c **** 		{
 412:System/FreeRTOS/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 413:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 414:System/FreeRTOS/queue.c **** 		}
 415:System/FreeRTOS/queue.c **** 
 416:System/FreeRTOS/queue.c **** 		return pxNewQueue;
 417:System/FreeRTOS/queue.c **** 	}
 418:System/FreeRTOS/queue.c **** 
 419:System/FreeRTOS/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 420:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 421:System/FreeRTOS/queue.c **** 
 422:System/FreeRTOS/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 423:System/FreeRTOS/queue.c **** {
 424:System/FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 425:System/FreeRTOS/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 426:System/FreeRTOS/queue.c **** 	( void ) ucQueueType;
 427:System/FreeRTOS/queue.c **** 
 428:System/FreeRTOS/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 429:System/FreeRTOS/queue.c **** 	{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 9


 430:System/FreeRTOS/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 431:System/FreeRTOS/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 432:System/FreeRTOS/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 433:System/FreeRTOS/queue.c **** 		value that is known to be within the memory map. */
 434:System/FreeRTOS/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 435:System/FreeRTOS/queue.c **** 	}
 436:System/FreeRTOS/queue.c **** 	else
 437:System/FreeRTOS/queue.c **** 	{
 438:System/FreeRTOS/queue.c **** 		/* Set the head to the start of the queue storage area. */
 439:System/FreeRTOS/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 440:System/FreeRTOS/queue.c **** 	}
 441:System/FreeRTOS/queue.c **** 
 442:System/FreeRTOS/queue.c **** 	/* Initialise the queue members as described where the queue type is
 443:System/FreeRTOS/queue.c **** 	defined. */
 444:System/FreeRTOS/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 445:System/FreeRTOS/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 446:System/FreeRTOS/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 447:System/FreeRTOS/queue.c **** 
 448:System/FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 449:System/FreeRTOS/queue.c **** 	{
 450:System/FreeRTOS/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 451:System/FreeRTOS/queue.c **** 	}
 452:System/FreeRTOS/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 453:System/FreeRTOS/queue.c **** 
 454:System/FreeRTOS/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 455:System/FreeRTOS/queue.c **** 	{
 456:System/FreeRTOS/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 457:System/FreeRTOS/queue.c **** 	}
 458:System/FreeRTOS/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 459:System/FreeRTOS/queue.c **** 
 460:System/FreeRTOS/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 461:System/FreeRTOS/queue.c **** }
 462:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 463:System/FreeRTOS/queue.c **** 
 464:System/FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
 465:System/FreeRTOS/queue.c **** 
 466:System/FreeRTOS/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 467:System/FreeRTOS/queue.c **** 	{
 468:System/FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 469:System/FreeRTOS/queue.c **** 		{
 470:System/FreeRTOS/queue.c **** 			/* The queue create function will set all the queue structure members
 471:System/FreeRTOS/queue.c **** 			correctly for a generic queue, but this function is creating a
 472:System/FreeRTOS/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 473:System/FreeRTOS/queue.c **** 			in particular the information required for priority inheritance. */
 474:System/FreeRTOS/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 475:System/FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 476:System/FreeRTOS/queue.c **** 
 477:System/FreeRTOS/queue.c **** 			/* In case this is a recursive mutex. */
 478:System/FreeRTOS/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 479:System/FreeRTOS/queue.c **** 
 480:System/FreeRTOS/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 481:System/FreeRTOS/queue.c **** 
 482:System/FreeRTOS/queue.c **** 			/* Start with the semaphore in the expected state. */
 483:System/FreeRTOS/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 484:System/FreeRTOS/queue.c **** 		}
 485:System/FreeRTOS/queue.c **** 		else
 486:System/FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 10


 487:System/FreeRTOS/queue.c **** 			traceCREATE_MUTEX_FAILED();
 488:System/FreeRTOS/queue.c **** 		}
 489:System/FreeRTOS/queue.c **** 	}
 490:System/FreeRTOS/queue.c **** 
 491:System/FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 492:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 493:System/FreeRTOS/queue.c **** 
 494:System/FreeRTOS/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 495:System/FreeRTOS/queue.c **** 
 496:System/FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 497:System/FreeRTOS/queue.c **** 	{
 498:System/FreeRTOS/queue.c **** 	QueueHandle_t xNewQueue;
 499:System/FreeRTOS/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 500:System/FreeRTOS/queue.c **** 
 501:System/FreeRTOS/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 502:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 503:System/FreeRTOS/queue.c **** 
 504:System/FreeRTOS/queue.c **** 		return xNewQueue;
 505:System/FreeRTOS/queue.c **** 	}
 506:System/FreeRTOS/queue.c **** 
 507:System/FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 508:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 509:System/FreeRTOS/queue.c **** 
 510:System/FreeRTOS/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 511:System/FreeRTOS/queue.c **** 
 512:System/FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 513:System/FreeRTOS/queue.c **** 	{
 514:System/FreeRTOS/queue.c **** 	QueueHandle_t xNewQueue;
 515:System/FreeRTOS/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 516:System/FreeRTOS/queue.c **** 
 517:System/FreeRTOS/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 518:System/FreeRTOS/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 519:System/FreeRTOS/queue.c **** 		( void ) ucQueueType;
 520:System/FreeRTOS/queue.c **** 
 521:System/FreeRTOS/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 522:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 523:System/FreeRTOS/queue.c **** 
 524:System/FreeRTOS/queue.c **** 		return xNewQueue;
 525:System/FreeRTOS/queue.c **** 	}
 526:System/FreeRTOS/queue.c **** 
 527:System/FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 528:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 529:System/FreeRTOS/queue.c **** 
 530:System/FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 531:System/FreeRTOS/queue.c **** 
 532:System/FreeRTOS/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 533:System/FreeRTOS/queue.c **** 	{
 534:System/FreeRTOS/queue.c **** 	TaskHandle_t pxReturn;
 535:System/FreeRTOS/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 536:System/FreeRTOS/queue.c **** 
 537:System/FreeRTOS/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 538:System/FreeRTOS/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 539:System/FreeRTOS/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 540:System/FreeRTOS/queue.c **** 		identity of the mutex holder, as the holder may change between the
 541:System/FreeRTOS/queue.c **** 		following critical section exiting and the function returning. */
 542:System/FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 543:System/FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 11


 544:System/FreeRTOS/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 545:System/FreeRTOS/queue.c **** 			{
 546:System/FreeRTOS/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 547:System/FreeRTOS/queue.c **** 			}
 548:System/FreeRTOS/queue.c **** 			else
 549:System/FreeRTOS/queue.c **** 			{
 550:System/FreeRTOS/queue.c **** 				pxReturn = NULL;
 551:System/FreeRTOS/queue.c **** 			}
 552:System/FreeRTOS/queue.c **** 		}
 553:System/FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 554:System/FreeRTOS/queue.c **** 
 555:System/FreeRTOS/queue.c **** 		return pxReturn;
 556:System/FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 557:System/FreeRTOS/queue.c **** 
 558:System/FreeRTOS/queue.c **** #endif
 559:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 560:System/FreeRTOS/queue.c **** 
 561:System/FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 562:System/FreeRTOS/queue.c **** 
 563:System/FreeRTOS/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 564:System/FreeRTOS/queue.c **** 	{
 565:System/FreeRTOS/queue.c **** 	TaskHandle_t pxReturn;
 566:System/FreeRTOS/queue.c **** 
 567:System/FreeRTOS/queue.c **** 		configASSERT( xSemaphore );
 568:System/FreeRTOS/queue.c **** 
 569:System/FreeRTOS/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 570:System/FreeRTOS/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 571:System/FreeRTOS/queue.c **** 		not required here. */
 572:System/FreeRTOS/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 573:System/FreeRTOS/queue.c **** 		{
 574:System/FreeRTOS/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 575:System/FreeRTOS/queue.c **** 		}
 576:System/FreeRTOS/queue.c **** 		else
 577:System/FreeRTOS/queue.c **** 		{
 578:System/FreeRTOS/queue.c **** 			pxReturn = NULL;
 579:System/FreeRTOS/queue.c **** 		}
 580:System/FreeRTOS/queue.c **** 
 581:System/FreeRTOS/queue.c **** 		return pxReturn;
 582:System/FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 583:System/FreeRTOS/queue.c **** 
 584:System/FreeRTOS/queue.c **** #endif
 585:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 586:System/FreeRTOS/queue.c **** 
 587:System/FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 588:System/FreeRTOS/queue.c **** 
 589:System/FreeRTOS/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 590:System/FreeRTOS/queue.c **** 	{
 591:System/FreeRTOS/queue.c **** 	BaseType_t xReturn;
 592:System/FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 593:System/FreeRTOS/queue.c **** 
 594:System/FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 595:System/FreeRTOS/queue.c **** 
 596:System/FreeRTOS/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 597:System/FreeRTOS/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 598:System/FreeRTOS/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 599:System/FreeRTOS/queue.c **** 		this is the only condition we are interested in it does not matter if
 600:System/FreeRTOS/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 12


 601:System/FreeRTOS/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 602:System/FreeRTOS/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 603:System/FreeRTOS/queue.c **** 		{
 604:System/FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 605:System/FreeRTOS/queue.c **** 
 606:System/FreeRTOS/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 607:System/FreeRTOS/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 608:System/FreeRTOS/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 609:System/FreeRTOS/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 610:System/FreeRTOS/queue.c **** 			uxRecursiveCallCount member. */
 611:System/FreeRTOS/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 612:System/FreeRTOS/queue.c **** 
 613:System/FreeRTOS/queue.c **** 			/* Has the recursive call count unwound to 0? */
 614:System/FreeRTOS/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 615:System/FreeRTOS/queue.c **** 			{
 616:System/FreeRTOS/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 617:System/FreeRTOS/queue.c **** 				task that might be waiting to access the mutex. */
 618:System/FreeRTOS/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 619:System/FreeRTOS/queue.c **** 			}
 620:System/FreeRTOS/queue.c **** 			else
 621:System/FreeRTOS/queue.c **** 			{
 622:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 623:System/FreeRTOS/queue.c **** 			}
 624:System/FreeRTOS/queue.c **** 
 625:System/FreeRTOS/queue.c **** 			xReturn = pdPASS;
 626:System/FreeRTOS/queue.c **** 		}
 627:System/FreeRTOS/queue.c **** 		else
 628:System/FreeRTOS/queue.c **** 		{
 629:System/FreeRTOS/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 630:System/FreeRTOS/queue.c **** 			holder. */
 631:System/FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 632:System/FreeRTOS/queue.c **** 
 633:System/FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 634:System/FreeRTOS/queue.c **** 		}
 635:System/FreeRTOS/queue.c **** 
 636:System/FreeRTOS/queue.c **** 		return xReturn;
 637:System/FreeRTOS/queue.c **** 	}
 638:System/FreeRTOS/queue.c **** 
 639:System/FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 640:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 641:System/FreeRTOS/queue.c **** 
 642:System/FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 643:System/FreeRTOS/queue.c **** 
 644:System/FreeRTOS/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 645:System/FreeRTOS/queue.c **** 	{
 646:System/FreeRTOS/queue.c **** 	BaseType_t xReturn;
 647:System/FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 648:System/FreeRTOS/queue.c **** 
 649:System/FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 650:System/FreeRTOS/queue.c **** 
 651:System/FreeRTOS/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 652:System/FreeRTOS/queue.c **** 		xQueueGiveMutexRecursive(). */
 653:System/FreeRTOS/queue.c **** 
 654:System/FreeRTOS/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 655:System/FreeRTOS/queue.c **** 
 656:System/FreeRTOS/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 657:System/FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 13


 658:System/FreeRTOS/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 659:System/FreeRTOS/queue.c **** 			xReturn = pdPASS;
 660:System/FreeRTOS/queue.c **** 		}
 661:System/FreeRTOS/queue.c **** 		else
 662:System/FreeRTOS/queue.c **** 		{
 663:System/FreeRTOS/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 664:System/FreeRTOS/queue.c **** 
 665:System/FreeRTOS/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 666:System/FreeRTOS/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 667:System/FreeRTOS/queue.c **** 			before reaching here. */
 668:System/FreeRTOS/queue.c **** 			if( xReturn != pdFAIL )
 669:System/FreeRTOS/queue.c **** 			{
 670:System/FreeRTOS/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 671:System/FreeRTOS/queue.c **** 			}
 672:System/FreeRTOS/queue.c **** 			else
 673:System/FreeRTOS/queue.c **** 			{
 674:System/FreeRTOS/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 675:System/FreeRTOS/queue.c **** 			}
 676:System/FreeRTOS/queue.c **** 		}
 677:System/FreeRTOS/queue.c **** 
 678:System/FreeRTOS/queue.c **** 		return xReturn;
 679:System/FreeRTOS/queue.c **** 	}
 680:System/FreeRTOS/queue.c **** 
 681:System/FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 682:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 683:System/FreeRTOS/queue.c **** 
 684:System/FreeRTOS/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 685:System/FreeRTOS/queue.c **** 
 686:System/FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 687:System/FreeRTOS/queue.c **** 	{
 688:System/FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 689:System/FreeRTOS/queue.c **** 
 690:System/FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 691:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 692:System/FreeRTOS/queue.c **** 
 693:System/FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 694:System/FreeRTOS/queue.c **** 
 695:System/FreeRTOS/queue.c **** 		if( xHandle != NULL )
 696:System/FreeRTOS/queue.c **** 		{
 697:System/FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 698:System/FreeRTOS/queue.c **** 
 699:System/FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 700:System/FreeRTOS/queue.c **** 		}
 701:System/FreeRTOS/queue.c **** 		else
 702:System/FreeRTOS/queue.c **** 		{
 703:System/FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 704:System/FreeRTOS/queue.c **** 		}
 705:System/FreeRTOS/queue.c **** 
 706:System/FreeRTOS/queue.c **** 		return xHandle;
 707:System/FreeRTOS/queue.c **** 	}
 708:System/FreeRTOS/queue.c **** 
 709:System/FreeRTOS/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 710:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 711:System/FreeRTOS/queue.c **** 
 712:System/FreeRTOS/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 713:System/FreeRTOS/queue.c **** 
 714:System/FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 14


 715:System/FreeRTOS/queue.c **** 	{
 716:System/FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 717:System/FreeRTOS/queue.c **** 
 718:System/FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 719:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 720:System/FreeRTOS/queue.c **** 
 721:System/FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 722:System/FreeRTOS/queue.c **** 
 723:System/FreeRTOS/queue.c **** 		if( xHandle != NULL )
 724:System/FreeRTOS/queue.c **** 		{
 725:System/FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 726:System/FreeRTOS/queue.c **** 
 727:System/FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 728:System/FreeRTOS/queue.c **** 		}
 729:System/FreeRTOS/queue.c **** 		else
 730:System/FreeRTOS/queue.c **** 		{
 731:System/FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 732:System/FreeRTOS/queue.c **** 		}
 733:System/FreeRTOS/queue.c **** 
 734:System/FreeRTOS/queue.c **** 		return xHandle;
 735:System/FreeRTOS/queue.c **** 	}
 736:System/FreeRTOS/queue.c **** 
 737:System/FreeRTOS/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 738:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 739:System/FreeRTOS/queue.c **** 
 740:System/FreeRTOS/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 741:System/FreeRTOS/queue.c **** {
 742:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 743:System/FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 744:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 745:System/FreeRTOS/queue.c **** 
 746:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 747:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 748:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 749:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 750:System/FreeRTOS/queue.c **** 	{
 751:System/FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 752:System/FreeRTOS/queue.c **** 	}
 753:System/FreeRTOS/queue.c **** 	#endif
 754:System/FreeRTOS/queue.c **** 
 755:System/FreeRTOS/queue.c **** 
 756:System/FreeRTOS/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 757:System/FreeRTOS/queue.c **** 	allow return statements within the function itself.  This is done in the
 758:System/FreeRTOS/queue.c **** 	interest of execution time efficiency. */
 759:System/FreeRTOS/queue.c **** 	for( ;; )
 760:System/FreeRTOS/queue.c **** 	{
 761:System/FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 762:System/FreeRTOS/queue.c **** 		{
 763:System/FreeRTOS/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 764:System/FreeRTOS/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 765:System/FreeRTOS/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 766:System/FreeRTOS/queue.c **** 			queue is full. */
 767:System/FreeRTOS/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 768:System/FreeRTOS/queue.c **** 			{
 769:System/FreeRTOS/queue.c **** 				traceQUEUE_SEND( pxQueue );
 770:System/FreeRTOS/queue.c **** 
 771:System/FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 15


 772:System/FreeRTOS/queue.c **** 				{
 773:System/FreeRTOS/queue.c **** 				const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 774:System/FreeRTOS/queue.c **** 
 775:System/FreeRTOS/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 776:System/FreeRTOS/queue.c **** 
 777:System/FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 778:System/FreeRTOS/queue.c **** 					{
 779:System/FreeRTOS/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 780:System/FreeRTOS/queue.c **** 						{
 781:System/FreeRTOS/queue.c **** 							/* Do not notify the queue set as an existing item
 782:System/FreeRTOS/queue.c **** 							was overwritten in the queue so the number of items
 783:System/FreeRTOS/queue.c **** 							in the queue has not changed. */
 784:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 785:System/FreeRTOS/queue.c **** 						}
 786:System/FreeRTOS/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 787:System/FreeRTOS/queue.c **** 						{
 788:System/FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
 789:System/FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
 790:System/FreeRTOS/queue.c **** 							unblock. A context switch is required. */
 791:System/FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 792:System/FreeRTOS/queue.c **** 						}
 793:System/FreeRTOS/queue.c **** 						else
 794:System/FreeRTOS/queue.c **** 						{
 795:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 796:System/FreeRTOS/queue.c **** 						}
 797:System/FreeRTOS/queue.c **** 					}
 798:System/FreeRTOS/queue.c **** 					else
 799:System/FreeRTOS/queue.c **** 					{
 800:System/FreeRTOS/queue.c **** 						/* If there was a task waiting for data to arrive on the
 801:System/FreeRTOS/queue.c **** 						queue then unblock it now. */
 802:System/FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 803:System/FreeRTOS/queue.c **** 						{
 804:System/FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 805:System/FreeRTOS/queue.c **** 							{
 806:System/FreeRTOS/queue.c **** 								/* The unblocked task has a priority higher than
 807:System/FreeRTOS/queue.c **** 								our own so yield immediately.  Yes it is ok to
 808:System/FreeRTOS/queue.c **** 								do this from within the critical section - the
 809:System/FreeRTOS/queue.c **** 								kernel takes care of that. */
 810:System/FreeRTOS/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 811:System/FreeRTOS/queue.c **** 							}
 812:System/FreeRTOS/queue.c **** 							else
 813:System/FreeRTOS/queue.c **** 							{
 814:System/FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 815:System/FreeRTOS/queue.c **** 							}
 816:System/FreeRTOS/queue.c **** 						}
 817:System/FreeRTOS/queue.c **** 						else if( xYieldRequired != pdFALSE )
 818:System/FreeRTOS/queue.c **** 						{
 819:System/FreeRTOS/queue.c **** 							/* This path is a special case that will only get
 820:System/FreeRTOS/queue.c **** 							executed if the task was holding multiple mutexes
 821:System/FreeRTOS/queue.c **** 							and the mutexes were given back in an order that is
 822:System/FreeRTOS/queue.c **** 							different to that in which they were taken. */
 823:System/FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 824:System/FreeRTOS/queue.c **** 						}
 825:System/FreeRTOS/queue.c **** 						else
 826:System/FreeRTOS/queue.c **** 						{
 827:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 828:System/FreeRTOS/queue.c **** 						}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 16


 829:System/FreeRTOS/queue.c **** 					}
 830:System/FreeRTOS/queue.c **** 				}
 831:System/FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 832:System/FreeRTOS/queue.c **** 				{
 833:System/FreeRTOS/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 834:System/FreeRTOS/queue.c **** 
 835:System/FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 836:System/FreeRTOS/queue.c **** 					queue then unblock it now. */
 837:System/FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 838:System/FreeRTOS/queue.c **** 					{
 839:System/FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 840:System/FreeRTOS/queue.c **** 						{
 841:System/FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 842:System/FreeRTOS/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 843:System/FreeRTOS/queue.c **** 							this from within the critical section - the kernel
 844:System/FreeRTOS/queue.c **** 							takes care of that. */
 845:System/FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 846:System/FreeRTOS/queue.c **** 						}
 847:System/FreeRTOS/queue.c **** 						else
 848:System/FreeRTOS/queue.c **** 						{
 849:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 850:System/FreeRTOS/queue.c **** 						}
 851:System/FreeRTOS/queue.c **** 					}
 852:System/FreeRTOS/queue.c **** 					else if( xYieldRequired != pdFALSE )
 853:System/FreeRTOS/queue.c **** 					{
 854:System/FreeRTOS/queue.c **** 						/* This path is a special case that will only get
 855:System/FreeRTOS/queue.c **** 						executed if the task was holding multiple mutexes and
 856:System/FreeRTOS/queue.c **** 						the mutexes were given back in an order that is
 857:System/FreeRTOS/queue.c **** 						different to that in which they were taken. */
 858:System/FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 859:System/FreeRTOS/queue.c **** 					}
 860:System/FreeRTOS/queue.c **** 					else
 861:System/FreeRTOS/queue.c **** 					{
 862:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 863:System/FreeRTOS/queue.c **** 					}
 864:System/FreeRTOS/queue.c **** 				}
 865:System/FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 866:System/FreeRTOS/queue.c **** 
 867:System/FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 868:System/FreeRTOS/queue.c **** 				return pdPASS;
 869:System/FreeRTOS/queue.c **** 			}
 870:System/FreeRTOS/queue.c **** 			else
 871:System/FreeRTOS/queue.c **** 			{
 872:System/FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 873:System/FreeRTOS/queue.c **** 				{
 874:System/FreeRTOS/queue.c **** 					/* The queue was full and no block time is specified (or
 875:System/FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
 876:System/FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 877:System/FreeRTOS/queue.c **** 
 878:System/FreeRTOS/queue.c **** 					/* Return to the original privilege level before exiting
 879:System/FreeRTOS/queue.c **** 					the function. */
 880:System/FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 881:System/FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 882:System/FreeRTOS/queue.c **** 				}
 883:System/FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 884:System/FreeRTOS/queue.c **** 				{
 885:System/FreeRTOS/queue.c **** 					/* The queue was full and a block time was specified so
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 17


 886:System/FreeRTOS/queue.c **** 					configure the timeout structure. */
 887:System/FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 888:System/FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 889:System/FreeRTOS/queue.c **** 				}
 890:System/FreeRTOS/queue.c **** 				else
 891:System/FreeRTOS/queue.c **** 				{
 892:System/FreeRTOS/queue.c **** 					/* Entry time was already set. */
 893:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 894:System/FreeRTOS/queue.c **** 				}
 895:System/FreeRTOS/queue.c **** 			}
 896:System/FreeRTOS/queue.c **** 		}
 897:System/FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 898:System/FreeRTOS/queue.c **** 
 899:System/FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 900:System/FreeRTOS/queue.c **** 		now the critical section has been exited. */
 901:System/FreeRTOS/queue.c **** 
 902:System/FreeRTOS/queue.c **** 		vTaskSuspendAll();
 903:System/FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 904:System/FreeRTOS/queue.c **** 
 905:System/FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 906:System/FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 907:System/FreeRTOS/queue.c **** 		{
 908:System/FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 909:System/FreeRTOS/queue.c **** 			{
 910:System/FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 911:System/FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 912:System/FreeRTOS/queue.c **** 
 913:System/FreeRTOS/queue.c **** 				/* Unlocking the queue means queue events can effect the
 914:System/FreeRTOS/queue.c **** 				event list.  It is possible that interrupts occurring now
 915:System/FreeRTOS/queue.c **** 				remove this task from the event list again - but as the
 916:System/FreeRTOS/queue.c **** 				scheduler is suspended the task will go onto the pending
 917:System/FreeRTOS/queue.c **** 				ready last instead of the actual ready list. */
 918:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 919:System/FreeRTOS/queue.c **** 
 920:System/FreeRTOS/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 921:System/FreeRTOS/queue.c **** 				ready list into the ready list - so it is feasible that this
 922:System/FreeRTOS/queue.c **** 				task is already in a ready list before it yields - in which
 923:System/FreeRTOS/queue.c **** 				case the yield will not cause a context switch unless there
 924:System/FreeRTOS/queue.c **** 				is also a higher priority task in the pending ready list. */
 925:System/FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 926:System/FreeRTOS/queue.c **** 				{
 927:System/FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 928:System/FreeRTOS/queue.c **** 				}
 929:System/FreeRTOS/queue.c **** 			}
 930:System/FreeRTOS/queue.c **** 			else
 931:System/FreeRTOS/queue.c **** 			{
 932:System/FreeRTOS/queue.c **** 				/* Try again. */
 933:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 934:System/FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 935:System/FreeRTOS/queue.c **** 			}
 936:System/FreeRTOS/queue.c **** 		}
 937:System/FreeRTOS/queue.c **** 		else
 938:System/FreeRTOS/queue.c **** 		{
 939:System/FreeRTOS/queue.c **** 			/* The timeout has expired. */
 940:System/FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
 941:System/FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 942:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 18


 943:System/FreeRTOS/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 944:System/FreeRTOS/queue.c **** 			return errQUEUE_FULL;
 945:System/FreeRTOS/queue.c **** 		}
 946:System/FreeRTOS/queue.c **** 	} /*lint -restore */
 947:System/FreeRTOS/queue.c **** }
 948:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 949:System/FreeRTOS/queue.c **** 
 950:System/FreeRTOS/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 951:System/FreeRTOS/queue.c **** {
 952:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 953:System/FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
 954:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 955:System/FreeRTOS/queue.c **** 
 956:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 957:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 958:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 959:System/FreeRTOS/queue.c **** 
 960:System/FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 961:System/FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 962:System/FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 963:System/FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 964:System/FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 965:System/FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 966:System/FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 967:System/FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
 968:System/FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 969:System/FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 970:System/FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 971:System/FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 972:System/FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 973:System/FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 974:System/FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 975:System/FreeRTOS/queue.c **** 
 976:System/FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 977:System/FreeRTOS/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 978:System/FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 979:System/FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 980:System/FreeRTOS/queue.c **** 	post). */
 981:System/FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 982:System/FreeRTOS/queue.c **** 	{
 983:System/FreeRTOS/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 984:System/FreeRTOS/queue.c **** 		{
 985:System/FreeRTOS/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 986:System/FreeRTOS/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 987:System/FreeRTOS/queue.c **** 
 988:System/FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 989:System/FreeRTOS/queue.c **** 
 990:System/FreeRTOS/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 991:System/FreeRTOS/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 992:System/FreeRTOS/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 993:System/FreeRTOS/queue.c **** 			called here even though the disinherit function does not check if
 994:System/FreeRTOS/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 995:System/FreeRTOS/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 996:System/FreeRTOS/queue.c **** 
 997:System/FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 998:System/FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
 999:System/FreeRTOS/queue.c **** 			if( cTxLock == queueUNLOCKED )
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 19


1000:System/FreeRTOS/queue.c **** 			{
1001:System/FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1002:System/FreeRTOS/queue.c **** 				{
1003:System/FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1004:System/FreeRTOS/queue.c **** 					{
1005:System/FreeRTOS/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
1006:System/FreeRTOS/queue.c **** 						{
1007:System/FreeRTOS/queue.c **** 							/* Do not notify the queue set as an existing item
1008:System/FreeRTOS/queue.c **** 							was overwritten in the queue so the number of items
1009:System/FreeRTOS/queue.c **** 							in the queue has not changed. */
1010:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1011:System/FreeRTOS/queue.c **** 						}
1012:System/FreeRTOS/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1013:System/FreeRTOS/queue.c **** 						{
1014:System/FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
1015:System/FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
1016:System/FreeRTOS/queue.c **** 							unblock.  A context switch is required. */
1017:System/FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1018:System/FreeRTOS/queue.c **** 							{
1019:System/FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1020:System/FreeRTOS/queue.c **** 							}
1021:System/FreeRTOS/queue.c **** 							else
1022:System/FreeRTOS/queue.c **** 							{
1023:System/FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1024:System/FreeRTOS/queue.c **** 							}
1025:System/FreeRTOS/queue.c **** 						}
1026:System/FreeRTOS/queue.c **** 						else
1027:System/FreeRTOS/queue.c **** 						{
1028:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1029:System/FreeRTOS/queue.c **** 						}
1030:System/FreeRTOS/queue.c **** 					}
1031:System/FreeRTOS/queue.c **** 					else
1032:System/FreeRTOS/queue.c **** 					{
1033:System/FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1034:System/FreeRTOS/queue.c **** 						{
1035:System/FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1036:System/FreeRTOS/queue.c **** 							{
1037:System/FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1038:System/FreeRTOS/queue.c **** 								record that a context switch is required. */
1039:System/FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1040:System/FreeRTOS/queue.c **** 								{
1041:System/FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1042:System/FreeRTOS/queue.c **** 								}
1043:System/FreeRTOS/queue.c **** 								else
1044:System/FreeRTOS/queue.c **** 								{
1045:System/FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1046:System/FreeRTOS/queue.c **** 								}
1047:System/FreeRTOS/queue.c **** 							}
1048:System/FreeRTOS/queue.c **** 							else
1049:System/FreeRTOS/queue.c **** 							{
1050:System/FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1051:System/FreeRTOS/queue.c **** 							}
1052:System/FreeRTOS/queue.c **** 						}
1053:System/FreeRTOS/queue.c **** 						else
1054:System/FreeRTOS/queue.c **** 						{
1055:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1056:System/FreeRTOS/queue.c **** 						}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 20


1057:System/FreeRTOS/queue.c **** 					}
1058:System/FreeRTOS/queue.c **** 				}
1059:System/FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1060:System/FreeRTOS/queue.c **** 				{
1061:System/FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1062:System/FreeRTOS/queue.c **** 					{
1063:System/FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1064:System/FreeRTOS/queue.c **** 						{
1065:System/FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1066:System/FreeRTOS/queue.c **** 							context	switch is required. */
1067:System/FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1068:System/FreeRTOS/queue.c **** 							{
1069:System/FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1070:System/FreeRTOS/queue.c **** 							}
1071:System/FreeRTOS/queue.c **** 							else
1072:System/FreeRTOS/queue.c **** 							{
1073:System/FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1074:System/FreeRTOS/queue.c **** 							}
1075:System/FreeRTOS/queue.c **** 						}
1076:System/FreeRTOS/queue.c **** 						else
1077:System/FreeRTOS/queue.c **** 						{
1078:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1079:System/FreeRTOS/queue.c **** 						}
1080:System/FreeRTOS/queue.c **** 					}
1081:System/FreeRTOS/queue.c **** 					else
1082:System/FreeRTOS/queue.c **** 					{
1083:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1084:System/FreeRTOS/queue.c **** 					}
1085:System/FreeRTOS/queue.c **** 					
1086:System/FreeRTOS/queue.c **** 					/* Not used in this path. */
1087:System/FreeRTOS/queue.c **** 					( void ) uxPreviousMessagesWaiting;
1088:System/FreeRTOS/queue.c **** 				}
1089:System/FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1090:System/FreeRTOS/queue.c **** 			}
1091:System/FreeRTOS/queue.c **** 			else
1092:System/FreeRTOS/queue.c **** 			{
1093:System/FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1094:System/FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
1095:System/FreeRTOS/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1096:System/FreeRTOS/queue.c **** 			}
1097:System/FreeRTOS/queue.c **** 
1098:System/FreeRTOS/queue.c **** 			xReturn = pdPASS;
1099:System/FreeRTOS/queue.c **** 		}
1100:System/FreeRTOS/queue.c **** 		else
1101:System/FreeRTOS/queue.c **** 		{
1102:System/FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1103:System/FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
1104:System/FreeRTOS/queue.c **** 		}
1105:System/FreeRTOS/queue.c **** 	}
1106:System/FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1107:System/FreeRTOS/queue.c **** 
1108:System/FreeRTOS/queue.c **** 	return xReturn;
1109:System/FreeRTOS/queue.c **** }
1110:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1111:System/FreeRTOS/queue.c **** 
1112:System/FreeRTOS/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1113:System/FreeRTOS/queue.c **** {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 21


1114:System/FreeRTOS/queue.c **** BaseType_t xReturn;
1115:System/FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1116:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
1117:System/FreeRTOS/queue.c **** 
1118:System/FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1119:System/FreeRTOS/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1120:System/FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1121:System/FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1122:System/FreeRTOS/queue.c **** 	post). */
1123:System/FreeRTOS/queue.c **** 
1124:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1125:System/FreeRTOS/queue.c **** 
1126:System/FreeRTOS/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1127:System/FreeRTOS/queue.c **** 	if the item size is not 0. */
1128:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1129:System/FreeRTOS/queue.c **** 
1130:System/FreeRTOS/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1131:System/FreeRTOS/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1132:System/FreeRTOS/queue.c **** 	interrupts, only tasks. */
1133:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
1134:System/FreeRTOS/queue.c **** 
1135:System/FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1136:System/FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1137:System/FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1138:System/FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1139:System/FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1140:System/FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1141:System/FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1142:System/FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1143:System/FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1144:System/FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1145:System/FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1146:System/FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1147:System/FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1148:System/FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1149:System/FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1150:System/FreeRTOS/queue.c **** 
1151:System/FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1152:System/FreeRTOS/queue.c **** 	{
1153:System/FreeRTOS/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1154:System/FreeRTOS/queue.c **** 
1155:System/FreeRTOS/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1156:System/FreeRTOS/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1157:System/FreeRTOS/queue.c **** 		space'. */
1158:System/FreeRTOS/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1159:System/FreeRTOS/queue.c **** 		{
1160:System/FreeRTOS/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1161:System/FreeRTOS/queue.c **** 
1162:System/FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1163:System/FreeRTOS/queue.c **** 
1164:System/FreeRTOS/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1165:System/FreeRTOS/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1166:System/FreeRTOS/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1167:System/FreeRTOS/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1168:System/FreeRTOS/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1169:System/FreeRTOS/queue.c **** 			messages (semaphores) available. */
1170:System/FreeRTOS/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 22


1171:System/FreeRTOS/queue.c **** 
1172:System/FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1173:System/FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
1174:System/FreeRTOS/queue.c **** 			if( cTxLock == queueUNLOCKED )
1175:System/FreeRTOS/queue.c **** 			{
1176:System/FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1177:System/FreeRTOS/queue.c **** 				{
1178:System/FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1179:System/FreeRTOS/queue.c **** 					{
1180:System/FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
1181:System/FreeRTOS/queue.c **** 						{
1182:System/FreeRTOS/queue.c **** 							/* The semaphore is a member of a queue set, and
1183:System/FreeRTOS/queue.c **** 							posting	to the queue set caused a higher priority
1184:System/FreeRTOS/queue.c **** 							task to	unblock.  A context switch is required. */
1185:System/FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1186:System/FreeRTOS/queue.c **** 							{
1187:System/FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1188:System/FreeRTOS/queue.c **** 							}
1189:System/FreeRTOS/queue.c **** 							else
1190:System/FreeRTOS/queue.c **** 							{
1191:System/FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1192:System/FreeRTOS/queue.c **** 							}
1193:System/FreeRTOS/queue.c **** 						}
1194:System/FreeRTOS/queue.c **** 						else
1195:System/FreeRTOS/queue.c **** 						{
1196:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1197:System/FreeRTOS/queue.c **** 						}
1198:System/FreeRTOS/queue.c **** 					}
1199:System/FreeRTOS/queue.c **** 					else
1200:System/FreeRTOS/queue.c **** 					{
1201:System/FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1202:System/FreeRTOS/queue.c **** 						{
1203:System/FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1204:System/FreeRTOS/queue.c **** 							{
1205:System/FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1206:System/FreeRTOS/queue.c **** 								record that a context switch is required. */
1207:System/FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1208:System/FreeRTOS/queue.c **** 								{
1209:System/FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1210:System/FreeRTOS/queue.c **** 								}
1211:System/FreeRTOS/queue.c **** 								else
1212:System/FreeRTOS/queue.c **** 								{
1213:System/FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1214:System/FreeRTOS/queue.c **** 								}
1215:System/FreeRTOS/queue.c **** 							}
1216:System/FreeRTOS/queue.c **** 							else
1217:System/FreeRTOS/queue.c **** 							{
1218:System/FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1219:System/FreeRTOS/queue.c **** 							}
1220:System/FreeRTOS/queue.c **** 						}
1221:System/FreeRTOS/queue.c **** 						else
1222:System/FreeRTOS/queue.c **** 						{
1223:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1224:System/FreeRTOS/queue.c **** 						}
1225:System/FreeRTOS/queue.c **** 					}
1226:System/FreeRTOS/queue.c **** 				}
1227:System/FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 23


1228:System/FreeRTOS/queue.c **** 				{
1229:System/FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1230:System/FreeRTOS/queue.c **** 					{
1231:System/FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1232:System/FreeRTOS/queue.c **** 						{
1233:System/FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1234:System/FreeRTOS/queue.c **** 							context	switch is required. */
1235:System/FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1236:System/FreeRTOS/queue.c **** 							{
1237:System/FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1238:System/FreeRTOS/queue.c **** 							}
1239:System/FreeRTOS/queue.c **** 							else
1240:System/FreeRTOS/queue.c **** 							{
1241:System/FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1242:System/FreeRTOS/queue.c **** 							}
1243:System/FreeRTOS/queue.c **** 						}
1244:System/FreeRTOS/queue.c **** 						else
1245:System/FreeRTOS/queue.c **** 						{
1246:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1247:System/FreeRTOS/queue.c **** 						}
1248:System/FreeRTOS/queue.c **** 					}
1249:System/FreeRTOS/queue.c **** 					else
1250:System/FreeRTOS/queue.c **** 					{
1251:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1252:System/FreeRTOS/queue.c **** 					}
1253:System/FreeRTOS/queue.c **** 				}
1254:System/FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1255:System/FreeRTOS/queue.c **** 			}
1256:System/FreeRTOS/queue.c **** 			else
1257:System/FreeRTOS/queue.c **** 			{
1258:System/FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1259:System/FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
1260:System/FreeRTOS/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1261:System/FreeRTOS/queue.c **** 			}
1262:System/FreeRTOS/queue.c **** 
1263:System/FreeRTOS/queue.c **** 			xReturn = pdPASS;
1264:System/FreeRTOS/queue.c **** 		}
1265:System/FreeRTOS/queue.c **** 		else
1266:System/FreeRTOS/queue.c **** 		{
1267:System/FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1268:System/FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
1269:System/FreeRTOS/queue.c **** 		}
1270:System/FreeRTOS/queue.c **** 	}
1271:System/FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1272:System/FreeRTOS/queue.c **** 
1273:System/FreeRTOS/queue.c **** 	return xReturn;
1274:System/FreeRTOS/queue.c **** }
1275:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1276:System/FreeRTOS/queue.c **** 
1277:System/FreeRTOS/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1278:System/FreeRTOS/queue.c **** {
1279:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1280:System/FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1281:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
1282:System/FreeRTOS/queue.c **** 
1283:System/FreeRTOS/queue.c **** 	/* Check the pointer is not NULL. */
1284:System/FreeRTOS/queue.c **** 	configASSERT( ( pxQueue ) );
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 24


1285:System/FreeRTOS/queue.c **** 
1286:System/FreeRTOS/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1287:System/FreeRTOS/queue.c **** 	is zero (so no data is copied into the buffer. */
1288:System/FreeRTOS/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1289:System/FreeRTOS/queue.c **** 
1290:System/FreeRTOS/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1291:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1292:System/FreeRTOS/queue.c **** 	{
1293:System/FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1294:System/FreeRTOS/queue.c **** 	}
1295:System/FreeRTOS/queue.c **** 	#endif
1296:System/FreeRTOS/queue.c **** 
1297:System/FreeRTOS/queue.c **** 
1298:System/FreeRTOS/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1299:System/FreeRTOS/queue.c **** 	allow return statements within the function itself.  This is done in the
1300:System/FreeRTOS/queue.c **** 	interest of execution time efficiency. */
1301:System/FreeRTOS/queue.c **** 	for( ;; )
1302:System/FreeRTOS/queue.c **** 	{
1303:System/FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1304:System/FreeRTOS/queue.c **** 		{
1305:System/FreeRTOS/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1306:System/FreeRTOS/queue.c **** 
1307:System/FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1308:System/FreeRTOS/queue.c **** 			must be the highest priority task wanting to access the queue. */
1309:System/FreeRTOS/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1310:System/FreeRTOS/queue.c **** 			{
1311:System/FreeRTOS/queue.c **** 				/* Data available, remove one item. */
1312:System/FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1313:System/FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1314:System/FreeRTOS/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1315:System/FreeRTOS/queue.c **** 
1316:System/FreeRTOS/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1317:System/FreeRTOS/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1318:System/FreeRTOS/queue.c **** 				task. */
1319:System/FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1320:System/FreeRTOS/queue.c **** 				{
1321:System/FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1322:System/FreeRTOS/queue.c **** 					{
1323:System/FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1324:System/FreeRTOS/queue.c **** 					}
1325:System/FreeRTOS/queue.c **** 					else
1326:System/FreeRTOS/queue.c **** 					{
1327:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1328:System/FreeRTOS/queue.c **** 					}
1329:System/FreeRTOS/queue.c **** 				}
1330:System/FreeRTOS/queue.c **** 				else
1331:System/FreeRTOS/queue.c **** 				{
1332:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1333:System/FreeRTOS/queue.c **** 				}
1334:System/FreeRTOS/queue.c **** 
1335:System/FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1336:System/FreeRTOS/queue.c **** 				return pdPASS;
1337:System/FreeRTOS/queue.c **** 			}
1338:System/FreeRTOS/queue.c **** 			else
1339:System/FreeRTOS/queue.c **** 			{
1340:System/FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1341:System/FreeRTOS/queue.c **** 				{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 25


1342:System/FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1343:System/FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1344:System/FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1345:System/FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1346:System/FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1347:System/FreeRTOS/queue.c **** 				}
1348:System/FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1349:System/FreeRTOS/queue.c **** 				{
1350:System/FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1351:System/FreeRTOS/queue.c **** 					configure the timeout structure. */
1352:System/FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1353:System/FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1354:System/FreeRTOS/queue.c **** 				}
1355:System/FreeRTOS/queue.c **** 				else
1356:System/FreeRTOS/queue.c **** 				{
1357:System/FreeRTOS/queue.c **** 					/* Entry time was already set. */
1358:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1359:System/FreeRTOS/queue.c **** 				}
1360:System/FreeRTOS/queue.c **** 			}
1361:System/FreeRTOS/queue.c **** 		}
1362:System/FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1363:System/FreeRTOS/queue.c **** 
1364:System/FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1365:System/FreeRTOS/queue.c **** 		now the critical section has been exited. */
1366:System/FreeRTOS/queue.c **** 
1367:System/FreeRTOS/queue.c **** 		vTaskSuspendAll();
1368:System/FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1369:System/FreeRTOS/queue.c **** 
1370:System/FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1371:System/FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1372:System/FreeRTOS/queue.c **** 		{
1373:System/FreeRTOS/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1374:System/FreeRTOS/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1375:System/FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1376:System/FreeRTOS/queue.c **** 			{
1377:System/FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1378:System/FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1379:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1380:System/FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1381:System/FreeRTOS/queue.c **** 				{
1382:System/FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1383:System/FreeRTOS/queue.c **** 				}
1384:System/FreeRTOS/queue.c **** 				else
1385:System/FreeRTOS/queue.c **** 				{
1386:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1387:System/FreeRTOS/queue.c **** 				}
1388:System/FreeRTOS/queue.c **** 			}
1389:System/FreeRTOS/queue.c **** 			else
1390:System/FreeRTOS/queue.c **** 			{
1391:System/FreeRTOS/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1392:System/FreeRTOS/queue.c **** 				data. */
1393:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1394:System/FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1395:System/FreeRTOS/queue.c **** 			}
1396:System/FreeRTOS/queue.c **** 		}
1397:System/FreeRTOS/queue.c **** 		else
1398:System/FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 26


1399:System/FreeRTOS/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1400:System/FreeRTOS/queue.c **** 			back and attempt to read the data. */
1401:System/FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1402:System/FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1403:System/FreeRTOS/queue.c **** 
1404:System/FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1405:System/FreeRTOS/queue.c **** 			{
1406:System/FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1407:System/FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
1408:System/FreeRTOS/queue.c **** 			}
1409:System/FreeRTOS/queue.c **** 			else
1410:System/FreeRTOS/queue.c **** 			{
1411:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1412:System/FreeRTOS/queue.c **** 			}
1413:System/FreeRTOS/queue.c **** 		}
1414:System/FreeRTOS/queue.c **** 	} /*lint -restore */
1415:System/FreeRTOS/queue.c **** }
1416:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1417:System/FreeRTOS/queue.c **** 
1418:System/FreeRTOS/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1419:System/FreeRTOS/queue.c **** {
1420:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1421:System/FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1422:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
1423:System/FreeRTOS/queue.c **** 
1424:System/FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
1425:System/FreeRTOS/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1426:System/FreeRTOS/queue.c **** #endif
1427:System/FreeRTOS/queue.c **** 
1428:System/FreeRTOS/queue.c **** 	/* Check the queue pointer is not NULL. */
1429:System/FreeRTOS/queue.c **** 	configASSERT( ( pxQueue ) );
1430:System/FreeRTOS/queue.c **** 
1431:System/FreeRTOS/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1432:System/FreeRTOS/queue.c **** 	0. */
1433:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1434:System/FreeRTOS/queue.c **** 
1435:System/FreeRTOS/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1436:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1437:System/FreeRTOS/queue.c **** 	{
1438:System/FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1439:System/FreeRTOS/queue.c **** 	}
1440:System/FreeRTOS/queue.c **** 	#endif
1441:System/FreeRTOS/queue.c **** 
1442:System/FreeRTOS/queue.c **** 
1443:System/FreeRTOS/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1444:System/FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1445:System/FreeRTOS/queue.c **** 	of execution time efficiency. */
1446:System/FreeRTOS/queue.c **** 	for( ;; )
1447:System/FreeRTOS/queue.c **** 	{
1448:System/FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1449:System/FreeRTOS/queue.c **** 		{
1450:System/FreeRTOS/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1451:System/FreeRTOS/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1452:System/FreeRTOS/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1453:System/FreeRTOS/queue.c **** 
1454:System/FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1455:System/FreeRTOS/queue.c **** 			must be the highest priority task wanting to access the queue. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 27


1456:System/FreeRTOS/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1457:System/FreeRTOS/queue.c **** 			{
1458:System/FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1459:System/FreeRTOS/queue.c **** 
1460:System/FreeRTOS/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1461:System/FreeRTOS/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1462:System/FreeRTOS/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1463:System/FreeRTOS/queue.c **** 
1464:System/FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1465:System/FreeRTOS/queue.c **** 				{
1466:System/FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1467:System/FreeRTOS/queue.c **** 					{
1468:System/FreeRTOS/queue.c **** 						/* Record the information required to implement
1469:System/FreeRTOS/queue.c **** 						priority inheritance should it become necessary. */
1470:System/FreeRTOS/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1471:System/FreeRTOS/queue.c **** 					}
1472:System/FreeRTOS/queue.c **** 					else
1473:System/FreeRTOS/queue.c **** 					{
1474:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1475:System/FreeRTOS/queue.c **** 					}
1476:System/FreeRTOS/queue.c **** 				}
1477:System/FreeRTOS/queue.c **** 				#endif /* configUSE_MUTEXES */
1478:System/FreeRTOS/queue.c **** 
1479:System/FreeRTOS/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1480:System/FreeRTOS/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1481:System/FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1482:System/FreeRTOS/queue.c **** 				{
1483:System/FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1484:System/FreeRTOS/queue.c **** 					{
1485:System/FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1486:System/FreeRTOS/queue.c **** 					}
1487:System/FreeRTOS/queue.c **** 					else
1488:System/FreeRTOS/queue.c **** 					{
1489:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1490:System/FreeRTOS/queue.c **** 					}
1491:System/FreeRTOS/queue.c **** 				}
1492:System/FreeRTOS/queue.c **** 				else
1493:System/FreeRTOS/queue.c **** 				{
1494:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1495:System/FreeRTOS/queue.c **** 				}
1496:System/FreeRTOS/queue.c **** 
1497:System/FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1498:System/FreeRTOS/queue.c **** 				return pdPASS;
1499:System/FreeRTOS/queue.c **** 			}
1500:System/FreeRTOS/queue.c **** 			else
1501:System/FreeRTOS/queue.c **** 			{
1502:System/FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1503:System/FreeRTOS/queue.c **** 				{
1504:System/FreeRTOS/queue.c **** 					/* For inheritance to have occurred there must have been an
1505:System/FreeRTOS/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1506:System/FreeRTOS/queue.c **** 					if it were 0 the function would have exited. */
1507:System/FreeRTOS/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1508:System/FreeRTOS/queue.c **** 					{
1509:System/FreeRTOS/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1510:System/FreeRTOS/queue.c **** 					}
1511:System/FreeRTOS/queue.c **** 					#endif /* configUSE_MUTEXES */
1512:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 28


1513:System/FreeRTOS/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1514:System/FreeRTOS/queue.c **** 					(or the block time has expired) so exit now. */
1515:System/FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1516:System/FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1517:System/FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1518:System/FreeRTOS/queue.c **** 				}
1519:System/FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1520:System/FreeRTOS/queue.c **** 				{
1521:System/FreeRTOS/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1522:System/FreeRTOS/queue.c **** 					so configure the timeout structure ready to block. */
1523:System/FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1524:System/FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1525:System/FreeRTOS/queue.c **** 				}
1526:System/FreeRTOS/queue.c **** 				else
1527:System/FreeRTOS/queue.c **** 				{
1528:System/FreeRTOS/queue.c **** 					/* Entry time was already set. */
1529:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1530:System/FreeRTOS/queue.c **** 				}
1531:System/FreeRTOS/queue.c **** 			}
1532:System/FreeRTOS/queue.c **** 		}
1533:System/FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1534:System/FreeRTOS/queue.c **** 
1535:System/FreeRTOS/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1536:System/FreeRTOS/queue.c **** 		now the critical section has been exited. */
1537:System/FreeRTOS/queue.c **** 
1538:System/FreeRTOS/queue.c **** 		vTaskSuspendAll();
1539:System/FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1540:System/FreeRTOS/queue.c **** 
1541:System/FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1542:System/FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1543:System/FreeRTOS/queue.c **** 		{
1544:System/FreeRTOS/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1545:System/FreeRTOS/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1546:System/FreeRTOS/queue.c **** 			become available.  As semaphores are implemented with queues the
1547:System/FreeRTOS/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1548:System/FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1549:System/FreeRTOS/queue.c **** 			{
1550:System/FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1551:System/FreeRTOS/queue.c **** 
1552:System/FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1553:System/FreeRTOS/queue.c **** 				{
1554:System/FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1555:System/FreeRTOS/queue.c **** 					{
1556:System/FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
1557:System/FreeRTOS/queue.c **** 						{
1558:System/FreeRTOS/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
1559:System/FreeRTOS/queue.c **** 						}
1560:System/FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
1561:System/FreeRTOS/queue.c **** 					}
1562:System/FreeRTOS/queue.c **** 					else
1563:System/FreeRTOS/queue.c **** 					{
1564:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1565:System/FreeRTOS/queue.c **** 					}
1566:System/FreeRTOS/queue.c **** 				}
1567:System/FreeRTOS/queue.c **** 				#endif
1568:System/FreeRTOS/queue.c **** 
1569:System/FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 29


1570:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1571:System/FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1572:System/FreeRTOS/queue.c **** 				{
1573:System/FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1574:System/FreeRTOS/queue.c **** 				}
1575:System/FreeRTOS/queue.c **** 				else
1576:System/FreeRTOS/queue.c **** 				{
1577:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1578:System/FreeRTOS/queue.c **** 				}
1579:System/FreeRTOS/queue.c **** 			}
1580:System/FreeRTOS/queue.c **** 			else
1581:System/FreeRTOS/queue.c **** 			{
1582:System/FreeRTOS/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1583:System/FreeRTOS/queue.c **** 				attempt to take the semaphore again. */
1584:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1585:System/FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1586:System/FreeRTOS/queue.c **** 			}
1587:System/FreeRTOS/queue.c **** 		}
1588:System/FreeRTOS/queue.c **** 		else
1589:System/FreeRTOS/queue.c **** 		{
1590:System/FreeRTOS/queue.c **** 			/* Timed out. */
1591:System/FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1592:System/FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1593:System/FreeRTOS/queue.c **** 
1594:System/FreeRTOS/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1595:System/FreeRTOS/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1596:System/FreeRTOS/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1597:System/FreeRTOS/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1598:System/FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1599:System/FreeRTOS/queue.c **** 			{
1600:System/FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1601:System/FreeRTOS/queue.c **** 				{
1602:System/FreeRTOS/queue.c **** 					/* xInheritanceOccurred could only have be set if
1603:System/FreeRTOS/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1604:System/FreeRTOS/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1605:System/FreeRTOS/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1606:System/FreeRTOS/queue.c **** 					{
1607:System/FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
1608:System/FreeRTOS/queue.c **** 						{
1609:System/FreeRTOS/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1610:System/FreeRTOS/queue.c **** 
1611:System/FreeRTOS/queue.c **** 							/* This task blocking on the mutex caused another
1612:System/FreeRTOS/queue.c **** 							task to inherit this task's priority.  Now this task
1613:System/FreeRTOS/queue.c **** 							has timed out the priority should be disinherited
1614:System/FreeRTOS/queue.c **** 							again, but only as low as the next highest priority
1615:System/FreeRTOS/queue.c **** 							task that is waiting for the same mutex. */
1616:System/FreeRTOS/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1617:System/FreeRTOS/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
1618:System/FreeRTOS/queue.c **** 						}
1619:System/FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
1620:System/FreeRTOS/queue.c **** 					}
1621:System/FreeRTOS/queue.c **** 				}
1622:System/FreeRTOS/queue.c **** 				#endif /* configUSE_MUTEXES */
1623:System/FreeRTOS/queue.c **** 
1624:System/FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1625:System/FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
1626:System/FreeRTOS/queue.c **** 			}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 30


1627:System/FreeRTOS/queue.c **** 			else
1628:System/FreeRTOS/queue.c **** 			{
1629:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1630:System/FreeRTOS/queue.c **** 			}
1631:System/FreeRTOS/queue.c **** 		}
1632:System/FreeRTOS/queue.c **** 	} /*lint -restore */
1633:System/FreeRTOS/queue.c **** }
1634:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1635:System/FreeRTOS/queue.c **** 
1636:System/FreeRTOS/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1637:System/FreeRTOS/queue.c **** {
1638:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1639:System/FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1640:System/FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1641:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
1642:System/FreeRTOS/queue.c **** 
1643:System/FreeRTOS/queue.c **** 	/* Check the pointer is not NULL. */
1644:System/FreeRTOS/queue.c **** 	configASSERT( ( pxQueue ) );
1645:System/FreeRTOS/queue.c **** 
1646:System/FreeRTOS/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1647:System/FreeRTOS/queue.c **** 	is zero (so no data is copied into the buffer. */
1648:System/FreeRTOS/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1649:System/FreeRTOS/queue.c **** 
1650:System/FreeRTOS/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1651:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1652:System/FreeRTOS/queue.c **** 	{
1653:System/FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1654:System/FreeRTOS/queue.c **** 	}
1655:System/FreeRTOS/queue.c **** 	#endif
1656:System/FreeRTOS/queue.c **** 
1657:System/FreeRTOS/queue.c **** 
1658:System/FreeRTOS/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1659:System/FreeRTOS/queue.c **** 	allow return statements within the function itself.  This is done in the
1660:System/FreeRTOS/queue.c **** 	interest of execution time efficiency. */
1661:System/FreeRTOS/queue.c **** 	for( ;; )
1662:System/FreeRTOS/queue.c **** 	{
1663:System/FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1664:System/FreeRTOS/queue.c **** 		{
1665:System/FreeRTOS/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1666:System/FreeRTOS/queue.c **** 
1667:System/FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1668:System/FreeRTOS/queue.c **** 			must be the highest priority task wanting to access the queue. */
1669:System/FreeRTOS/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1670:System/FreeRTOS/queue.c **** 			{
1671:System/FreeRTOS/queue.c **** 				/* Remember the read position so it can be reset after the data
1672:System/FreeRTOS/queue.c **** 				is read from the queue as this function is only peeking the
1673:System/FreeRTOS/queue.c **** 				data, not removing it. */
1674:System/FreeRTOS/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1675:System/FreeRTOS/queue.c **** 
1676:System/FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1677:System/FreeRTOS/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1678:System/FreeRTOS/queue.c **** 
1679:System/FreeRTOS/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1680:System/FreeRTOS/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1681:System/FreeRTOS/queue.c **** 
1682:System/FreeRTOS/queue.c **** 				/* The data is being left in the queue, so see if there are
1683:System/FreeRTOS/queue.c **** 				any other tasks waiting for the data. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 31


1684:System/FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1685:System/FreeRTOS/queue.c **** 				{
1686:System/FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1687:System/FreeRTOS/queue.c **** 					{
1688:System/FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than this task. */
1689:System/FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1690:System/FreeRTOS/queue.c **** 					}
1691:System/FreeRTOS/queue.c **** 					else
1692:System/FreeRTOS/queue.c **** 					{
1693:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1694:System/FreeRTOS/queue.c **** 					}
1695:System/FreeRTOS/queue.c **** 				}
1696:System/FreeRTOS/queue.c **** 				else
1697:System/FreeRTOS/queue.c **** 				{
1698:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1699:System/FreeRTOS/queue.c **** 				}
1700:System/FreeRTOS/queue.c **** 
1701:System/FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1702:System/FreeRTOS/queue.c **** 				return pdPASS;
1703:System/FreeRTOS/queue.c **** 			}
1704:System/FreeRTOS/queue.c **** 			else
1705:System/FreeRTOS/queue.c **** 			{
1706:System/FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1707:System/FreeRTOS/queue.c **** 				{
1708:System/FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1709:System/FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1710:System/FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1711:System/FreeRTOS/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1712:System/FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1713:System/FreeRTOS/queue.c **** 				}
1714:System/FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1715:System/FreeRTOS/queue.c **** 				{
1716:System/FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1717:System/FreeRTOS/queue.c **** 					configure the timeout structure ready to enter the blocked
1718:System/FreeRTOS/queue.c **** 					state. */
1719:System/FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1720:System/FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1721:System/FreeRTOS/queue.c **** 				}
1722:System/FreeRTOS/queue.c **** 				else
1723:System/FreeRTOS/queue.c **** 				{
1724:System/FreeRTOS/queue.c **** 					/* Entry time was already set. */
1725:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1726:System/FreeRTOS/queue.c **** 				}
1727:System/FreeRTOS/queue.c **** 			}
1728:System/FreeRTOS/queue.c **** 		}
1729:System/FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1730:System/FreeRTOS/queue.c **** 
1731:System/FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1732:System/FreeRTOS/queue.c **** 		now the critical section has been exited. */
1733:System/FreeRTOS/queue.c **** 
1734:System/FreeRTOS/queue.c **** 		vTaskSuspendAll();
1735:System/FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1736:System/FreeRTOS/queue.c **** 
1737:System/FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1738:System/FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1739:System/FreeRTOS/queue.c **** 		{
1740:System/FreeRTOS/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 32


1741:System/FreeRTOS/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1742:System/FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1743:System/FreeRTOS/queue.c **** 			{
1744:System/FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1745:System/FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1746:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1747:System/FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1748:System/FreeRTOS/queue.c **** 				{
1749:System/FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1750:System/FreeRTOS/queue.c **** 				}
1751:System/FreeRTOS/queue.c **** 				else
1752:System/FreeRTOS/queue.c **** 				{
1753:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1754:System/FreeRTOS/queue.c **** 				}
1755:System/FreeRTOS/queue.c **** 			}
1756:System/FreeRTOS/queue.c **** 			else
1757:System/FreeRTOS/queue.c **** 			{
1758:System/FreeRTOS/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1759:System/FreeRTOS/queue.c **** 				state, instead return to try and obtain the data. */
1760:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1761:System/FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1762:System/FreeRTOS/queue.c **** 			}
1763:System/FreeRTOS/queue.c **** 		}
1764:System/FreeRTOS/queue.c **** 		else
1765:System/FreeRTOS/queue.c **** 		{
1766:System/FreeRTOS/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1767:System/FreeRTOS/queue.c **** 			exit, otherwise go back and try to read the data again. */
1768:System/FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1769:System/FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1770:System/FreeRTOS/queue.c **** 
1771:System/FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1772:System/FreeRTOS/queue.c **** 			{
1773:System/FreeRTOS/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1774:System/FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
1775:System/FreeRTOS/queue.c **** 			}
1776:System/FreeRTOS/queue.c **** 			else
1777:System/FreeRTOS/queue.c **** 			{
1778:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1779:System/FreeRTOS/queue.c **** 			}
1780:System/FreeRTOS/queue.c **** 		}
1781:System/FreeRTOS/queue.c **** 	} /*lint -restore */
1782:System/FreeRTOS/queue.c **** }
1783:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1784:System/FreeRTOS/queue.c **** 
1785:System/FreeRTOS/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1786:System/FreeRTOS/queue.c **** {
1787:System/FreeRTOS/queue.c **** BaseType_t xReturn;
1788:System/FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1789:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
1790:System/FreeRTOS/queue.c **** 
1791:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1792:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1793:System/FreeRTOS/queue.c **** 
1794:System/FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1795:System/FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1796:System/FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1797:System/FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 33


1798:System/FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1799:System/FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1800:System/FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1801:System/FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1802:System/FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1803:System/FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1804:System/FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1805:System/FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1806:System/FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1807:System/FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1808:System/FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1809:System/FreeRTOS/queue.c **** 
1810:System/FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1811:System/FreeRTOS/queue.c **** 	{
1812:System/FreeRTOS/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1813:System/FreeRTOS/queue.c **** 
1814:System/FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1815:System/FreeRTOS/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1816:System/FreeRTOS/queue.c **** 		{
1817:System/FreeRTOS/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1818:System/FreeRTOS/queue.c **** 
1819:System/FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1820:System/FreeRTOS/queue.c **** 
1821:System/FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1822:System/FreeRTOS/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1823:System/FreeRTOS/queue.c **** 
1824:System/FreeRTOS/queue.c **** 			/* If the queue is locked the event list will not be modified.
1825:System/FreeRTOS/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1826:System/FreeRTOS/queue.c **** 			will know that an ISR has removed data while the queue was
1827:System/FreeRTOS/queue.c **** 			locked. */
1828:System/FreeRTOS/queue.c **** 			if( cRxLock == queueUNLOCKED )
1829:System/FreeRTOS/queue.c **** 			{
1830:System/FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1831:System/FreeRTOS/queue.c **** 				{
1832:System/FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1833:System/FreeRTOS/queue.c **** 					{
1834:System/FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than us so
1835:System/FreeRTOS/queue.c **** 						force a context switch. */
1836:System/FreeRTOS/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1837:System/FreeRTOS/queue.c **** 						{
1838:System/FreeRTOS/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1839:System/FreeRTOS/queue.c **** 						}
1840:System/FreeRTOS/queue.c **** 						else
1841:System/FreeRTOS/queue.c **** 						{
1842:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:System/FreeRTOS/queue.c **** 						}
1844:System/FreeRTOS/queue.c **** 					}
1845:System/FreeRTOS/queue.c **** 					else
1846:System/FreeRTOS/queue.c **** 					{
1847:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1848:System/FreeRTOS/queue.c **** 					}
1849:System/FreeRTOS/queue.c **** 				}
1850:System/FreeRTOS/queue.c **** 				else
1851:System/FreeRTOS/queue.c **** 				{
1852:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1853:System/FreeRTOS/queue.c **** 				}
1854:System/FreeRTOS/queue.c **** 			}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 34


1855:System/FreeRTOS/queue.c **** 			else
1856:System/FreeRTOS/queue.c **** 			{
1857:System/FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1858:System/FreeRTOS/queue.c **** 				knows that data was removed while it was locked. */
1859:System/FreeRTOS/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1860:System/FreeRTOS/queue.c **** 			}
1861:System/FreeRTOS/queue.c **** 
1862:System/FreeRTOS/queue.c **** 			xReturn = pdPASS;
1863:System/FreeRTOS/queue.c **** 		}
1864:System/FreeRTOS/queue.c **** 		else
1865:System/FreeRTOS/queue.c **** 		{
1866:System/FreeRTOS/queue.c **** 			xReturn = pdFAIL;
1867:System/FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1868:System/FreeRTOS/queue.c **** 		}
1869:System/FreeRTOS/queue.c **** 	}
1870:System/FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1871:System/FreeRTOS/queue.c **** 
1872:System/FreeRTOS/queue.c **** 	return xReturn;
1873:System/FreeRTOS/queue.c **** }
1874:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1875:System/FreeRTOS/queue.c **** 
1876:System/FreeRTOS/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1877:System/FreeRTOS/queue.c **** {
1878:System/FreeRTOS/queue.c **** BaseType_t xReturn;
1879:System/FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1880:System/FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1881:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
1882:System/FreeRTOS/queue.c **** 
1883:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1884:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1885:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1886:System/FreeRTOS/queue.c **** 
1887:System/FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1888:System/FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1889:System/FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1890:System/FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1891:System/FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1892:System/FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1893:System/FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1894:System/FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1895:System/FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1896:System/FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1897:System/FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1898:System/FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1899:System/FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1900:System/FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1901:System/FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1902:System/FreeRTOS/queue.c **** 
1903:System/FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1904:System/FreeRTOS/queue.c **** 	{
1905:System/FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1906:System/FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1907:System/FreeRTOS/queue.c **** 		{
1908:System/FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1909:System/FreeRTOS/queue.c **** 
1910:System/FreeRTOS/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1911:System/FreeRTOS/queue.c **** 			actually being removed from the queue. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 35


1912:System/FreeRTOS/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1913:System/FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1914:System/FreeRTOS/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1915:System/FreeRTOS/queue.c **** 
1916:System/FreeRTOS/queue.c **** 			xReturn = pdPASS;
1917:System/FreeRTOS/queue.c **** 		}
1918:System/FreeRTOS/queue.c **** 		else
1919:System/FreeRTOS/queue.c **** 		{
1920:System/FreeRTOS/queue.c **** 			xReturn = pdFAIL;
1921:System/FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1922:System/FreeRTOS/queue.c **** 		}
1923:System/FreeRTOS/queue.c **** 	}
1924:System/FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1925:System/FreeRTOS/queue.c **** 
1926:System/FreeRTOS/queue.c **** 	return xReturn;
1927:System/FreeRTOS/queue.c **** }
1928:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1929:System/FreeRTOS/queue.c **** 
1930:System/FreeRTOS/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1931:System/FreeRTOS/queue.c **** {
1932:System/FreeRTOS/queue.c **** UBaseType_t uxReturn;
1933:System/FreeRTOS/queue.c **** 
1934:System/FreeRTOS/queue.c **** 	configASSERT( xQueue );
1935:System/FreeRTOS/queue.c **** 
1936:System/FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1937:System/FreeRTOS/queue.c **** 	{
1938:System/FreeRTOS/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1939:System/FreeRTOS/queue.c **** 	}
1940:System/FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1941:System/FreeRTOS/queue.c **** 
1942:System/FreeRTOS/queue.c **** 	return uxReturn;
1943:System/FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1944:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1945:System/FreeRTOS/queue.c **** 
1946:System/FreeRTOS/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1947:System/FreeRTOS/queue.c **** {
1948:System/FreeRTOS/queue.c **** UBaseType_t uxReturn;
1949:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
1950:System/FreeRTOS/queue.c **** 
1951:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1952:System/FreeRTOS/queue.c **** 
1953:System/FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1954:System/FreeRTOS/queue.c **** 	{
1955:System/FreeRTOS/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1956:System/FreeRTOS/queue.c **** 	}
1957:System/FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1958:System/FreeRTOS/queue.c **** 
1959:System/FreeRTOS/queue.c **** 	return uxReturn;
1960:System/FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1961:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1962:System/FreeRTOS/queue.c **** 
1963:System/FreeRTOS/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1964:System/FreeRTOS/queue.c **** {
1965:System/FreeRTOS/queue.c **** UBaseType_t uxReturn;
1966:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
1967:System/FreeRTOS/queue.c **** 
1968:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 36


1969:System/FreeRTOS/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1970:System/FreeRTOS/queue.c **** 
1971:System/FreeRTOS/queue.c **** 	return uxReturn;
1972:System/FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1973:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1974:System/FreeRTOS/queue.c **** 
1975:System/FreeRTOS/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1976:System/FreeRTOS/queue.c **** {
1977:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
1978:System/FreeRTOS/queue.c **** 
1979:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1980:System/FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1981:System/FreeRTOS/queue.c **** 
1982:System/FreeRTOS/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1983:System/FreeRTOS/queue.c **** 	{
1984:System/FreeRTOS/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1985:System/FreeRTOS/queue.c **** 	}
1986:System/FreeRTOS/queue.c **** 	#endif
1987:System/FreeRTOS/queue.c **** 
1988:System/FreeRTOS/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1989:System/FreeRTOS/queue.c **** 	{
1990:System/FreeRTOS/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1991:System/FreeRTOS/queue.c **** 		again. */
1992:System/FreeRTOS/queue.c **** 		vPortFree( pxQueue );
1993:System/FreeRTOS/queue.c **** 	}
1994:System/FreeRTOS/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1995:System/FreeRTOS/queue.c **** 	{
1996:System/FreeRTOS/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1997:System/FreeRTOS/queue.c **** 		check before attempting to free the memory. */
1998:System/FreeRTOS/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1999:System/FreeRTOS/queue.c **** 		{
2000:System/FreeRTOS/queue.c **** 			vPortFree( pxQueue );
2001:System/FreeRTOS/queue.c **** 		}
2002:System/FreeRTOS/queue.c **** 		else
2003:System/FreeRTOS/queue.c **** 		{
2004:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2005:System/FreeRTOS/queue.c **** 		}
2006:System/FreeRTOS/queue.c **** 	}
2007:System/FreeRTOS/queue.c **** 	#else
2008:System/FreeRTOS/queue.c **** 	{
2009:System/FreeRTOS/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2010:System/FreeRTOS/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2011:System/FreeRTOS/queue.c **** 		( void ) pxQueue;
2012:System/FreeRTOS/queue.c **** 	}
2013:System/FreeRTOS/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2014:System/FreeRTOS/queue.c **** }
2015:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2016:System/FreeRTOS/queue.c **** 
2017:System/FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2018:System/FreeRTOS/queue.c **** 
2019:System/FreeRTOS/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2020:System/FreeRTOS/queue.c **** 	{
2021:System/FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2022:System/FreeRTOS/queue.c **** 	}
2023:System/FreeRTOS/queue.c **** 
2024:System/FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2025:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 37


2026:System/FreeRTOS/queue.c **** 
2027:System/FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2028:System/FreeRTOS/queue.c **** 
2029:System/FreeRTOS/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2030:System/FreeRTOS/queue.c **** 	{
2031:System/FreeRTOS/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2032:System/FreeRTOS/queue.c **** 	}
2033:System/FreeRTOS/queue.c **** 
2034:System/FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2035:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2036:System/FreeRTOS/queue.c **** 
2037:System/FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2038:System/FreeRTOS/queue.c **** 
2039:System/FreeRTOS/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2040:System/FreeRTOS/queue.c **** 	{
2041:System/FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2042:System/FreeRTOS/queue.c **** 	}
2043:System/FreeRTOS/queue.c **** 
2044:System/FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2045:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2046:System/FreeRTOS/queue.c **** 
2047:System/FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
2048:System/FreeRTOS/queue.c **** 
2049:System/FreeRTOS/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2050:System/FreeRTOS/queue.c **** 	{
  29              		.loc 1 2050 2 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 2050 2 is_stmt 0 view .LVU1
  35 0000 0346     		mov	r3, r0
2051:System/FreeRTOS/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
  36              		.loc 1 2051 2 is_stmt 1 view .LVU2
2052:System/FreeRTOS/queue.c **** 
2053:System/FreeRTOS/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2054:System/FreeRTOS/queue.c **** 		priority, but the waiting task times out, then the holder should
2055:System/FreeRTOS/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2056:System/FreeRTOS/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2057:System/FreeRTOS/queue.c **** 		return the priority of the highest priority task that is waiting for the
2058:System/FreeRTOS/queue.c **** 		mutex. */
2059:System/FreeRTOS/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  37              		.loc 1 2059 3 view .LVU3
  38              		.loc 1 2059 7 is_stmt 0 view .LVU4
  39 0002 406A     		ldr	r0, [r0, #36]
  40              	.LVL1:
  41              		.loc 1 2059 5 view .LVU5
  42 0004 18B1     		cbz	r0, .L1
2060:System/FreeRTOS/queue.c **** 		{
2061:System/FreeRTOS/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
  43              		.loc 1 2061 4 is_stmt 1 view .LVU6
  44              		.loc 1 2061 93 is_stmt 0 view .LVU7
  45 0006 1B6B     		ldr	r3, [r3, #48]
  46              	.LVL2:
  47              		.loc 1 2061 93 view .LVU8
  48 0008 1868     		ldr	r0, [r3]
  49              		.loc 1 2061 36 view .LVU9
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 38


  50 000a C0F10500 		rsb	r0, r0, #5
  51              	.LVL3:
2062:System/FreeRTOS/queue.c **** 		}
2063:System/FreeRTOS/queue.c **** 		else
2064:System/FreeRTOS/queue.c **** 		{
2065:System/FreeRTOS/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
2066:System/FreeRTOS/queue.c **** 		}
2067:System/FreeRTOS/queue.c **** 
2068:System/FreeRTOS/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
  52              		.loc 1 2068 3 is_stmt 1 view .LVU10
  53              	.L1:
2069:System/FreeRTOS/queue.c **** 	}
  54              		.loc 1 2069 2 is_stmt 0 view .LVU11
  55 000e 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE29:
  59              		.section	.text.prvIsQueueFull,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	prvIsQueueFull:
  66              	.LVL4:
  67              	.LFB35:
2070:System/FreeRTOS/queue.c **** 
2071:System/FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
2072:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2073:System/FreeRTOS/queue.c **** 
2074:System/FreeRTOS/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2075:System/FreeRTOS/queue.c **** {
2076:System/FreeRTOS/queue.c **** BaseType_t xReturn = pdFALSE;
2077:System/FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
2078:System/FreeRTOS/queue.c **** 
2079:System/FreeRTOS/queue.c **** 	/* This function is called from a critical section. */
2080:System/FreeRTOS/queue.c **** 
2081:System/FreeRTOS/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2082:System/FreeRTOS/queue.c **** 
2083:System/FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2084:System/FreeRTOS/queue.c **** 	{
2085:System/FreeRTOS/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2086:System/FreeRTOS/queue.c **** 		{
2087:System/FreeRTOS/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2088:System/FreeRTOS/queue.c **** 			{
2089:System/FreeRTOS/queue.c **** 				/* The mutex is no longer being held. */
2090:System/FreeRTOS/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2091:System/FreeRTOS/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
2092:System/FreeRTOS/queue.c **** 			}
2093:System/FreeRTOS/queue.c **** 			else
2094:System/FreeRTOS/queue.c **** 			{
2095:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2096:System/FreeRTOS/queue.c **** 			}
2097:System/FreeRTOS/queue.c **** 		}
2098:System/FreeRTOS/queue.c **** 		#endif /* configUSE_MUTEXES */
2099:System/FreeRTOS/queue.c **** 	}
2100:System/FreeRTOS/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2101:System/FreeRTOS/queue.c **** 	{
2102:System/FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 39


2103:System/FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
2104:System/FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
2105:System/FreeRTOS/queue.c **** 		{
2106:System/FreeRTOS/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2107:System/FreeRTOS/queue.c **** 		}
2108:System/FreeRTOS/queue.c **** 		else
2109:System/FreeRTOS/queue.c **** 		{
2110:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2111:System/FreeRTOS/queue.c **** 		}
2112:System/FreeRTOS/queue.c **** 	}
2113:System/FreeRTOS/queue.c **** 	else
2114:System/FreeRTOS/queue.c **** 	{
2115:System/FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
2116:System/FreeRTOS/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2117:System/FreeRTOS/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
2118:System/FreeRTOS/queue.c **** 		{
2119:System/FreeRTOS/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2120:System/FreeRTOS/queue.c **** 		}
2121:System/FreeRTOS/queue.c **** 		else
2122:System/FreeRTOS/queue.c **** 		{
2123:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2124:System/FreeRTOS/queue.c **** 		}
2125:System/FreeRTOS/queue.c **** 
2126:System/FreeRTOS/queue.c **** 		if( xPosition == queueOVERWRITE )
2127:System/FreeRTOS/queue.c **** 		{
2128:System/FreeRTOS/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2129:System/FreeRTOS/queue.c **** 			{
2130:System/FreeRTOS/queue.c **** 				/* An item is not being added but overwritten, so subtract
2131:System/FreeRTOS/queue.c **** 				one from the recorded number of items in the queue so when
2132:System/FreeRTOS/queue.c **** 				one is added again below the number of recorded items remains
2133:System/FreeRTOS/queue.c **** 				correct. */
2134:System/FreeRTOS/queue.c **** 				--uxMessagesWaiting;
2135:System/FreeRTOS/queue.c **** 			}
2136:System/FreeRTOS/queue.c **** 			else
2137:System/FreeRTOS/queue.c **** 			{
2138:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2139:System/FreeRTOS/queue.c **** 			}
2140:System/FreeRTOS/queue.c **** 		}
2141:System/FreeRTOS/queue.c **** 		else
2142:System/FreeRTOS/queue.c **** 		{
2143:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2144:System/FreeRTOS/queue.c **** 		}
2145:System/FreeRTOS/queue.c **** 	}
2146:System/FreeRTOS/queue.c **** 
2147:System/FreeRTOS/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2148:System/FreeRTOS/queue.c **** 
2149:System/FreeRTOS/queue.c **** 	return xReturn;
2150:System/FreeRTOS/queue.c **** }
2151:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2152:System/FreeRTOS/queue.c **** 
2153:System/FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2154:System/FreeRTOS/queue.c **** {
2155:System/FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2156:System/FreeRTOS/queue.c **** 	{
2157:System/FreeRTOS/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
2158:System/FreeRTOS/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
2159:System/FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 40


2160:System/FreeRTOS/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2161:System/FreeRTOS/queue.c **** 		}
2162:System/FreeRTOS/queue.c **** 		else
2163:System/FreeRTOS/queue.c **** 		{
2164:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2165:System/FreeRTOS/queue.c **** 		}
2166:System/FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
2167:System/FreeRTOS/queue.c **** 	}
2168:System/FreeRTOS/queue.c **** }
2169:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2170:System/FreeRTOS/queue.c **** 
2171:System/FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2172:System/FreeRTOS/queue.c **** {
2173:System/FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2174:System/FreeRTOS/queue.c **** 
2175:System/FreeRTOS/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2176:System/FreeRTOS/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2177:System/FreeRTOS/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2178:System/FreeRTOS/queue.c **** 	updated. */
2179:System/FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
2180:System/FreeRTOS/queue.c **** 	{
2181:System/FreeRTOS/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2182:System/FreeRTOS/queue.c **** 
2183:System/FreeRTOS/queue.c **** 		/* See if data was added to the queue while it was locked. */
2184:System/FreeRTOS/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2185:System/FreeRTOS/queue.c **** 		{
2186:System/FreeRTOS/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2187:System/FreeRTOS/queue.c **** 			blocked waiting for data to become available? */
2188:System/FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2189:System/FreeRTOS/queue.c **** 			{
2190:System/FreeRTOS/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2191:System/FreeRTOS/queue.c **** 				{
2192:System/FreeRTOS/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
2193:System/FreeRTOS/queue.c **** 					{
2194:System/FreeRTOS/queue.c **** 						/* The queue is a member of a queue set, and posting to
2195:System/FreeRTOS/queue.c **** 						the queue set caused a higher priority task to unblock.
2196:System/FreeRTOS/queue.c **** 						A context switch is required. */
2197:System/FreeRTOS/queue.c **** 						vTaskMissedYield();
2198:System/FreeRTOS/queue.c **** 					}
2199:System/FreeRTOS/queue.c **** 					else
2200:System/FreeRTOS/queue.c **** 					{
2201:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2202:System/FreeRTOS/queue.c **** 					}
2203:System/FreeRTOS/queue.c **** 				}
2204:System/FreeRTOS/queue.c **** 				else
2205:System/FreeRTOS/queue.c **** 				{
2206:System/FreeRTOS/queue.c **** 					/* Tasks that are removed from the event list will get
2207:System/FreeRTOS/queue.c **** 					added to the pending ready list as the scheduler is still
2208:System/FreeRTOS/queue.c **** 					suspended. */
2209:System/FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2210:System/FreeRTOS/queue.c **** 					{
2211:System/FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2212:System/FreeRTOS/queue.c **** 						{
2213:System/FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
2214:System/FreeRTOS/queue.c **** 							context	switch is required. */
2215:System/FreeRTOS/queue.c **** 							vTaskMissedYield();
2216:System/FreeRTOS/queue.c **** 						}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 41


2217:System/FreeRTOS/queue.c **** 						else
2218:System/FreeRTOS/queue.c **** 						{
2219:System/FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2220:System/FreeRTOS/queue.c **** 						}
2221:System/FreeRTOS/queue.c **** 					}
2222:System/FreeRTOS/queue.c **** 					else
2223:System/FreeRTOS/queue.c **** 					{
2224:System/FreeRTOS/queue.c **** 						break;
2225:System/FreeRTOS/queue.c **** 					}
2226:System/FreeRTOS/queue.c **** 				}
2227:System/FreeRTOS/queue.c **** 			}
2228:System/FreeRTOS/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2229:System/FreeRTOS/queue.c **** 			{
2230:System/FreeRTOS/queue.c **** 				/* Tasks that are removed from the event list will get added to
2231:System/FreeRTOS/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2232:System/FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2233:System/FreeRTOS/queue.c **** 				{
2234:System/FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2235:System/FreeRTOS/queue.c **** 					{
2236:System/FreeRTOS/queue.c **** 						/* The task waiting has a higher priority so record that
2237:System/FreeRTOS/queue.c **** 						a context switch is required. */
2238:System/FreeRTOS/queue.c **** 						vTaskMissedYield();
2239:System/FreeRTOS/queue.c **** 					}
2240:System/FreeRTOS/queue.c **** 					else
2241:System/FreeRTOS/queue.c **** 					{
2242:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2243:System/FreeRTOS/queue.c **** 					}
2244:System/FreeRTOS/queue.c **** 				}
2245:System/FreeRTOS/queue.c **** 				else
2246:System/FreeRTOS/queue.c **** 				{
2247:System/FreeRTOS/queue.c **** 					break;
2248:System/FreeRTOS/queue.c **** 				}
2249:System/FreeRTOS/queue.c **** 			}
2250:System/FreeRTOS/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2251:System/FreeRTOS/queue.c **** 
2252:System/FreeRTOS/queue.c **** 			--cTxLock;
2253:System/FreeRTOS/queue.c **** 		}
2254:System/FreeRTOS/queue.c **** 
2255:System/FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2256:System/FreeRTOS/queue.c **** 	}
2257:System/FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2258:System/FreeRTOS/queue.c **** 
2259:System/FreeRTOS/queue.c **** 	/* Do the same for the Rx lock. */
2260:System/FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
2261:System/FreeRTOS/queue.c **** 	{
2262:System/FreeRTOS/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2263:System/FreeRTOS/queue.c **** 
2264:System/FreeRTOS/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2265:System/FreeRTOS/queue.c **** 		{
2266:System/FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2267:System/FreeRTOS/queue.c **** 			{
2268:System/FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2269:System/FreeRTOS/queue.c **** 				{
2270:System/FreeRTOS/queue.c **** 					vTaskMissedYield();
2271:System/FreeRTOS/queue.c **** 				}
2272:System/FreeRTOS/queue.c **** 				else
2273:System/FreeRTOS/queue.c **** 				{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 42


2274:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2275:System/FreeRTOS/queue.c **** 				}
2276:System/FreeRTOS/queue.c **** 
2277:System/FreeRTOS/queue.c **** 				--cRxLock;
2278:System/FreeRTOS/queue.c **** 			}
2279:System/FreeRTOS/queue.c **** 			else
2280:System/FreeRTOS/queue.c **** 			{
2281:System/FreeRTOS/queue.c **** 				break;
2282:System/FreeRTOS/queue.c **** 			}
2283:System/FreeRTOS/queue.c **** 		}
2284:System/FreeRTOS/queue.c **** 
2285:System/FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2286:System/FreeRTOS/queue.c **** 	}
2287:System/FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2288:System/FreeRTOS/queue.c **** }
2289:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2290:System/FreeRTOS/queue.c **** 
2291:System/FreeRTOS/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2292:System/FreeRTOS/queue.c **** {
2293:System/FreeRTOS/queue.c **** BaseType_t xReturn;
2294:System/FreeRTOS/queue.c **** 
2295:System/FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
2296:System/FreeRTOS/queue.c **** 	{
2297:System/FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2298:System/FreeRTOS/queue.c **** 		{
2299:System/FreeRTOS/queue.c **** 			xReturn = pdTRUE;
2300:System/FreeRTOS/queue.c **** 		}
2301:System/FreeRTOS/queue.c **** 		else
2302:System/FreeRTOS/queue.c **** 		{
2303:System/FreeRTOS/queue.c **** 			xReturn = pdFALSE;
2304:System/FreeRTOS/queue.c **** 		}
2305:System/FreeRTOS/queue.c **** 	}
2306:System/FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2307:System/FreeRTOS/queue.c **** 
2308:System/FreeRTOS/queue.c **** 	return xReturn;
2309:System/FreeRTOS/queue.c **** }
2310:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2311:System/FreeRTOS/queue.c **** 
2312:System/FreeRTOS/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2313:System/FreeRTOS/queue.c **** {
2314:System/FreeRTOS/queue.c **** BaseType_t xReturn;
2315:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
2316:System/FreeRTOS/queue.c **** 
2317:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
2318:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2319:System/FreeRTOS/queue.c **** 	{
2320:System/FreeRTOS/queue.c **** 		xReturn = pdTRUE;
2321:System/FreeRTOS/queue.c **** 	}
2322:System/FreeRTOS/queue.c **** 	else
2323:System/FreeRTOS/queue.c **** 	{
2324:System/FreeRTOS/queue.c **** 		xReturn = pdFALSE;
2325:System/FreeRTOS/queue.c **** 	}
2326:System/FreeRTOS/queue.c **** 
2327:System/FreeRTOS/queue.c **** 	return xReturn;
2328:System/FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2329:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2330:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 43


2331:System/FreeRTOS/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2332:System/FreeRTOS/queue.c **** {
  68              		.loc 1 2332 1 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		.loc 1 2332 1 is_stmt 0 view .LVU13
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
  78 0002 0446     		mov	r4, r0
2333:System/FreeRTOS/queue.c **** BaseType_t xReturn;
  79              		.loc 1 2333 1 is_stmt 1 view .LVU14
2334:System/FreeRTOS/queue.c **** 
2335:System/FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
  80              		.loc 1 2335 2 view .LVU15
  81 0004 FFF7FEFF 		bl	vPortEnterCritical
  82              	.LVL5:
2336:System/FreeRTOS/queue.c **** 	{
2337:System/FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  83              		.loc 1 2337 3 view .LVU16
  84              		.loc 1 2337 14 is_stmt 0 view .LVU17
  85 0008 A26B     		ldr	r2, [r4, #56]
  86              		.loc 1 2337 44 view .LVU18
  87 000a E36B     		ldr	r3, [r4, #60]
  88              		.loc 1 2337 5 view .LVU19
  89 000c 9A42     		cmp	r2, r3
  90 000e 04D0     		beq	.L7
2338:System/FreeRTOS/queue.c **** 		{
2339:System/FreeRTOS/queue.c **** 			xReturn = pdTRUE;
2340:System/FreeRTOS/queue.c **** 		}
2341:System/FreeRTOS/queue.c **** 		else
2342:System/FreeRTOS/queue.c **** 		{
2343:System/FreeRTOS/queue.c **** 			xReturn = pdFALSE;
  91              		.loc 1 2343 12 view .LVU20
  92 0010 0024     		movs	r4, #0
  93              	.LVL6:
  94              	.L4:
2344:System/FreeRTOS/queue.c **** 		}
2345:System/FreeRTOS/queue.c **** 	}
2346:System/FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
  95              		.loc 1 2346 2 is_stmt 1 view .LVU21
  96 0012 FFF7FEFF 		bl	vPortExitCritical
  97              	.LVL7:
2347:System/FreeRTOS/queue.c **** 
2348:System/FreeRTOS/queue.c **** 	return xReturn;
  98              		.loc 1 2348 2 view .LVU22
2349:System/FreeRTOS/queue.c **** }
  99              		.loc 1 2349 1 is_stmt 0 view .LVU23
 100 0016 2046     		mov	r0, r4
 101 0018 10BD     		pop	{r4, pc}
 102              	.LVL8:
 103              	.L7:
2339:System/FreeRTOS/queue.c **** 		}
 104              		.loc 1 2339 12 view .LVU24
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 44


 105 001a 0124     		movs	r4, #1
 106              	.LVL9:
2339:System/FreeRTOS/queue.c **** 		}
 107              		.loc 1 2339 12 view .LVU25
 108 001c F9E7     		b	.L4
 109              		.cfi_endproc
 110              	.LFE35:
 112              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	prvIsQueueEmpty:
 119              	.LVL10:
 120              	.LFB33:
2292:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 121              		.loc 1 2292 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
2292:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 125              		.loc 1 2292 1 is_stmt 0 view .LVU27
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
2293:System/FreeRTOS/queue.c **** 
 132              		.loc 1 2293 1 is_stmt 1 view .LVU28
2295:System/FreeRTOS/queue.c **** 	{
 133              		.loc 1 2295 2 view .LVU29
 134 0004 FFF7FEFF 		bl	vPortEnterCritical
 135              	.LVL11:
2297:System/FreeRTOS/queue.c **** 		{
 136              		.loc 1 2297 3 view .LVU30
2297:System/FreeRTOS/queue.c **** 		{
 137              		.loc 1 2297 14 is_stmt 0 view .LVU31
 138 0008 A36B     		ldr	r3, [r4, #56]
2297:System/FreeRTOS/queue.c **** 		{
 139              		.loc 1 2297 5 view .LVU32
 140 000a 23B9     		cbnz	r3, .L10
2299:System/FreeRTOS/queue.c **** 		}
 141              		.loc 1 2299 12 view .LVU33
 142 000c 0124     		movs	r4, #1
 143              	.LVL12:
 144              	.L9:
2306:System/FreeRTOS/queue.c **** 
 145              		.loc 1 2306 2 is_stmt 1 view .LVU34
 146 000e FFF7FEFF 		bl	vPortExitCritical
 147              	.LVL13:
2308:System/FreeRTOS/queue.c **** }
 148              		.loc 1 2308 2 view .LVU35
2309:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 149              		.loc 1 2309 1 is_stmt 0 view .LVU36
 150 0012 2046     		mov	r0, r4
 151 0014 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 45


 152              	.LVL14:
 153              	.L10:
2303:System/FreeRTOS/queue.c **** 		}
 154              		.loc 1 2303 12 view .LVU37
 155 0016 0024     		movs	r4, #0
 156              	.LVL15:
2303:System/FreeRTOS/queue.c **** 		}
 157              		.loc 1 2303 12 view .LVU38
 158 0018 F9E7     		b	.L9
 159              		.cfi_endproc
 160              	.LFE33:
 162              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	prvCopyDataToQueue:
 169              	.LVL16:
 170              	.LFB30:
2075:System/FreeRTOS/queue.c **** BaseType_t xReturn = pdFALSE;
 171              		.loc 1 2075 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
2075:System/FreeRTOS/queue.c **** BaseType_t xReturn = pdFALSE;
 175              		.loc 1 2075 1 is_stmt 0 view .LVU40
 176 0000 70B5     		push	{r4, r5, r6, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 16
 179              		.cfi_offset 4, -16
 180              		.cfi_offset 5, -12
 181              		.cfi_offset 6, -8
 182              		.cfi_offset 14, -4
 183 0002 0446     		mov	r4, r0
 184 0004 1546     		mov	r5, r2
2076:System/FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 185              		.loc 1 2076 1 is_stmt 1 view .LVU41
 186              	.LVL17:
2077:System/FreeRTOS/queue.c **** 
 187              		.loc 1 2077 1 view .LVU42
2081:System/FreeRTOS/queue.c **** 
 188              		.loc 1 2081 2 view .LVU43
2081:System/FreeRTOS/queue.c **** 
 189              		.loc 1 2081 20 is_stmt 0 view .LVU44
 190 0006 866B     		ldr	r6, [r0, #56]
 191              	.LVL18:
2083:System/FreeRTOS/queue.c **** 	{
 192              		.loc 1 2083 2 is_stmt 1 view .LVU45
2083:System/FreeRTOS/queue.c **** 	{
 193              		.loc 1 2083 13 is_stmt 0 view .LVU46
 194 0008 026C     		ldr	r2, [r0, #64]
 195              	.LVL19:
2083:System/FreeRTOS/queue.c **** 	{
 196              		.loc 1 2083 4 view .LVU47
 197 000a 5AB9     		cbnz	r2, .L13
2087:System/FreeRTOS/queue.c **** 			{
 198              		.loc 1 2087 4 is_stmt 1 view .LVU48
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 46


2087:System/FreeRTOS/queue.c **** 			{
 199              		.loc 1 2087 15 is_stmt 0 view .LVU49
 200 000c 0368     		ldr	r3, [r0]
2087:System/FreeRTOS/queue.c **** 			{
 201              		.loc 1 2087 6 view .LVU50
 202 000e 1BB1     		cbz	r3, .L22
2076:System/FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 203              		.loc 1 2076 12 view .LVU51
 204 0010 0020     		movs	r0, #0
 205              	.LVL20:
 206              	.L14:
2143:System/FreeRTOS/queue.c **** 		}
 207              		.loc 1 2143 28 is_stmt 1 view .LVU52
2147:System/FreeRTOS/queue.c **** 
 208              		.loc 1 2147 2 view .LVU53
2147:System/FreeRTOS/queue.c **** 
 209              		.loc 1 2147 49 is_stmt 0 view .LVU54
 210 0012 0136     		adds	r6, r6, #1
 211              	.LVL21:
2147:System/FreeRTOS/queue.c **** 
 212              		.loc 1 2147 29 view .LVU55
 213 0014 A663     		str	r6, [r4, #56]
2149:System/FreeRTOS/queue.c **** }
 214              		.loc 1 2149 2 is_stmt 1 view .LVU56
2150:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 215              		.loc 1 2150 1 is_stmt 0 view .LVU57
 216 0016 70BD     		pop	{r4, r5, r6, pc}
 217              	.LVL22:
 218              	.L22:
2090:System/FreeRTOS/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 219              		.loc 1 2090 5 is_stmt 1 view .LVU58
2090:System/FreeRTOS/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 220              		.loc 1 2090 15 is_stmt 0 view .LVU59
 221 0018 8068     		ldr	r0, [r0, #8]
 222              	.LVL23:
2090:System/FreeRTOS/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 223              		.loc 1 2090 15 view .LVU60
 224 001a FFF7FEFF 		bl	xTaskPriorityDisinherit
 225              	.LVL24:
2091:System/FreeRTOS/queue.c **** 			}
 226              		.loc 1 2091 5 is_stmt 1 view .LVU61
2091:System/FreeRTOS/queue.c **** 			}
 227              		.loc 1 2091 40 is_stmt 0 view .LVU62
 228 001e 0023     		movs	r3, #0
 229 0020 A360     		str	r3, [r4, #8]
 230 0022 F6E7     		b	.L14
 231              	.LVL25:
 232              	.L13:
2100:System/FreeRTOS/queue.c **** 	{
 233              		.loc 1 2100 7 is_stmt 1 view .LVU63
2100:System/FreeRTOS/queue.c **** 	{
 234              		.loc 1 2100 9 is_stmt 0 view .LVU64
 235 0024 6DB9     		cbnz	r5, .L15
2102:System/FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 236              		.loc 1 2102 3 is_stmt 1 view .LVU65
2102:System/FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 237              		.loc 1 2102 12 is_stmt 0 view .LVU66
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 47


 238 0026 4068     		ldr	r0, [r0, #4]
 239              	.LVL26:
2102:System/FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 240              		.loc 1 2102 12 view .LVU67
 241 0028 FFF7FEFF 		bl	memcpy
 242              	.LVL27:
2103:System/FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 243              		.loc 1 2103 3 is_stmt 1 view .LVU68
2103:System/FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 244              		.loc 1 2103 32 is_stmt 0 view .LVU69
 245 002c 226C     		ldr	r2, [r4, #64]
2103:System/FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 246              		.loc 1 2103 22 view .LVU70
 247 002e 6368     		ldr	r3, [r4, #4]
 248 0030 1344     		add	r3, r3, r2
 249 0032 6360     		str	r3, [r4, #4]
2104:System/FreeRTOS/queue.c **** 		{
 250              		.loc 1 2104 3 is_stmt 1 view .LVU71
2104:System/FreeRTOS/queue.c **** 		{
 251              		.loc 1 2104 46 is_stmt 0 view .LVU72
 252 0034 A268     		ldr	r2, [r4, #8]
2104:System/FreeRTOS/queue.c **** 		{
 253              		.loc 1 2104 5 view .LVU73
 254 0036 9342     		cmp	r3, r2
 255 0038 19D3     		bcc	.L18
2106:System/FreeRTOS/queue.c **** 		}
 256              		.loc 1 2106 4 is_stmt 1 view .LVU74
2106:System/FreeRTOS/queue.c **** 		}
 257              		.loc 1 2106 32 is_stmt 0 view .LVU75
 258 003a 2368     		ldr	r3, [r4]
2106:System/FreeRTOS/queue.c **** 		}
 259              		.loc 1 2106 23 view .LVU76
 260 003c 6360     		str	r3, [r4, #4]
2076:System/FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 261              		.loc 1 2076 12 view .LVU77
 262 003e 2846     		mov	r0, r5
 263 0040 E7E7     		b	.L14
 264              	.LVL28:
 265              	.L15:
2115:System/FreeRTOS/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 266              		.loc 1 2115 3 is_stmt 1 view .LVU78
2115:System/FreeRTOS/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 267              		.loc 1 2115 12 is_stmt 0 view .LVU79
 268 0042 C068     		ldr	r0, [r0, #12]
 269              	.LVL29:
2115:System/FreeRTOS/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 270              		.loc 1 2115 12 view .LVU80
 271 0044 FFF7FEFF 		bl	memcpy
 272              	.LVL30:
2116:System/FreeRTOS/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 273              		.loc 1 2116 3 is_stmt 1 view .LVU81
2116:System/FreeRTOS/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 274              		.loc 1 2116 42 is_stmt 0 view .LVU82
 275 0048 226C     		ldr	r2, [r4, #64]
2116:System/FreeRTOS/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 276              		.loc 1 2116 32 view .LVU83
 277 004a 5142     		rsbs	r1, r2, #0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 48


 278 004c E368     		ldr	r3, [r4, #12]
 279 004e 9B1A     		subs	r3, r3, r2
 280 0050 E360     		str	r3, [r4, #12]
2117:System/FreeRTOS/queue.c **** 		{
 281              		.loc 1 2117 3 is_stmt 1 view .LVU84
2117:System/FreeRTOS/queue.c **** 		{
 282              		.loc 1 2117 45 is_stmt 0 view .LVU85
 283 0052 2268     		ldr	r2, [r4]
2117:System/FreeRTOS/queue.c **** 		{
 284              		.loc 1 2117 5 view .LVU86
 285 0054 9342     		cmp	r3, r2
 286 0056 02D2     		bcs	.L16
2119:System/FreeRTOS/queue.c **** 		}
 287              		.loc 1 2119 4 is_stmt 1 view .LVU87
2119:System/FreeRTOS/queue.c **** 		}
 288              		.loc 1 2119 54 is_stmt 0 view .LVU88
 289 0058 A368     		ldr	r3, [r4, #8]
2119:System/FreeRTOS/queue.c **** 		}
 290              		.loc 1 2119 62 view .LVU89
 291 005a 0B44     		add	r3, r3, r1
2119:System/FreeRTOS/queue.c **** 		}
 292              		.loc 1 2119 33 view .LVU90
 293 005c E360     		str	r3, [r4, #12]
 294              	.L16:
2123:System/FreeRTOS/queue.c **** 		}
 295              		.loc 1 2123 28 is_stmt 1 view .LVU91
2126:System/FreeRTOS/queue.c **** 		{
 296              		.loc 1 2126 3 view .LVU92
2126:System/FreeRTOS/queue.c **** 		{
 297              		.loc 1 2126 5 is_stmt 0 view .LVU93
 298 005e 022D     		cmp	r5, #2
 299 0060 01D0     		beq	.L23
2076:System/FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 300              		.loc 1 2076 12 view .LVU94
 301 0062 0020     		movs	r0, #0
 302 0064 D5E7     		b	.L14
 303              	.L23:
2128:System/FreeRTOS/queue.c **** 			{
 304              		.loc 1 2128 4 is_stmt 1 view .LVU95
2128:System/FreeRTOS/queue.c **** 			{
 305              		.loc 1 2128 6 is_stmt 0 view .LVU96
 306 0066 26B1     		cbz	r6, .L20
2134:System/FreeRTOS/queue.c **** 			}
 307              		.loc 1 2134 5 is_stmt 1 view .LVU97
 308 0068 013E     		subs	r6, r6, #1
 309              	.LVL31:
2076:System/FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 310              		.loc 1 2076 12 is_stmt 0 view .LVU98
 311 006a 0020     		movs	r0, #0
 312 006c D1E7     		b	.L14
 313              	.L18:
2076:System/FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 314              		.loc 1 2076 12 view .LVU99
 315 006e 2846     		mov	r0, r5
 316 0070 CFE7     		b	.L14
 317              	.L20:
2076:System/FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 49


 318              		.loc 1 2076 12 view .LVU100
 319 0072 0020     		movs	r0, #0
 320 0074 CDE7     		b	.L14
 321              		.cfi_endproc
 322              	.LFE30:
 324              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 325              		.align	1
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 330              	prvCopyDataFromQueue:
 331              	.LVL32:
 332              	.LFB31:
2154:System/FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 333              		.loc 1 2154 1 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
2154:System/FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 337              		.loc 1 2154 1 is_stmt 0 view .LVU102
 338 0000 0346     		mov	r3, r0
2155:System/FreeRTOS/queue.c **** 	{
 339              		.loc 1 2155 2 is_stmt 1 view .LVU103
2155:System/FreeRTOS/queue.c **** 	{
 340              		.loc 1 2155 13 is_stmt 0 view .LVU104
 341 0002 026C     		ldr	r2, [r0, #64]
2155:System/FreeRTOS/queue.c **** 	{
 342              		.loc 1 2155 4 view .LVU105
 343 0004 6AB1     		cbz	r2, .L28
2154:System/FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 344              		.loc 1 2154 1 view .LVU106
 345 0006 10B5     		push	{r4, lr}
 346              	.LCFI3:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 4, -8
 349              		.cfi_offset 14, -4
 350 0008 0846     		mov	r0, r1
 351              	.LVL33:
2157:System/FreeRTOS/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 352              		.loc 1 2157 3 is_stmt 1 view .LVU107
2157:System/FreeRTOS/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 353              		.loc 1 2157 32 is_stmt 0 view .LVU108
 354 000a D968     		ldr	r1, [r3, #12]
 355              	.LVL34:
2157:System/FreeRTOS/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 356              		.loc 1 2157 32 view .LVU109
 357 000c 1144     		add	r1, r1, r2
 358 000e D960     		str	r1, [r3, #12]
2158:System/FreeRTOS/queue.c **** 		{
 359              		.loc 1 2158 3 is_stmt 1 view .LVU110
2158:System/FreeRTOS/queue.c **** 		{
 360              		.loc 1 2158 5 is_stmt 0 view .LVU111
 361 0010 9C68     		ldr	r4, [r3, #8]
 362 0012 A142     		cmp	r1, r4
 363 0014 01D3     		bcc	.L26
2160:System/FreeRTOS/queue.c **** 		}
 364              		.loc 1 2160 4 is_stmt 1 view .LVU112
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 50


2160:System/FreeRTOS/queue.c **** 		}
 365              		.loc 1 2160 42 is_stmt 0 view .LVU113
 366 0016 1968     		ldr	r1, [r3]
2160:System/FreeRTOS/queue.c **** 		}
 367              		.loc 1 2160 33 view .LVU114
 368 0018 D960     		str	r1, [r3, #12]
 369              	.L26:
2164:System/FreeRTOS/queue.c **** 		}
 370              		.loc 1 2164 28 is_stmt 1 view .LVU115
2166:System/FreeRTOS/queue.c **** 	}
 371              		.loc 1 2166 3 view .LVU116
2166:System/FreeRTOS/queue.c **** 	}
 372              		.loc 1 2166 12 is_stmt 0 view .LVU117
 373 001a D968     		ldr	r1, [r3, #12]
 374 001c FFF7FEFF 		bl	memcpy
 375              	.LVL35:
2168:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 376              		.loc 1 2168 1 view .LVU118
 377 0020 10BD     		pop	{r4, pc}
 378              	.LVL36:
 379              	.L28:
 380              	.LCFI4:
 381              		.cfi_def_cfa_offset 0
 382              		.cfi_restore 4
 383              		.cfi_restore 14
2168:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 384              		.loc 1 2168 1 view .LVU119
 385 0022 7047     		bx	lr
 386              		.cfi_endproc
 387              	.LFE31:
 389              		.section	.text.prvUnlockQueue,"ax",%progbits
 390              		.align	1
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 395              	prvUnlockQueue:
 396              	.LVL37:
 397              	.LFB32:
2172:System/FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 398              		.loc 1 2172 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
2172:System/FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 402              		.loc 1 2172 1 is_stmt 0 view .LVU121
 403 0000 38B5     		push	{r3, r4, r5, lr}
 404              	.LCFI5:
 405              		.cfi_def_cfa_offset 16
 406              		.cfi_offset 3, -16
 407              		.cfi_offset 4, -12
 408              		.cfi_offset 5, -8
 409              		.cfi_offset 14, -4
 410 0002 0546     		mov	r5, r0
2179:System/FreeRTOS/queue.c **** 	{
 411              		.loc 1 2179 2 is_stmt 1 view .LVU122
 412 0004 FFF7FEFF 		bl	vPortEnterCritical
 413              	.LVL38:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 51


 414              	.LBB112:
2181:System/FreeRTOS/queue.c **** 
 415              		.loc 1 2181 3 view .LVU123
2181:System/FreeRTOS/queue.c **** 
 416              		.loc 1 2181 10 is_stmt 0 view .LVU124
 417 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 418 000c 64B2     		sxtb	r4, r4
 419              	.LVL39:
2184:System/FreeRTOS/queue.c **** 		{
 420              		.loc 1 2184 3 is_stmt 1 view .LVU125
2184:System/FreeRTOS/queue.c **** 		{
 421              		.loc 1 2184 8 is_stmt 0 view .LVU126
 422 000e 01E0     		b	.L32
 423              	.L34:
2242:System/FreeRTOS/queue.c **** 					}
 424              		.loc 1 2242 31 is_stmt 1 view .LVU127
2252:System/FreeRTOS/queue.c **** 		}
 425              		.loc 1 2252 4 view .LVU128
 426 0010 013C     		subs	r4, r4, #1
 427              	.LVL40:
2252:System/FreeRTOS/queue.c **** 		}
 428              		.loc 1 2252 4 is_stmt 0 view .LVU129
 429 0012 64B2     		sxtb	r4, r4
 430              	.LVL41:
 431              	.L32:
2184:System/FreeRTOS/queue.c **** 		{
 432              		.loc 1 2184 8 is_stmt 1 view .LVU130
 433 0014 002C     		cmp	r4, #0
 434 0016 0ADD     		ble	.L33
2232:System/FreeRTOS/queue.c **** 				{
 435              		.loc 1 2232 5 view .LVU131
2232:System/FreeRTOS/queue.c **** 				{
 436              		.loc 1 2232 9 is_stmt 0 view .LVU132
 437 0018 6B6A     		ldr	r3, [r5, #36]
2232:System/FreeRTOS/queue.c **** 				{
 438              		.loc 1 2232 7 view .LVU133
 439 001a 43B1     		cbz	r3, .L33
2234:System/FreeRTOS/queue.c **** 					{
 440              		.loc 1 2234 6 is_stmt 1 view .LVU134
2234:System/FreeRTOS/queue.c **** 					{
 441              		.loc 1 2234 10 is_stmt 0 view .LVU135
 442 001c 05F12400 		add	r0, r5, #36
 443 0020 FFF7FEFF 		bl	xTaskRemoveFromEventList
 444              	.LVL42:
2234:System/FreeRTOS/queue.c **** 					{
 445              		.loc 1 2234 8 view .LVU136
 446 0024 0028     		cmp	r0, #0
 447 0026 F3D0     		beq	.L34
2238:System/FreeRTOS/queue.c **** 					}
 448              		.loc 1 2238 7 is_stmt 1 view .LVU137
 449 0028 FFF7FEFF 		bl	vTaskMissedYield
 450              	.LVL43:
 451 002c F0E7     		b	.L34
 452              	.L33:
2255:System/FreeRTOS/queue.c **** 	}
 453              		.loc 1 2255 3 view .LVU138
2255:System/FreeRTOS/queue.c **** 	}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 52


 454              		.loc 1 2255 20 is_stmt 0 view .LVU139
 455 002e FF23     		movs	r3, #255
 456 0030 85F84530 		strb	r3, [r5, #69]
 457              	.LBE112:
2257:System/FreeRTOS/queue.c **** 
 458              		.loc 1 2257 2 is_stmt 1 view .LVU140
 459 0034 FFF7FEFF 		bl	vPortExitCritical
 460              	.LVL44:
2260:System/FreeRTOS/queue.c **** 	{
 461              		.loc 1 2260 2 view .LVU141
 462 0038 FFF7FEFF 		bl	vPortEnterCritical
 463              	.LVL45:
 464              	.LBB113:
2262:System/FreeRTOS/queue.c **** 
 465              		.loc 1 2262 3 view .LVU142
2262:System/FreeRTOS/queue.c **** 
 466              		.loc 1 2262 10 is_stmt 0 view .LVU143
 467 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 468              	.LVL46:
2262:System/FreeRTOS/queue.c **** 
 469              		.loc 1 2262 10 view .LVU144
 470 0040 64B2     		sxtb	r4, r4
 471              	.LVL47:
2264:System/FreeRTOS/queue.c **** 		{
 472              		.loc 1 2264 3 is_stmt 1 view .LVU145
2264:System/FreeRTOS/queue.c **** 		{
 473              		.loc 1 2264 8 is_stmt 0 view .LVU146
 474 0042 01E0     		b	.L36
 475              	.L38:
2274:System/FreeRTOS/queue.c **** 				}
 476              		.loc 1 2274 30 is_stmt 1 view .LVU147
2277:System/FreeRTOS/queue.c **** 			}
 477              		.loc 1 2277 5 view .LVU148
 478 0044 013C     		subs	r4, r4, #1
 479              	.LVL48:
2277:System/FreeRTOS/queue.c **** 			}
 480              		.loc 1 2277 5 is_stmt 0 view .LVU149
 481 0046 64B2     		sxtb	r4, r4
 482              	.LVL49:
 483              	.L36:
2264:System/FreeRTOS/queue.c **** 		{
 484              		.loc 1 2264 8 is_stmt 1 view .LVU150
 485 0048 002C     		cmp	r4, #0
 486 004a 0ADD     		ble	.L37
2266:System/FreeRTOS/queue.c **** 			{
 487              		.loc 1 2266 4 view .LVU151
2266:System/FreeRTOS/queue.c **** 			{
 488              		.loc 1 2266 8 is_stmt 0 view .LVU152
 489 004c 2B69     		ldr	r3, [r5, #16]
2266:System/FreeRTOS/queue.c **** 			{
 490              		.loc 1 2266 6 view .LVU153
 491 004e 43B1     		cbz	r3, .L37
2268:System/FreeRTOS/queue.c **** 				{
 492              		.loc 1 2268 5 is_stmt 1 view .LVU154
2268:System/FreeRTOS/queue.c **** 				{
 493              		.loc 1 2268 9 is_stmt 0 view .LVU155
 494 0050 05F11000 		add	r0, r5, #16
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 53


 495 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 496              	.LVL50:
2268:System/FreeRTOS/queue.c **** 				{
 497              		.loc 1 2268 7 view .LVU156
 498 0058 0028     		cmp	r0, #0
 499 005a F3D0     		beq	.L38
2270:System/FreeRTOS/queue.c **** 				}
 500              		.loc 1 2270 6 is_stmt 1 view .LVU157
 501 005c FFF7FEFF 		bl	vTaskMissedYield
 502              	.LVL51:
 503 0060 F0E7     		b	.L38
 504              	.L37:
2285:System/FreeRTOS/queue.c **** 	}
 505              		.loc 1 2285 3 view .LVU158
2285:System/FreeRTOS/queue.c **** 	}
 506              		.loc 1 2285 20 is_stmt 0 view .LVU159
 507 0062 FF23     		movs	r3, #255
 508 0064 85F84430 		strb	r3, [r5, #68]
 509              	.LBE113:
2287:System/FreeRTOS/queue.c **** }
 510              		.loc 1 2287 2 is_stmt 1 view .LVU160
 511 0068 FFF7FEFF 		bl	vPortExitCritical
 512              	.LVL52:
2288:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 513              		.loc 1 2288 1 is_stmt 0 view .LVU161
 514 006c 38BD     		pop	{r3, r4, r5, pc}
2288:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 515              		.loc 1 2288 1 view .LVU162
 516              		.cfi_endproc
 517              	.LFE32:
 519              		.section	.text.xQueueGenericReset,"ax",%progbits
 520              		.align	1
 521              		.global	xQueueGenericReset
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 526              	xQueueGenericReset:
 527              	.LVL53:
 528              	.LFB5:
 256:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 529              		.loc 1 256 1 is_stmt 1 view -0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 256:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 533              		.loc 1 256 1 is_stmt 0 view .LVU164
 534 0000 38B5     		push	{r3, r4, r5, lr}
 535              	.LCFI6:
 536              		.cfi_def_cfa_offset 16
 537              		.cfi_offset 3, -16
 538              		.cfi_offset 4, -12
 539              		.cfi_offset 5, -8
 540              		.cfi_offset 14, -4
 257:System/FreeRTOS/queue.c **** 
 541              		.loc 1 257 1 is_stmt 1 view .LVU165
 542              	.LVL54:
 259:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 54


 543              		.loc 1 259 2 view .LVU166
 544 0002 E0B1     		cbz	r0, .L47
 545 0004 0D46     		mov	r5, r1
 546 0006 0446     		mov	r4, r0
 259:System/FreeRTOS/queue.c **** 
 547              		.loc 1 259 25 discriminator 2 view .LVU167
 261:System/FreeRTOS/queue.c **** 	{
 548              		.loc 1 261 2 discriminator 2 view .LVU168
 549 0008 FFF7FEFF 		bl	vPortEnterCritical
 550              	.LVL55:
 263:System/FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 551              		.loc 1 263 3 discriminator 2 view .LVU169
 263:System/FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 552              		.loc 1 263 37 is_stmt 0 discriminator 2 view .LVU170
 553 000c 2368     		ldr	r3, [r4]
 263:System/FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 554              		.loc 1 263 57 discriminator 2 view .LVU171
 555 000e E26B     		ldr	r2, [r4, #60]
 263:System/FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 556              		.loc 1 263 77 discriminator 2 view .LVU172
 557 0010 216C     		ldr	r1, [r4, #64]
 263:System/FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 558              		.loc 1 263 46 discriminator 2 view .LVU173
 559 0012 01FB0230 		mla	r0, r1, r2, r3
 263:System/FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 560              		.loc 1 263 28 discriminator 2 view .LVU174
 561 0016 A060     		str	r0, [r4, #8]
 264:System/FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 562              		.loc 1 264 3 is_stmt 1 discriminator 2 view .LVU175
 264:System/FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 563              		.loc 1 264 30 is_stmt 0 discriminator 2 view .LVU176
 564 0018 0020     		movs	r0, #0
 565 001a A063     		str	r0, [r4, #56]
 265:System/FreeRTOS/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 566              		.loc 1 265 3 is_stmt 1 discriminator 2 view .LVU177
 265:System/FreeRTOS/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 567              		.loc 1 265 22 is_stmt 0 discriminator 2 view .LVU178
 568 001c 6360     		str	r3, [r4, #4]
 266:System/FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 569              		.loc 1 266 3 is_stmt 1 discriminator 2 view .LVU179
 266:System/FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 570              		.loc 1 266 74 is_stmt 0 discriminator 2 view .LVU180
 571 001e 013A     		subs	r2, r2, #1
 266:System/FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 572              		.loc 1 266 50 discriminator 2 view .LVU181
 573 0020 02FB0133 		mla	r3, r2, r1, r3
 266:System/FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 574              		.loc 1 266 32 discriminator 2 view .LVU182
 575 0024 E360     		str	r3, [r4, #12]
 267:System/FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 576              		.loc 1 267 3 is_stmt 1 discriminator 2 view .LVU183
 267:System/FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 577              		.loc 1 267 20 is_stmt 0 discriminator 2 view .LVU184
 578 0026 FF23     		movs	r3, #255
 579 0028 84F84430 		strb	r3, [r4, #68]
 268:System/FreeRTOS/queue.c **** 
 580              		.loc 1 268 3 is_stmt 1 discriminator 2 view .LVU185
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 55


 268:System/FreeRTOS/queue.c **** 
 581              		.loc 1 268 20 is_stmt 0 discriminator 2 view .LVU186
 582 002c 84F84530 		strb	r3, [r4, #69]
 270:System/FreeRTOS/queue.c **** 		{
 583              		.loc 1 270 3 is_stmt 1 discriminator 2 view .LVU187
 270:System/FreeRTOS/queue.c **** 		{
 584              		.loc 1 270 5 is_stmt 0 discriminator 2 view .LVU188
 585 0030 FDB9     		cbnz	r5, .L44
 277:System/FreeRTOS/queue.c **** 			{
 586              		.loc 1 277 4 is_stmt 1 view .LVU189
 277:System/FreeRTOS/queue.c **** 			{
 587              		.loc 1 277 8 is_stmt 0 view .LVU190
 588 0032 2369     		ldr	r3, [r4, #16]
 277:System/FreeRTOS/queue.c **** 			{
 589              		.loc 1 277 6 view .LVU191
 590 0034 63B9     		cbnz	r3, .L48
 591              	.L45:
 300:System/FreeRTOS/queue.c **** 
 592              		.loc 1 300 2 is_stmt 1 view .LVU192
 593 0036 FFF7FEFF 		bl	vPortExitCritical
 594              	.LVL56:
 304:System/FreeRTOS/queue.c **** }
 595              		.loc 1 304 2 view .LVU193
 305:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 596              		.loc 1 305 1 is_stmt 0 view .LVU194
 597 003a 0120     		movs	r0, #1
 598 003c 38BD     		pop	{r3, r4, r5, pc}
 599              	.LVL57:
 600              	.L47:
 259:System/FreeRTOS/queue.c **** 
 601              		.loc 1 259 2 is_stmt 1 view .LVU195
 602              	.LBB114:
 603              	.LBI114:
 604              		.file 2 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 56


  24:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 57


  81:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 58


 138:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 605              		.loc 2 191 30 view .LVU196
 606              	.LBB115:
 192:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 59


 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 607              		.loc 2 193 1 view .LVU197
 194:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 608              		.loc 2 195 2 view .LVU198
 609              		.syntax unified
 610              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 611 003e 4FF05003 			mov r3, #80												
 612 0042 83F31188 		msr basepri, r3											
 613 0046 BFF36F8F 		isb														
 614 004a BFF34F8F 		dsb														
 615              	
 616              	@ 0 "" 2
 617              	.LVL58:
 618              		.thumb
 619              		.syntax unified
 620              	.L43:
 621              		.loc 2 195 2 is_stmt 0 view .LVU199
 622              	.LBE115:
 623              	.LBE114:
 259:System/FreeRTOS/queue.c **** 
 624              		.loc 1 259 2 is_stmt 1 discriminator 1 view .LVU200
 259:System/FreeRTOS/queue.c **** 
 625              		.loc 1 259 2 discriminator 1 view .LVU201
 259:System/FreeRTOS/queue.c **** 
 626              		.loc 1 259 2 discriminator 1 view .LVU202
 627 004e FEE7     		b	.L43
 628              	.LVL59:
 629              	.L48:
 279:System/FreeRTOS/queue.c **** 				{
 630              		.loc 1 279 5 view .LVU203
 279:System/FreeRTOS/queue.c **** 				{
 631              		.loc 1 279 9 is_stmt 0 view .LVU204
 632 0050 04F11000 		add	r0, r4, #16
 633 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 634              	.LVL60:
 279:System/FreeRTOS/queue.c **** 				{
 635              		.loc 1 279 7 view .LVU205
 636 0058 0028     		cmp	r0, #0
 637 005a ECD0     		beq	.L45
 281:System/FreeRTOS/queue.c **** 				}
 638              		.loc 1 281 6 is_stmt 1 view .LVU206
 639 005c 4FF0E023 		mov	r3, #-536813568
 640 0060 4FF08052 		mov	r2, #268435456
 641 0064 C3F8042D 		str	r2, [r3, #3332]
 281:System/FreeRTOS/queue.c **** 				}
 642              		.loc 1 281 6 view .LVU207
 643              		.syntax unified
 644              	@ 281 "System/FreeRTOS/queue.c" 1
 645 0068 BFF34F8F 		dsb
 646              	@ 0 "" 2
 281:System/FreeRTOS/queue.c **** 				}
 647              		.loc 1 281 6 view .LVU208
 648              	@ 281 "System/FreeRTOS/queue.c" 1
 649 006c BFF36F8F 		isb
 650              	@ 0 "" 2
 281:System/FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 60


 651              		.loc 1 281 38 view .LVU209
 652              		.thumb
 653              		.syntax unified
 654 0070 E1E7     		b	.L45
 655              	.L44:
 296:System/FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 656              		.loc 1 296 4 view .LVU210
 657 0072 04F11000 		add	r0, r4, #16
 658 0076 FFF7FEFF 		bl	vListInitialise
 659              	.LVL61:
 297:System/FreeRTOS/queue.c **** 		}
 660              		.loc 1 297 4 view .LVU211
 661 007a 04F12400 		add	r0, r4, #36
 662 007e FFF7FEFF 		bl	vListInitialise
 663              	.LVL62:
 664 0082 D8E7     		b	.L45
 665              		.cfi_endproc
 666              	.LFE5:
 668              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 669              		.align	1
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 674              	prvInitialiseNewQueue:
 675              	.LVL63:
 676              	.LFB8:
 423:System/FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 677              		.loc 1 423 1 view -0
 678              		.cfi_startproc
 679              		@ args = 4, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 423:System/FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 681              		.loc 1 423 1 is_stmt 0 view .LVU213
 682 0000 38B5     		push	{r3, r4, r5, lr}
 683              	.LCFI7:
 684              		.cfi_def_cfa_offset 16
 685              		.cfi_offset 3, -16
 686              		.cfi_offset 4, -12
 687              		.cfi_offset 5, -8
 688              		.cfi_offset 14, -4
 689 0002 1D46     		mov	r5, r3
 690 0004 049C     		ldr	r4, [sp, #16]
 426:System/FreeRTOS/queue.c **** 
 691              		.loc 1 426 2 is_stmt 1 view .LVU214
 428:System/FreeRTOS/queue.c **** 	{
 692              		.loc 1 428 2 view .LVU215
 428:System/FreeRTOS/queue.c **** 	{
 693              		.loc 1 428 4 is_stmt 0 view .LVU216
 694 0006 0B46     		mov	r3, r1
 695              	.LVL64:
 428:System/FreeRTOS/queue.c **** 	{
 696              		.loc 1 428 4 view .LVU217
 697 0008 49B9     		cbnz	r1, .L50
 434:System/FreeRTOS/queue.c **** 	}
 698              		.loc 1 434 3 is_stmt 1 view .LVU218
 434:System/FreeRTOS/queue.c **** 	}
 699              		.loc 1 434 22 is_stmt 0 view .LVU219
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 61


 700 000a 2460     		str	r4, [r4]
 701              	.L51:
 444:System/FreeRTOS/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 702              		.loc 1 444 2 is_stmt 1 view .LVU220
 444:System/FreeRTOS/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 703              		.loc 1 444 23 is_stmt 0 view .LVU221
 704 000c E063     		str	r0, [r4, #60]
 445:System/FreeRTOS/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 705              		.loc 1 445 2 is_stmt 1 view .LVU222
 445:System/FreeRTOS/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 706              		.loc 1 445 25 is_stmt 0 view .LVU223
 707 000e 2364     		str	r3, [r4, #64]
 446:System/FreeRTOS/queue.c **** 
 708              		.loc 1 446 2 is_stmt 1 view .LVU224
 446:System/FreeRTOS/queue.c **** 
 709              		.loc 1 446 11 is_stmt 0 view .LVU225
 710 0010 0121     		movs	r1, #1
 711              	.LVL65:
 446:System/FreeRTOS/queue.c **** 
 712              		.loc 1 446 11 view .LVU226
 713 0012 2046     		mov	r0, r4
 714              	.LVL66:
 446:System/FreeRTOS/queue.c **** 
 715              		.loc 1 446 11 view .LVU227
 716 0014 FFF7FEFF 		bl	xQueueGenericReset
 717              	.LVL67:
 450:System/FreeRTOS/queue.c **** 	}
 718              		.loc 1 450 3 is_stmt 1 view .LVU228
 450:System/FreeRTOS/queue.c **** 	}
 719              		.loc 1 450 27 is_stmt 0 view .LVU229
 720 0018 84F84C50 		strb	r5, [r4, #76]
 460:System/FreeRTOS/queue.c **** }
 721              		.loc 1 460 33 is_stmt 1 view .LVU230
 461:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 722              		.loc 1 461 1 is_stmt 0 view .LVU231
 723 001c 38BD     		pop	{r3, r4, r5, pc}
 724              	.LVL68:
 725              	.L50:
 439:System/FreeRTOS/queue.c **** 	}
 726              		.loc 1 439 3 is_stmt 1 view .LVU232
 439:System/FreeRTOS/queue.c **** 	}
 727              		.loc 1 439 22 is_stmt 0 view .LVU233
 728 001e 2260     		str	r2, [r4]
 729 0020 F4E7     		b	.L51
 730              		.cfi_endproc
 731              	.LFE8:
 733              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 734              		.align	1
 735              		.global	xQueueGenericCreateStatic
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 740              	xQueueGenericCreateStatic:
 741              	.LVL69:
 742              	.LFB6:
 311:System/FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 743              		.loc 1 311 2 is_stmt 1 view -0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 62


 744              		.cfi_startproc
 745              		@ args = 4, pretend = 0, frame = 8
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 312:System/FreeRTOS/queue.c **** 
 747              		.loc 1 312 2 view .LVU235
 314:System/FreeRTOS/queue.c **** 
 748              		.loc 1 314 3 view .LVU236
 749 0000 40B9     		cbnz	r0, .L54
 314:System/FreeRTOS/queue.c **** 
 750              		.loc 1 314 3 view .LVU237
 751              	.LBB116:
 752              	.LBI116:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 753              		.loc 2 191 30 view .LVU238
 754              	.LBB117:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 755              		.loc 2 193 1 view .LVU239
 756              		.loc 2 195 2 view .LVU240
 757              		.syntax unified
 758              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 759 0002 4FF05003 			mov r3, #80												
 760 0006 83F31188 		msr basepri, r3											
 761 000a BFF36F8F 		isb														
 762 000e BFF34F8F 		dsb														
 763              	
 764              	@ 0 "" 2
 765              	.LVL70:
 766              		.thumb
 767              		.syntax unified
 768              	.L55:
 769              		.loc 2 195 2 is_stmt 0 view .LVU241
 770              	.LBE117:
 771              	.LBE116:
 314:System/FreeRTOS/queue.c **** 
 772              		.loc 1 314 3 is_stmt 1 discriminator 1 view .LVU242
 314:System/FreeRTOS/queue.c **** 
 773              		.loc 1 314 3 discriminator 1 view .LVU243
 314:System/FreeRTOS/queue.c **** 
 774              		.loc 1 314 3 discriminator 1 view .LVU244
 775 0012 FEE7     		b	.L55
 776              	.LVL71:
 777              	.L54:
 311:System/FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 778              		.loc 1 311 2 is_stmt 0 discriminator 2 view .LVU245
 779 0014 10B5     		push	{r4, lr}
 780              	.LCFI8:
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 4, -8
 783              		.cfi_offset 14, -4
 784 0016 84B0     		sub	sp, sp, #16
 785              	.LCFI9:
 786              		.cfi_def_cfa_offset 24
 787 0018 1C46     		mov	r4, r3
 788 001a 8446     		mov	ip, r0
 314:System/FreeRTOS/queue.c **** 
 789              		.loc 1 314 52 is_stmt 1 discriminator 2 view .LVU246
 318:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 63


 790              		.loc 1 318 3 discriminator 2 view .LVU247
 791 001c 53B1     		cbz	r3, .L66
 318:System/FreeRTOS/queue.c **** 
 792              		.loc 1 318 40 discriminator 2 view .LVU248
 322:System/FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 793              		.loc 1 322 3 discriminator 2 view .LVU249
 794 001e 92B1     		cbz	r2, .L58
 795 0020 89B9     		cbnz	r1, .L58
 322:System/FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 796              		.loc 1 322 3 view .LVU250
 797              	.LBB118:
 798              	.LBI118:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 799              		.loc 2 191 30 view .LVU251
 800              	.LBB119:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 801              		.loc 2 193 1 view .LVU252
 802              		.loc 2 195 2 view .LVU253
 803              		.syntax unified
 804              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 805 0022 4FF05003 			mov r3, #80												
 806 0026 83F31188 		msr basepri, r3											
 807 002a BFF36F8F 		isb														
 808 002e BFF34F8F 		dsb														
 809              	
 810              	@ 0 "" 2
 811              	.LVL72:
 812              		.thumb
 813              		.syntax unified
 814              	.L59:
 815              		.loc 2 195 2 is_stmt 0 view .LVU254
 816              	.LBE119:
 817              	.LBE118:
 322:System/FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 818              		.loc 1 322 3 is_stmt 1 discriminator 3 view .LVU255
 322:System/FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 819              		.loc 1 322 3 discriminator 3 view .LVU256
 322:System/FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 820              		.loc 1 322 3 discriminator 3 view .LVU257
 821 0032 FEE7     		b	.L59
 822              	.LVL73:
 823              	.L66:
 318:System/FreeRTOS/queue.c **** 
 824              		.loc 1 318 3 view .LVU258
 825              	.LBB120:
 826              	.LBI120:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 827              		.loc 2 191 30 view .LVU259
 828              	.LBB121:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 829              		.loc 2 193 1 view .LVU260
 830              		.loc 2 195 2 view .LVU261
 831              		.syntax unified
 832              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 833 0034 4FF05003 			mov r3, #80												
 834 0038 83F31188 		msr basepri, r3											
 835 003c BFF36F8F 		isb														
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 64


 836 0040 BFF34F8F 		dsb														
 837              	
 838              	@ 0 "" 2
 839              	.LVL74:
 840              		.thumb
 841              		.syntax unified
 842              	.L57:
 843              		.loc 2 195 2 is_stmt 0 view .LVU262
 844              	.LBE121:
 845              	.LBE120:
 318:System/FreeRTOS/queue.c **** 
 846              		.loc 1 318 3 is_stmt 1 discriminator 2 view .LVU263
 318:System/FreeRTOS/queue.c **** 
 847              		.loc 1 318 3 discriminator 2 view .LVU264
 318:System/FreeRTOS/queue.c **** 
 848              		.loc 1 318 3 discriminator 2 view .LVU265
 849 0044 FEE7     		b	.L57
 850              	.LVL75:
 851              	.L58:
 322:System/FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 852              		.loc 1 322 74 discriminator 8 view .LVU266
 323:System/FreeRTOS/queue.c **** 
 853              		.loc 1 323 3 discriminator 8 view .LVU267
 854 0046 6AB1     		cbz	r2, .L67
 855              	.L60:
 323:System/FreeRTOS/queue.c **** 
 856              		.loc 1 323 74 discriminator 8 view .LVU268
 857              	.LBB122:
 330:System/FreeRTOS/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 858              		.loc 1 330 4 discriminator 8 view .LVU269
 330:System/FreeRTOS/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 859              		.loc 1 330 20 is_stmt 0 discriminator 8 view .LVU270
 860 0048 5023     		movs	r3, #80
 861              	.LVL76:
 330:System/FreeRTOS/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 862              		.loc 1 330 20 discriminator 8 view .LVU271
 863 004a 0393     		str	r3, [sp, #12]
 331:System/FreeRTOS/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 864              		.loc 1 331 4 is_stmt 1 discriminator 8 view .LVU272
 865 004c 039B     		ldr	r3, [sp, #12]
 866 004e 502B     		cmp	r3, #80
 867 0050 13D0     		beq	.L62
 331:System/FreeRTOS/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 868              		.loc 1 331 4 view .LVU273
 869              	.LBB123:
 870              	.LBI123:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 871              		.loc 2 191 30 view .LVU274
 872              	.LBB124:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 873              		.loc 2 193 1 view .LVU275
 874              		.loc 2 195 2 view .LVU276
 875              		.syntax unified
 876              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 877 0052 4FF05003 			mov r3, #80												
 878 0056 83F31188 		msr basepri, r3											
 879 005a BFF36F8F 		isb														
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 65


 880 005e BFF34F8F 		dsb														
 881              	
 882              	@ 0 "" 2
 883              	.LVL77:
 884              		.thumb
 885              		.syntax unified
 886              	.L63:
 887              		.loc 2 195 2 is_stmt 0 view .LVU277
 888              	.LBE124:
 889              	.LBE123:
 331:System/FreeRTOS/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 890              		.loc 1 331 4 is_stmt 1 discriminator 5 view .LVU278
 331:System/FreeRTOS/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 891              		.loc 1 331 4 discriminator 5 view .LVU279
 331:System/FreeRTOS/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 892              		.loc 1 331 4 discriminator 5 view .LVU280
 893 0062 FEE7     		b	.L63
 894              	.LVL78:
 895              	.L67:
 331:System/FreeRTOS/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 896              		.loc 1 331 4 is_stmt 0 discriminator 5 view .LVU281
 897              	.LBE122:
 323:System/FreeRTOS/queue.c **** 
 898              		.loc 1 323 3 discriminator 2 view .LVU282
 899 0064 0029     		cmp	r1, #0
 900 0066 EFD0     		beq	.L60
 323:System/FreeRTOS/queue.c **** 
 901              		.loc 1 323 3 is_stmt 1 view .LVU283
 902              	.LBB125:
 903              	.LBI125:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 904              		.loc 2 191 30 view .LVU284
 905              	.LBB126:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 906              		.loc 2 193 1 view .LVU285
 907              		.loc 2 195 2 view .LVU286
 908              		.syntax unified
 909              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 910 0068 4FF05003 			mov r3, #80												
 911 006c 83F31188 		msr basepri, r3											
 912 0070 BFF36F8F 		isb														
 913 0074 BFF34F8F 		dsb														
 914              	
 915              	@ 0 "" 2
 916              	.LVL79:
 917              		.thumb
 918              		.syntax unified
 919              	.L61:
 920              		.loc 2 195 2 is_stmt 0 view .LVU287
 921              	.LBE126:
 922              	.LBE125:
 323:System/FreeRTOS/queue.c **** 
 923              		.loc 1 323 3 is_stmt 1 discriminator 4 view .LVU288
 323:System/FreeRTOS/queue.c **** 
 924              		.loc 1 323 3 discriminator 4 view .LVU289
 323:System/FreeRTOS/queue.c **** 
 925              		.loc 1 323 3 discriminator 4 view .LVU290
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 66


 926 0078 FEE7     		b	.L61
 927              	.L62:
 928              	.LBB127:
 331:System/FreeRTOS/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 929              		.loc 1 331 46 discriminator 2 view .LVU291
 332:System/FreeRTOS/queue.c **** 		}
 930              		.loc 1 332 4 discriminator 2 view .LVU292
 931 007a 039B     		ldr	r3, [sp, #12]
 932              	.LBE127:
 339:System/FreeRTOS/queue.c **** 
 933              		.loc 1 339 3 discriminator 2 view .LVU293
 934              	.LVL80:
 341:System/FreeRTOS/queue.c **** 		{
 935              		.loc 1 341 3 discriminator 2 view .LVU294
 348:System/FreeRTOS/queue.c **** 			}
 936              		.loc 1 348 5 discriminator 2 view .LVU295
 348:System/FreeRTOS/queue.c **** 			}
 937              		.loc 1 348 39 is_stmt 0 discriminator 2 view .LVU296
 938 007c 0123     		movs	r3, #1
 939 007e 84F84630 		strb	r3, [r4, #70]
 352:System/FreeRTOS/queue.c **** 		}
 940              		.loc 1 352 4 is_stmt 1 discriminator 2 view .LVU297
 941 0082 0094     		str	r4, [sp]
 942 0084 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 943 0088 6046     		mov	r0, ip
 944              	.LVL81:
 352:System/FreeRTOS/queue.c **** 		}
 945              		.loc 1 352 4 is_stmt 0 discriminator 2 view .LVU298
 946 008a FFF7FEFF 		bl	prvInitialiseNewQueue
 947              	.LVL82:
 356:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 948              		.loc 1 356 43 is_stmt 1 discriminator 2 view .LVU299
 357:System/FreeRTOS/queue.c **** 		}
 949              		.loc 1 357 28 discriminator 2 view .LVU300
 360:System/FreeRTOS/queue.c **** 	}
 950              		.loc 1 360 3 discriminator 2 view .LVU301
 361:System/FreeRTOS/queue.c **** 
 951              		.loc 1 361 2 is_stmt 0 discriminator 2 view .LVU302
 952 008e 2046     		mov	r0, r4
 953 0090 04B0     		add	sp, sp, #16
 954              	.LCFI10:
 955              		.cfi_def_cfa_offset 8
 956              		@ sp needed
 957 0092 10BD     		pop	{r4, pc}
 361:System/FreeRTOS/queue.c **** 
 958              		.loc 1 361 2 discriminator 2 view .LVU303
 959              		.cfi_endproc
 960              	.LFE6:
 962              		.section	.text.xQueueGenericCreate,"ax",%progbits
 963              		.align	1
 964              		.global	xQueueGenericCreate
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 969              	xQueueGenericCreate:
 970              	.LVL83:
 971              	.LFB7:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 67


 369:System/FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 972              		.loc 1 369 2 is_stmt 1 view -0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 370:System/FreeRTOS/queue.c **** 	size_t xQueueSizeInBytes;
 976              		.loc 1 370 2 view .LVU305
 371:System/FreeRTOS/queue.c **** 	uint8_t *pucQueueStorage;
 977              		.loc 1 371 2 view .LVU306
 372:System/FreeRTOS/queue.c **** 
 978              		.loc 1 372 2 view .LVU307
 374:System/FreeRTOS/queue.c **** 
 979              		.loc 1 374 3 view .LVU308
 980 0000 40B9     		cbnz	r0, .L69
 374:System/FreeRTOS/queue.c **** 
 981              		.loc 1 374 3 view .LVU309
 982              	.LBB128:
 983              	.LBI128:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 984              		.loc 2 191 30 view .LVU310
 985              	.LBB129:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 986              		.loc 2 193 1 view .LVU311
 987              		.loc 2 195 2 view .LVU312
 988              		.syntax unified
 989              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 990 0002 4FF05003 			mov r3, #80												
 991 0006 83F31188 		msr basepri, r3											
 992 000a BFF36F8F 		isb														
 993 000e BFF34F8F 		dsb														
 994              	
 995              	@ 0 "" 2
 996              	.LVL84:
 997              		.thumb
 998              		.syntax unified
 999              	.L70:
 1000              		.loc 2 195 2 is_stmt 0 view .LVU313
 1001              	.LBE129:
 1002              	.LBE128:
 374:System/FreeRTOS/queue.c **** 
 1003              		.loc 1 374 3 is_stmt 1 discriminator 1 view .LVU314
 374:System/FreeRTOS/queue.c **** 
 1004              		.loc 1 374 3 discriminator 1 view .LVU315
 374:System/FreeRTOS/queue.c **** 
 1005              		.loc 1 374 3 discriminator 1 view .LVU316
 1006 0012 FEE7     		b	.L70
 1007              	.L69:
 369:System/FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 1008              		.loc 1 369 2 is_stmt 0 discriminator 2 view .LVU317
 1009 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 1010              	.LCFI11:
 1011              		.cfi_def_cfa_offset 20
 1012              		.cfi_offset 4, -20
 1013              		.cfi_offset 5, -16
 1014              		.cfi_offset 6, -12
 1015              		.cfi_offset 7, -8
 1016              		.cfi_offset 14, -4
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 68


 1017 0016 83B0     		sub	sp, sp, #12
 1018              	.LCFI12:
 1019              		.cfi_def_cfa_offset 32
 1020 0018 0D46     		mov	r5, r1
 1021 001a 1446     		mov	r4, r2
 1022 001c 0646     		mov	r6, r0
 374:System/FreeRTOS/queue.c **** 
 1023              		.loc 1 374 52 is_stmt 1 discriminator 2 view .LVU318
 379:System/FreeRTOS/queue.c **** 
 1024              		.loc 1 379 3 discriminator 2 view .LVU319
 379:System/FreeRTOS/queue.c **** 
 1025              		.loc 1 379 21 is_stmt 0 discriminator 2 view .LVU320
 1026 001e 01FB00F0 		mul	r0, r1, r0
 1027              	.LVL85:
 390:System/FreeRTOS/queue.c **** 
 1028              		.loc 1 390 3 is_stmt 1 discriminator 2 view .LVU321
 390:System/FreeRTOS/queue.c **** 
 1029              		.loc 1 390 30 is_stmt 0 discriminator 2 view .LVU322
 1030 0022 5030     		adds	r0, r0, #80
 1031              	.LVL86:
 390:System/FreeRTOS/queue.c **** 
 1032              		.loc 1 390 30 discriminator 2 view .LVU323
 1033 0024 FFF7FEFF 		bl	pvPortMalloc
 1034              	.LVL87:
 392:System/FreeRTOS/queue.c **** 		{
 1035              		.loc 1 392 3 is_stmt 1 discriminator 2 view .LVU324
 392:System/FreeRTOS/queue.c **** 		{
 1036              		.loc 1 392 5 is_stmt 0 discriminator 2 view .LVU325
 1037 0028 0746     		mov	r7, r0
 1038 002a 50B1     		cbz	r0, .L68
 396:System/FreeRTOS/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 1039              		.loc 1 396 4 is_stmt 1 view .LVU326
 1040              	.LVL88:
 397:System/FreeRTOS/queue.c **** 
 1041              		.loc 1 397 4 view .LVU327
 404:System/FreeRTOS/queue.c **** 			}
 1042              		.loc 1 404 5 view .LVU328
 404:System/FreeRTOS/queue.c **** 			}
 1043              		.loc 1 404 39 is_stmt 0 view .LVU329
 1044 002c 0023     		movs	r3, #0
 1045 002e 80F84630 		strb	r3, [r0, #70]
 408:System/FreeRTOS/queue.c **** 		}
 1046              		.loc 1 408 4 is_stmt 1 view .LVU330
 1047 0032 0090     		str	r0, [sp]
 1048 0034 2346     		mov	r3, r4
 1049 0036 00F15002 		add	r2, r0, #80
 1050              	.LVL89:
 408:System/FreeRTOS/queue.c **** 		}
 1051              		.loc 1 408 4 is_stmt 0 view .LVU331
 1052 003a 2946     		mov	r1, r5
 1053 003c 3046     		mov	r0, r6
 1054              	.LVL90:
 408:System/FreeRTOS/queue.c **** 		}
 1055              		.loc 1 408 4 view .LVU332
 1056 003e FFF7FEFF 		bl	prvInitialiseNewQueue
 1057              	.LVL91:
 412:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 69


 1058              		.loc 1 412 43 is_stmt 1 view .LVU333
 413:System/FreeRTOS/queue.c **** 		}
 1059              		.loc 1 413 28 view .LVU334
 416:System/FreeRTOS/queue.c **** 	}
 1060              		.loc 1 416 3 view .LVU335
 1061              	.L68:
 417:System/FreeRTOS/queue.c **** 
 1062              		.loc 1 417 2 is_stmt 0 view .LVU336
 1063 0042 3846     		mov	r0, r7
 1064 0044 03B0     		add	sp, sp, #12
 1065              	.LCFI13:
 1066              		.cfi_def_cfa_offset 20
 1067              		@ sp needed
 1068 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 417:System/FreeRTOS/queue.c **** 
 1069              		.loc 1 417 2 view .LVU337
 1070              		.cfi_endproc
 1071              	.LFE7:
 1073              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 1074              		.align	1
 1075              		.global	xQueueCreateCountingSemaphoreStatic
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1080              	xQueueCreateCountingSemaphoreStatic:
 1081              	.LVL92:
 1082              	.LFB12:
 687:System/FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 1083              		.loc 1 687 2 is_stmt 1 view -0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 688:System/FreeRTOS/queue.c **** 
 1087              		.loc 1 688 2 view .LVU339
 690:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1088              		.loc 1 690 3 view .LVU340
 1089 0000 40B9     		cbnz	r0, .L75
 690:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1090              		.loc 1 690 3 view .LVU341
 1091              	.LBB130:
 1092              	.LBI130:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1093              		.loc 2 191 30 view .LVU342
 1094              	.LBB131:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1095              		.loc 2 193 1 view .LVU343
 1096              		.loc 2 195 2 view .LVU344
 1097              		.syntax unified
 1098              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1099 0002 4FF05003 			mov r3, #80												
 1100 0006 83F31188 		msr basepri, r3											
 1101 000a BFF36F8F 		isb														
 1102 000e BFF34F8F 		dsb														
 1103              	
 1104              	@ 0 "" 2
 1105              	.LVL93:
 1106              		.thumb
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 70


 1107              		.syntax unified
 1108              	.L76:
 1109              		.loc 2 195 2 is_stmt 0 view .LVU345
 1110              	.LBE131:
 1111              	.LBE130:
 690:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1112              		.loc 1 690 3 is_stmt 1 discriminator 1 view .LVU346
 690:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1113              		.loc 1 690 3 discriminator 1 view .LVU347
 690:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1114              		.loc 1 690 3 discriminator 1 view .LVU348
 1115 0012 FEE7     		b	.L76
 1116              	.L75:
 687:System/FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 1117              		.loc 1 687 2 is_stmt 0 discriminator 2 view .LVU349
 1118 0014 10B5     		push	{r4, lr}
 1119              	.LCFI14:
 1120              		.cfi_def_cfa_offset 8
 1121              		.cfi_offset 4, -8
 1122              		.cfi_offset 14, -4
 1123 0016 82B0     		sub	sp, sp, #8
 1124              	.LCFI15:
 1125              		.cfi_def_cfa_offset 16
 1126 0018 0C46     		mov	r4, r1
 690:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1127              		.loc 1 690 34 is_stmt 1 discriminator 2 view .LVU350
 691:System/FreeRTOS/queue.c **** 
 1128              		.loc 1 691 3 discriminator 2 view .LVU351
 1129 001a 8842     		cmp	r0, r1
 1130 001c 08D2     		bcs	.L77
 691:System/FreeRTOS/queue.c **** 
 1131              		.loc 1 691 3 view .LVU352
 1132              	.LBB132:
 1133              	.LBI132:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1134              		.loc 2 191 30 view .LVU353
 1135              	.LBB133:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1136              		.loc 2 193 1 view .LVU354
 1137              		.loc 2 195 2 view .LVU355
 1138              		.syntax unified
 1139              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1140 001e 4FF05003 			mov r3, #80												
 1141 0022 83F31188 		msr basepri, r3											
 1142 0026 BFF36F8F 		isb														
 1143 002a BFF34F8F 		dsb														
 1144              	
 1145              	@ 0 "" 2
 1146              	.LVL94:
 1147              		.thumb
 1148              		.syntax unified
 1149              	.L78:
 1150              		.loc 2 195 2 is_stmt 0 view .LVU356
 1151              	.LBE133:
 1152              	.LBE132:
 691:System/FreeRTOS/queue.c **** 
 1153              		.loc 1 691 3 is_stmt 1 discriminator 2 view .LVU357
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 71


 691:System/FreeRTOS/queue.c **** 
 1154              		.loc 1 691 3 discriminator 2 view .LVU358
 691:System/FreeRTOS/queue.c **** 
 1155              		.loc 1 691 3 discriminator 2 view .LVU359
 1156 002e FEE7     		b	.L78
 1157              	.L77:
 691:System/FreeRTOS/queue.c **** 
 1158              		.loc 1 691 47 discriminator 2 view .LVU360
 693:System/FreeRTOS/queue.c **** 
 1159              		.loc 1 693 3 discriminator 2 view .LVU361
 693:System/FreeRTOS/queue.c **** 
 1160              		.loc 1 693 13 is_stmt 0 discriminator 2 view .LVU362
 1161 0030 0223     		movs	r3, #2
 1162 0032 0093     		str	r3, [sp]
 1163 0034 1346     		mov	r3, r2
 1164 0036 0022     		movs	r2, #0
 1165              	.LVL95:
 693:System/FreeRTOS/queue.c **** 
 1166              		.loc 1 693 13 discriminator 2 view .LVU363
 1167 0038 1146     		mov	r1, r2
 1168              	.LVL96:
 693:System/FreeRTOS/queue.c **** 
 1169              		.loc 1 693 13 discriminator 2 view .LVU364
 1170 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 1171              	.LVL97:
 695:System/FreeRTOS/queue.c **** 		{
 1172              		.loc 1 695 3 is_stmt 1 discriminator 2 view .LVU365
 695:System/FreeRTOS/queue.c **** 		{
 1173              		.loc 1 695 5 is_stmt 0 discriminator 2 view .LVU366
 1174 003e 00B1     		cbz	r0, .L74
 697:System/FreeRTOS/queue.c **** 
 1175              		.loc 1 697 4 is_stmt 1 view .LVU367
 697:System/FreeRTOS/queue.c **** 
 1176              		.loc 1 697 49 is_stmt 0 view .LVU368
 1177 0040 8463     		str	r4, [r0, #56]
 699:System/FreeRTOS/queue.c **** 		}
 1178              		.loc 1 699 36 is_stmt 1 view .LVU369
 703:System/FreeRTOS/queue.c **** 		}
 1179              		.loc 1 703 43 view .LVU370
 706:System/FreeRTOS/queue.c **** 	}
 1180              		.loc 1 706 3 view .LVU371
 1181              	.L74:
 707:System/FreeRTOS/queue.c **** 
 1182              		.loc 1 707 2 is_stmt 0 view .LVU372
 1183 0042 02B0     		add	sp, sp, #8
 1184              	.LCFI16:
 1185              		.cfi_def_cfa_offset 8
 1186              		@ sp needed
 1187 0044 10BD     		pop	{r4, pc}
 707:System/FreeRTOS/queue.c **** 
 1188              		.loc 1 707 2 view .LVU373
 1189              		.cfi_endproc
 1190              	.LFE12:
 1192              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 1193              		.align	1
 1194              		.global	xQueueCreateCountingSemaphore
 1195              		.syntax unified
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 72


 1196              		.thumb
 1197              		.thumb_func
 1199              	xQueueCreateCountingSemaphore:
 1200              	.LVL98:
 1201              	.LFB13:
 715:System/FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 1202              		.loc 1 715 2 is_stmt 1 view -0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 0
 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 716:System/FreeRTOS/queue.c **** 
 1206              		.loc 1 716 2 view .LVU375
 718:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1207              		.loc 1 718 3 view .LVU376
 1208 0000 40B9     		cbnz	r0, .L83
 718:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1209              		.loc 1 718 3 view .LVU377
 1210              	.LBB134:
 1211              	.LBI134:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1212              		.loc 2 191 30 view .LVU378
 1213              	.LBB135:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1214              		.loc 2 193 1 view .LVU379
 1215              		.loc 2 195 2 view .LVU380
 1216              		.syntax unified
 1217              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1218 0002 4FF05003 			mov r3, #80												
 1219 0006 83F31188 		msr basepri, r3											
 1220 000a BFF36F8F 		isb														
 1221 000e BFF34F8F 		dsb														
 1222              	
 1223              	@ 0 "" 2
 1224              	.LVL99:
 1225              		.thumb
 1226              		.syntax unified
 1227              	.L84:
 1228              		.loc 2 195 2 is_stmt 0 view .LVU381
 1229              	.LBE135:
 1230              	.LBE134:
 718:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1231              		.loc 1 718 3 is_stmt 1 discriminator 1 view .LVU382
 718:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1232              		.loc 1 718 3 discriminator 1 view .LVU383
 718:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1233              		.loc 1 718 3 discriminator 1 view .LVU384
 1234 0012 FEE7     		b	.L84
 1235              	.L83:
 715:System/FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 1236              		.loc 1 715 2 is_stmt 0 discriminator 2 view .LVU385
 1237 0014 10B5     		push	{r4, lr}
 1238              	.LCFI17:
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 4, -8
 1241              		.cfi_offset 14, -4
 1242 0016 0C46     		mov	r4, r1
 718:System/FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 73


 1243              		.loc 1 718 34 is_stmt 1 discriminator 2 view .LVU386
 719:System/FreeRTOS/queue.c **** 
 1244              		.loc 1 719 3 discriminator 2 view .LVU387
 1245 0018 8842     		cmp	r0, r1
 1246 001a 08D2     		bcs	.L85
 719:System/FreeRTOS/queue.c **** 
 1247              		.loc 1 719 3 view .LVU388
 1248              	.LBB136:
 1249              	.LBI136:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1250              		.loc 2 191 30 view .LVU389
 1251              	.LBB137:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1252              		.loc 2 193 1 view .LVU390
 1253              		.loc 2 195 2 view .LVU391
 1254              		.syntax unified
 1255              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1256 001c 4FF05003 			mov r3, #80												
 1257 0020 83F31188 		msr basepri, r3											
 1258 0024 BFF36F8F 		isb														
 1259 0028 BFF34F8F 		dsb														
 1260              	
 1261              	@ 0 "" 2
 1262              	.LVL100:
 1263              		.thumb
 1264              		.syntax unified
 1265              	.L86:
 1266              		.loc 2 195 2 is_stmt 0 view .LVU392
 1267              	.LBE137:
 1268              	.LBE136:
 719:System/FreeRTOS/queue.c **** 
 1269              		.loc 1 719 3 is_stmt 1 discriminator 2 view .LVU393
 719:System/FreeRTOS/queue.c **** 
 1270              		.loc 1 719 3 discriminator 2 view .LVU394
 719:System/FreeRTOS/queue.c **** 
 1271              		.loc 1 719 3 discriminator 2 view .LVU395
 1272 002c FEE7     		b	.L86
 1273              	.L85:
 719:System/FreeRTOS/queue.c **** 
 1274              		.loc 1 719 47 discriminator 2 view .LVU396
 721:System/FreeRTOS/queue.c **** 
 1275              		.loc 1 721 3 discriminator 2 view .LVU397
 721:System/FreeRTOS/queue.c **** 
 1276              		.loc 1 721 13 is_stmt 0 discriminator 2 view .LVU398
 1277 002e 0222     		movs	r2, #2
 1278 0030 0021     		movs	r1, #0
 1279              	.LVL101:
 721:System/FreeRTOS/queue.c **** 
 1280              		.loc 1 721 13 discriminator 2 view .LVU399
 1281 0032 FFF7FEFF 		bl	xQueueGenericCreate
 1282              	.LVL102:
 723:System/FreeRTOS/queue.c **** 		{
 1283              		.loc 1 723 3 is_stmt 1 discriminator 2 view .LVU400
 723:System/FreeRTOS/queue.c **** 		{
 1284              		.loc 1 723 5 is_stmt 0 discriminator 2 view .LVU401
 1285 0036 00B1     		cbz	r0, .L82
 725:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 74


 1286              		.loc 1 725 4 is_stmt 1 view .LVU402
 725:System/FreeRTOS/queue.c **** 
 1287              		.loc 1 725 49 is_stmt 0 view .LVU403
 1288 0038 8463     		str	r4, [r0, #56]
 727:System/FreeRTOS/queue.c **** 		}
 1289              		.loc 1 727 36 is_stmt 1 view .LVU404
 731:System/FreeRTOS/queue.c **** 		}
 1290              		.loc 1 731 43 view .LVU405
 734:System/FreeRTOS/queue.c **** 	}
 1291              		.loc 1 734 3 view .LVU406
 1292              	.L82:
 735:System/FreeRTOS/queue.c **** 
 1293              		.loc 1 735 2 is_stmt 0 view .LVU407
 1294 003a 10BD     		pop	{r4, pc}
 735:System/FreeRTOS/queue.c **** 
 1295              		.loc 1 735 2 view .LVU408
 1296              		.cfi_endproc
 1297              	.LFE13:
 1299              		.section	.text.xQueueGenericSend,"ax",%progbits
 1300              		.align	1
 1301              		.global	xQueueGenericSend
 1302              		.syntax unified
 1303              		.thumb
 1304              		.thumb_func
 1306              	xQueueGenericSend:
 1307              	.LVL103:
 1308              	.LFB14:
 741:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1309              		.loc 1 741 1 is_stmt 1 view -0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 16
 1312              		@ frame_needed = 0, uses_anonymous_args = 0
 741:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1313              		.loc 1 741 1 is_stmt 0 view .LVU410
 1314 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1315              	.LCFI18:
 1316              		.cfi_def_cfa_offset 20
 1317              		.cfi_offset 4, -20
 1318              		.cfi_offset 5, -16
 1319              		.cfi_offset 6, -12
 1320              		.cfi_offset 7, -8
 1321              		.cfi_offset 14, -4
 1322 0002 85B0     		sub	sp, sp, #20
 1323              	.LCFI19:
 1324              		.cfi_def_cfa_offset 40
 1325 0004 0192     		str	r2, [sp, #4]
 742:System/FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 1326              		.loc 1 742 1 is_stmt 1 view .LVU411
 1327              	.LVL104:
 743:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 1328              		.loc 1 743 1 view .LVU412
 744:System/FreeRTOS/queue.c **** 
 1329              		.loc 1 744 1 view .LVU413
 746:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1330              		.loc 1 746 2 view .LVU414
 1331 0006 88B1     		cbz	r0, .L114
 1332 0008 0F46     		mov	r7, r1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 75


 1333 000a 1D46     		mov	r5, r3
 1334 000c 0446     		mov	r4, r0
 746:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1335              		.loc 1 746 25 discriminator 2 view .LVU415
 747:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1336              		.loc 1 747 2 discriminator 2 view .LVU416
 1337 000e B1B1     		cbz	r1, .L115
 1338              	.LVL105:
 1339              	.L93:
 747:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1340              		.loc 1 747 97 discriminator 8 view .LVU417
 748:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1341              		.loc 1 748 2 discriminator 8 view .LVU418
 1342 0010 022D     		cmp	r5, #2
 1343 0012 20D1     		bne	.L95
 748:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1344              		.loc 1 748 2 is_stmt 0 discriminator 2 view .LVU419
 1345 0014 E36B     		ldr	r3, [r4, #60]
 1346 0016 012B     		cmp	r3, #1
 1347 0018 1DD0     		beq	.L95
 748:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1348              		.loc 1 748 2 is_stmt 1 view .LVU420
 1349              	.LBB138:
 1350              	.LBI138:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1351              		.loc 2 191 30 view .LVU421
 1352              	.LBB139:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1353              		.loc 2 193 1 view .LVU422
 1354              		.loc 2 195 2 view .LVU423
 1355              		.syntax unified
 1356              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1357 001a 4FF05003 			mov r3, #80												
 1358 001e 83F31188 		msr basepri, r3											
 1359 0022 BFF36F8F 		isb														
 1360 0026 BFF34F8F 		dsb														
 1361              	
 1362              	@ 0 "" 2
 1363              	.LVL106:
 1364              		.thumb
 1365              		.syntax unified
 1366              	.L96:
 1367              		.loc 2 195 2 is_stmt 0 view .LVU424
 1368              	.LBE139:
 1369              	.LBE138:
 748:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1370              		.loc 1 748 2 is_stmt 1 discriminator 3 view .LVU425
 748:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1371              		.loc 1 748 2 discriminator 3 view .LVU426
 748:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1372              		.loc 1 748 2 discriminator 3 view .LVU427
 1373 002a FEE7     		b	.L96
 1374              	.LVL107:
 1375              	.L114:
 746:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1376              		.loc 1 746 2 view .LVU428
 1377              	.LBB140:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 76


 1378              	.LBI140:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1379              		.loc 2 191 30 view .LVU429
 1380              	.LBB141:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1381              		.loc 2 193 1 view .LVU430
 1382              		.loc 2 195 2 view .LVU431
 1383              		.syntax unified
 1384              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1385 002c 4FF05003 			mov r3, #80												
 1386 0030 83F31188 		msr basepri, r3											
 1387 0034 BFF36F8F 		isb														
 1388 0038 BFF34F8F 		dsb														
 1389              	
 1390              	@ 0 "" 2
 1391              	.LVL108:
 1392              		.thumb
 1393              		.syntax unified
 1394              	.L92:
 1395              		.loc 2 195 2 is_stmt 0 view .LVU432
 1396              	.LBE141:
 1397              	.LBE140:
 746:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1398              		.loc 1 746 2 is_stmt 1 discriminator 1 view .LVU433
 746:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1399              		.loc 1 746 2 discriminator 1 view .LVU434
 746:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1400              		.loc 1 746 2 discriminator 1 view .LVU435
 1401 003c FEE7     		b	.L92
 1402              	.LVL109:
 1403              	.L115:
 747:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1404              		.loc 1 747 2 is_stmt 0 discriminator 2 view .LVU436
 1405 003e 036C     		ldr	r3, [r0, #64]
 1406              	.LVL110:
 747:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1407              		.loc 1 747 2 discriminator 2 view .LVU437
 1408 0040 002B     		cmp	r3, #0
 1409 0042 E5D0     		beq	.L93
 747:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1410              		.loc 1 747 2 is_stmt 1 view .LVU438
 1411              	.LBB142:
 1412              	.LBI142:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1413              		.loc 2 191 30 view .LVU439
 1414              	.LBB143:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1415              		.loc 2 193 1 view .LVU440
 1416              		.loc 2 195 2 view .LVU441
 1417              		.syntax unified
 1418              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1419 0044 4FF05003 			mov r3, #80												
 1420 0048 83F31188 		msr basepri, r3											
 1421 004c BFF36F8F 		isb														
 1422 0050 BFF34F8F 		dsb														
 1423              	
 1424              	@ 0 "" 2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 77


 1425              	.LVL111:
 1426              		.thumb
 1427              		.syntax unified
 1428              	.L94:
 1429              		.loc 2 195 2 is_stmt 0 view .LVU442
 1430              	.LBE143:
 1431              	.LBE142:
 747:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1432              		.loc 1 747 2 is_stmt 1 discriminator 2 view .LVU443
 747:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1433              		.loc 1 747 2 discriminator 2 view .LVU444
 747:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1434              		.loc 1 747 2 discriminator 2 view .LVU445
 1435 0054 FEE7     		b	.L94
 1436              	.L95:
 748:System/FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1437              		.loc 1 748 88 discriminator 8 view .LVU446
 751:System/FreeRTOS/queue.c **** 	}
 1438              		.loc 1 751 3 discriminator 8 view .LVU447
 1439 0056 FFF7FEFF 		bl	xTaskGetSchedulerState
 1440              	.LVL112:
 751:System/FreeRTOS/queue.c **** 	}
 1441              		.loc 1 751 3 is_stmt 0 discriminator 8 view .LVU448
 1442 005a 0646     		mov	r6, r0
 1443 005c 58B9     		cbnz	r0, .L112
 751:System/FreeRTOS/queue.c **** 	}
 1444              		.loc 1 751 3 discriminator 2 view .LVU449
 1445 005e 019B     		ldr	r3, [sp, #4]
 1446 0060 002B     		cmp	r3, #0
 1447 0062 48D0     		beq	.L99
 751:System/FreeRTOS/queue.c **** 	}
 1448              		.loc 1 751 3 is_stmt 1 view .LVU450
 1449              	.LBB144:
 1450              	.LBI144:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1451              		.loc 2 191 30 view .LVU451
 1452              	.LBB145:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1453              		.loc 2 193 1 view .LVU452
 1454              		.loc 2 195 2 view .LVU453
 1455              		.syntax unified
 1456              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1457 0064 4FF05003 			mov r3, #80												
 1458 0068 83F31188 		msr basepri, r3											
 1459 006c BFF36F8F 		isb														
 1460 0070 BFF34F8F 		dsb														
 1461              	
 1462              	@ 0 "" 2
 1463              	.LVL113:
 1464              		.thumb
 1465              		.syntax unified
 1466              	.L98:
 1467              		.loc 2 195 2 is_stmt 0 view .LVU454
 1468              	.LBE145:
 1469              	.LBE144:
 751:System/FreeRTOS/queue.c **** 	}
 1470              		.loc 1 751 3 is_stmt 1 discriminator 4 view .LVU455
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 78


 751:System/FreeRTOS/queue.c **** 	}
 1471              		.loc 1 751 3 discriminator 4 view .LVU456
 751:System/FreeRTOS/queue.c **** 	}
 1472              		.loc 1 751 3 discriminator 4 view .LVU457
 1473 0074 FEE7     		b	.L98
 1474              	.L112:
 1475 0076 0026     		movs	r6, #0
 1476 0078 3DE0     		b	.L99
 1477              	.LVL114:
 1478              	.L100:
 769:System/FreeRTOS/queue.c **** 
 1479              		.loc 1 769 31 view .LVU458
 833:System/FreeRTOS/queue.c **** 
 1480              		.loc 1 833 6 view .LVU459
 833:System/FreeRTOS/queue.c **** 
 1481              		.loc 1 833 23 is_stmt 0 view .LVU460
 1482 007a 2A46     		mov	r2, r5
 1483 007c 3946     		mov	r1, r7
 1484 007e 2046     		mov	r0, r4
 1485 0080 FFF7FEFF 		bl	prvCopyDataToQueue
 1486              	.LVL115:
 837:System/FreeRTOS/queue.c **** 					{
 1487              		.loc 1 837 6 is_stmt 1 view .LVU461
 837:System/FreeRTOS/queue.c **** 					{
 1488              		.loc 1 837 10 is_stmt 0 view .LVU462
 1489 0084 636A     		ldr	r3, [r4, #36]
 837:System/FreeRTOS/queue.c **** 					{
 1490              		.loc 1 837 8 view .LVU463
 1491 0086 7BB9     		cbnz	r3, .L116
 852:System/FreeRTOS/queue.c **** 					{
 1492              		.loc 1 852 11 is_stmt 1 view .LVU464
 852:System/FreeRTOS/queue.c **** 					{
 1493              		.loc 1 852 13 is_stmt 0 view .LVU465
 1494 0088 48B1     		cbz	r0, .L103
 858:System/FreeRTOS/queue.c **** 					}
 1495              		.loc 1 858 7 is_stmt 1 view .LVU466
 1496 008a 4FF0E023 		mov	r3, #-536813568
 1497 008e 4FF08052 		mov	r2, #268435456
 1498 0092 C3F8042D 		str	r2, [r3, #3332]
 858:System/FreeRTOS/queue.c **** 					}
 1499              		.loc 1 858 7 view .LVU467
 1500              		.syntax unified
 1501              	@ 858 "System/FreeRTOS/queue.c" 1
 1502 0096 BFF34F8F 		dsb
 1503              	@ 0 "" 2
 858:System/FreeRTOS/queue.c **** 					}
 1504              		.loc 1 858 7 view .LVU468
 1505              	@ 858 "System/FreeRTOS/queue.c" 1
 1506 009a BFF36F8F 		isb
 1507              	@ 0 "" 2
 858:System/FreeRTOS/queue.c **** 					}
 1508              		.loc 1 858 39 view .LVU469
 1509              	.LVL116:
 1510              		.thumb
 1511              		.syntax unified
 1512              	.L103:
 862:System/FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 79


 1513              		.loc 1 862 31 view .LVU470
 867:System/FreeRTOS/queue.c **** 				return pdPASS;
 1514              		.loc 1 867 5 view .LVU471
 1515 009e FFF7FEFF 		bl	vPortExitCritical
 1516              	.LVL117:
 868:System/FreeRTOS/queue.c **** 			}
 1517              		.loc 1 868 5 view .LVU472
 868:System/FreeRTOS/queue.c **** 			}
 1518              		.loc 1 868 12 is_stmt 0 view .LVU473
 1519 00a2 0120     		movs	r0, #1
 1520              	.L90:
 947:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1521              		.loc 1 947 1 view .LVU474
 1522 00a4 05B0     		add	sp, sp, #20
 1523              	.LCFI20:
 1524              		.cfi_remember_state
 1525              		.cfi_def_cfa_offset 20
 1526              		@ sp needed
 1527 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1528              	.LVL118:
 1529              	.L116:
 1530              	.LCFI21:
 1531              		.cfi_restore_state
 839:System/FreeRTOS/queue.c **** 						{
 1532              		.loc 1 839 7 is_stmt 1 view .LVU475
 839:System/FreeRTOS/queue.c **** 						{
 1533              		.loc 1 839 11 is_stmt 0 view .LVU476
 1534 00a8 04F12400 		add	r0, r4, #36
 1535              	.LVL119:
 839:System/FreeRTOS/queue.c **** 						{
 1536              		.loc 1 839 11 view .LVU477
 1537 00ac FFF7FEFF 		bl	xTaskRemoveFromEventList
 1538              	.LVL120:
 839:System/FreeRTOS/queue.c **** 						{
 1539              		.loc 1 839 9 view .LVU478
 1540 00b0 0028     		cmp	r0, #0
 1541 00b2 F4D0     		beq	.L103
 845:System/FreeRTOS/queue.c **** 						}
 1542              		.loc 1 845 8 is_stmt 1 view .LVU479
 1543 00b4 4FF0E023 		mov	r3, #-536813568
 1544 00b8 4FF08052 		mov	r2, #268435456
 1545 00bc C3F8042D 		str	r2, [r3, #3332]
 845:System/FreeRTOS/queue.c **** 						}
 1546              		.loc 1 845 8 view .LVU480
 1547              		.syntax unified
 1548              	@ 845 "System/FreeRTOS/queue.c" 1
 1549 00c0 BFF34F8F 		dsb
 1550              	@ 0 "" 2
 845:System/FreeRTOS/queue.c **** 						}
 1551              		.loc 1 845 8 view .LVU481
 1552              	@ 845 "System/FreeRTOS/queue.c" 1
 1553 00c4 BFF36F8F 		isb
 1554              	@ 0 "" 2
 845:System/FreeRTOS/queue.c **** 						}
 1555              		.loc 1 845 40 view .LVU482
 1556              		.thumb
 1557              		.syntax unified
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 80


 1558 00c8 E9E7     		b	.L103
 1559              	.L117:
 876:System/FreeRTOS/queue.c **** 
 1560              		.loc 1 876 6 view .LVU483
 1561 00ca FFF7FEFF 		bl	vPortExitCritical
 1562              	.LVL121:
 880:System/FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 1563              		.loc 1 880 39 view .LVU484
 881:System/FreeRTOS/queue.c **** 				}
 1564              		.loc 1 881 6 view .LVU485
 881:System/FreeRTOS/queue.c **** 				}
 1565              		.loc 1 881 13 is_stmt 0 view .LVU486
 1566 00ce 0020     		movs	r0, #0
 1567 00d0 E8E7     		b	.L90
 1568              	.L118:
 887:System/FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1569              		.loc 1 887 6 is_stmt 1 view .LVU487
 1570 00d2 02A8     		add	r0, sp, #8
 1571 00d4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1572              	.LVL122:
 888:System/FreeRTOS/queue.c **** 				}
 1573              		.loc 1 888 6 view .LVU488
 888:System/FreeRTOS/queue.c **** 				}
 1574              		.loc 1 888 20 is_stmt 0 view .LVU489
 1575 00d8 0126     		movs	r6, #1
 1576 00da 19E0     		b	.L106
 1577              	.LVL123:
 1578              	.L119:
 903:System/FreeRTOS/queue.c **** 
 1579              		.loc 1 903 3 is_stmt 1 discriminator 1 view .LVU490
 1580 00dc 0023     		movs	r3, #0
 1581 00de 84F84430 		strb	r3, [r4, #68]
 1582 00e2 21E0     		b	.L107
 1583              	.L120:
 903:System/FreeRTOS/queue.c **** 
 1584              		.loc 1 903 3 discriminator 4 view .LVU491
 1585 00e4 0023     		movs	r3, #0
 1586 00e6 84F84530 		strb	r3, [r4, #69]
 1587 00ea 23E0     		b	.L108
 1588              	.L110:
 933:System/FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1589              		.loc 1 933 5 view .LVU492
 1590 00ec 2046     		mov	r0, r4
 1591 00ee FFF7FEFF 		bl	prvUnlockQueue
 1592              	.LVL124:
 934:System/FreeRTOS/queue.c **** 			}
 1593              		.loc 1 934 5 view .LVU493
 934:System/FreeRTOS/queue.c **** 			}
 1594              		.loc 1 934 14 is_stmt 0 view .LVU494
 1595 00f2 FFF7FEFF 		bl	xTaskResumeAll
 1596              	.LVL125:
 1597              	.L99:
 751:System/FreeRTOS/queue.c **** 	}
 1598              		.loc 1 751 104 is_stmt 1 discriminator 8 view .LVU495
 759:System/FreeRTOS/queue.c **** 	{
 1599              		.loc 1 759 2 discriminator 8 view .LVU496
 761:System/FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 81


 1600              		.loc 1 761 3 discriminator 8 view .LVU497
 1601 00f6 FFF7FEFF 		bl	vPortEnterCritical
 1602              	.LVL126:
 767:System/FreeRTOS/queue.c **** 			{
 1603              		.loc 1 767 4 discriminator 8 view .LVU498
 767:System/FreeRTOS/queue.c **** 			{
 1604              		.loc 1 767 17 is_stmt 0 discriminator 8 view .LVU499
 1605 00fa A26B     		ldr	r2, [r4, #56]
 767:System/FreeRTOS/queue.c **** 			{
 1606              		.loc 1 767 46 discriminator 8 view .LVU500
 1607 00fc E36B     		ldr	r3, [r4, #60]
 767:System/FreeRTOS/queue.c **** 			{
 1608              		.loc 1 767 6 discriminator 8 view .LVU501
 1609 00fe 9A42     		cmp	r2, r3
 1610 0100 BBD3     		bcc	.L100
 767:System/FreeRTOS/queue.c **** 			{
 1611              		.loc 1 767 59 discriminator 1 view .LVU502
 1612 0102 022D     		cmp	r5, #2
 1613 0104 B9D0     		beq	.L100
 872:System/FreeRTOS/queue.c **** 				{
 1614              		.loc 1 872 5 is_stmt 1 view .LVU503
 872:System/FreeRTOS/queue.c **** 				{
 1615              		.loc 1 872 22 is_stmt 0 view .LVU504
 1616 0106 019B     		ldr	r3, [sp, #4]
 872:System/FreeRTOS/queue.c **** 				{
 1617              		.loc 1 872 7 view .LVU505
 1618 0108 002B     		cmp	r3, #0
 1619 010a DED0     		beq	.L117
 883:System/FreeRTOS/queue.c **** 				{
 1620              		.loc 1 883 10 is_stmt 1 view .LVU506
 883:System/FreeRTOS/queue.c **** 				{
 1621              		.loc 1 883 12 is_stmt 0 view .LVU507
 1622 010c 002E     		cmp	r6, #0
 1623 010e E0D0     		beq	.L118
 1624              	.LVL127:
 1625              	.L106:
 893:System/FreeRTOS/queue.c **** 				}
 1626              		.loc 1 893 30 is_stmt 1 view .LVU508
 897:System/FreeRTOS/queue.c **** 
 1627              		.loc 1 897 3 view .LVU509
 1628 0110 FFF7FEFF 		bl	vPortExitCritical
 1629              	.LVL128:
 902:System/FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 1630              		.loc 1 902 3 view .LVU510
 1631 0114 FFF7FEFF 		bl	vTaskSuspendAll
 1632              	.LVL129:
 903:System/FreeRTOS/queue.c **** 
 1633              		.loc 1 903 3 view .LVU511
 1634 0118 FFF7FEFF 		bl	vPortEnterCritical
 1635              	.LVL130:
 903:System/FreeRTOS/queue.c **** 
 1636              		.loc 1 903 3 view .LVU512
 1637 011c 94F84420 		ldrb	r2, [r4, #68]	@ zero_extendqisi2
 1638 0120 52B2     		sxtb	r2, r2
 1639 0122 B2F1FF3F 		cmp	r2, #-1
 1640 0126 D9D0     		beq	.L119
 1641              	.L107:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 82


 903:System/FreeRTOS/queue.c **** 
 1642              		.loc 1 903 3 discriminator 3 view .LVU513
 1643 0128 94F84520 		ldrb	r2, [r4, #69]	@ zero_extendqisi2
 1644 012c 52B2     		sxtb	r2, r2
 1645 012e B2F1FF3F 		cmp	r2, #-1
 1646 0132 D7D0     		beq	.L120
 1647              	.L108:
 903:System/FreeRTOS/queue.c **** 
 1648              		.loc 1 903 3 discriminator 6 view .LVU514
 1649 0134 FFF7FEFF 		bl	vPortExitCritical
 1650              	.LVL131:
 906:System/FreeRTOS/queue.c **** 		{
 1651              		.loc 1 906 3 discriminator 6 view .LVU515
 906:System/FreeRTOS/queue.c **** 		{
 1652              		.loc 1 906 7 is_stmt 0 discriminator 6 view .LVU516
 1653 0138 01A9     		add	r1, sp, #4
 1654 013a 02A8     		add	r0, sp, #8
 1655 013c FFF7FEFF 		bl	xTaskCheckForTimeOut
 1656              	.LVL132:
 906:System/FreeRTOS/queue.c **** 		{
 1657              		.loc 1 906 5 discriminator 6 view .LVU517
 1658 0140 D8B9     		cbnz	r0, .L109
 908:System/FreeRTOS/queue.c **** 			{
 1659              		.loc 1 908 4 is_stmt 1 view .LVU518
 908:System/FreeRTOS/queue.c **** 			{
 1660              		.loc 1 908 8 is_stmt 0 view .LVU519
 1661 0142 2046     		mov	r0, r4
 1662 0144 FFF7FEFF 		bl	prvIsQueueFull
 1663              	.LVL133:
 908:System/FreeRTOS/queue.c **** 			{
 1664              		.loc 1 908 6 view .LVU520
 1665 0148 0028     		cmp	r0, #0
 1666 014a CFD0     		beq	.L110
 910:System/FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 1667              		.loc 1 910 43 is_stmt 1 view .LVU521
 911:System/FreeRTOS/queue.c **** 
 1668              		.loc 1 911 5 view .LVU522
 1669 014c 0199     		ldr	r1, [sp, #4]
 1670 014e 04F11000 		add	r0, r4, #16
 1671 0152 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1672              	.LVL134:
 918:System/FreeRTOS/queue.c **** 
 1673              		.loc 1 918 5 view .LVU523
 1674 0156 2046     		mov	r0, r4
 1675 0158 FFF7FEFF 		bl	prvUnlockQueue
 1676              	.LVL135:
 925:System/FreeRTOS/queue.c **** 				{
 1677              		.loc 1 925 5 view .LVU524
 925:System/FreeRTOS/queue.c **** 				{
 1678              		.loc 1 925 9 is_stmt 0 view .LVU525
 1679 015c FFF7FEFF 		bl	xTaskResumeAll
 1680              	.LVL136:
 925:System/FreeRTOS/queue.c **** 				{
 1681              		.loc 1 925 7 view .LVU526
 1682 0160 0028     		cmp	r0, #0
 1683 0162 C8D1     		bne	.L99
 927:System/FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 83


 1684              		.loc 1 927 6 is_stmt 1 view .LVU527
 1685 0164 4FF0E023 		mov	r3, #-536813568
 1686 0168 4FF08052 		mov	r2, #268435456
 1687 016c C3F8042D 		str	r2, [r3, #3332]
 927:System/FreeRTOS/queue.c **** 				}
 1688              		.loc 1 927 6 view .LVU528
 1689              		.syntax unified
 1690              	@ 927 "System/FreeRTOS/queue.c" 1
 1691 0170 BFF34F8F 		dsb
 1692              	@ 0 "" 2
 927:System/FreeRTOS/queue.c **** 				}
 1693              		.loc 1 927 6 view .LVU529
 1694              	@ 927 "System/FreeRTOS/queue.c" 1
 1695 0174 BFF36F8F 		isb
 1696              	@ 0 "" 2
 1697              		.thumb
 1698              		.syntax unified
 1699 0178 BDE7     		b	.L99
 1700              	.L109:
 940:System/FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1701              		.loc 1 940 4 view .LVU530
 1702 017a 2046     		mov	r0, r4
 1703 017c FFF7FEFF 		bl	prvUnlockQueue
 1704              	.LVL137:
 941:System/FreeRTOS/queue.c **** 
 1705              		.loc 1 941 4 view .LVU531
 941:System/FreeRTOS/queue.c **** 
 1706              		.loc 1 941 13 is_stmt 0 view .LVU532
 1707 0180 FFF7FEFF 		bl	xTaskResumeAll
 1708              	.LVL138:
 943:System/FreeRTOS/queue.c **** 			return errQUEUE_FULL;
 1709              		.loc 1 943 37 is_stmt 1 view .LVU533
 944:System/FreeRTOS/queue.c **** 		}
 1710              		.loc 1 944 4 view .LVU534
 944:System/FreeRTOS/queue.c **** 		}
 1711              		.loc 1 944 11 is_stmt 0 view .LVU535
 1712 0184 0020     		movs	r0, #0
 1713 0186 8DE7     		b	.L90
 1714              		.cfi_endproc
 1715              	.LFE14:
 1717              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1718              		.align	1
 1719              		.syntax unified
 1720              		.thumb
 1721              		.thumb_func
 1723              	prvInitialiseMutex:
 1724              	.LVL139:
 1725              	.LFB9:
 467:System/FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 1726              		.loc 1 467 2 is_stmt 1 view -0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 0
 1729              		@ frame_needed = 0, uses_anonymous_args = 0
 468:System/FreeRTOS/queue.c **** 		{
 1730              		.loc 1 468 3 view .LVU537
 468:System/FreeRTOS/queue.c **** 		{
 1731              		.loc 1 468 5 is_stmt 0 view .LVU538
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 84


 1732 0000 48B1     		cbz	r0, .L124
 467:System/FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 1733              		.loc 1 467 2 view .LVU539
 1734 0002 08B5     		push	{r3, lr}
 1735              	.LCFI22:
 1736              		.cfi_def_cfa_offset 8
 1737              		.cfi_offset 3, -8
 1738              		.cfi_offset 14, -4
 474:System/FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1739              		.loc 1 474 4 is_stmt 1 view .LVU540
 474:System/FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1740              		.loc 1 474 42 is_stmt 0 view .LVU541
 1741 0004 0021     		movs	r1, #0
 1742 0006 8160     		str	r1, [r0, #8]
 475:System/FreeRTOS/queue.c **** 
 1743              		.loc 1 475 4 is_stmt 1 view .LVU542
 475:System/FreeRTOS/queue.c **** 
 1744              		.loc 1 475 28 is_stmt 0 view .LVU543
 1745 0008 0160     		str	r1, [r0]
 478:System/FreeRTOS/queue.c **** 
 1746              		.loc 1 478 4 is_stmt 1 view .LVU544
 478:System/FreeRTOS/queue.c **** 
 1747              		.loc 1 478 50 is_stmt 0 view .LVU545
 1748 000a C160     		str	r1, [r0, #12]
 480:System/FreeRTOS/queue.c **** 
 1749              		.loc 1 480 35 is_stmt 1 view .LVU546
 483:System/FreeRTOS/queue.c **** 		}
 1750              		.loc 1 483 4 view .LVU547
 483:System/FreeRTOS/queue.c **** 		}
 1751              		.loc 1 483 13 is_stmt 0 view .LVU548
 1752 000c 0B46     		mov	r3, r1
 1753 000e 0A46     		mov	r2, r1
 1754 0010 FFF7FEFF 		bl	xQueueGenericSend
 1755              	.LVL140:
 487:System/FreeRTOS/queue.c **** 		}
 1756              		.loc 1 487 30 is_stmt 1 view .LVU549
 489:System/FreeRTOS/queue.c **** 
 1757              		.loc 1 489 2 is_stmt 0 view .LVU550
 1758 0014 08BD     		pop	{r3, pc}
 1759              	.LVL141:
 1760              	.L124:
 1761              	.LCFI23:
 1762              		.cfi_def_cfa_offset 0
 1763              		.cfi_restore 3
 1764              		.cfi_restore 14
 489:System/FreeRTOS/queue.c **** 
 1765              		.loc 1 489 2 view .LVU551
 1766 0016 7047     		bx	lr
 1767              		.cfi_endproc
 1768              	.LFE9:
 1770              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1771              		.align	1
 1772              		.global	xQueueCreateMutex
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1777              	xQueueCreateMutex:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 85


 1778              	.LVL142:
 1779              	.LFB10:
 497:System/FreeRTOS/queue.c **** 	QueueHandle_t xNewQueue;
 1780              		.loc 1 497 2 is_stmt 1 view -0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 0
 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 497:System/FreeRTOS/queue.c **** 	QueueHandle_t xNewQueue;
 1784              		.loc 1 497 2 is_stmt 0 view .LVU553
 1785 0000 10B5     		push	{r4, lr}
 1786              	.LCFI24:
 1787              		.cfi_def_cfa_offset 8
 1788              		.cfi_offset 4, -8
 1789              		.cfi_offset 14, -4
 1790 0002 0246     		mov	r2, r0
 498:System/FreeRTOS/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 1791              		.loc 1 498 2 is_stmt 1 view .LVU554
 499:System/FreeRTOS/queue.c **** 
 1792              		.loc 1 499 2 view .LVU555
 1793              	.LVL143:
 501:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1794              		.loc 1 501 3 view .LVU556
 501:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1795              		.loc 1 501 15 is_stmt 0 view .LVU557
 1796 0004 0021     		movs	r1, #0
 1797 0006 0120     		movs	r0, #1
 1798              	.LVL144:
 501:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1799              		.loc 1 501 15 view .LVU558
 1800 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1801              	.LVL145:
 1802 000c 0446     		mov	r4, r0
 1803              	.LVL146:
 502:System/FreeRTOS/queue.c **** 
 1804              		.loc 1 502 3 is_stmt 1 view .LVU559
 1805 000e FFF7FEFF 		bl	prvInitialiseMutex
 1806              	.LVL147:
 504:System/FreeRTOS/queue.c **** 	}
 1807              		.loc 1 504 3 view .LVU560
 505:System/FreeRTOS/queue.c **** 
 1808              		.loc 1 505 2 is_stmt 0 view .LVU561
 1809 0012 2046     		mov	r0, r4
 1810 0014 10BD     		pop	{r4, pc}
 505:System/FreeRTOS/queue.c **** 
 1811              		.loc 1 505 2 view .LVU562
 1812              		.cfi_endproc
 1813              	.LFE10:
 1815              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1816              		.align	1
 1817              		.global	xQueueCreateMutexStatic
 1818              		.syntax unified
 1819              		.thumb
 1820              		.thumb_func
 1822              	xQueueCreateMutexStatic:
 1823              	.LVL148:
 1824              	.LFB11:
 513:System/FreeRTOS/queue.c **** 	QueueHandle_t xNewQueue;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 86


 1825              		.loc 1 513 2 is_stmt 1 view -0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 513:System/FreeRTOS/queue.c **** 	QueueHandle_t xNewQueue;
 1829              		.loc 1 513 2 is_stmt 0 view .LVU564
 1830 0000 10B5     		push	{r4, lr}
 1831              	.LCFI25:
 1832              		.cfi_def_cfa_offset 8
 1833              		.cfi_offset 4, -8
 1834              		.cfi_offset 14, -4
 1835 0002 82B0     		sub	sp, sp, #8
 1836              	.LCFI26:
 1837              		.cfi_def_cfa_offset 16
 1838 0004 0B46     		mov	r3, r1
 514:System/FreeRTOS/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 1839              		.loc 1 514 2 is_stmt 1 view .LVU565
 515:System/FreeRTOS/queue.c **** 
 1840              		.loc 1 515 2 view .LVU566
 1841              	.LVL149:
 519:System/FreeRTOS/queue.c **** 
 1842              		.loc 1 519 3 view .LVU567
 521:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1843              		.loc 1 521 3 view .LVU568
 521:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1844              		.loc 1 521 15 is_stmt 0 view .LVU569
 1845 0006 0090     		str	r0, [sp]
 1846 0008 0022     		movs	r2, #0
 1847 000a 1146     		mov	r1, r2
 1848              	.LVL150:
 521:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1849              		.loc 1 521 15 view .LVU570
 1850 000c 0120     		movs	r0, #1
 1851              	.LVL151:
 521:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1852              		.loc 1 521 15 view .LVU571
 1853 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1854              	.LVL152:
 521:System/FreeRTOS/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1855              		.loc 1 521 15 view .LVU572
 1856 0012 0446     		mov	r4, r0
 1857              	.LVL153:
 522:System/FreeRTOS/queue.c **** 
 1858              		.loc 1 522 3 is_stmt 1 view .LVU573
 1859 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1860              	.LVL154:
 524:System/FreeRTOS/queue.c **** 	}
 1861              		.loc 1 524 3 view .LVU574
 525:System/FreeRTOS/queue.c **** 
 1862              		.loc 1 525 2 is_stmt 0 view .LVU575
 1863 0018 2046     		mov	r0, r4
 1864 001a 02B0     		add	sp, sp, #8
 1865              	.LCFI27:
 1866              		.cfi_def_cfa_offset 8
 1867              		@ sp needed
 1868 001c 10BD     		pop	{r4, pc}
 525:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 87


 1869              		.loc 1 525 2 view .LVU576
 1870              		.cfi_endproc
 1871              	.LFE11:
 1873              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1874              		.align	1
 1875              		.global	xQueueGenericSendFromISR
 1876              		.syntax unified
 1877              		.thumb
 1878              		.thumb_func
 1880              	xQueueGenericSendFromISR:
 1881              	.LVL155:
 1882              	.LFB15:
 951:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 1883              		.loc 1 951 1 is_stmt 1 view -0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
 951:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 1887              		.loc 1 951 1 is_stmt 0 view .LVU578
 1888 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1889              	.LCFI28:
 1890              		.cfi_def_cfa_offset 32
 1891              		.cfi_offset 3, -32
 1892              		.cfi_offset 4, -28
 1893              		.cfi_offset 5, -24
 1894              		.cfi_offset 6, -20
 1895              		.cfi_offset 7, -16
 1896              		.cfi_offset 8, -12
 1897              		.cfi_offset 9, -8
 1898              		.cfi_offset 14, -4
 952:System/FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
 1899              		.loc 1 952 1 is_stmt 1 view .LVU579
 953:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 1900              		.loc 1 953 1 view .LVU580
 954:System/FreeRTOS/queue.c **** 
 1901              		.loc 1 954 1 view .LVU581
 1902              	.LVL156:
 956:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1903              		.loc 1 956 2 view .LVU582
 1904 0004 90B1     		cbz	r0, .L146
 1905 0006 0F46     		mov	r7, r1
 1906 0008 1646     		mov	r6, r2
 1907 000a 1C46     		mov	r4, r3
 1908 000c 0546     		mov	r5, r0
 956:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1909              		.loc 1 956 25 discriminator 2 view .LVU583
 957:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1910              		.loc 1 957 2 discriminator 2 view .LVU584
 1911 000e B1B1     		cbz	r1, .L147
 1912              	.LVL157:
 1913              	.L134:
 957:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1914              		.loc 1 957 97 discriminator 8 view .LVU585
 958:System/FreeRTOS/queue.c **** 
 1915              		.loc 1 958 2 discriminator 8 view .LVU586
 1916 0010 022C     		cmp	r4, #2
 1917 0012 20D1     		bne	.L136
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 88


 958:System/FreeRTOS/queue.c **** 
 1918              		.loc 1 958 2 is_stmt 0 discriminator 2 view .LVU587
 1919 0014 EB6B     		ldr	r3, [r5, #60]
 1920 0016 012B     		cmp	r3, #1
 1921 0018 1DD0     		beq	.L136
 958:System/FreeRTOS/queue.c **** 
 1922              		.loc 1 958 2 is_stmt 1 view .LVU588
 1923              	.LBB146:
 1924              	.LBI146:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1925              		.loc 2 191 30 view .LVU589
 1926              	.LBB147:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1927              		.loc 2 193 1 view .LVU590
 1928              		.loc 2 195 2 view .LVU591
 1929              		.syntax unified
 1930              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1931 001a 4FF05003 			mov r3, #80												
 1932 001e 83F31188 		msr basepri, r3											
 1933 0022 BFF36F8F 		isb														
 1934 0026 BFF34F8F 		dsb														
 1935              	
 1936              	@ 0 "" 2
 1937              	.LVL158:
 1938              		.thumb
 1939              		.syntax unified
 1940              	.L137:
 1941              		.loc 2 195 2 is_stmt 0 view .LVU592
 1942              	.LBE147:
 1943              	.LBE146:
 958:System/FreeRTOS/queue.c **** 
 1944              		.loc 1 958 2 is_stmt 1 discriminator 3 view .LVU593
 958:System/FreeRTOS/queue.c **** 
 1945              		.loc 1 958 2 discriminator 3 view .LVU594
 958:System/FreeRTOS/queue.c **** 
 1946              		.loc 1 958 2 discriminator 3 view .LVU595
 1947 002a FEE7     		b	.L137
 1948              	.LVL159:
 1949              	.L146:
 956:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1950              		.loc 1 956 2 view .LVU596
 1951              	.LBB148:
 1952              	.LBI148:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1953              		.loc 2 191 30 view .LVU597
 1954              	.LBB149:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1955              		.loc 2 193 1 view .LVU598
 1956              		.loc 2 195 2 view .LVU599
 1957              		.syntax unified
 1958              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1959 002c 4FF05003 			mov r3, #80												
 1960 0030 83F31188 		msr basepri, r3											
 1961 0034 BFF36F8F 		isb														
 1962 0038 BFF34F8F 		dsb														
 1963              	
 1964              	@ 0 "" 2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 89


 1965              	.LVL160:
 1966              		.thumb
 1967              		.syntax unified
 1968              	.L133:
 1969              		.loc 2 195 2 is_stmt 0 view .LVU600
 1970              	.LBE149:
 1971              	.LBE148:
 956:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1972              		.loc 1 956 2 is_stmt 1 discriminator 1 view .LVU601
 956:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1973              		.loc 1 956 2 discriminator 1 view .LVU602
 956:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1974              		.loc 1 956 2 discriminator 1 view .LVU603
 1975 003c FEE7     		b	.L133
 1976              	.LVL161:
 1977              	.L147:
 957:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1978              		.loc 1 957 2 is_stmt 0 discriminator 2 view .LVU604
 1979 003e 036C     		ldr	r3, [r0, #64]
 1980              	.LVL162:
 957:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1981              		.loc 1 957 2 discriminator 2 view .LVU605
 1982 0040 002B     		cmp	r3, #0
 1983 0042 E5D0     		beq	.L134
 957:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1984              		.loc 1 957 2 is_stmt 1 view .LVU606
 1985              	.LBB150:
 1986              	.LBI150:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 1987              		.loc 2 191 30 view .LVU607
 1988              	.LBB151:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1989              		.loc 2 193 1 view .LVU608
 1990              		.loc 2 195 2 view .LVU609
 1991              		.syntax unified
 1992              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1993 0044 4FF05003 			mov r3, #80												
 1994 0048 83F31188 		msr basepri, r3											
 1995 004c BFF36F8F 		isb														
 1996 0050 BFF34F8F 		dsb														
 1997              	
 1998              	@ 0 "" 2
 1999              	.LVL163:
 2000              		.thumb
 2001              		.syntax unified
 2002              	.L135:
 2003              		.loc 2 195 2 is_stmt 0 view .LVU610
 2004              	.LBE151:
 2005              	.LBE150:
 957:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2006              		.loc 1 957 2 is_stmt 1 discriminator 2 view .LVU611
 957:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2007              		.loc 1 957 2 discriminator 2 view .LVU612
 957:System/FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 2008              		.loc 1 957 2 discriminator 2 view .LVU613
 2009 0054 FEE7     		b	.L135
 2010              	.L136:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 90


 958:System/FreeRTOS/queue.c **** 
 2011              		.loc 1 958 88 discriminator 8 view .LVU614
 974:System/FreeRTOS/queue.c **** 
 2012              		.loc 1 974 2 discriminator 8 view .LVU615
 2013 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2014              	.LVL164:
 981:System/FreeRTOS/queue.c **** 	{
 2015              		.loc 1 981 2 discriminator 8 view .LVU616
 2016              	.LBB152:
 2017              	.LBI152:
 196:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 2018              		.loc 2 207 34 discriminator 8 view .LVU617
 2019              	.LBB153:
 208:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 2020              		.loc 2 209 1 discriminator 8 view .LVU618
 210:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 2021              		.loc 2 211 2 discriminator 8 view .LVU619
 2022              		.syntax unified
 2023              	@ 211 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2024 005a EFF31189 			mrs r9, basepri											
 2025 005e 4FF05003 		mov r3, #80												
 2026 0062 83F31188 		msr basepri, r3											
 2027 0066 BFF36F8F 		isb														
 2028 006a BFF34F8F 		dsb														
 2029              	
 2030              	@ 0 "" 2
 2031              	.LVL165:
 212:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 2032              		.loc 2 223 2 discriminator 8 view .LVU620
 2033              		.loc 2 223 2 is_stmt 0 discriminator 8 view .LVU621
 2034              		.thumb
 2035              		.syntax unified
 2036              	.LBE153:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 91


 2037              	.LBE152:
 983:System/FreeRTOS/queue.c **** 		{
 2038              		.loc 1 983 3 is_stmt 1 discriminator 8 view .LVU622
 983:System/FreeRTOS/queue.c **** 		{
 2039              		.loc 1 983 16 is_stmt 0 discriminator 8 view .LVU623
 2040 006e AA6B     		ldr	r2, [r5, #56]
 983:System/FreeRTOS/queue.c **** 		{
 2041              		.loc 1 983 45 discriminator 8 view .LVU624
 2042 0070 EB6B     		ldr	r3, [r5, #60]
 983:System/FreeRTOS/queue.c **** 		{
 2043              		.loc 1 983 5 discriminator 8 view .LVU625
 2044 0072 9A42     		cmp	r2, r3
 2045 0074 06D3     		bcc	.L138
 983:System/FreeRTOS/queue.c **** 		{
 2046              		.loc 1 983 58 discriminator 1 view .LVU626
 2047 0076 022C     		cmp	r4, #2
 2048 0078 04D0     		beq	.L138
1103:System/FreeRTOS/queue.c **** 		}
 2049              		.loc 1 1103 12 view .LVU627
 2050 007a 0020     		movs	r0, #0
 2051              	.L139:
 2052              	.LVL166:
1106:System/FreeRTOS/queue.c **** 
 2053              		.loc 1 1106 2 is_stmt 1 view .LVU628
 2054              	.LBB154:
 2055              	.LBI154:
 224:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 2056              		.loc 2 227 30 view .LVU629
 2057              	.LBB155:
 228:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 2058              		.loc 2 229 2 view .LVU630
 2059              		.syntax unified
 2060              	@ 229 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2061 007c 89F31188 			msr basepri, r9	
 2062              	@ 0 "" 2
 2063              	.LVL167:
 2064              		.loc 2 229 2 is_stmt 0 view .LVU631
 2065              		.thumb
 2066              		.syntax unified
 2067              	.LBE155:
 2068              	.LBE154:
1108:System/FreeRTOS/queue.c **** }
 2069              		.loc 1 1108 2 is_stmt 1 view .LVU632
1109:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2070              		.loc 1 1109 1 is_stmt 0 view .LVU633
 2071 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2072              	.LVL168:
 2073              	.L138:
 2074              	.LBB156:
 985:System/FreeRTOS/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 2075              		.loc 1 985 4 is_stmt 1 view .LVU634
 985:System/FreeRTOS/queue.c **** 			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 2076              		.loc 1 985 17 is_stmt 0 view .LVU635
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 92


 2077 0084 95F84580 		ldrb	r8, [r5, #69]	@ zero_extendqisi2
 2078 0088 4FFA88F8 		sxtb	r8, r8
 2079              	.LVL169:
 986:System/FreeRTOS/queue.c **** 
 2080              		.loc 1 986 4 is_stmt 1 view .LVU636
 986:System/FreeRTOS/queue.c **** 
 2081              		.loc 1 986 22 is_stmt 0 view .LVU637
 2082 008c AB6B     		ldr	r3, [r5, #56]
 988:System/FreeRTOS/queue.c **** 
 2083              		.loc 1 988 39 is_stmt 1 view .LVU638
 995:System/FreeRTOS/queue.c **** 
 2084              		.loc 1 995 4 view .LVU639
 995:System/FreeRTOS/queue.c **** 
 2085              		.loc 1 995 13 is_stmt 0 view .LVU640
 2086 008e 2246     		mov	r2, r4
 2087 0090 3946     		mov	r1, r7
 2088 0092 2846     		mov	r0, r5
 2089 0094 FFF7FEFF 		bl	prvCopyDataToQueue
 2090              	.LVL170:
 999:System/FreeRTOS/queue.c **** 			{
 2091              		.loc 1 999 4 is_stmt 1 view .LVU641
 999:System/FreeRTOS/queue.c **** 			{
 2092              		.loc 1 999 6 is_stmt 0 view .LVU642
 2093 0098 B8F1FF3F 		cmp	r8, #-1
 2094 009c 06D0     		beq	.L148
1095:System/FreeRTOS/queue.c **** 			}
 2095              		.loc 1 1095 5 is_stmt 1 view .LVU643
1095:System/FreeRTOS/queue.c **** 			}
 2096              		.loc 1 1095 45 is_stmt 0 view .LVU644
 2097 009e 08F10103 		add	r3, r8, #1
1095:System/FreeRTOS/queue.c **** 			}
 2098              		.loc 1 1095 24 view .LVU645
 2099 00a2 5BB2     		sxtb	r3, r3
1095:System/FreeRTOS/queue.c **** 			}
 2100              		.loc 1 1095 22 view .LVU646
 2101 00a4 85F84530 		strb	r3, [r5, #69]
1098:System/FreeRTOS/queue.c **** 		}
 2102              		.loc 1 1098 12 view .LVU647
 2103 00a8 0120     		movs	r0, #1
 2104 00aa E7E7     		b	.L139
 2105              	.L148:
1061:System/FreeRTOS/queue.c **** 					{
 2106              		.loc 1 1061 6 is_stmt 1 view .LVU648
1061:System/FreeRTOS/queue.c **** 					{
 2107              		.loc 1 1061 10 is_stmt 0 view .LVU649
 2108 00ac 6B6A     		ldr	r3, [r5, #36]
1061:System/FreeRTOS/queue.c **** 					{
 2109              		.loc 1 1061 8 view .LVU650
 2110 00ae 0BB9     		cbnz	r3, .L149
1098:System/FreeRTOS/queue.c **** 		}
 2111              		.loc 1 1098 12 view .LVU651
 2112 00b0 0120     		movs	r0, #1
 2113 00b2 E3E7     		b	.L139
 2114              	.L149:
1063:System/FreeRTOS/queue.c **** 						{
 2115              		.loc 1 1063 7 is_stmt 1 view .LVU652
1063:System/FreeRTOS/queue.c **** 						{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 93


 2116              		.loc 1 1063 11 is_stmt 0 view .LVU653
 2117 00b4 05F12400 		add	r0, r5, #36
 2118 00b8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2119              	.LVL171:
1063:System/FreeRTOS/queue.c **** 						{
 2120              		.loc 1 1063 9 view .LVU654
 2121 00bc 18B1     		cbz	r0, .L143
1067:System/FreeRTOS/queue.c **** 							{
 2122              		.loc 1 1067 8 is_stmt 1 view .LVU655
1067:System/FreeRTOS/queue.c **** 							{
 2123              		.loc 1 1067 10 is_stmt 0 view .LVU656
 2124 00be 26B1     		cbz	r6, .L144
1069:System/FreeRTOS/queue.c **** 							}
 2125              		.loc 1 1069 9 is_stmt 1 view .LVU657
1069:System/FreeRTOS/queue.c **** 							}
 2126              		.loc 1 1069 36 is_stmt 0 view .LVU658
 2127 00c0 0120     		movs	r0, #1
 2128 00c2 3060     		str	r0, [r6]
 2129 00c4 DAE7     		b	.L139
 2130              	.L143:
1098:System/FreeRTOS/queue.c **** 		}
 2131              		.loc 1 1098 12 view .LVU659
 2132 00c6 0120     		movs	r0, #1
 2133 00c8 D8E7     		b	.L139
 2134              	.L144:
 2135 00ca 0120     		movs	r0, #1
 2136 00cc D6E7     		b	.L139
 2137              	.LBE156:
 2138              		.cfi_endproc
 2139              	.LFE15:
 2141              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 2142              		.align	1
 2143              		.global	xQueueGiveFromISR
 2144              		.syntax unified
 2145              		.thumb
 2146              		.thumb_func
 2148              	xQueueGiveFromISR:
 2149              	.LVL172:
 2150              	.LFB16:
1113:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 2151              		.loc 1 1113 1 is_stmt 1 view -0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 0
 2154              		@ frame_needed = 0, uses_anonymous_args = 0
1114:System/FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
 2155              		.loc 1 1114 1 view .LVU661
1115:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 2156              		.loc 1 1115 1 view .LVU662
1116:System/FreeRTOS/queue.c **** 
 2157              		.loc 1 1116 1 view .LVU663
1124:System/FreeRTOS/queue.c **** 
 2158              		.loc 1 1124 2 view .LVU664
 2159 0000 68B1     		cbz	r0, .L165
1113:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 2160              		.loc 1 1113 1 is_stmt 0 discriminator 2 view .LVU665
 2161 0002 70B5     		push	{r4, r5, r6, lr}
 2162              	.LCFI29:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 94


 2163              		.cfi_def_cfa_offset 16
 2164              		.cfi_offset 4, -16
 2165              		.cfi_offset 5, -12
 2166              		.cfi_offset 6, -8
 2167              		.cfi_offset 14, -4
 2168 0004 0C46     		mov	r4, r1
 2169 0006 0546     		mov	r5, r0
1124:System/FreeRTOS/queue.c **** 
 2170              		.loc 1 1124 25 is_stmt 1 discriminator 2 view .LVU666
1128:System/FreeRTOS/queue.c **** 
 2171              		.loc 1 1128 2 discriminator 2 view .LVU667
 2172 0008 036C     		ldr	r3, [r0, #64]
 2173 000a 8BB1     		cbz	r3, .L153
1128:System/FreeRTOS/queue.c **** 
 2174              		.loc 1 1128 2 view .LVU668
 2175              	.LBB157:
 2176              	.LBI157:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2177              		.loc 2 191 30 view .LVU669
 2178              	.LBB158:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2179              		.loc 2 193 1 view .LVU670
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2180              		.loc 2 195 2 view .LVU671
 2181              		.syntax unified
 2182              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2183 000c 4FF05003 			mov r3, #80												
 2184 0010 83F31188 		msr basepri, r3											
 2185 0014 BFF36F8F 		isb														
 2186 0018 BFF34F8F 		dsb														
 2187              	
 2188              	@ 0 "" 2
 2189              	.LVL173:
 2190              		.thumb
 2191              		.syntax unified
 2192              	.L154:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2193              		.loc 2 195 2 is_stmt 0 view .LVU672
 2194              	.LBE158:
 2195              	.LBE157:
1128:System/FreeRTOS/queue.c **** 
 2196              		.loc 1 1128 2 is_stmt 1 discriminator 2 view .LVU673
1128:System/FreeRTOS/queue.c **** 
 2197              		.loc 1 1128 2 discriminator 2 view .LVU674
1128:System/FreeRTOS/queue.c **** 
 2198              		.loc 1 1128 2 discriminator 2 view .LVU675
 2199 001c FEE7     		b	.L154
 2200              	.L165:
 2201              	.LCFI30:
 2202              		.cfi_def_cfa_offset 0
 2203              		.cfi_restore 4
 2204              		.cfi_restore 5
 2205              		.cfi_restore 6
 2206              		.cfi_restore 14
1124:System/FreeRTOS/queue.c **** 
 2207              		.loc 1 1124 2 view .LVU676
 2208              	.LBB159:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 95


 2209              	.LBI159:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2210              		.loc 2 191 30 view .LVU677
 2211              	.LBB160:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2212              		.loc 2 193 1 view .LVU678
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2213              		.loc 2 195 2 view .LVU679
 2214              		.syntax unified
 2215              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2216 001e 4FF05003 			mov r3, #80												
 2217 0022 83F31188 		msr basepri, r3											
 2218 0026 BFF36F8F 		isb														
 2219 002a BFF34F8F 		dsb														
 2220              	
 2221              	@ 0 "" 2
 2222              	.LVL174:
 2223              		.thumb
 2224              		.syntax unified
 2225              	.L152:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2226              		.loc 2 195 2 is_stmt 0 view .LVU680
 2227              	.LBE160:
 2228              	.LBE159:
1124:System/FreeRTOS/queue.c **** 
 2229              		.loc 1 1124 2 is_stmt 1 discriminator 1 view .LVU681
1124:System/FreeRTOS/queue.c **** 
 2230              		.loc 1 1124 2 discriminator 1 view .LVU682
1124:System/FreeRTOS/queue.c **** 
 2231              		.loc 1 1124 2 discriminator 1 view .LVU683
 2232 002e FEE7     		b	.L152
 2233              	.L153:
 2234              	.LCFI31:
 2235              		.cfi_def_cfa_offset 16
 2236              		.cfi_offset 4, -16
 2237              		.cfi_offset 5, -12
 2238              		.cfi_offset 6, -8
 2239              		.cfi_offset 14, -4
1128:System/FreeRTOS/queue.c **** 
 2240              		.loc 1 1128 42 discriminator 2 view .LVU684
1133:System/FreeRTOS/queue.c **** 
 2241              		.loc 1 1133 2 discriminator 2 view .LVU685
 2242 0030 0368     		ldr	r3, [r0]
 2243 0032 EBB1     		cbz	r3, .L166
 2244              	.L155:
1133:System/FreeRTOS/queue.c **** 
 2245              		.loc 1 1133 120 discriminator 8 view .LVU686
1149:System/FreeRTOS/queue.c **** 
 2246              		.loc 1 1149 2 discriminator 8 view .LVU687
 2247 0034 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2248              	.LVL175:
1151:System/FreeRTOS/queue.c **** 	{
 2249              		.loc 1 1151 2 discriminator 8 view .LVU688
 2250              	.LBB161:
 2251              	.LBI161:
 207:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2252              		.loc 2 207 34 discriminator 8 view .LVU689
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 96


 2253              	.LBB162:
 209:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2254              		.loc 2 209 1 discriminator 8 view .LVU690
 211:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2255              		.loc 2 211 2 discriminator 8 view .LVU691
 2256              		.syntax unified
 2257              	@ 211 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2258 0038 EFF31186 			mrs r6, basepri											
 2259 003c 4FF05003 		mov r3, #80												
 2260 0040 83F31188 		msr basepri, r3											
 2261 0044 BFF36F8F 		isb														
 2262 0048 BFF34F8F 		dsb														
 2263              	
 2264              	@ 0 "" 2
 2265              	.LVL176:
 223:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 2266              		.loc 2 223 2 discriminator 8 view .LVU692
 223:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 2267              		.loc 2 223 2 is_stmt 0 discriminator 8 view .LVU693
 2268              		.thumb
 2269              		.syntax unified
 2270              	.LBE162:
 2271              	.LBE161:
 2272              	.LBB163:
1153:System/FreeRTOS/queue.c **** 
 2273              		.loc 1 1153 3 is_stmt 1 discriminator 8 view .LVU694
1153:System/FreeRTOS/queue.c **** 
 2274              		.loc 1 1153 21 is_stmt 0 discriminator 8 view .LVU695
 2275 004c AA6B     		ldr	r2, [r5, #56]
 2276              	.LVL177:
1158:System/FreeRTOS/queue.c **** 		{
 2277              		.loc 1 1158 3 is_stmt 1 discriminator 8 view .LVU696
1158:System/FreeRTOS/queue.c **** 		{
 2278              		.loc 1 1158 34 is_stmt 0 discriminator 8 view .LVU697
 2279 004e EB6B     		ldr	r3, [r5, #60]
1158:System/FreeRTOS/queue.c **** 		{
 2280              		.loc 1 1158 5 discriminator 8 view .LVU698
 2281 0050 9342     		cmp	r3, r2
 2282 0052 26D9     		bls	.L159
 2283              	.LBB164:
1160:System/FreeRTOS/queue.c **** 
 2284              		.loc 1 1160 4 is_stmt 1 view .LVU699
1160:System/FreeRTOS/queue.c **** 
 2285              		.loc 1 1160 17 is_stmt 0 view .LVU700
 2286 0054 95F84530 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 2287 0058 5BB2     		sxtb	r3, r3
 2288              	.LVL178:
1162:System/FreeRTOS/queue.c **** 
 2289              		.loc 1 1162 39 is_stmt 1 view .LVU701
1170:System/FreeRTOS/queue.c **** 
 2290              		.loc 1 1170 4 view .LVU702
1170:System/FreeRTOS/queue.c **** 
 2291              		.loc 1 1170 51 is_stmt 0 view .LVU703
 2292 005a 0132     		adds	r2, r2, #1
 2293              	.LVL179:
1170:System/FreeRTOS/queue.c **** 
 2294              		.loc 1 1170 31 view .LVU704
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 97


 2295 005c AA63     		str	r2, [r5, #56]
1174:System/FreeRTOS/queue.c **** 			{
 2296              		.loc 1 1174 4 is_stmt 1 view .LVU705
1174:System/FreeRTOS/queue.c **** 			{
 2297              		.loc 1 1174 6 is_stmt 0 view .LVU706
 2298 005e B3F1FF3F 		cmp	r3, #-1
 2299 0062 11D0     		beq	.L167
1260:System/FreeRTOS/queue.c **** 			}
 2300              		.loc 1 1260 5 is_stmt 1 view .LVU707
1260:System/FreeRTOS/queue.c **** 			}
 2301              		.loc 1 1260 45 is_stmt 0 view .LVU708
 2302 0064 0133     		adds	r3, r3, #1
 2303              	.LVL180:
1260:System/FreeRTOS/queue.c **** 			}
 2304              		.loc 1 1260 24 view .LVU709
 2305 0066 5BB2     		sxtb	r3, r3
 2306              	.LVL181:
1260:System/FreeRTOS/queue.c **** 			}
 2307              		.loc 1 1260 22 view .LVU710
 2308 0068 85F84530 		strb	r3, [r5, #69]
1263:System/FreeRTOS/queue.c **** 		}
 2309              		.loc 1 1263 12 view .LVU711
 2310 006c 0120     		movs	r0, #1
 2311 006e 19E0     		b	.L157
 2312              	.LVL182:
 2313              	.L166:
1263:System/FreeRTOS/queue.c **** 		}
 2314              		.loc 1 1263 12 view .LVU712
 2315              	.LBE164:
 2316              	.LBE163:
1133:System/FreeRTOS/queue.c **** 
 2317              		.loc 1 1133 2 discriminator 2 view .LVU713
 2318 0070 8368     		ldr	r3, [r0, #8]
 2319 0072 002B     		cmp	r3, #0
 2320 0074 DED0     		beq	.L155
1133:System/FreeRTOS/queue.c **** 
 2321              		.loc 1 1133 2 is_stmt 1 view .LVU714
 2322              	.LBB167:
 2323              	.LBI167:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2324              		.loc 2 191 30 view .LVU715
 2325              	.LBB168:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2326              		.loc 2 193 1 view .LVU716
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2327              		.loc 2 195 2 view .LVU717
 2328              		.syntax unified
 2329              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2330 0076 4FF05003 			mov r3, #80												
 2331 007a 83F31188 		msr basepri, r3											
 2332 007e BFF36F8F 		isb														
 2333 0082 BFF34F8F 		dsb														
 2334              	
 2335              	@ 0 "" 2
 2336              	.LVL183:
 2337              		.thumb
 2338              		.syntax unified
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 98


 2339              	.L156:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2340              		.loc 2 195 2 is_stmt 0 view .LVU718
 2341              	.LBE168:
 2342              	.LBE167:
1133:System/FreeRTOS/queue.c **** 
 2343              		.loc 1 1133 2 is_stmt 1 discriminator 3 view .LVU719
1133:System/FreeRTOS/queue.c **** 
 2344              		.loc 1 1133 2 discriminator 3 view .LVU720
1133:System/FreeRTOS/queue.c **** 
 2345              		.loc 1 1133 2 discriminator 3 view .LVU721
 2346 0086 FEE7     		b	.L156
 2347              	.LVL184:
 2348              	.L167:
 2349              	.LBB169:
 2350              	.LBB165:
1229:System/FreeRTOS/queue.c **** 					{
 2351              		.loc 1 1229 6 view .LVU722
1229:System/FreeRTOS/queue.c **** 					{
 2352              		.loc 1 1229 10 is_stmt 0 view .LVU723
 2353 0088 6B6A     		ldr	r3, [r5, #36]
 2354              	.LVL185:
1229:System/FreeRTOS/queue.c **** 					{
 2355              		.loc 1 1229 8 view .LVU724
 2356 008a 0BB9     		cbnz	r3, .L168
1263:System/FreeRTOS/queue.c **** 		}
 2357              		.loc 1 1263 12 view .LVU725
 2358 008c 0120     		movs	r0, #1
 2359 008e 09E0     		b	.L157
 2360              	.L168:
1231:System/FreeRTOS/queue.c **** 						{
 2361              		.loc 1 1231 7 is_stmt 1 view .LVU726
1231:System/FreeRTOS/queue.c **** 						{
 2362              		.loc 1 1231 11 is_stmt 0 view .LVU727
 2363 0090 05F12400 		add	r0, r5, #36
 2364 0094 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2365              	.LVL186:
1231:System/FreeRTOS/queue.c **** 						{
 2366              		.loc 1 1231 9 view .LVU728
 2367 0098 38B1     		cbz	r0, .L161
1235:System/FreeRTOS/queue.c **** 							{
 2368              		.loc 1 1235 8 is_stmt 1 view .LVU729
1235:System/FreeRTOS/queue.c **** 							{
 2369              		.loc 1 1235 10 is_stmt 0 view .LVU730
 2370 009a 44B1     		cbz	r4, .L162
1237:System/FreeRTOS/queue.c **** 							}
 2371              		.loc 1 1237 9 is_stmt 1 view .LVU731
1237:System/FreeRTOS/queue.c **** 							}
 2372              		.loc 1 1237 36 is_stmt 0 view .LVU732
 2373 009c 0120     		movs	r0, #1
 2374 009e 2060     		str	r0, [r4]
 2375 00a0 00E0     		b	.L157
 2376              	.LVL187:
 2377              	.L159:
1237:System/FreeRTOS/queue.c **** 							}
 2378              		.loc 1 1237 36 view .LVU733
 2379              	.LBE165:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 99


1268:System/FreeRTOS/queue.c **** 		}
 2380              		.loc 1 1268 12 view .LVU734
 2381 00a2 0020     		movs	r0, #0
 2382              	.LVL188:
 2383              	.L157:
1268:System/FreeRTOS/queue.c **** 		}
 2384              		.loc 1 1268 12 view .LVU735
 2385              	.LBE169:
1271:System/FreeRTOS/queue.c **** 
 2386              		.loc 1 1271 2 is_stmt 1 view .LVU736
 2387              	.LBB170:
 2388              	.LBI170:
 227:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2389              		.loc 2 227 30 view .LVU737
 2390              	.LBB171:
 2391              		.loc 2 229 2 view .LVU738
 2392              		.syntax unified
 2393              	@ 229 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2394 00a4 86F31188 			msr basepri, r6	
 2395              	@ 0 "" 2
 2396              	.LVL189:
 2397              		.loc 2 229 2 is_stmt 0 view .LVU739
 2398              		.thumb
 2399              		.syntax unified
 2400              	.LBE171:
 2401              	.LBE170:
1273:System/FreeRTOS/queue.c **** }
 2402              		.loc 1 1273 2 is_stmt 1 view .LVU740
1274:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2403              		.loc 1 1274 1 is_stmt 0 view .LVU741
 2404 00a8 70BD     		pop	{r4, r5, r6, pc}
 2405              	.LVL190:
 2406              	.L161:
 2407              	.LBB172:
 2408              	.LBB166:
1263:System/FreeRTOS/queue.c **** 		}
 2409              		.loc 1 1263 12 view .LVU742
 2410 00aa 0120     		movs	r0, #1
 2411 00ac FAE7     		b	.L157
 2412              	.L162:
 2413 00ae 0120     		movs	r0, #1
 2414 00b0 F8E7     		b	.L157
 2415              	.LBE166:
 2416              	.LBE172:
 2417              		.cfi_endproc
 2418              	.LFE16:
 2420              		.section	.text.xQueueReceive,"ax",%progbits
 2421              		.align	1
 2422              		.global	xQueueReceive
 2423              		.syntax unified
 2424              		.thumb
 2425              		.thumb_func
 2427              	xQueueReceive:
 2428              	.LVL191:
 2429              	.LFB17:
1278:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2430              		.loc 1 1278 1 is_stmt 1 view -0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 100


 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 16
 2433              		@ frame_needed = 0, uses_anonymous_args = 0
1278:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2434              		.loc 1 1278 1 is_stmt 0 view .LVU744
 2435 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2436              	.LCFI32:
 2437              		.cfi_def_cfa_offset 20
 2438              		.cfi_offset 4, -20
 2439              		.cfi_offset 5, -16
 2440              		.cfi_offset 6, -12
 2441              		.cfi_offset 7, -8
 2442              		.cfi_offset 14, -4
 2443 0002 85B0     		sub	sp, sp, #20
 2444              	.LCFI33:
 2445              		.cfi_def_cfa_offset 40
 2446 0004 0192     		str	r2, [sp, #4]
1279:System/FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 2447              		.loc 1 1279 1 is_stmt 1 view .LVU745
 2448              	.LVL192:
1280:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 2449              		.loc 1 1280 1 view .LVU746
1281:System/FreeRTOS/queue.c **** 
 2450              		.loc 1 1281 1 view .LVU747
1284:System/FreeRTOS/queue.c **** 
 2451              		.loc 1 1284 2 view .LVU748
 2452 0006 90B1     		cbz	r0, .L189
 2453 0008 0F46     		mov	r7, r1
 2454 000a 0446     		mov	r4, r0
1284:System/FreeRTOS/queue.c **** 
 2455              		.loc 1 1284 29 discriminator 2 view .LVU749
1288:System/FreeRTOS/queue.c **** 
 2456              		.loc 1 1288 2 discriminator 2 view .LVU750
 2457 000c C1B1     		cbz	r1, .L190
 2458              	.L172:
1288:System/FreeRTOS/queue.c **** 
 2459              		.loc 1 1288 100 discriminator 8 view .LVU751
1293:System/FreeRTOS/queue.c **** 	}
 2460              		.loc 1 1293 3 discriminator 8 view .LVU752
 2461 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 2462              	.LVL193:
1293:System/FreeRTOS/queue.c **** 	}
 2463              		.loc 1 1293 3 is_stmt 0 discriminator 8 view .LVU753
 2464 0012 0646     		mov	r6, r0
 2465 0014 00BB     		cbnz	r0, .L187
1293:System/FreeRTOS/queue.c **** 	}
 2466              		.loc 1 1293 3 discriminator 2 view .LVU754
 2467 0016 019B     		ldr	r3, [sp, #4]
 2468 0018 002B     		cmp	r3, #0
 2469 001a 5ED0     		beq	.L176
1293:System/FreeRTOS/queue.c **** 	}
 2470              		.loc 1 1293 3 is_stmt 1 view .LVU755
 2471              	.LBB173:
 2472              	.LBI173:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2473              		.loc 2 191 30 view .LVU756
 2474              	.LBB174:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 101


 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2475              		.loc 2 193 1 view .LVU757
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2476              		.loc 2 195 2 view .LVU758
 2477              		.syntax unified
 2478              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2479 001c 4FF05003 			mov r3, #80												
 2480 0020 83F31188 		msr basepri, r3											
 2481 0024 BFF36F8F 		isb														
 2482 0028 BFF34F8F 		dsb														
 2483              	
 2484              	@ 0 "" 2
 2485              	.LVL194:
 2486              		.thumb
 2487              		.syntax unified
 2488              	.L175:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2489              		.loc 2 195 2 is_stmt 0 view .LVU759
 2490              	.LBE174:
 2491              	.LBE173:
1293:System/FreeRTOS/queue.c **** 	}
 2492              		.loc 1 1293 3 is_stmt 1 discriminator 3 view .LVU760
1293:System/FreeRTOS/queue.c **** 	}
 2493              		.loc 1 1293 3 discriminator 3 view .LVU761
1293:System/FreeRTOS/queue.c **** 	}
 2494              		.loc 1 1293 3 discriminator 3 view .LVU762
 2495 002c FEE7     		b	.L175
 2496              	.LVL195:
 2497              	.L189:
1284:System/FreeRTOS/queue.c **** 
 2498              		.loc 1 1284 2 view .LVU763
 2499              	.LBB175:
 2500              	.LBI175:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2501              		.loc 2 191 30 view .LVU764
 2502              	.LBB176:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2503              		.loc 2 193 1 view .LVU765
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2504              		.loc 2 195 2 view .LVU766
 2505              		.syntax unified
 2506              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2507 002e 4FF05003 			mov r3, #80												
 2508 0032 83F31188 		msr basepri, r3											
 2509 0036 BFF36F8F 		isb														
 2510 003a BFF34F8F 		dsb														
 2511              	
 2512              	@ 0 "" 2
 2513              	.LVL196:
 2514              		.thumb
 2515              		.syntax unified
 2516              	.L171:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2517              		.loc 2 195 2 is_stmt 0 view .LVU767
 2518              	.LBE176:
 2519              	.LBE175:
1284:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 102


 2520              		.loc 1 1284 2 is_stmt 1 discriminator 1 view .LVU768
1284:System/FreeRTOS/queue.c **** 
 2521              		.loc 1 1284 2 discriminator 1 view .LVU769
1284:System/FreeRTOS/queue.c **** 
 2522              		.loc 1 1284 2 discriminator 1 view .LVU770
 2523 003e FEE7     		b	.L171
 2524              	.L190:
1288:System/FreeRTOS/queue.c **** 
 2525              		.loc 1 1288 2 is_stmt 0 discriminator 2 view .LVU771
 2526 0040 036C     		ldr	r3, [r0, #64]
 2527 0042 002B     		cmp	r3, #0
 2528 0044 E3D0     		beq	.L172
1288:System/FreeRTOS/queue.c **** 
 2529              		.loc 1 1288 2 is_stmt 1 view .LVU772
 2530              	.LBB177:
 2531              	.LBI177:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2532              		.loc 2 191 30 view .LVU773
 2533              	.LBB178:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2534              		.loc 2 193 1 view .LVU774
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2535              		.loc 2 195 2 view .LVU775
 2536              		.syntax unified
 2537              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2538 0046 4FF05003 			mov r3, #80												
 2539 004a 83F31188 		msr basepri, r3											
 2540 004e BFF36F8F 		isb														
 2541 0052 BFF34F8F 		dsb														
 2542              	
 2543              	@ 0 "" 2
 2544              	.LVL197:
 2545              		.thumb
 2546              		.syntax unified
 2547              	.L173:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2548              		.loc 2 195 2 is_stmt 0 view .LVU776
 2549              	.LBE178:
 2550              	.LBE177:
1288:System/FreeRTOS/queue.c **** 
 2551              		.loc 1 1288 2 is_stmt 1 discriminator 2 view .LVU777
1288:System/FreeRTOS/queue.c **** 
 2552              		.loc 1 1288 2 discriminator 2 view .LVU778
1288:System/FreeRTOS/queue.c **** 
 2553              		.loc 1 1288 2 discriminator 2 view .LVU779
 2554 0056 FEE7     		b	.L173
 2555              	.LVL198:
 2556              	.L187:
1288:System/FreeRTOS/queue.c **** 
 2557              		.loc 1 1288 2 is_stmt 0 discriminator 2 view .LVU780
 2558 0058 0026     		movs	r6, #0
 2559 005a 3EE0     		b	.L176
 2560              	.LVL199:
 2561              	.L193:
 2562              	.LBB179:
1312:System/FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2563              		.loc 1 1312 5 is_stmt 1 view .LVU781
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 103


 2564 005c 3946     		mov	r1, r7
 2565 005e 2046     		mov	r0, r4
 2566 0060 FFF7FEFF 		bl	prvCopyDataFromQueue
 2567              	.LVL200:
1313:System/FreeRTOS/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2568              		.loc 1 1313 34 view .LVU782
1314:System/FreeRTOS/queue.c **** 
 2569              		.loc 1 1314 5 view .LVU783
1314:System/FreeRTOS/queue.c **** 
 2570              		.loc 1 1314 52 is_stmt 0 view .LVU784
 2571 0064 013D     		subs	r5, r5, #1
 2572              	.LVL201:
1314:System/FreeRTOS/queue.c **** 
 2573              		.loc 1 1314 32 view .LVU785
 2574 0066 A563     		str	r5, [r4, #56]
1319:System/FreeRTOS/queue.c **** 				{
 2575              		.loc 1 1319 5 is_stmt 1 view .LVU786
1319:System/FreeRTOS/queue.c **** 				{
 2576              		.loc 1 1319 9 is_stmt 0 view .LVU787
 2577 0068 2369     		ldr	r3, [r4, #16]
1319:System/FreeRTOS/queue.c **** 				{
 2578              		.loc 1 1319 7 view .LVU788
 2579 006a 23B9     		cbnz	r3, .L191
 2580              	.L178:
1332:System/FreeRTOS/queue.c **** 				}
 2581              		.loc 1 1332 30 is_stmt 1 view .LVU789
1335:System/FreeRTOS/queue.c **** 				return pdPASS;
 2582              		.loc 1 1335 5 view .LVU790
 2583 006c FFF7FEFF 		bl	vPortExitCritical
 2584              	.LVL202:
1336:System/FreeRTOS/queue.c **** 			}
 2585              		.loc 1 1336 5 view .LVU791
1336:System/FreeRTOS/queue.c **** 			}
 2586              		.loc 1 1336 12 is_stmt 0 view .LVU792
 2587 0070 0120     		movs	r0, #1
 2588              	.LVL203:
 2589              	.L169:
1336:System/FreeRTOS/queue.c **** 			}
 2590              		.loc 1 1336 12 view .LVU793
 2591              	.LBE179:
1415:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2592              		.loc 1 1415 1 view .LVU794
 2593 0072 05B0     		add	sp, sp, #20
 2594              	.LCFI34:
 2595              		.cfi_remember_state
 2596              		.cfi_def_cfa_offset 20
 2597              		@ sp needed
 2598 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 2599              	.LVL204:
 2600              	.L191:
 2601              	.LCFI35:
 2602              		.cfi_restore_state
 2603              	.LBB180:
1321:System/FreeRTOS/queue.c **** 					{
 2604              		.loc 1 1321 6 is_stmt 1 view .LVU795
1321:System/FreeRTOS/queue.c **** 					{
 2605              		.loc 1 1321 10 is_stmt 0 view .LVU796
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 104


 2606 0076 04F11000 		add	r0, r4, #16
 2607 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2608              	.LVL205:
1321:System/FreeRTOS/queue.c **** 					{
 2609              		.loc 1 1321 8 view .LVU797
 2610 007e 0028     		cmp	r0, #0
 2611 0080 F4D0     		beq	.L178
1323:System/FreeRTOS/queue.c **** 					}
 2612              		.loc 1 1323 7 is_stmt 1 view .LVU798
 2613 0082 4FF0E023 		mov	r3, #-536813568
 2614 0086 4FF08052 		mov	r2, #268435456
 2615 008a C3F8042D 		str	r2, [r3, #3332]
1323:System/FreeRTOS/queue.c **** 					}
 2616              		.loc 1 1323 7 view .LVU799
 2617              		.syntax unified
 2618              	@ 1323 "System/FreeRTOS/queue.c" 1
 2619 008e BFF34F8F 		dsb
 2620              	@ 0 "" 2
1323:System/FreeRTOS/queue.c **** 					}
 2621              		.loc 1 1323 7 view .LVU800
 2622              	@ 1323 "System/FreeRTOS/queue.c" 1
 2623 0092 BFF36F8F 		isb
 2624              	@ 0 "" 2
1323:System/FreeRTOS/queue.c **** 					}
 2625              		.loc 1 1323 39 view .LVU801
 2626              		.thumb
 2627              		.syntax unified
 2628 0096 E9E7     		b	.L178
 2629              	.LVL206:
 2630              	.L194:
1344:System/FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2631              		.loc 1 1344 6 view .LVU802
 2632 0098 FFF7FEFF 		bl	vPortExitCritical
 2633              	.LVL207:
1345:System/FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
 2634              		.loc 1 1345 42 view .LVU803
1346:System/FreeRTOS/queue.c **** 				}
 2635              		.loc 1 1346 6 view .LVU804
1346:System/FreeRTOS/queue.c **** 				}
 2636              		.loc 1 1346 13 is_stmt 0 view .LVU805
 2637 009c 0020     		movs	r0, #0
 2638 009e E8E7     		b	.L169
 2639              	.L195:
1352:System/FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 2640              		.loc 1 1352 6 is_stmt 1 view .LVU806
 2641 00a0 02A8     		add	r0, sp, #8
 2642 00a2 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2643              	.LVL208:
1353:System/FreeRTOS/queue.c **** 				}
 2644              		.loc 1 1353 6 view .LVU807
1353:System/FreeRTOS/queue.c **** 				}
 2645              		.loc 1 1353 20 is_stmt 0 view .LVU808
 2646 00a6 0126     		movs	r6, #1
 2647 00a8 21E0     		b	.L181
 2648              	.LVL209:
 2649              	.L196:
1353:System/FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 105


 2650              		.loc 1 1353 20 view .LVU809
 2651              	.LBE180:
1368:System/FreeRTOS/queue.c **** 
 2652              		.loc 1 1368 3 is_stmt 1 discriminator 1 view .LVU810
 2653 00aa 0023     		movs	r3, #0
 2654 00ac 84F84430 		strb	r3, [r4, #68]
 2655 00b0 29E0     		b	.L182
 2656              	.L197:
1368:System/FreeRTOS/queue.c **** 
 2657              		.loc 1 1368 3 discriminator 4 view .LVU811
 2658 00b2 0023     		movs	r3, #0
 2659 00b4 84F84530 		strb	r3, [r4, #69]
 2660 00b8 2BE0     		b	.L183
 2661              	.L185:
1393:System/FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 2662              		.loc 1 1393 5 view .LVU812
 2663 00ba 2046     		mov	r0, r4
 2664 00bc FFF7FEFF 		bl	prvUnlockQueue
 2665              	.LVL210:
1394:System/FreeRTOS/queue.c **** 			}
 2666              		.loc 1 1394 5 view .LVU813
1394:System/FreeRTOS/queue.c **** 			}
 2667              		.loc 1 1394 14 is_stmt 0 view .LVU814
 2668 00c0 FFF7FEFF 		bl	xTaskResumeAll
 2669              	.LVL211:
 2670 00c4 09E0     		b	.L176
 2671              	.L184:
1401:System/FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 2672              		.loc 1 1401 4 is_stmt 1 view .LVU815
 2673 00c6 2046     		mov	r0, r4
 2674 00c8 FFF7FEFF 		bl	prvUnlockQueue
 2675              	.LVL212:
1402:System/FreeRTOS/queue.c **** 
 2676              		.loc 1 1402 4 view .LVU816
1402:System/FreeRTOS/queue.c **** 
 2677              		.loc 1 1402 13 is_stmt 0 view .LVU817
 2678 00cc FFF7FEFF 		bl	xTaskResumeAll
 2679              	.LVL213:
1404:System/FreeRTOS/queue.c **** 			{
 2680              		.loc 1 1404 4 is_stmt 1 view .LVU818
1404:System/FreeRTOS/queue.c **** 			{
 2681              		.loc 1 1404 8 is_stmt 0 view .LVU819
 2682 00d0 2046     		mov	r0, r4
 2683 00d2 FFF7FEFF 		bl	prvIsQueueEmpty
 2684              	.LVL214:
1404:System/FreeRTOS/queue.c **** 			{
 2685              		.loc 1 1404 6 view .LVU820
 2686 00d6 0028     		cmp	r0, #0
 2687 00d8 3FD1     		bne	.L192
 2688              	.LVL215:
 2689              	.L176:
1293:System/FreeRTOS/queue.c **** 	}
 2690              		.loc 1 1293 104 is_stmt 1 discriminator 8 view .LVU821
1301:System/FreeRTOS/queue.c **** 	{
 2691              		.loc 1 1301 2 discriminator 8 view .LVU822
1303:System/FreeRTOS/queue.c **** 		{
 2692              		.loc 1 1303 3 discriminator 8 view .LVU823
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 106


 2693 00da FFF7FEFF 		bl	vPortEnterCritical
 2694              	.LVL216:
 2695              	.LBB181:
1305:System/FreeRTOS/queue.c **** 
 2696              		.loc 1 1305 4 discriminator 8 view .LVU824
1305:System/FreeRTOS/queue.c **** 
 2697              		.loc 1 1305 22 is_stmt 0 discriminator 8 view .LVU825
 2698 00de A56B     		ldr	r5, [r4, #56]
 2699              	.LVL217:
1309:System/FreeRTOS/queue.c **** 			{
 2700              		.loc 1 1309 4 is_stmt 1 discriminator 8 view .LVU826
1309:System/FreeRTOS/queue.c **** 			{
 2701              		.loc 1 1309 6 is_stmt 0 discriminator 8 view .LVU827
 2702 00e0 002D     		cmp	r5, #0
 2703 00e2 BBD1     		bne	.L193
1340:System/FreeRTOS/queue.c **** 				{
 2704              		.loc 1 1340 5 is_stmt 1 view .LVU828
1340:System/FreeRTOS/queue.c **** 				{
 2705              		.loc 1 1340 22 is_stmt 0 view .LVU829
 2706 00e4 019B     		ldr	r3, [sp, #4]
1340:System/FreeRTOS/queue.c **** 				{
 2707              		.loc 1 1340 7 view .LVU830
 2708 00e6 002B     		cmp	r3, #0
 2709 00e8 D6D0     		beq	.L194
1348:System/FreeRTOS/queue.c **** 				{
 2710              		.loc 1 1348 10 is_stmt 1 view .LVU831
1348:System/FreeRTOS/queue.c **** 				{
 2711              		.loc 1 1348 12 is_stmt 0 view .LVU832
 2712 00ea 002E     		cmp	r6, #0
 2713 00ec D8D0     		beq	.L195
 2714              	.LVL218:
 2715              	.L181:
1358:System/FreeRTOS/queue.c **** 				}
 2716              		.loc 1 1358 30 is_stmt 1 view .LVU833
 2717              	.LBE181:
1362:System/FreeRTOS/queue.c **** 
 2718              		.loc 1 1362 3 view .LVU834
 2719 00ee FFF7FEFF 		bl	vPortExitCritical
 2720              	.LVL219:
1367:System/FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 2721              		.loc 1 1367 3 view .LVU835
 2722 00f2 FFF7FEFF 		bl	vTaskSuspendAll
 2723              	.LVL220:
1368:System/FreeRTOS/queue.c **** 
 2724              		.loc 1 1368 3 view .LVU836
 2725 00f6 FFF7FEFF 		bl	vPortEnterCritical
 2726              	.LVL221:
1368:System/FreeRTOS/queue.c **** 
 2727              		.loc 1 1368 3 view .LVU837
 2728 00fa 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2729 00fe 5BB2     		sxtb	r3, r3
 2730 0100 B3F1FF3F 		cmp	r3, #-1
 2731 0104 D1D0     		beq	.L196
 2732              	.L182:
1368:System/FreeRTOS/queue.c **** 
 2733              		.loc 1 1368 3 discriminator 3 view .LVU838
 2734 0106 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 107


 2735 010a 5BB2     		sxtb	r3, r3
 2736 010c B3F1FF3F 		cmp	r3, #-1
 2737 0110 CFD0     		beq	.L197
 2738              	.L183:
1368:System/FreeRTOS/queue.c **** 
 2739              		.loc 1 1368 3 discriminator 6 view .LVU839
 2740 0112 FFF7FEFF 		bl	vPortExitCritical
 2741              	.LVL222:
1371:System/FreeRTOS/queue.c **** 		{
 2742              		.loc 1 1371 3 discriminator 6 view .LVU840
1371:System/FreeRTOS/queue.c **** 		{
 2743              		.loc 1 1371 7 is_stmt 0 discriminator 6 view .LVU841
 2744 0116 01A9     		add	r1, sp, #4
 2745 0118 02A8     		add	r0, sp, #8
 2746 011a FFF7FEFF 		bl	xTaskCheckForTimeOut
 2747              	.LVL223:
1371:System/FreeRTOS/queue.c **** 		{
 2748              		.loc 1 1371 5 discriminator 6 view .LVU842
 2749 011e 0028     		cmp	r0, #0
 2750 0120 D1D1     		bne	.L184
1375:System/FreeRTOS/queue.c **** 			{
 2751              		.loc 1 1375 4 is_stmt 1 view .LVU843
1375:System/FreeRTOS/queue.c **** 			{
 2752              		.loc 1 1375 8 is_stmt 0 view .LVU844
 2753 0122 2046     		mov	r0, r4
 2754 0124 FFF7FEFF 		bl	prvIsQueueEmpty
 2755              	.LVL224:
1375:System/FreeRTOS/queue.c **** 			{
 2756              		.loc 1 1375 6 view .LVU845
 2757 0128 0028     		cmp	r0, #0
 2758 012a C6D0     		beq	.L185
1377:System/FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2759              		.loc 1 1377 46 is_stmt 1 view .LVU846
1378:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 2760              		.loc 1 1378 5 view .LVU847
 2761 012c 0199     		ldr	r1, [sp, #4]
 2762 012e 04F12400 		add	r0, r4, #36
 2763 0132 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2764              	.LVL225:
1379:System/FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2765              		.loc 1 1379 5 view .LVU848
 2766 0136 2046     		mov	r0, r4
 2767 0138 FFF7FEFF 		bl	prvUnlockQueue
 2768              	.LVL226:
1380:System/FreeRTOS/queue.c **** 				{
 2769              		.loc 1 1380 5 view .LVU849
1380:System/FreeRTOS/queue.c **** 				{
 2770              		.loc 1 1380 9 is_stmt 0 view .LVU850
 2771 013c FFF7FEFF 		bl	xTaskResumeAll
 2772              	.LVL227:
1380:System/FreeRTOS/queue.c **** 				{
 2773              		.loc 1 1380 7 view .LVU851
 2774 0140 0028     		cmp	r0, #0
 2775 0142 CAD1     		bne	.L176
1382:System/FreeRTOS/queue.c **** 				}
 2776              		.loc 1 1382 6 is_stmt 1 view .LVU852
 2777 0144 4FF0E023 		mov	r3, #-536813568
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 108


 2778 0148 4FF08052 		mov	r2, #268435456
 2779 014c C3F8042D 		str	r2, [r3, #3332]
1382:System/FreeRTOS/queue.c **** 				}
 2780              		.loc 1 1382 6 view .LVU853
 2781              		.syntax unified
 2782              	@ 1382 "System/FreeRTOS/queue.c" 1
 2783 0150 BFF34F8F 		dsb
 2784              	@ 0 "" 2
1382:System/FreeRTOS/queue.c **** 				}
 2785              		.loc 1 1382 6 view .LVU854
 2786              	@ 1382 "System/FreeRTOS/queue.c" 1
 2787 0154 BFF36F8F 		isb
 2788              	@ 0 "" 2
1382:System/FreeRTOS/queue.c **** 				}
 2789              		.loc 1 1382 28 view .LVU855
 2790              		.thumb
 2791              		.syntax unified
 2792 0158 BFE7     		b	.L176
 2793              	.L192:
1407:System/FreeRTOS/queue.c **** 			}
 2794              		.loc 1 1407 12 is_stmt 0 view .LVU856
 2795 015a 0020     		movs	r0, #0
 2796 015c 89E7     		b	.L169
 2797              		.cfi_endproc
 2798              	.LFE17:
 2800              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2801              		.align	1
 2802              		.global	xQueueSemaphoreTake
 2803              		.syntax unified
 2804              		.thumb
 2805              		.thumb_func
 2807              	xQueueSemaphoreTake:
 2808              	.LVL228:
 2809              	.LFB18:
1419:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2810              		.loc 1 1419 1 is_stmt 1 view -0
 2811              		.cfi_startproc
 2812              		@ args = 0, pretend = 0, frame = 16
 2813              		@ frame_needed = 0, uses_anonymous_args = 0
1419:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2814              		.loc 1 1419 1 is_stmt 0 view .LVU858
 2815 0000 70B5     		push	{r4, r5, r6, lr}
 2816              	.LCFI36:
 2817              		.cfi_def_cfa_offset 16
 2818              		.cfi_offset 4, -16
 2819              		.cfi_offset 5, -12
 2820              		.cfi_offset 6, -8
 2821              		.cfi_offset 14, -4
 2822 0002 84B0     		sub	sp, sp, #16
 2823              	.LCFI37:
 2824              		.cfi_def_cfa_offset 32
 2825 0004 0191     		str	r1, [sp, #4]
1420:System/FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 2826              		.loc 1 1420 1 is_stmt 1 view .LVU859
 2827              	.LVL229:
1421:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 2828              		.loc 1 1421 1 view .LVU860
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 109


1422:System/FreeRTOS/queue.c **** 
 2829              		.loc 1 1422 1 view .LVU861
1425:System/FreeRTOS/queue.c **** #endif
 2830              		.loc 1 1425 2 view .LVU862
1429:System/FreeRTOS/queue.c **** 
 2831              		.loc 1 1429 2 view .LVU863
 2832 0006 58B1     		cbz	r0, .L224
 2833 0008 0446     		mov	r4, r0
1429:System/FreeRTOS/queue.c **** 
 2834              		.loc 1 1429 29 discriminator 2 view .LVU864
1433:System/FreeRTOS/queue.c **** 
 2835              		.loc 1 1433 2 discriminator 2 view .LVU865
 2836 000a 036C     		ldr	r3, [r0, #64]
 2837 000c 8BB1     		cbz	r3, .L201
1433:System/FreeRTOS/queue.c **** 
 2838              		.loc 1 1433 2 view .LVU866
 2839              	.LBB182:
 2840              	.LBI182:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2841              		.loc 2 191 30 view .LVU867
 2842              	.LBB183:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2843              		.loc 2 193 1 view .LVU868
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2844              		.loc 2 195 2 view .LVU869
 2845              		.syntax unified
 2846              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2847 000e 4FF05003 			mov r3, #80												
 2848 0012 83F31188 		msr basepri, r3											
 2849 0016 BFF36F8F 		isb														
 2850 001a BFF34F8F 		dsb														
 2851              	
 2852              	@ 0 "" 2
 2853              	.LVL230:
 2854              		.thumb
 2855              		.syntax unified
 2856              	.L202:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2857              		.loc 2 195 2 is_stmt 0 view .LVU870
 2858              	.LBE183:
 2859              	.LBE182:
1433:System/FreeRTOS/queue.c **** 
 2860              		.loc 1 1433 2 is_stmt 1 discriminator 2 view .LVU871
1433:System/FreeRTOS/queue.c **** 
 2861              		.loc 1 1433 2 discriminator 2 view .LVU872
1433:System/FreeRTOS/queue.c **** 
 2862              		.loc 1 1433 2 discriminator 2 view .LVU873
 2863 001e FEE7     		b	.L202
 2864              	.L224:
1429:System/FreeRTOS/queue.c **** 
 2865              		.loc 1 1429 2 view .LVU874
 2866              	.LBB184:
 2867              	.LBI184:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2868              		.loc 2 191 30 view .LVU875
 2869              	.LBB185:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 110


 2870              		.loc 2 193 1 view .LVU876
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2871              		.loc 2 195 2 view .LVU877
 2872              		.syntax unified
 2873              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2874 0020 4FF05003 			mov r3, #80												
 2875 0024 83F31188 		msr basepri, r3											
 2876 0028 BFF36F8F 		isb														
 2877 002c BFF34F8F 		dsb														
 2878              	
 2879              	@ 0 "" 2
 2880              	.LVL231:
 2881              		.thumb
 2882              		.syntax unified
 2883              	.L200:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2884              		.loc 2 195 2 is_stmt 0 view .LVU878
 2885              	.LBE185:
 2886              	.LBE184:
1429:System/FreeRTOS/queue.c **** 
 2887              		.loc 1 1429 2 is_stmt 1 discriminator 1 view .LVU879
1429:System/FreeRTOS/queue.c **** 
 2888              		.loc 1 1429 2 discriminator 1 view .LVU880
1429:System/FreeRTOS/queue.c **** 
 2889              		.loc 1 1429 2 discriminator 1 view .LVU881
 2890 0030 FEE7     		b	.L200
 2891              	.L201:
1433:System/FreeRTOS/queue.c **** 
 2892              		.loc 1 1433 42 discriminator 2 view .LVU882
1438:System/FreeRTOS/queue.c **** 	}
 2893              		.loc 1 1438 3 discriminator 2 view .LVU883
 2894 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2895              	.LVL232:
1438:System/FreeRTOS/queue.c **** 	}
 2896              		.loc 1 1438 3 is_stmt 0 discriminator 2 view .LVU884
 2897 0036 0546     		mov	r5, r0
 2898 0038 50B9     		cbnz	r0, .L221
 2899 003a 019B     		ldr	r3, [sp, #4]
 2900 003c 5BB1     		cbz	r3, .L222
1438:System/FreeRTOS/queue.c **** 	}
 2901              		.loc 1 1438 3 is_stmt 1 view .LVU885
 2902              	.LBB186:
 2903              	.LBI186:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 2904              		.loc 2 191 30 view .LVU886
 2905              	.LBB187:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2906              		.loc 2 193 1 view .LVU887
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2907              		.loc 2 195 2 view .LVU888
 2908              		.syntax unified
 2909              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2910 003e 4FF05003 			mov r3, #80												
 2911 0042 83F31188 		msr basepri, r3											
 2912 0046 BFF36F8F 		isb														
 2913 004a BFF34F8F 		dsb														
 2914              	
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 111


 2915              	@ 0 "" 2
 2916              	.LVL233:
 2917              		.thumb
 2918              		.syntax unified
 2919              	.L204:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2920              		.loc 2 195 2 is_stmt 0 view .LVU889
 2921              	.LBE187:
 2922              	.LBE186:
1438:System/FreeRTOS/queue.c **** 	}
 2923              		.loc 1 1438 3 is_stmt 1 discriminator 3 view .LVU890
1438:System/FreeRTOS/queue.c **** 	}
 2924              		.loc 1 1438 3 discriminator 3 view .LVU891
1438:System/FreeRTOS/queue.c **** 	}
 2925              		.loc 1 1438 3 discriminator 3 view .LVU892
 2926 004e FEE7     		b	.L204
 2927              	.L221:
 2928 0050 0026     		movs	r6, #0
 2929 0052 3546     		mov	r5, r6
 2930 0054 55E0     		b	.L205
 2931              	.L222:
 2932 0056 0646     		mov	r6, r0
 2933 0058 53E0     		b	.L205
 2934              	.LVL234:
 2935              	.L228:
 2936              	.LBB188:
1458:System/FreeRTOS/queue.c **** 
 2937              		.loc 1 1458 34 view .LVU893
1462:System/FreeRTOS/queue.c **** 
 2938              		.loc 1 1462 5 view .LVU894
1462:System/FreeRTOS/queue.c **** 
 2939              		.loc 1 1462 51 is_stmt 0 view .LVU895
 2940 005a 013B     		subs	r3, r3, #1
 2941              	.LVL235:
1462:System/FreeRTOS/queue.c **** 
 2942              		.loc 1 1462 32 view .LVU896
 2943 005c A363     		str	r3, [r4, #56]
1466:System/FreeRTOS/queue.c **** 					{
 2944              		.loc 1 1466 6 is_stmt 1 view .LVU897
1466:System/FreeRTOS/queue.c **** 					{
 2945              		.loc 1 1466 17 is_stmt 0 view .LVU898
 2946 005e 2368     		ldr	r3, [r4]
 2947              	.LVL236:
1466:System/FreeRTOS/queue.c **** 					{
 2948              		.loc 1 1466 8 view .LVU899
 2949 0060 3BB1     		cbz	r3, .L225
 2950              	.LVL237:
 2951              	.L207:
1474:System/FreeRTOS/queue.c **** 					}
 2952              		.loc 1 1474 31 is_stmt 1 view .LVU900
1481:System/FreeRTOS/queue.c **** 				{
 2953              		.loc 1 1481 5 view .LVU901
1481:System/FreeRTOS/queue.c **** 				{
 2954              		.loc 1 1481 9 is_stmt 0 view .LVU902
 2955 0062 2369     		ldr	r3, [r4, #16]
1481:System/FreeRTOS/queue.c **** 				{
 2956              		.loc 1 1481 7 view .LVU903
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 112


 2957 0064 4BB9     		cbnz	r3, .L226
 2958              	.L208:
1494:System/FreeRTOS/queue.c **** 				}
 2959              		.loc 1 1494 30 is_stmt 1 view .LVU904
1497:System/FreeRTOS/queue.c **** 				return pdPASS;
 2960              		.loc 1 1497 5 view .LVU905
 2961 0066 FFF7FEFF 		bl	vPortExitCritical
 2962              	.LVL238:
1498:System/FreeRTOS/queue.c **** 			}
 2963              		.loc 1 1498 5 view .LVU906
1498:System/FreeRTOS/queue.c **** 			}
 2964              		.loc 1 1498 12 is_stmt 0 view .LVU907
 2965 006a 0126     		movs	r6, #1
 2966              	.LVL239:
 2967              	.L198:
1498:System/FreeRTOS/queue.c **** 			}
 2968              		.loc 1 1498 12 view .LVU908
 2969              	.LBE188:
1633:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2970              		.loc 1 1633 1 view .LVU909
 2971 006c 3046     		mov	r0, r6
 2972 006e 04B0     		add	sp, sp, #16
 2973              	.LCFI38:
 2974              		.cfi_remember_state
 2975              		.cfi_def_cfa_offset 16
 2976              		@ sp needed
 2977 0070 70BD     		pop	{r4, r5, r6, pc}
 2978              	.LVL240:
 2979              	.L225:
 2980              	.LCFI39:
 2981              		.cfi_restore_state
 2982              	.LBB191:
1470:System/FreeRTOS/queue.c **** 					}
 2983              		.loc 1 1470 7 is_stmt 1 view .LVU910
1470:System/FreeRTOS/queue.c **** 					}
 2984              		.loc 1 1470 44 is_stmt 0 view .LVU911
 2985 0072 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2986              	.LVL241:
1470:System/FreeRTOS/queue.c **** 					}
 2987              		.loc 1 1470 42 view .LVU912
 2988 0076 A060     		str	r0, [r4, #8]
 2989 0078 F3E7     		b	.L207
 2990              	.L226:
1483:System/FreeRTOS/queue.c **** 					{
 2991              		.loc 1 1483 6 is_stmt 1 view .LVU913
1483:System/FreeRTOS/queue.c **** 					{
 2992              		.loc 1 1483 10 is_stmt 0 view .LVU914
 2993 007a 04F11000 		add	r0, r4, #16
 2994 007e FFF7FEFF 		bl	xTaskRemoveFromEventList
 2995              	.LVL242:
1483:System/FreeRTOS/queue.c **** 					{
 2996              		.loc 1 1483 8 view .LVU915
 2997 0082 0028     		cmp	r0, #0
 2998 0084 EFD0     		beq	.L208
1485:System/FreeRTOS/queue.c **** 					}
 2999              		.loc 1 1485 7 is_stmt 1 view .LVU916
 3000 0086 4FF0E023 		mov	r3, #-536813568
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 113


 3001 008a 4FF08052 		mov	r2, #268435456
 3002 008e C3F8042D 		str	r2, [r3, #3332]
1485:System/FreeRTOS/queue.c **** 					}
 3003              		.loc 1 1485 7 view .LVU917
 3004              		.syntax unified
 3005              	@ 1485 "System/FreeRTOS/queue.c" 1
 3006 0092 BFF34F8F 		dsb
 3007              	@ 0 "" 2
1485:System/FreeRTOS/queue.c **** 					}
 3008              		.loc 1 1485 7 view .LVU918
 3009              	@ 1485 "System/FreeRTOS/queue.c" 1
 3010 0096 BFF36F8F 		isb
 3011              	@ 0 "" 2
1485:System/FreeRTOS/queue.c **** 					}
 3012              		.loc 1 1485 39 view .LVU919
 3013              		.thumb
 3014              		.syntax unified
 3015 009a E4E7     		b	.L208
 3016              	.L229:
1509:System/FreeRTOS/queue.c **** 					}
 3017              		.loc 1 1509 7 view .LVU920
 3018 009c 46B1     		cbz	r6, .L211
1509:System/FreeRTOS/queue.c **** 					}
 3019              		.loc 1 1509 7 view .LVU921
 3020              	.LBB189:
 3021              	.LBI189:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3022              		.loc 2 191 30 view .LVU922
 3023              	.LBB190:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3024              		.loc 2 193 1 view .LVU923
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3025              		.loc 2 195 2 view .LVU924
 3026              		.syntax unified
 3027              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3028 009e 4FF05003 			mov r3, #80												
 3029 00a2 83F31188 		msr basepri, r3											
 3030 00a6 BFF36F8F 		isb														
 3031 00aa BFF34F8F 		dsb														
 3032              	
 3033              	@ 0 "" 2
 3034              	.LVL243:
 3035              		.thumb
 3036              		.syntax unified
 3037              	.L212:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3038              		.loc 2 195 2 is_stmt 0 view .LVU925
 3039              	.LBE190:
 3040              	.LBE189:
1509:System/FreeRTOS/queue.c **** 					}
 3041              		.loc 1 1509 7 is_stmt 1 discriminator 4 view .LVU926
1509:System/FreeRTOS/queue.c **** 					}
 3042              		.loc 1 1509 7 discriminator 4 view .LVU927
1509:System/FreeRTOS/queue.c **** 					}
 3043              		.loc 1 1509 7 discriminator 4 view .LVU928
 3044 00ae FEE7     		b	.L212
 3045              	.L211:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 114


1509:System/FreeRTOS/queue.c **** 					}
 3046              		.loc 1 1509 54 discriminator 2 view .LVU929
1515:System/FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 3047              		.loc 1 1515 6 discriminator 2 view .LVU930
 3048 00b0 FFF7FEFF 		bl	vPortExitCritical
 3049              	.LVL244:
1516:System/FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
 3050              		.loc 1 1516 42 discriminator 2 view .LVU931
1517:System/FreeRTOS/queue.c **** 				}
 3051              		.loc 1 1517 6 discriminator 2 view .LVU932
1517:System/FreeRTOS/queue.c **** 				}
 3052              		.loc 1 1517 13 is_stmt 0 discriminator 2 view .LVU933
 3053 00b4 DAE7     		b	.L198
 3054              	.L230:
1523:System/FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 3055              		.loc 1 1523 6 is_stmt 1 view .LVU934
 3056 00b6 02A8     		add	r0, sp, #8
 3057 00b8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3058              	.LVL245:
1524:System/FreeRTOS/queue.c **** 				}
 3059              		.loc 1 1524 6 view .LVU935
1524:System/FreeRTOS/queue.c **** 				}
 3060              		.loc 1 1524 20 is_stmt 0 view .LVU936
 3061 00bc 0125     		movs	r5, #1
 3062 00be 2AE0     		b	.L213
 3063              	.LVL246:
 3064              	.L231:
1524:System/FreeRTOS/queue.c **** 				}
 3065              		.loc 1 1524 20 view .LVU937
 3066              	.LBE191:
1539:System/FreeRTOS/queue.c **** 
 3067              		.loc 1 1539 3 is_stmt 1 discriminator 1 view .LVU938
 3068 00c0 0023     		movs	r3, #0
 3069 00c2 84F84430 		strb	r3, [r4, #68]
 3070 00c6 32E0     		b	.L214
 3071              	.L232:
1539:System/FreeRTOS/queue.c **** 
 3072              		.loc 1 1539 3 discriminator 4 view .LVU939
 3073 00c8 0023     		movs	r3, #0
 3074 00ca 84F84530 		strb	r3, [r4, #69]
 3075 00ce 34E0     		b	.L215
 3076              	.L233:
1556:System/FreeRTOS/queue.c **** 						{
 3077              		.loc 1 1556 7 view .LVU940
 3078 00d0 FFF7FEFF 		bl	vPortEnterCritical
 3079              	.LVL247:
1558:System/FreeRTOS/queue.c **** 						}
 3080              		.loc 1 1558 8 view .LVU941
1558:System/FreeRTOS/queue.c **** 						}
 3081              		.loc 1 1558 31 is_stmt 0 view .LVU942
 3082 00d4 A068     		ldr	r0, [r4, #8]
 3083 00d6 FFF7FEFF 		bl	xTaskPriorityInherit
 3084              	.LVL248:
 3085 00da 0646     		mov	r6, r0
 3086              	.LVL249:
1560:System/FreeRTOS/queue.c **** 					}
 3087              		.loc 1 1560 7 is_stmt 1 view .LVU943
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 115


 3088 00dc FFF7FEFF 		bl	vPortExitCritical
 3089              	.LVL250:
1560:System/FreeRTOS/queue.c **** 					}
 3090              		.loc 1 1560 7 is_stmt 0 view .LVU944
 3091 00e0 3BE0     		b	.L218
 3092              	.L217:
1584:System/FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 3093              		.loc 1 1584 5 is_stmt 1 view .LVU945
 3094 00e2 2046     		mov	r0, r4
 3095 00e4 FFF7FEFF 		bl	prvUnlockQueue
 3096              	.LVL251:
1585:System/FreeRTOS/queue.c **** 			}
 3097              		.loc 1 1585 5 view .LVU946
1585:System/FreeRTOS/queue.c **** 			}
 3098              		.loc 1 1585 14 is_stmt 0 view .LVU947
 3099 00e8 FFF7FEFF 		bl	xTaskResumeAll
 3100              	.LVL252:
 3101 00ec 09E0     		b	.L205
 3102              	.L216:
1591:System/FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 3103              		.loc 1 1591 4 is_stmt 1 view .LVU948
 3104 00ee 2046     		mov	r0, r4
 3105 00f0 FFF7FEFF 		bl	prvUnlockQueue
 3106              	.LVL253:
1592:System/FreeRTOS/queue.c **** 
 3107              		.loc 1 1592 4 view .LVU949
1592:System/FreeRTOS/queue.c **** 
 3108              		.loc 1 1592 13 is_stmt 0 view .LVU950
 3109 00f4 FFF7FEFF 		bl	xTaskResumeAll
 3110              	.LVL254:
1598:System/FreeRTOS/queue.c **** 			{
 3111              		.loc 1 1598 4 is_stmt 1 view .LVU951
1598:System/FreeRTOS/queue.c **** 			{
 3112              		.loc 1 1598 8 is_stmt 0 view .LVU952
 3113 00f8 2046     		mov	r0, r4
 3114 00fa FFF7FEFF 		bl	prvIsQueueEmpty
 3115              	.LVL255:
1598:System/FreeRTOS/queue.c **** 			{
 3116              		.loc 1 1598 6 view .LVU953
 3117 00fe 0028     		cmp	r0, #0
 3118 0100 42D1     		bne	.L227
 3119              	.LVL256:
 3120              	.L205:
1438:System/FreeRTOS/queue.c **** 	}
 3121              		.loc 1 1438 104 is_stmt 1 discriminator 8 view .LVU954
1446:System/FreeRTOS/queue.c **** 	{
 3122              		.loc 1 1446 2 discriminator 8 view .LVU955
1448:System/FreeRTOS/queue.c **** 		{
 3123              		.loc 1 1448 3 discriminator 8 view .LVU956
 3124 0102 FFF7FEFF 		bl	vPortEnterCritical
 3125              	.LVL257:
 3126              	.LBB192:
1452:System/FreeRTOS/queue.c **** 
 3127              		.loc 1 1452 4 discriminator 8 view .LVU957
1452:System/FreeRTOS/queue.c **** 
 3128              		.loc 1 1452 22 is_stmt 0 discriminator 8 view .LVU958
 3129 0106 A36B     		ldr	r3, [r4, #56]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 116


 3130              	.LVL258:
1456:System/FreeRTOS/queue.c **** 			{
 3131              		.loc 1 1456 4 is_stmt 1 discriminator 8 view .LVU959
1456:System/FreeRTOS/queue.c **** 			{
 3132              		.loc 1 1456 6 is_stmt 0 discriminator 8 view .LVU960
 3133 0108 002B     		cmp	r3, #0
 3134 010a A6D1     		bne	.L228
1502:System/FreeRTOS/queue.c **** 				{
 3135              		.loc 1 1502 5 is_stmt 1 view .LVU961
1502:System/FreeRTOS/queue.c **** 				{
 3136              		.loc 1 1502 22 is_stmt 0 view .LVU962
 3137 010c 019B     		ldr	r3, [sp, #4]
 3138              	.LVL259:
1502:System/FreeRTOS/queue.c **** 				{
 3139              		.loc 1 1502 7 view .LVU963
 3140 010e 002B     		cmp	r3, #0
 3141 0110 C4D0     		beq	.L229
1519:System/FreeRTOS/queue.c **** 				{
 3142              		.loc 1 1519 10 is_stmt 1 view .LVU964
1519:System/FreeRTOS/queue.c **** 				{
 3143              		.loc 1 1519 12 is_stmt 0 view .LVU965
 3144 0112 002D     		cmp	r5, #0
 3145 0114 CFD0     		beq	.L230
 3146              	.LVL260:
 3147              	.L213:
1529:System/FreeRTOS/queue.c **** 				}
 3148              		.loc 1 1529 30 is_stmt 1 view .LVU966
 3149              	.LBE192:
1533:System/FreeRTOS/queue.c **** 
 3150              		.loc 1 1533 3 view .LVU967
 3151 0116 FFF7FEFF 		bl	vPortExitCritical
 3152              	.LVL261:
1538:System/FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 3153              		.loc 1 1538 3 view .LVU968
 3154 011a FFF7FEFF 		bl	vTaskSuspendAll
 3155              	.LVL262:
1539:System/FreeRTOS/queue.c **** 
 3156              		.loc 1 1539 3 view .LVU969
 3157 011e FFF7FEFF 		bl	vPortEnterCritical
 3158              	.LVL263:
1539:System/FreeRTOS/queue.c **** 
 3159              		.loc 1 1539 3 view .LVU970
 3160 0122 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3161 0126 5BB2     		sxtb	r3, r3
 3162 0128 B3F1FF3F 		cmp	r3, #-1
 3163 012c C8D0     		beq	.L231
 3164              	.L214:
1539:System/FreeRTOS/queue.c **** 
 3165              		.loc 1 1539 3 discriminator 3 view .LVU971
 3166 012e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3167 0132 5BB2     		sxtb	r3, r3
 3168 0134 B3F1FF3F 		cmp	r3, #-1
 3169 0138 C6D0     		beq	.L232
 3170              	.L215:
1539:System/FreeRTOS/queue.c **** 
 3171              		.loc 1 1539 3 discriminator 6 view .LVU972
 3172 013a FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 117


 3173              	.LVL264:
1542:System/FreeRTOS/queue.c **** 		{
 3174              		.loc 1 1542 3 discriminator 6 view .LVU973
1542:System/FreeRTOS/queue.c **** 		{
 3175              		.loc 1 1542 7 is_stmt 0 discriminator 6 view .LVU974
 3176 013e 01A9     		add	r1, sp, #4
 3177 0140 02A8     		add	r0, sp, #8
 3178 0142 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3179              	.LVL265:
1542:System/FreeRTOS/queue.c **** 		{
 3180              		.loc 1 1542 5 discriminator 6 view .LVU975
 3181 0146 0028     		cmp	r0, #0
 3182 0148 D1D1     		bne	.L216
1548:System/FreeRTOS/queue.c **** 			{
 3183              		.loc 1 1548 4 is_stmt 1 view .LVU976
1548:System/FreeRTOS/queue.c **** 			{
 3184              		.loc 1 1548 8 is_stmt 0 view .LVU977
 3185 014a 2046     		mov	r0, r4
 3186 014c FFF7FEFF 		bl	prvIsQueueEmpty
 3187              	.LVL266:
1548:System/FreeRTOS/queue.c **** 			{
 3188              		.loc 1 1548 6 view .LVU978
 3189 0150 0028     		cmp	r0, #0
 3190 0152 C6D0     		beq	.L217
1550:System/FreeRTOS/queue.c **** 
 3191              		.loc 1 1550 46 is_stmt 1 view .LVU979
1554:System/FreeRTOS/queue.c **** 					{
 3192              		.loc 1 1554 6 view .LVU980
1554:System/FreeRTOS/queue.c **** 					{
 3193              		.loc 1 1554 17 is_stmt 0 view .LVU981
 3194 0154 2368     		ldr	r3, [r4]
1554:System/FreeRTOS/queue.c **** 					{
 3195              		.loc 1 1554 8 view .LVU982
 3196 0156 002B     		cmp	r3, #0
 3197 0158 BAD0     		beq	.L233
 3198              	.L218:
1564:System/FreeRTOS/queue.c **** 					}
 3199              		.loc 1 1564 31 is_stmt 1 view .LVU983
1569:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 3200              		.loc 1 1569 5 view .LVU984
 3201 015a 0199     		ldr	r1, [sp, #4]
 3202 015c 04F12400 		add	r0, r4, #36
 3203 0160 FFF7FEFF 		bl	vTaskPlaceOnEventList
 3204              	.LVL267:
1570:System/FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3205              		.loc 1 1570 5 view .LVU985
 3206 0164 2046     		mov	r0, r4
 3207 0166 FFF7FEFF 		bl	prvUnlockQueue
 3208              	.LVL268:
1571:System/FreeRTOS/queue.c **** 				{
 3209              		.loc 1 1571 5 view .LVU986
1571:System/FreeRTOS/queue.c **** 				{
 3210              		.loc 1 1571 9 is_stmt 0 view .LVU987
 3211 016a FFF7FEFF 		bl	xTaskResumeAll
 3212              	.LVL269:
1571:System/FreeRTOS/queue.c **** 				{
 3213              		.loc 1 1571 7 view .LVU988
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 118


 3214 016e 0028     		cmp	r0, #0
 3215 0170 C7D1     		bne	.L205
1573:System/FreeRTOS/queue.c **** 				}
 3216              		.loc 1 1573 6 is_stmt 1 view .LVU989
 3217 0172 4FF0E023 		mov	r3, #-536813568
 3218 0176 4FF08052 		mov	r2, #268435456
 3219 017a C3F8042D 		str	r2, [r3, #3332]
1573:System/FreeRTOS/queue.c **** 				}
 3220              		.loc 1 1573 6 view .LVU990
 3221              		.syntax unified
 3222              	@ 1573 "System/FreeRTOS/queue.c" 1
 3223 017e BFF34F8F 		dsb
 3224              	@ 0 "" 2
1573:System/FreeRTOS/queue.c **** 				}
 3225              		.loc 1 1573 6 view .LVU991
 3226              	@ 1573 "System/FreeRTOS/queue.c" 1
 3227 0182 BFF36F8F 		isb
 3228              	@ 0 "" 2
1573:System/FreeRTOS/queue.c **** 				}
 3229              		.loc 1 1573 28 view .LVU992
 3230              		.thumb
 3231              		.syntax unified
 3232 0186 BCE7     		b	.L205
 3233              	.L227:
1605:System/FreeRTOS/queue.c **** 					{
 3234              		.loc 1 1605 6 view .LVU993
1605:System/FreeRTOS/queue.c **** 					{
 3235              		.loc 1 1605 8 is_stmt 0 view .LVU994
 3236 0188 0EB9     		cbnz	r6, .L234
 3237              	.L220:
1624:System/FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
 3238              		.loc 1 1624 41 is_stmt 1 view .LVU995
1625:System/FreeRTOS/queue.c **** 			}
 3239              		.loc 1 1625 5 view .LVU996
1625:System/FreeRTOS/queue.c **** 			}
 3240              		.loc 1 1625 12 is_stmt 0 view .LVU997
 3241 018a 0026     		movs	r6, #0
 3242              	.LVL270:
1625:System/FreeRTOS/queue.c **** 			}
 3243              		.loc 1 1625 12 view .LVU998
 3244 018c 6EE7     		b	.L198
 3245              	.LVL271:
 3246              	.L234:
1607:System/FreeRTOS/queue.c **** 						{
 3247              		.loc 1 1607 7 is_stmt 1 view .LVU999
 3248 018e FFF7FEFF 		bl	vPortEnterCritical
 3249              	.LVL272:
 3250              	.LBB193:
1609:System/FreeRTOS/queue.c **** 
 3251              		.loc 1 1609 8 view .LVU1000
1616:System/FreeRTOS/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 3252              		.loc 1 1616 8 view .LVU1001
1616:System/FreeRTOS/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 3253              		.loc 1 1616 35 is_stmt 0 view .LVU1002
 3254 0192 2046     		mov	r0, r4
 3255 0194 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 3256              	.LVL273:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 119


 3257 0198 0146     		mov	r1, r0
 3258              	.LVL274:
1617:System/FreeRTOS/queue.c **** 						}
 3259              		.loc 1 1617 8 is_stmt 1 view .LVU1003
 3260 019a A068     		ldr	r0, [r4, #8]
 3261              	.LVL275:
1617:System/FreeRTOS/queue.c **** 						}
 3262              		.loc 1 1617 8 is_stmt 0 view .LVU1004
 3263 019c FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 3264              	.LVL276:
1617:System/FreeRTOS/queue.c **** 						}
 3265              		.loc 1 1617 8 view .LVU1005
 3266              	.LBE193:
1619:System/FreeRTOS/queue.c **** 					}
 3267              		.loc 1 1619 7 is_stmt 1 view .LVU1006
 3268 01a0 FFF7FEFF 		bl	vPortExitCritical
 3269              	.LVL277:
 3270 01a4 F1E7     		b	.L220
 3271              		.cfi_endproc
 3272              	.LFE18:
 3274              		.section	.text.xQueuePeek,"ax",%progbits
 3275              		.align	1
 3276              		.global	xQueuePeek
 3277              		.syntax unified
 3278              		.thumb
 3279              		.thumb_func
 3281              	xQueuePeek:
 3282              	.LVL278:
 3283              	.LFB19:
1637:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 3284              		.loc 1 1637 1 view -0
 3285              		.cfi_startproc
 3286              		@ args = 0, pretend = 0, frame = 16
 3287              		@ frame_needed = 0, uses_anonymous_args = 0
1637:System/FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 3288              		.loc 1 1637 1 is_stmt 0 view .LVU1008
 3289 0000 70B5     		push	{r4, r5, r6, lr}
 3290              	.LCFI40:
 3291              		.cfi_def_cfa_offset 16
 3292              		.cfi_offset 4, -16
 3293              		.cfi_offset 5, -12
 3294              		.cfi_offset 6, -8
 3295              		.cfi_offset 14, -4
 3296 0002 84B0     		sub	sp, sp, #16
 3297              	.LCFI41:
 3298              		.cfi_def_cfa_offset 32
 3299 0004 0192     		str	r2, [sp, #4]
1638:System/FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 3300              		.loc 1 1638 1 is_stmt 1 view .LVU1009
 3301              	.LVL279:
1639:System/FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
 3302              		.loc 1 1639 1 view .LVU1010
1640:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 3303              		.loc 1 1640 1 view .LVU1011
1641:System/FreeRTOS/queue.c **** 
 3304              		.loc 1 1641 1 view .LVU1012
1644:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 120


 3305              		.loc 1 1644 2 view .LVU1013
 3306 0006 90B1     		cbz	r0, .L255
 3307 0008 0E46     		mov	r6, r1
 3308 000a 0446     		mov	r4, r0
1644:System/FreeRTOS/queue.c **** 
 3309              		.loc 1 1644 29 discriminator 2 view .LVU1014
1648:System/FreeRTOS/queue.c **** 
 3310              		.loc 1 1648 2 discriminator 2 view .LVU1015
 3311 000c C1B1     		cbz	r1, .L256
 3312              	.L238:
1648:System/FreeRTOS/queue.c **** 
 3313              		.loc 1 1648 100 discriminator 8 view .LVU1016
1653:System/FreeRTOS/queue.c **** 	}
 3314              		.loc 1 1653 3 discriminator 8 view .LVU1017
 3315 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 3316              	.LVL280:
1653:System/FreeRTOS/queue.c **** 	}
 3317              		.loc 1 1653 3 is_stmt 0 discriminator 8 view .LVU1018
 3318 0012 0546     		mov	r5, r0
 3319 0014 00BB     		cbnz	r0, .L253
1653:System/FreeRTOS/queue.c **** 	}
 3320              		.loc 1 1653 3 discriminator 2 view .LVU1019
 3321 0016 019B     		ldr	r3, [sp, #4]
 3322 0018 002B     		cmp	r3, #0
 3323 001a 5ED0     		beq	.L242
1653:System/FreeRTOS/queue.c **** 	}
 3324              		.loc 1 1653 3 is_stmt 1 view .LVU1020
 3325              	.LBB194:
 3326              	.LBI194:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3327              		.loc 2 191 30 view .LVU1021
 3328              	.LBB195:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3329              		.loc 2 193 1 view .LVU1022
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3330              		.loc 2 195 2 view .LVU1023
 3331              		.syntax unified
 3332              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3333 001c 4FF05003 			mov r3, #80												
 3334 0020 83F31188 		msr basepri, r3											
 3335 0024 BFF36F8F 		isb														
 3336 0028 BFF34F8F 		dsb														
 3337              	
 3338              	@ 0 "" 2
 3339              	.LVL281:
 3340              		.thumb
 3341              		.syntax unified
 3342              	.L241:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3343              		.loc 2 195 2 is_stmt 0 view .LVU1024
 3344              	.LBE195:
 3345              	.LBE194:
1653:System/FreeRTOS/queue.c **** 	}
 3346              		.loc 1 1653 3 is_stmt 1 discriminator 3 view .LVU1025
1653:System/FreeRTOS/queue.c **** 	}
 3347              		.loc 1 1653 3 discriminator 3 view .LVU1026
1653:System/FreeRTOS/queue.c **** 	}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 121


 3348              		.loc 1 1653 3 discriminator 3 view .LVU1027
 3349 002c FEE7     		b	.L241
 3350              	.LVL282:
 3351              	.L255:
1644:System/FreeRTOS/queue.c **** 
 3352              		.loc 1 1644 2 view .LVU1028
 3353              	.LBB196:
 3354              	.LBI196:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3355              		.loc 2 191 30 view .LVU1029
 3356              	.LBB197:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3357              		.loc 2 193 1 view .LVU1030
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3358              		.loc 2 195 2 view .LVU1031
 3359              		.syntax unified
 3360              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3361 002e 4FF05003 			mov r3, #80												
 3362 0032 83F31188 		msr basepri, r3											
 3363 0036 BFF36F8F 		isb														
 3364 003a BFF34F8F 		dsb														
 3365              	
 3366              	@ 0 "" 2
 3367              	.LVL283:
 3368              		.thumb
 3369              		.syntax unified
 3370              	.L237:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3371              		.loc 2 195 2 is_stmt 0 view .LVU1032
 3372              	.LBE197:
 3373              	.LBE196:
1644:System/FreeRTOS/queue.c **** 
 3374              		.loc 1 1644 2 is_stmt 1 discriminator 1 view .LVU1033
1644:System/FreeRTOS/queue.c **** 
 3375              		.loc 1 1644 2 discriminator 1 view .LVU1034
1644:System/FreeRTOS/queue.c **** 
 3376              		.loc 1 1644 2 discriminator 1 view .LVU1035
 3377 003e FEE7     		b	.L237
 3378              	.L256:
1648:System/FreeRTOS/queue.c **** 
 3379              		.loc 1 1648 2 is_stmt 0 discriminator 2 view .LVU1036
 3380 0040 036C     		ldr	r3, [r0, #64]
 3381 0042 002B     		cmp	r3, #0
 3382 0044 E3D0     		beq	.L238
1648:System/FreeRTOS/queue.c **** 
 3383              		.loc 1 1648 2 is_stmt 1 view .LVU1037
 3384              	.LBB198:
 3385              	.LBI198:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3386              		.loc 2 191 30 view .LVU1038
 3387              	.LBB199:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3388              		.loc 2 193 1 view .LVU1039
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3389              		.loc 2 195 2 view .LVU1040
 3390              		.syntax unified
 3391              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 122


 3392 0046 4FF05003 			mov r3, #80												
 3393 004a 83F31188 		msr basepri, r3											
 3394 004e BFF36F8F 		isb														
 3395 0052 BFF34F8F 		dsb														
 3396              	
 3397              	@ 0 "" 2
 3398              	.LVL284:
 3399              		.thumb
 3400              		.syntax unified
 3401              	.L239:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3402              		.loc 2 195 2 is_stmt 0 view .LVU1041
 3403              	.LBE199:
 3404              	.LBE198:
1648:System/FreeRTOS/queue.c **** 
 3405              		.loc 1 1648 2 is_stmt 1 discriminator 2 view .LVU1042
1648:System/FreeRTOS/queue.c **** 
 3406              		.loc 1 1648 2 discriminator 2 view .LVU1043
1648:System/FreeRTOS/queue.c **** 
 3407              		.loc 1 1648 2 discriminator 2 view .LVU1044
 3408 0056 FEE7     		b	.L239
 3409              	.LVL285:
 3410              	.L253:
1648:System/FreeRTOS/queue.c **** 
 3411              		.loc 1 1648 2 is_stmt 0 discriminator 2 view .LVU1045
 3412 0058 0025     		movs	r5, #0
 3413 005a 3EE0     		b	.L242
 3414              	.LVL286:
 3415              	.L259:
 3416              	.LBB200:
1674:System/FreeRTOS/queue.c **** 
 3417              		.loc 1 1674 5 is_stmt 1 view .LVU1046
1674:System/FreeRTOS/queue.c **** 
 3418              		.loc 1 1674 28 is_stmt 0 view .LVU1047
 3419 005c E568     		ldr	r5, [r4, #12]
 3420              	.LVL287:
1676:System/FreeRTOS/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 3421              		.loc 1 1676 5 is_stmt 1 view .LVU1048
 3422 005e 3146     		mov	r1, r6
 3423 0060 2046     		mov	r0, r4
 3424 0062 FFF7FEFF 		bl	prvCopyDataFromQueue
 3425              	.LVL288:
1677:System/FreeRTOS/queue.c **** 
 3426              		.loc 1 1677 31 view .LVU1049
1680:System/FreeRTOS/queue.c **** 
 3427              		.loc 1 1680 5 view .LVU1050
1680:System/FreeRTOS/queue.c **** 
 3428              		.loc 1 1680 34 is_stmt 0 view .LVU1051
 3429 0066 E560     		str	r5, [r4, #12]
1684:System/FreeRTOS/queue.c **** 				{
 3430              		.loc 1 1684 5 is_stmt 1 view .LVU1052
1684:System/FreeRTOS/queue.c **** 				{
 3431              		.loc 1 1684 9 is_stmt 0 view .LVU1053
 3432 0068 636A     		ldr	r3, [r4, #36]
1684:System/FreeRTOS/queue.c **** 				{
 3433              		.loc 1 1684 7 view .LVU1054
 3434 006a 23B9     		cbnz	r3, .L257
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 123


 3435              	.L244:
1698:System/FreeRTOS/queue.c **** 				}
 3436              		.loc 1 1698 30 is_stmt 1 view .LVU1055
1701:System/FreeRTOS/queue.c **** 				return pdPASS;
 3437              		.loc 1 1701 5 view .LVU1056
 3438 006c FFF7FEFF 		bl	vPortExitCritical
 3439              	.LVL289:
1702:System/FreeRTOS/queue.c **** 			}
 3440              		.loc 1 1702 5 view .LVU1057
1702:System/FreeRTOS/queue.c **** 			}
 3441              		.loc 1 1702 12 is_stmt 0 view .LVU1058
 3442 0070 0120     		movs	r0, #1
 3443              	.LVL290:
 3444              	.L235:
1702:System/FreeRTOS/queue.c **** 			}
 3445              		.loc 1 1702 12 view .LVU1059
 3446              	.LBE200:
1782:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 3447              		.loc 1 1782 1 view .LVU1060
 3448 0072 04B0     		add	sp, sp, #16
 3449              	.LCFI42:
 3450              		.cfi_remember_state
 3451              		.cfi_def_cfa_offset 16
 3452              		@ sp needed
 3453 0074 70BD     		pop	{r4, r5, r6, pc}
 3454              	.LVL291:
 3455              	.L257:
 3456              	.LCFI43:
 3457              		.cfi_restore_state
 3458              	.LBB201:
1686:System/FreeRTOS/queue.c **** 					{
 3459              		.loc 1 1686 6 is_stmt 1 view .LVU1061
1686:System/FreeRTOS/queue.c **** 					{
 3460              		.loc 1 1686 10 is_stmt 0 view .LVU1062
 3461 0076 04F12400 		add	r0, r4, #36
 3462 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 3463              	.LVL292:
1686:System/FreeRTOS/queue.c **** 					{
 3464              		.loc 1 1686 8 view .LVU1063
 3465 007e 0028     		cmp	r0, #0
 3466 0080 F4D0     		beq	.L244
1689:System/FreeRTOS/queue.c **** 					}
 3467              		.loc 1 1689 7 is_stmt 1 view .LVU1064
 3468 0082 4FF0E023 		mov	r3, #-536813568
 3469 0086 4FF08052 		mov	r2, #268435456
 3470 008a C3F8042D 		str	r2, [r3, #3332]
1689:System/FreeRTOS/queue.c **** 					}
 3471              		.loc 1 1689 7 view .LVU1065
 3472              		.syntax unified
 3473              	@ 1689 "System/FreeRTOS/queue.c" 1
 3474 008e BFF34F8F 		dsb
 3475              	@ 0 "" 2
1689:System/FreeRTOS/queue.c **** 					}
 3476              		.loc 1 1689 7 view .LVU1066
 3477              	@ 1689 "System/FreeRTOS/queue.c" 1
 3478 0092 BFF36F8F 		isb
 3479              	@ 0 "" 2
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 124


1689:System/FreeRTOS/queue.c **** 					}
 3480              		.loc 1 1689 39 view .LVU1067
 3481              		.thumb
 3482              		.syntax unified
 3483 0096 E9E7     		b	.L244
 3484              	.LVL293:
 3485              	.L260:
1710:System/FreeRTOS/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 3486              		.loc 1 1710 6 view .LVU1068
 3487 0098 FFF7FEFF 		bl	vPortExitCritical
 3488              	.LVL294:
1711:System/FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
 3489              		.loc 1 1711 39 view .LVU1069
1712:System/FreeRTOS/queue.c **** 				}
 3490              		.loc 1 1712 6 view .LVU1070
1712:System/FreeRTOS/queue.c **** 				}
 3491              		.loc 1 1712 13 is_stmt 0 view .LVU1071
 3492 009c 0020     		movs	r0, #0
 3493 009e E8E7     		b	.L235
 3494              	.L261:
1719:System/FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 3495              		.loc 1 1719 6 is_stmt 1 view .LVU1072
 3496 00a0 02A8     		add	r0, sp, #8
 3497 00a2 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3498              	.LVL295:
1720:System/FreeRTOS/queue.c **** 				}
 3499              		.loc 1 1720 6 view .LVU1073
1720:System/FreeRTOS/queue.c **** 				}
 3500              		.loc 1 1720 20 is_stmt 0 view .LVU1074
 3501 00a6 0125     		movs	r5, #1
 3502 00a8 21E0     		b	.L247
 3503              	.LVL296:
 3504              	.L262:
1720:System/FreeRTOS/queue.c **** 				}
 3505              		.loc 1 1720 20 view .LVU1075
 3506              	.LBE201:
1735:System/FreeRTOS/queue.c **** 
 3507              		.loc 1 1735 3 is_stmt 1 discriminator 1 view .LVU1076
 3508 00aa 0023     		movs	r3, #0
 3509 00ac 84F84430 		strb	r3, [r4, #68]
 3510 00b0 29E0     		b	.L248
 3511              	.L263:
1735:System/FreeRTOS/queue.c **** 
 3512              		.loc 1 1735 3 discriminator 4 view .LVU1077
 3513 00b2 0023     		movs	r3, #0
 3514 00b4 84F84530 		strb	r3, [r4, #69]
 3515 00b8 2BE0     		b	.L249
 3516              	.L251:
1760:System/FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 3517              		.loc 1 1760 5 view .LVU1078
 3518 00ba 2046     		mov	r0, r4
 3519 00bc FFF7FEFF 		bl	prvUnlockQueue
 3520              	.LVL297:
1761:System/FreeRTOS/queue.c **** 			}
 3521              		.loc 1 1761 5 view .LVU1079
1761:System/FreeRTOS/queue.c **** 			}
 3522              		.loc 1 1761 14 is_stmt 0 view .LVU1080
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 125


 3523 00c0 FFF7FEFF 		bl	xTaskResumeAll
 3524              	.LVL298:
 3525 00c4 09E0     		b	.L242
 3526              	.L250:
1768:System/FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 3527              		.loc 1 1768 4 is_stmt 1 view .LVU1081
 3528 00c6 2046     		mov	r0, r4
 3529 00c8 FFF7FEFF 		bl	prvUnlockQueue
 3530              	.LVL299:
1769:System/FreeRTOS/queue.c **** 
 3531              		.loc 1 1769 4 view .LVU1082
1769:System/FreeRTOS/queue.c **** 
 3532              		.loc 1 1769 13 is_stmt 0 view .LVU1083
 3533 00cc FFF7FEFF 		bl	xTaskResumeAll
 3534              	.LVL300:
1771:System/FreeRTOS/queue.c **** 			{
 3535              		.loc 1 1771 4 is_stmt 1 view .LVU1084
1771:System/FreeRTOS/queue.c **** 			{
 3536              		.loc 1 1771 8 is_stmt 0 view .LVU1085
 3537 00d0 2046     		mov	r0, r4
 3538 00d2 FFF7FEFF 		bl	prvIsQueueEmpty
 3539              	.LVL301:
1771:System/FreeRTOS/queue.c **** 			{
 3540              		.loc 1 1771 6 view .LVU1086
 3541 00d6 0028     		cmp	r0, #0
 3542 00d8 3FD1     		bne	.L258
 3543              	.LVL302:
 3544              	.L242:
1653:System/FreeRTOS/queue.c **** 	}
 3545              		.loc 1 1653 104 is_stmt 1 discriminator 8 view .LVU1087
1661:System/FreeRTOS/queue.c **** 	{
 3546              		.loc 1 1661 2 discriminator 8 view .LVU1088
1663:System/FreeRTOS/queue.c **** 		{
 3547              		.loc 1 1663 3 discriminator 8 view .LVU1089
 3548 00da FFF7FEFF 		bl	vPortEnterCritical
 3549              	.LVL303:
 3550              	.LBB202:
1665:System/FreeRTOS/queue.c **** 
 3551              		.loc 1 1665 4 discriminator 8 view .LVU1090
1665:System/FreeRTOS/queue.c **** 
 3552              		.loc 1 1665 22 is_stmt 0 discriminator 8 view .LVU1091
 3553 00de A36B     		ldr	r3, [r4, #56]
 3554              	.LVL304:
1669:System/FreeRTOS/queue.c **** 			{
 3555              		.loc 1 1669 4 is_stmt 1 discriminator 8 view .LVU1092
1669:System/FreeRTOS/queue.c **** 			{
 3556              		.loc 1 1669 6 is_stmt 0 discriminator 8 view .LVU1093
 3557 00e0 002B     		cmp	r3, #0
 3558 00e2 BBD1     		bne	.L259
1706:System/FreeRTOS/queue.c **** 				{
 3559              		.loc 1 1706 5 is_stmt 1 view .LVU1094
1706:System/FreeRTOS/queue.c **** 				{
 3560              		.loc 1 1706 22 is_stmt 0 view .LVU1095
 3561 00e4 019B     		ldr	r3, [sp, #4]
 3562              	.LVL305:
1706:System/FreeRTOS/queue.c **** 				{
 3563              		.loc 1 1706 7 view .LVU1096
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 126


 3564 00e6 002B     		cmp	r3, #0
 3565 00e8 D6D0     		beq	.L260
1714:System/FreeRTOS/queue.c **** 				{
 3566              		.loc 1 1714 10 is_stmt 1 view .LVU1097
1714:System/FreeRTOS/queue.c **** 				{
 3567              		.loc 1 1714 12 is_stmt 0 view .LVU1098
 3568 00ea 002D     		cmp	r5, #0
 3569 00ec D8D0     		beq	.L261
 3570              	.LVL306:
 3571              	.L247:
1725:System/FreeRTOS/queue.c **** 				}
 3572              		.loc 1 1725 30 is_stmt 1 view .LVU1099
 3573              	.LBE202:
1729:System/FreeRTOS/queue.c **** 
 3574              		.loc 1 1729 3 view .LVU1100
 3575 00ee FFF7FEFF 		bl	vPortExitCritical
 3576              	.LVL307:
1734:System/FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 3577              		.loc 1 1734 3 view .LVU1101
 3578 00f2 FFF7FEFF 		bl	vTaskSuspendAll
 3579              	.LVL308:
1735:System/FreeRTOS/queue.c **** 
 3580              		.loc 1 1735 3 view .LVU1102
 3581 00f6 FFF7FEFF 		bl	vPortEnterCritical
 3582              	.LVL309:
1735:System/FreeRTOS/queue.c **** 
 3583              		.loc 1 1735 3 view .LVU1103
 3584 00fa 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3585 00fe 5BB2     		sxtb	r3, r3
 3586 0100 B3F1FF3F 		cmp	r3, #-1
 3587 0104 D1D0     		beq	.L262
 3588              	.L248:
1735:System/FreeRTOS/queue.c **** 
 3589              		.loc 1 1735 3 discriminator 3 view .LVU1104
 3590 0106 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3591 010a 5BB2     		sxtb	r3, r3
 3592 010c B3F1FF3F 		cmp	r3, #-1
 3593 0110 CFD0     		beq	.L263
 3594              	.L249:
1735:System/FreeRTOS/queue.c **** 
 3595              		.loc 1 1735 3 discriminator 6 view .LVU1105
 3596 0112 FFF7FEFF 		bl	vPortExitCritical
 3597              	.LVL310:
1738:System/FreeRTOS/queue.c **** 		{
 3598              		.loc 1 1738 3 discriminator 6 view .LVU1106
1738:System/FreeRTOS/queue.c **** 		{
 3599              		.loc 1 1738 7 is_stmt 0 discriminator 6 view .LVU1107
 3600 0116 01A9     		add	r1, sp, #4
 3601 0118 02A8     		add	r0, sp, #8
 3602 011a FFF7FEFF 		bl	xTaskCheckForTimeOut
 3603              	.LVL311:
1738:System/FreeRTOS/queue.c **** 		{
 3604              		.loc 1 1738 5 discriminator 6 view .LVU1108
 3605 011e 0028     		cmp	r0, #0
 3606 0120 D1D1     		bne	.L250
1742:System/FreeRTOS/queue.c **** 			{
 3607              		.loc 1 1742 4 is_stmt 1 view .LVU1109
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 127


1742:System/FreeRTOS/queue.c **** 			{
 3608              		.loc 1 1742 8 is_stmt 0 view .LVU1110
 3609 0122 2046     		mov	r0, r4
 3610 0124 FFF7FEFF 		bl	prvIsQueueEmpty
 3611              	.LVL312:
1742:System/FreeRTOS/queue.c **** 			{
 3612              		.loc 1 1742 6 view .LVU1111
 3613 0128 0028     		cmp	r0, #0
 3614 012a C6D0     		beq	.L251
1744:System/FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 3615              		.loc 1 1744 43 is_stmt 1 view .LVU1112
1745:System/FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 3616              		.loc 1 1745 5 view .LVU1113
 3617 012c 0199     		ldr	r1, [sp, #4]
 3618 012e 04F12400 		add	r0, r4, #36
 3619 0132 FFF7FEFF 		bl	vTaskPlaceOnEventList
 3620              	.LVL313:
1746:System/FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3621              		.loc 1 1746 5 view .LVU1114
 3622 0136 2046     		mov	r0, r4
 3623 0138 FFF7FEFF 		bl	prvUnlockQueue
 3624              	.LVL314:
1747:System/FreeRTOS/queue.c **** 				{
 3625              		.loc 1 1747 5 view .LVU1115
1747:System/FreeRTOS/queue.c **** 				{
 3626              		.loc 1 1747 9 is_stmt 0 view .LVU1116
 3627 013c FFF7FEFF 		bl	xTaskResumeAll
 3628              	.LVL315:
1747:System/FreeRTOS/queue.c **** 				{
 3629              		.loc 1 1747 7 view .LVU1117
 3630 0140 0028     		cmp	r0, #0
 3631 0142 CAD1     		bne	.L242
1749:System/FreeRTOS/queue.c **** 				}
 3632              		.loc 1 1749 6 is_stmt 1 view .LVU1118
 3633 0144 4FF0E023 		mov	r3, #-536813568
 3634 0148 4FF08052 		mov	r2, #268435456
 3635 014c C3F8042D 		str	r2, [r3, #3332]
1749:System/FreeRTOS/queue.c **** 				}
 3636              		.loc 1 1749 6 view .LVU1119
 3637              		.syntax unified
 3638              	@ 1749 "System/FreeRTOS/queue.c" 1
 3639 0150 BFF34F8F 		dsb
 3640              	@ 0 "" 2
1749:System/FreeRTOS/queue.c **** 				}
 3641              		.loc 1 1749 6 view .LVU1120
 3642              	@ 1749 "System/FreeRTOS/queue.c" 1
 3643 0154 BFF36F8F 		isb
 3644              	@ 0 "" 2
1749:System/FreeRTOS/queue.c **** 				}
 3645              		.loc 1 1749 28 view .LVU1121
 3646              		.thumb
 3647              		.syntax unified
 3648 0158 BFE7     		b	.L242
 3649              	.L258:
1774:System/FreeRTOS/queue.c **** 			}
 3650              		.loc 1 1774 12 is_stmt 0 view .LVU1122
 3651 015a 0020     		movs	r0, #0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 128


 3652 015c 89E7     		b	.L235
 3653              		.cfi_endproc
 3654              	.LFE19:
 3656              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3657              		.align	1
 3658              		.global	xQueueReceiveFromISR
 3659              		.syntax unified
 3660              		.thumb
 3661              		.thumb_func
 3663              	xQueueReceiveFromISR:
 3664              	.LVL316:
 3665              	.LFB20:
1786:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 3666              		.loc 1 1786 1 is_stmt 1 view -0
 3667              		.cfi_startproc
 3668              		@ args = 0, pretend = 0, frame = 0
 3669              		@ frame_needed = 0, uses_anonymous_args = 0
1786:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 3670              		.loc 1 1786 1 is_stmt 0 view .LVU1124
 3671 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3672              	.LCFI44:
 3673              		.cfi_def_cfa_offset 32
 3674              		.cfi_offset 3, -32
 3675              		.cfi_offset 4, -28
 3676              		.cfi_offset 5, -24
 3677              		.cfi_offset 6, -20
 3678              		.cfi_offset 7, -16
 3679              		.cfi_offset 8, -12
 3680              		.cfi_offset 9, -8
 3681              		.cfi_offset 14, -4
1787:System/FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
 3682              		.loc 1 1787 1 is_stmt 1 view .LVU1125
1788:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 3683              		.loc 1 1788 1 view .LVU1126
1789:System/FreeRTOS/queue.c **** 
 3684              		.loc 1 1789 1 view .LVU1127
 3685              	.LVL317:
1791:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3686              		.loc 1 1791 2 view .LVU1128
 3687 0004 B0B1     		cbz	r0, .L276
 3688 0006 0D46     		mov	r5, r1
 3689 0008 1646     		mov	r6, r2
 3690 000a 0446     		mov	r4, r0
1791:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3691              		.loc 1 1791 25 discriminator 2 view .LVU1129
1792:System/FreeRTOS/queue.c **** 
 3692              		.loc 1 1792 2 discriminator 2 view .LVU1130
 3693 000c D9B1     		cbz	r1, .L277
 3694              	.L267:
1792:System/FreeRTOS/queue.c **** 
 3695              		.loc 1 1792 92 discriminator 8 view .LVU1131
1808:System/FreeRTOS/queue.c **** 
 3696              		.loc 1 1808 2 discriminator 8 view .LVU1132
 3697 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 3698              	.LVL318:
1810:System/FreeRTOS/queue.c **** 	{
 3699              		.loc 1 1810 2 discriminator 8 view .LVU1133
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 129


 3700              	.LBB203:
 3701              	.LBI203:
 207:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3702              		.loc 2 207 34 discriminator 8 view .LVU1134
 3703              	.LBB204:
 209:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3704              		.loc 2 209 1 discriminator 8 view .LVU1135
 211:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3705              		.loc 2 211 2 discriminator 8 view .LVU1136
 3706              		.syntax unified
 3707              	@ 211 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3708 0012 EFF31188 			mrs r8, basepri											
 3709 0016 4FF05003 		mov r3, #80												
 3710 001a 83F31188 		msr basepri, r3											
 3711 001e BFF36F8F 		isb														
 3712 0022 BFF34F8F 		dsb														
 3713              	
 3714              	@ 0 "" 2
 3715              	.LVL319:
 223:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 3716              		.loc 2 223 2 discriminator 8 view .LVU1137
 223:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 3717              		.loc 2 223 2 is_stmt 0 discriminator 8 view .LVU1138
 3718              		.thumb
 3719              		.syntax unified
 3720              	.LBE204:
 3721              	.LBE203:
 3722              	.LBB205:
1812:System/FreeRTOS/queue.c **** 
 3723              		.loc 1 1812 3 is_stmt 1 discriminator 8 view .LVU1139
1812:System/FreeRTOS/queue.c **** 
 3724              		.loc 1 1812 21 is_stmt 0 discriminator 8 view .LVU1140
 3725 0026 A76B     		ldr	r7, [r4, #56]
 3726              	.LVL320:
1815:System/FreeRTOS/queue.c **** 		{
 3727              		.loc 1 1815 3 is_stmt 1 discriminator 8 view .LVU1141
1815:System/FreeRTOS/queue.c **** 		{
 3728              		.loc 1 1815 5 is_stmt 0 discriminator 8 view .LVU1142
 3729 0028 CFB9     		cbnz	r7, .L278
1866:System/FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3730              		.loc 1 1866 12 view .LVU1143
 3731 002a 0020     		movs	r0, #0
 3732              	.LVL321:
 3733              	.L269:
1867:System/FreeRTOS/queue.c **** 		}
 3734              		.loc 1 1867 49 is_stmt 1 view .LVU1144
 3735              	.LBE205:
1870:System/FreeRTOS/queue.c **** 
 3736              		.loc 1 1870 2 view .LVU1145
 3737              	.LBB207:
 3738              	.LBI207:
 227:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3739              		.loc 2 227 30 view .LVU1146
 3740              	.LBB208:
 3741              		.loc 2 229 2 view .LVU1147
 3742              		.syntax unified
 3743              	@ 229 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 130


 3744 002c 88F31188 			msr basepri, r8	
 3745              	@ 0 "" 2
 3746              	.LVL322:
 3747              		.loc 2 229 2 is_stmt 0 view .LVU1148
 3748              		.thumb
 3749              		.syntax unified
 3750              	.LBE208:
 3751              	.LBE207:
1872:System/FreeRTOS/queue.c **** }
 3752              		.loc 1 1872 2 is_stmt 1 view .LVU1149
1873:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 3753              		.loc 1 1873 1 is_stmt 0 view .LVU1150
 3754 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3755              	.LVL323:
 3756              	.L276:
1791:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3757              		.loc 1 1791 2 is_stmt 1 view .LVU1151
 3758              	.LBB209:
 3759              	.LBI209:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3760              		.loc 2 191 30 view .LVU1152
 3761              	.LBB210:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3762              		.loc 2 193 1 view .LVU1153
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3763              		.loc 2 195 2 view .LVU1154
 3764              		.syntax unified
 3765              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3766 0034 4FF05003 			mov r3, #80												
 3767 0038 83F31188 		msr basepri, r3											
 3768 003c BFF36F8F 		isb														
 3769 0040 BFF34F8F 		dsb														
 3770              	
 3771              	@ 0 "" 2
 3772              	.LVL324:
 3773              		.thumb
 3774              		.syntax unified
 3775              	.L266:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3776              		.loc 2 195 2 is_stmt 0 view .LVU1155
 3777              	.LBE210:
 3778              	.LBE209:
1791:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3779              		.loc 1 1791 2 is_stmt 1 discriminator 1 view .LVU1156
1791:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3780              		.loc 1 1791 2 discriminator 1 view .LVU1157
1791:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3781              		.loc 1 1791 2 discriminator 1 view .LVU1158
 3782 0044 FEE7     		b	.L266
 3783              	.L277:
1792:System/FreeRTOS/queue.c **** 
 3784              		.loc 1 1792 2 is_stmt 0 discriminator 2 view .LVU1159
 3785 0046 036C     		ldr	r3, [r0, #64]
 3786 0048 002B     		cmp	r3, #0
 3787 004a E0D0     		beq	.L267
1792:System/FreeRTOS/queue.c **** 
 3788              		.loc 1 1792 2 is_stmt 1 view .LVU1160
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 131


 3789              	.LBB211:
 3790              	.LBI211:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3791              		.loc 2 191 30 view .LVU1161
 3792              	.LBB212:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3793              		.loc 2 193 1 view .LVU1162
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3794              		.loc 2 195 2 view .LVU1163
 3795              		.syntax unified
 3796              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3797 004c 4FF05003 			mov r3, #80												
 3798 0050 83F31188 		msr basepri, r3											
 3799 0054 BFF36F8F 		isb														
 3800 0058 BFF34F8F 		dsb														
 3801              	
 3802              	@ 0 "" 2
 3803              	.LVL325:
 3804              		.thumb
 3805              		.syntax unified
 3806              	.L268:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3807              		.loc 2 195 2 is_stmt 0 view .LVU1164
 3808              	.LBE212:
 3809              	.LBE211:
1792:System/FreeRTOS/queue.c **** 
 3810              		.loc 1 1792 2 is_stmt 1 discriminator 2 view .LVU1165
1792:System/FreeRTOS/queue.c **** 
 3811              		.loc 1 1792 2 discriminator 2 view .LVU1166
1792:System/FreeRTOS/queue.c **** 
 3812              		.loc 1 1792 2 discriminator 2 view .LVU1167
 3813 005c FEE7     		b	.L268
 3814              	.LVL326:
 3815              	.L278:
 3816              	.LBB213:
 3817              	.LBB206:
1817:System/FreeRTOS/queue.c **** 
 3818              		.loc 1 1817 4 view .LVU1168
1817:System/FreeRTOS/queue.c **** 
 3819              		.loc 1 1817 17 is_stmt 0 view .LVU1169
 3820 005e 94F84490 		ldrb	r9, [r4, #68]	@ zero_extendqisi2
 3821 0062 4FFA89F9 		sxtb	r9, r9
 3822              	.LVL327:
1819:System/FreeRTOS/queue.c **** 
 3823              		.loc 1 1819 42 is_stmt 1 view .LVU1170
1821:System/FreeRTOS/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3824              		.loc 1 1821 4 view .LVU1171
 3825 0066 2946     		mov	r1, r5
 3826 0068 2046     		mov	r0, r4
 3827 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 3828              	.LVL328:
1822:System/FreeRTOS/queue.c **** 
 3829              		.loc 1 1822 4 view .LVU1172
1822:System/FreeRTOS/queue.c **** 
 3830              		.loc 1 1822 51 is_stmt 0 view .LVU1173
 3831 006e 013F     		subs	r7, r7, #1
 3832              	.LVL329:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 132


1822:System/FreeRTOS/queue.c **** 
 3833              		.loc 1 1822 31 view .LVU1174
 3834 0070 A763     		str	r7, [r4, #56]
1828:System/FreeRTOS/queue.c **** 			{
 3835              		.loc 1 1828 4 is_stmt 1 view .LVU1175
1828:System/FreeRTOS/queue.c **** 			{
 3836              		.loc 1 1828 6 is_stmt 0 view .LVU1176
 3837 0072 B9F1FF3F 		cmp	r9, #-1
 3838 0076 06D0     		beq	.L279
1859:System/FreeRTOS/queue.c **** 			}
 3839              		.loc 1 1859 5 is_stmt 1 view .LVU1177
1859:System/FreeRTOS/queue.c **** 			}
 3840              		.loc 1 1859 45 is_stmt 0 view .LVU1178
 3841 0078 09F10103 		add	r3, r9, #1
1859:System/FreeRTOS/queue.c **** 			}
 3842              		.loc 1 1859 24 view .LVU1179
 3843 007c 5BB2     		sxtb	r3, r3
1859:System/FreeRTOS/queue.c **** 			}
 3844              		.loc 1 1859 22 view .LVU1180
 3845 007e 84F84430 		strb	r3, [r4, #68]
1862:System/FreeRTOS/queue.c **** 		}
 3846              		.loc 1 1862 12 view .LVU1181
 3847 0082 0120     		movs	r0, #1
 3848 0084 D2E7     		b	.L269
 3849              	.L279:
1830:System/FreeRTOS/queue.c **** 				{
 3850              		.loc 1 1830 5 is_stmt 1 view .LVU1182
1830:System/FreeRTOS/queue.c **** 				{
 3851              		.loc 1 1830 9 is_stmt 0 view .LVU1183
 3852 0086 2369     		ldr	r3, [r4, #16]
1830:System/FreeRTOS/queue.c **** 				{
 3853              		.loc 1 1830 7 view .LVU1184
 3854 0088 0BB9     		cbnz	r3, .L280
1862:System/FreeRTOS/queue.c **** 		}
 3855              		.loc 1 1862 12 view .LVU1185
 3856 008a 0120     		movs	r0, #1
 3857 008c CEE7     		b	.L269
 3858              	.L280:
1832:System/FreeRTOS/queue.c **** 					{
 3859              		.loc 1 1832 6 is_stmt 1 view .LVU1186
1832:System/FreeRTOS/queue.c **** 					{
 3860              		.loc 1 1832 10 is_stmt 0 view .LVU1187
 3861 008e 04F11000 		add	r0, r4, #16
 3862 0092 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3863              	.LVL330:
1832:System/FreeRTOS/queue.c **** 					{
 3864              		.loc 1 1832 8 view .LVU1188
 3865 0096 18B1     		cbz	r0, .L273
1836:System/FreeRTOS/queue.c **** 						{
 3866              		.loc 1 1836 7 is_stmt 1 view .LVU1189
1836:System/FreeRTOS/queue.c **** 						{
 3867              		.loc 1 1836 9 is_stmt 0 view .LVU1190
 3868 0098 26B1     		cbz	r6, .L274
1838:System/FreeRTOS/queue.c **** 						}
 3869              		.loc 1 1838 8 is_stmt 1 view .LVU1191
1838:System/FreeRTOS/queue.c **** 						}
 3870              		.loc 1 1838 35 is_stmt 0 view .LVU1192
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 133


 3871 009a 0120     		movs	r0, #1
 3872 009c 3060     		str	r0, [r6]
 3873 009e C5E7     		b	.L269
 3874              	.L273:
1862:System/FreeRTOS/queue.c **** 		}
 3875              		.loc 1 1862 12 view .LVU1193
 3876 00a0 0120     		movs	r0, #1
 3877 00a2 C3E7     		b	.L269
 3878              	.L274:
 3879 00a4 0120     		movs	r0, #1
 3880 00a6 C1E7     		b	.L269
 3881              	.LBE206:
 3882              	.LBE213:
 3883              		.cfi_endproc
 3884              	.LFE20:
 3886              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3887              		.align	1
 3888              		.global	xQueuePeekFromISR
 3889              		.syntax unified
 3890              		.thumb
 3891              		.thumb_func
 3893              	xQueuePeekFromISR:
 3894              	.LVL331:
 3895              	.LFB21:
1877:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 3896              		.loc 1 1877 1 is_stmt 1 view -0
 3897              		.cfi_startproc
 3898              		@ args = 0, pretend = 0, frame = 0
 3899              		@ frame_needed = 0, uses_anonymous_args = 0
1877:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 3900              		.loc 1 1877 1 is_stmt 0 view .LVU1195
 3901 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3902              	.LCFI45:
 3903              		.cfi_def_cfa_offset 24
 3904              		.cfi_offset 3, -24
 3905              		.cfi_offset 4, -20
 3906              		.cfi_offset 5, -16
 3907              		.cfi_offset 6, -12
 3908              		.cfi_offset 7, -8
 3909              		.cfi_offset 14, -4
1878:System/FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
 3910              		.loc 1 1878 1 is_stmt 1 view .LVU1196
1879:System/FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
 3911              		.loc 1 1879 1 view .LVU1197
1880:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 3912              		.loc 1 1880 1 view .LVU1198
1881:System/FreeRTOS/queue.c **** 
 3913              		.loc 1 1881 1 view .LVU1199
 3914              	.LVL332:
1883:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3915              		.loc 1 1883 2 view .LVU1200
 3916 0002 68B1     		cbz	r0, .L291
 3917 0004 0D46     		mov	r5, r1
 3918 0006 0446     		mov	r4, r0
1883:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3919              		.loc 1 1883 25 discriminator 2 view .LVU1201
1884:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 134


 3920              		.loc 1 1884 2 discriminator 2 view .LVU1202
 3921 0008 99B1     		cbz	r1, .L292
 3922              	.L284:
1884:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3923              		.loc 1 1884 92 discriminator 8 view .LVU1203
1885:System/FreeRTOS/queue.c **** 
 3924              		.loc 1 1885 2 discriminator 8 view .LVU1204
 3925 000a 236C     		ldr	r3, [r4, #64]
 3926 000c EBB9     		cbnz	r3, .L286
1885:System/FreeRTOS/queue.c **** 
 3927              		.loc 1 1885 2 view .LVU1205
 3928              	.LBB214:
 3929              	.LBI214:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3930              		.loc 2 191 30 view .LVU1206
 3931              	.LBB215:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3932              		.loc 2 193 1 view .LVU1207
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3933              		.loc 2 195 2 view .LVU1208
 3934              		.syntax unified
 3935              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3936 000e 4FF05003 			mov r3, #80												
 3937 0012 83F31188 		msr basepri, r3											
 3938 0016 BFF36F8F 		isb														
 3939 001a BFF34F8F 		dsb														
 3940              	
 3941              	@ 0 "" 2
 3942              	.LVL333:
 3943              		.thumb
 3944              		.syntax unified
 3945              	.L287:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3946              		.loc 2 195 2 is_stmt 0 view .LVU1209
 3947              	.LBE215:
 3948              	.LBE214:
1885:System/FreeRTOS/queue.c **** 
 3949              		.loc 1 1885 2 is_stmt 1 discriminator 3 view .LVU1210
1885:System/FreeRTOS/queue.c **** 
 3950              		.loc 1 1885 2 discriminator 3 view .LVU1211
1885:System/FreeRTOS/queue.c **** 
 3951              		.loc 1 1885 2 discriminator 3 view .LVU1212
 3952 001e FEE7     		b	.L287
 3953              	.L291:
1883:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3954              		.loc 1 1883 2 view .LVU1213
 3955              	.LBB216:
 3956              	.LBI216:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3957              		.loc 2 191 30 view .LVU1214
 3958              	.LBB217:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3959              		.loc 2 193 1 view .LVU1215
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3960              		.loc 2 195 2 view .LVU1216
 3961              		.syntax unified
 3962              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 135


 3963 0020 4FF05003 			mov r3, #80												
 3964 0024 83F31188 		msr basepri, r3											
 3965 0028 BFF36F8F 		isb														
 3966 002c BFF34F8F 		dsb														
 3967              	
 3968              	@ 0 "" 2
 3969              	.LVL334:
 3970              		.thumb
 3971              		.syntax unified
 3972              	.L283:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3973              		.loc 2 195 2 is_stmt 0 view .LVU1217
 3974              	.LBE217:
 3975              	.LBE216:
1883:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3976              		.loc 1 1883 2 is_stmt 1 discriminator 1 view .LVU1218
1883:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3977              		.loc 1 1883 2 discriminator 1 view .LVU1219
1883:System/FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3978              		.loc 1 1883 2 discriminator 1 view .LVU1220
 3979 0030 FEE7     		b	.L283
 3980              	.L292:
1884:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3981              		.loc 1 1884 2 is_stmt 0 discriminator 2 view .LVU1221
 3982 0032 036C     		ldr	r3, [r0, #64]
 3983 0034 002B     		cmp	r3, #0
 3984 0036 E8D0     		beq	.L284
1884:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3985              		.loc 1 1884 2 is_stmt 1 view .LVU1222
 3986              	.LBB218:
 3987              	.LBI218:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 3988              		.loc 2 191 30 view .LVU1223
 3989              	.LBB219:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3990              		.loc 2 193 1 view .LVU1224
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3991              		.loc 2 195 2 view .LVU1225
 3992              		.syntax unified
 3993              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3994 0038 4FF05003 			mov r3, #80												
 3995 003c 83F31188 		msr basepri, r3											
 3996 0040 BFF36F8F 		isb														
 3997 0044 BFF34F8F 		dsb														
 3998              	
 3999              	@ 0 "" 2
 4000              	.LVL335:
 4001              		.thumb
 4002              		.syntax unified
 4003              	.L285:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4004              		.loc 2 195 2 is_stmt 0 view .LVU1226
 4005              	.LBE219:
 4006              	.LBE218:
1884:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4007              		.loc 1 1884 2 is_stmt 1 discriminator 2 view .LVU1227
1884:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 136


 4008              		.loc 1 1884 2 discriminator 2 view .LVU1228
1884:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 4009              		.loc 1 1884 2 discriminator 2 view .LVU1229
 4010 0048 FEE7     		b	.L285
 4011              	.L286:
1885:System/FreeRTOS/queue.c **** 
 4012              		.loc 1 1885 42 discriminator 2 view .LVU1230
1901:System/FreeRTOS/queue.c **** 
 4013              		.loc 1 1901 2 discriminator 2 view .LVU1231
 4014 004a FFF7FEFF 		bl	vPortValidateInterruptPriority
 4015              	.LVL336:
1903:System/FreeRTOS/queue.c **** 	{
 4016              		.loc 1 1903 2 discriminator 2 view .LVU1232
 4017              	.LBB220:
 4018              	.LBI220:
 207:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 4019              		.loc 2 207 34 discriminator 2 view .LVU1233
 4020              	.LBB221:
 209:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4021              		.loc 2 209 1 discriminator 2 view .LVU1234
 211:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4022              		.loc 2 211 2 discriminator 2 view .LVU1235
 4023              		.syntax unified
 4024              	@ 211 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4025 004e EFF31186 			mrs r6, basepri											
 4026 0052 4FF05003 		mov r3, #80												
 4027 0056 83F31188 		msr basepri, r3											
 4028 005a BFF36F8F 		isb														
 4029 005e BFF34F8F 		dsb														
 4030              	
 4031              	@ 0 "" 2
 4032              	.LVL337:
 223:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 4033              		.loc 2 223 2 discriminator 2 view .LVU1236
 223:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** }
 4034              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1237
 4035              		.thumb
 4036              		.syntax unified
 4037              	.LBE221:
 4038              	.LBE220:
1906:System/FreeRTOS/queue.c **** 		{
 4039              		.loc 1 1906 3 is_stmt 1 discriminator 2 view .LVU1238
1906:System/FreeRTOS/queue.c **** 		{
 4040              		.loc 1 1906 14 is_stmt 0 discriminator 2 view .LVU1239
 4041 0062 A36B     		ldr	r3, [r4, #56]
1906:System/FreeRTOS/queue.c **** 		{
 4042              		.loc 1 1906 5 discriminator 2 view .LVU1240
 4043 0064 1BB9     		cbnz	r3, .L293
1920:System/FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 4044              		.loc 1 1920 12 view .LVU1241
 4045 0066 0020     		movs	r0, #0
 4046              	.L288:
 4047              	.LVL338:
1921:System/FreeRTOS/queue.c **** 		}
 4048              		.loc 1 1921 46 is_stmt 1 view .LVU1242
1924:System/FreeRTOS/queue.c **** 
 4049              		.loc 1 1924 2 view .LVU1243
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 137


 4050              	.LBB222:
 4051              	.LBI222:
 227:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 4052              		.loc 2 227 30 view .LVU1244
 4053              	.LBB223:
 4054              		.loc 2 229 2 view .LVU1245
 4055              		.syntax unified
 4056              	@ 229 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4057 0068 86F31188 			msr basepri, r6	
 4058              	@ 0 "" 2
 4059              	.LVL339:
 4060              		.loc 2 229 2 is_stmt 0 view .LVU1246
 4061              		.thumb
 4062              		.syntax unified
 4063              	.LBE223:
 4064              	.LBE222:
1926:System/FreeRTOS/queue.c **** }
 4065              		.loc 1 1926 2 is_stmt 1 view .LVU1247
1927:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 4066              		.loc 1 1927 1 is_stmt 0 view .LVU1248
 4067 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4068              	.LVL340:
 4069              	.L293:
1908:System/FreeRTOS/queue.c **** 
 4070              		.loc 1 1908 39 is_stmt 1 view .LVU1249
1912:System/FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 4071              		.loc 1 1912 4 view .LVU1250
1912:System/FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 4072              		.loc 1 1912 27 is_stmt 0 view .LVU1251
 4073 006e E768     		ldr	r7, [r4, #12]
 4074              	.LVL341:
1913:System/FreeRTOS/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 4075              		.loc 1 1913 4 is_stmt 1 view .LVU1252
 4076 0070 2946     		mov	r1, r5
 4077 0072 2046     		mov	r0, r4
 4078 0074 FFF7FEFF 		bl	prvCopyDataFromQueue
 4079              	.LVL342:
1914:System/FreeRTOS/queue.c **** 
 4080              		.loc 1 1914 4 view .LVU1253
1914:System/FreeRTOS/queue.c **** 
 4081              		.loc 1 1914 33 is_stmt 0 view .LVU1254
 4082 0078 E760     		str	r7, [r4, #12]
1916:System/FreeRTOS/queue.c **** 		}
 4083              		.loc 1 1916 4 is_stmt 1 view .LVU1255
 4084              	.LVL343:
1916:System/FreeRTOS/queue.c **** 		}
 4085              		.loc 1 1916 12 is_stmt 0 view .LVU1256
 4086 007a 0120     		movs	r0, #1
 4087 007c F4E7     		b	.L288
 4088              		.cfi_endproc
 4089              	.LFE21:
 4091              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 4092              		.align	1
 4093              		.global	uxQueueMessagesWaiting
 4094              		.syntax unified
 4095              		.thumb
 4096              		.thumb_func
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 138


 4098              	uxQueueMessagesWaiting:
 4099              	.LVL344:
 4100              	.LFB22:
1931:System/FreeRTOS/queue.c **** UBaseType_t uxReturn;
 4101              		.loc 1 1931 1 is_stmt 1 view -0
 4102              		.cfi_startproc
 4103              		@ args = 0, pretend = 0, frame = 0
 4104              		@ frame_needed = 0, uses_anonymous_args = 0
1932:System/FreeRTOS/queue.c **** 
 4105              		.loc 1 1932 1 view .LVU1258
1934:System/FreeRTOS/queue.c **** 
 4106              		.loc 1 1934 2 view .LVU1259
 4107 0000 40B1     		cbz	r0, .L299
1931:System/FreeRTOS/queue.c **** UBaseType_t uxReturn;
 4108              		.loc 1 1931 1 is_stmt 0 discriminator 2 view .LVU1260
 4109 0002 10B5     		push	{r4, lr}
 4110              	.LCFI46:
 4111              		.cfi_def_cfa_offset 8
 4112              		.cfi_offset 4, -8
 4113              		.cfi_offset 14, -4
 4114 0004 0446     		mov	r4, r0
1934:System/FreeRTOS/queue.c **** 
 4115              		.loc 1 1934 24 is_stmt 1 discriminator 2 view .LVU1261
1936:System/FreeRTOS/queue.c **** 	{
 4116              		.loc 1 1936 2 discriminator 2 view .LVU1262
 4117 0006 FFF7FEFF 		bl	vPortEnterCritical
 4118              	.LVL345:
1938:System/FreeRTOS/queue.c **** 	}
 4119              		.loc 1 1938 3 discriminator 2 view .LVU1263
1938:System/FreeRTOS/queue.c **** 	}
 4120              		.loc 1 1938 12 is_stmt 0 discriminator 2 view .LVU1264
 4121 000a A46B     		ldr	r4, [r4, #56]
 4122              	.LVL346:
1940:System/FreeRTOS/queue.c **** 
 4123              		.loc 1 1940 2 is_stmt 1 discriminator 2 view .LVU1265
 4124 000c FFF7FEFF 		bl	vPortExitCritical
 4125              	.LVL347:
1942:System/FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4126              		.loc 1 1942 2 discriminator 2 view .LVU1266
1943:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 4127              		.loc 1 1943 1 is_stmt 0 discriminator 2 view .LVU1267
 4128 0010 2046     		mov	r0, r4
 4129 0012 10BD     		pop	{r4, pc}
 4130              	.LVL348:
 4131              	.L299:
 4132              	.LCFI47:
 4133              		.cfi_def_cfa_offset 0
 4134              		.cfi_restore 4
 4135              		.cfi_restore 14
1934:System/FreeRTOS/queue.c **** 
 4136              		.loc 1 1934 2 is_stmt 1 view .LVU1268
 4137              	.LBB224:
 4138              	.LBI224:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 4139              		.loc 2 191 30 view .LVU1269
 4140              	.LBB225:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 139


 4141              		.loc 2 193 1 view .LVU1270
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4142              		.loc 2 195 2 view .LVU1271
 4143              		.syntax unified
 4144              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4145 0014 4FF05003 			mov r3, #80												
 4146 0018 83F31188 		msr basepri, r3											
 4147 001c BFF36F8F 		isb														
 4148 0020 BFF34F8F 		dsb														
 4149              	
 4150              	@ 0 "" 2
 4151              	.LVL349:
 4152              		.thumb
 4153              		.syntax unified
 4154              	.L296:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4155              		.loc 2 195 2 is_stmt 0 view .LVU1272
 4156              	.LBE225:
 4157              	.LBE224:
1934:System/FreeRTOS/queue.c **** 
 4158              		.loc 1 1934 2 is_stmt 1 discriminator 1 view .LVU1273
1934:System/FreeRTOS/queue.c **** 
 4159              		.loc 1 1934 2 discriminator 1 view .LVU1274
1934:System/FreeRTOS/queue.c **** 
 4160              		.loc 1 1934 2 discriminator 1 view .LVU1275
 4161 0024 FEE7     		b	.L296
 4162              		.cfi_endproc
 4163              	.LFE22:
 4165              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 4166              		.align	1
 4167              		.global	uxQueueSpacesAvailable
 4168              		.syntax unified
 4169              		.thumb
 4170              		.thumb_func
 4172              	uxQueueSpacesAvailable:
 4173              	.LVL350:
 4174              	.LFB23:
1947:System/FreeRTOS/queue.c **** UBaseType_t uxReturn;
 4175              		.loc 1 1947 1 view -0
 4176              		.cfi_startproc
 4177              		@ args = 0, pretend = 0, frame = 0
 4178              		@ frame_needed = 0, uses_anonymous_args = 0
1947:System/FreeRTOS/queue.c **** UBaseType_t uxReturn;
 4179              		.loc 1 1947 1 is_stmt 0 view .LVU1277
 4180 0000 38B5     		push	{r3, r4, r5, lr}
 4181              	.LCFI48:
 4182              		.cfi_def_cfa_offset 16
 4183              		.cfi_offset 3, -16
 4184              		.cfi_offset 4, -12
 4185              		.cfi_offset 5, -8
 4186              		.cfi_offset 14, -4
1948:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 4187              		.loc 1 1948 1 is_stmt 1 view .LVU1278
1949:System/FreeRTOS/queue.c **** 
 4188              		.loc 1 1949 1 view .LVU1279
 4189              	.LVL351:
1951:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 140


 4190              		.loc 1 1951 2 view .LVU1280
 4191 0002 48B1     		cbz	r0, .L304
 4192 0004 0546     		mov	r5, r0
1951:System/FreeRTOS/queue.c **** 
 4193              		.loc 1 1951 25 discriminator 2 view .LVU1281
1953:System/FreeRTOS/queue.c **** 	{
 4194              		.loc 1 1953 2 discriminator 2 view .LVU1282
 4195 0006 FFF7FEFF 		bl	vPortEnterCritical
 4196              	.LVL352:
1955:System/FreeRTOS/queue.c **** 	}
 4197              		.loc 1 1955 3 discriminator 2 view .LVU1283
1955:System/FreeRTOS/queue.c **** 	}
 4198              		.loc 1 1955 21 is_stmt 0 discriminator 2 view .LVU1284
 4199 000a EC6B     		ldr	r4, [r5, #60]
1955:System/FreeRTOS/queue.c **** 	}
 4200              		.loc 1 1955 41 discriminator 2 view .LVU1285
 4201 000c AB6B     		ldr	r3, [r5, #56]
1955:System/FreeRTOS/queue.c **** 	}
 4202              		.loc 1 1955 12 discriminator 2 view .LVU1286
 4203 000e E41A     		subs	r4, r4, r3
 4204              	.LVL353:
1957:System/FreeRTOS/queue.c **** 
 4205              		.loc 1 1957 2 is_stmt 1 discriminator 2 view .LVU1287
 4206 0010 FFF7FEFF 		bl	vPortExitCritical
 4207              	.LVL354:
1959:System/FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4208              		.loc 1 1959 2 discriminator 2 view .LVU1288
1960:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 4209              		.loc 1 1960 1 is_stmt 0 discriminator 2 view .LVU1289
 4210 0014 2046     		mov	r0, r4
 4211 0016 38BD     		pop	{r3, r4, r5, pc}
 4212              	.LVL355:
 4213              	.L304:
1951:System/FreeRTOS/queue.c **** 
 4214              		.loc 1 1951 2 is_stmt 1 view .LVU1290
 4215              	.LBB226:
 4216              	.LBI226:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 4217              		.loc 2 191 30 view .LVU1291
 4218              	.LBB227:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4219              		.loc 2 193 1 view .LVU1292
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4220              		.loc 2 195 2 view .LVU1293
 4221              		.syntax unified
 4222              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4223 0018 4FF05003 			mov r3, #80												
 4224 001c 83F31188 		msr basepri, r3											
 4225 0020 BFF36F8F 		isb														
 4226 0024 BFF34F8F 		dsb														
 4227              	
 4228              	@ 0 "" 2
 4229              	.LVL356:
 4230              		.thumb
 4231              		.syntax unified
 4232              	.L302:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 141


 4233              		.loc 2 195 2 is_stmt 0 view .LVU1294
 4234              	.LBE227:
 4235              	.LBE226:
1951:System/FreeRTOS/queue.c **** 
 4236              		.loc 1 1951 2 is_stmt 1 discriminator 1 view .LVU1295
1951:System/FreeRTOS/queue.c **** 
 4237              		.loc 1 1951 2 discriminator 1 view .LVU1296
1951:System/FreeRTOS/queue.c **** 
 4238              		.loc 1 1951 2 discriminator 1 view .LVU1297
 4239 0028 FEE7     		b	.L302
 4240              		.cfi_endproc
 4241              	.LFE23:
 4243              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 4244              		.align	1
 4245              		.global	uxQueueMessagesWaitingFromISR
 4246              		.syntax unified
 4247              		.thumb
 4248              		.thumb_func
 4250              	uxQueueMessagesWaitingFromISR:
 4251              	.LVL357:
 4252              	.LFB24:
1964:System/FreeRTOS/queue.c **** UBaseType_t uxReturn;
 4253              		.loc 1 1964 1 view -0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 0
 4256              		@ frame_needed = 0, uses_anonymous_args = 0
 4257              		@ link register save eliminated.
1965:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 4258              		.loc 1 1965 1 view .LVU1299
1966:System/FreeRTOS/queue.c **** 
 4259              		.loc 1 1966 1 view .LVU1300
1968:System/FreeRTOS/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 4260              		.loc 1 1968 2 view .LVU1301
 4261 0000 08B1     		cbz	r0, .L308
1968:System/FreeRTOS/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 4262              		.loc 1 1968 25 discriminator 2 view .LVU1302
1969:System/FreeRTOS/queue.c **** 
 4263              		.loc 1 1969 2 discriminator 2 view .LVU1303
1969:System/FreeRTOS/queue.c **** 
 4264              		.loc 1 1969 11 is_stmt 0 discriminator 2 view .LVU1304
 4265 0002 806B     		ldr	r0, [r0, #56]
 4266              	.LVL358:
1971:System/FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 4267              		.loc 1 1971 2 is_stmt 1 discriminator 2 view .LVU1305
1972:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 4268              		.loc 1 1972 1 is_stmt 0 discriminator 2 view .LVU1306
 4269 0004 7047     		bx	lr
 4270              	.LVL359:
 4271              	.L308:
1968:System/FreeRTOS/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 4272              		.loc 1 1968 2 is_stmt 1 view .LVU1307
 4273              	.LBB228:
 4274              	.LBI228:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 4275              		.loc 2 191 30 view .LVU1308
 4276              	.LBB229:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 142


 4277              		.loc 2 193 1 view .LVU1309
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4278              		.loc 2 195 2 view .LVU1310
 4279              		.syntax unified
 4280              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4281 0006 4FF05003 			mov r3, #80												
 4282 000a 83F31188 		msr basepri, r3											
 4283 000e BFF36F8F 		isb														
 4284 0012 BFF34F8F 		dsb														
 4285              	
 4286              	@ 0 "" 2
 4287              	.LVL360:
 4288              		.thumb
 4289              		.syntax unified
 4290              	.L307:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4291              		.loc 2 195 2 is_stmt 0 view .LVU1311
 4292              	.LBE229:
 4293              	.LBE228:
1968:System/FreeRTOS/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 4294              		.loc 1 1968 2 is_stmt 1 discriminator 1 view .LVU1312
1968:System/FreeRTOS/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 4295              		.loc 1 1968 2 discriminator 1 view .LVU1313
1968:System/FreeRTOS/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 4296              		.loc 1 1968 2 discriminator 1 view .LVU1314
 4297 0016 FEE7     		b	.L307
 4298              		.cfi_endproc
 4299              	.LFE24:
 4301              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 4302              		.align	1
 4303              		.global	uxQueueGetQueueNumber
 4304              		.syntax unified
 4305              		.thumb
 4306              		.thumb_func
 4308              	uxQueueGetQueueNumber:
 4309              	.LVL361:
 4310              	.LFB26:
2020:System/FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 4311              		.loc 1 2020 2 view -0
 4312              		.cfi_startproc
 4313              		@ args = 0, pretend = 0, frame = 0
 4314              		@ frame_needed = 0, uses_anonymous_args = 0
 4315              		@ link register save eliminated.
2021:System/FreeRTOS/queue.c **** 	}
 4316              		.loc 1 2021 3 view .LVU1316
2022:System/FreeRTOS/queue.c **** 
 4317              		.loc 1 2022 2 is_stmt 0 view .LVU1317
 4318 0000 806C     		ldr	r0, [r0, #72]
 4319              	.LVL362:
2022:System/FreeRTOS/queue.c **** 
 4320              		.loc 1 2022 2 view .LVU1318
 4321 0002 7047     		bx	lr
 4322              		.cfi_endproc
 4323              	.LFE26:
 4325              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 4326              		.align	1
 4327              		.global	vQueueSetQueueNumber
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 143


 4328              		.syntax unified
 4329              		.thumb
 4330              		.thumb_func
 4332              	vQueueSetQueueNumber:
 4333              	.LVL363:
 4334              	.LFB27:
2030:System/FreeRTOS/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 4335              		.loc 1 2030 2 is_stmt 1 view -0
 4336              		.cfi_startproc
 4337              		@ args = 0, pretend = 0, frame = 0
 4338              		@ frame_needed = 0, uses_anonymous_args = 0
 4339              		@ link register save eliminated.
2031:System/FreeRTOS/queue.c **** 	}
 4340              		.loc 1 2031 3 view .LVU1320
2031:System/FreeRTOS/queue.c **** 	}
 4341              		.loc 1 2031 43 is_stmt 0 view .LVU1321
 4342 0000 8164     		str	r1, [r0, #72]
2032:System/FreeRTOS/queue.c **** 
 4343              		.loc 1 2032 2 view .LVU1322
 4344 0002 7047     		bx	lr
 4345              		.cfi_endproc
 4346              	.LFE27:
 4348              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 4349              		.align	1
 4350              		.global	ucQueueGetQueueType
 4351              		.syntax unified
 4352              		.thumb
 4353              		.thumb_func
 4355              	ucQueueGetQueueType:
 4356              	.LVL364:
 4357              	.LFB28:
2040:System/FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 4358              		.loc 1 2040 2 is_stmt 1 view -0
 4359              		.cfi_startproc
 4360              		@ args = 0, pretend = 0, frame = 0
 4361              		@ frame_needed = 0, uses_anonymous_args = 0
 4362              		@ link register save eliminated.
2041:System/FreeRTOS/queue.c **** 	}
 4363              		.loc 1 2041 3 view .LVU1324
2042:System/FreeRTOS/queue.c **** 
 4364              		.loc 1 2042 2 is_stmt 0 view .LVU1325
 4365 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 4366              	.LVL365:
2042:System/FreeRTOS/queue.c **** 
 4367              		.loc 1 2042 2 view .LVU1326
 4368 0004 7047     		bx	lr
 4369              		.cfi_endproc
 4370              	.LFE28:
 4372              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 4373              		.align	1
 4374              		.global	xQueueIsQueueEmptyFromISR
 4375              		.syntax unified
 4376              		.thumb
 4377              		.thumb_func
 4379              	xQueueIsQueueEmptyFromISR:
 4380              	.LVL366:
 4381              	.LFB34:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 144


2313:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 4382              		.loc 1 2313 1 is_stmt 1 view -0
 4383              		.cfi_startproc
 4384              		@ args = 0, pretend = 0, frame = 0
 4385              		@ frame_needed = 0, uses_anonymous_args = 0
 4386              		@ link register save eliminated.
2314:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 4387              		.loc 1 2314 1 view .LVU1328
2315:System/FreeRTOS/queue.c **** 
 4388              		.loc 1 2315 1 view .LVU1329
2317:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4389              		.loc 1 2317 2 view .LVU1330
 4390 0000 18B1     		cbz	r0, .L317
2317:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4391              		.loc 1 2317 25 discriminator 2 view .LVU1331
2318:System/FreeRTOS/queue.c **** 	{
 4392              		.loc 1 2318 2 discriminator 2 view .LVU1332
2318:System/FreeRTOS/queue.c **** 	{
 4393              		.loc 1 2318 13 is_stmt 0 discriminator 2 view .LVU1333
 4394 0002 836B     		ldr	r3, [r0, #56]
2318:System/FreeRTOS/queue.c **** 	{
 4395              		.loc 1 2318 4 discriminator 2 view .LVU1334
 4396 0004 53B9     		cbnz	r3, .L316
2320:System/FreeRTOS/queue.c **** 	}
 4397              		.loc 1 2320 11 view .LVU1335
 4398 0006 0120     		movs	r0, #1
 4399              	.LVL367:
2320:System/FreeRTOS/queue.c **** 	}
 4400              		.loc 1 2320 11 view .LVU1336
 4401 0008 7047     		bx	lr
 4402              	.LVL368:
 4403              	.L317:
2317:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4404              		.loc 1 2317 2 is_stmt 1 view .LVU1337
 4405              	.LBB230:
 4406              	.LBI230:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 4407              		.loc 2 191 30 view .LVU1338
 4408              	.LBB231:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4409              		.loc 2 193 1 view .LVU1339
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4410              		.loc 2 195 2 view .LVU1340
 4411              		.syntax unified
 4412              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4413 000a 4FF05003 			mov r3, #80												
 4414 000e 83F31188 		msr basepri, r3											
 4415 0012 BFF36F8F 		isb														
 4416 0016 BFF34F8F 		dsb														
 4417              	
 4418              	@ 0 "" 2
 4419              	.LVL369:
 4420              		.thumb
 4421              		.syntax unified
 4422              	.L314:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4423              		.loc 2 195 2 is_stmt 0 view .LVU1341
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 145


 4424              	.LBE231:
 4425              	.LBE230:
2317:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4426              		.loc 1 2317 2 is_stmt 1 discriminator 1 view .LVU1342
2317:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4427              		.loc 1 2317 2 discriminator 1 view .LVU1343
2317:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 4428              		.loc 1 2317 2 discriminator 1 view .LVU1344
 4429 001a FEE7     		b	.L314
 4430              	.L316:
2324:System/FreeRTOS/queue.c **** 	}
 4431              		.loc 1 2324 11 is_stmt 0 view .LVU1345
 4432 001c 0020     		movs	r0, #0
 4433              	.LVL370:
2327:System/FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4434              		.loc 1 2327 2 is_stmt 1 view .LVU1346
2328:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 4435              		.loc 1 2328 1 is_stmt 0 view .LVU1347
 4436 001e 7047     		bx	lr
 4437              		.cfi_endproc
 4438              	.LFE34:
 4440              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 4441              		.align	1
 4442              		.global	xQueueIsQueueFullFromISR
 4443              		.syntax unified
 4444              		.thumb
 4445              		.thumb_func
 4447              	xQueueIsQueueFullFromISR:
 4448              	.LVL371:
 4449              	.LFB36:
2350:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2351:System/FreeRTOS/queue.c **** 
2352:System/FreeRTOS/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2353:System/FreeRTOS/queue.c **** {
 4450              		.loc 1 2353 1 is_stmt 1 view -0
 4451              		.cfi_startproc
 4452              		@ args = 0, pretend = 0, frame = 0
 4453              		@ frame_needed = 0, uses_anonymous_args = 0
 4454              		@ link register save eliminated.
2354:System/FreeRTOS/queue.c **** BaseType_t xReturn;
 4455              		.loc 1 2354 1 view .LVU1349
2355:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 4456              		.loc 1 2355 1 view .LVU1350
2356:System/FreeRTOS/queue.c **** 
2357:System/FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 4457              		.loc 1 2357 2 view .LVU1351
 4458 0000 28B1     		cbz	r0, .L323
 4459              		.loc 1 2357 25 discriminator 2 view .LVU1352
2358:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 4460              		.loc 1 2358 2 discriminator 2 view .LVU1353
 4461              		.loc 1 2358 13 is_stmt 0 discriminator 2 view .LVU1354
 4462 0002 826B     		ldr	r2, [r0, #56]
 4463              		.loc 1 2358 43 discriminator 2 view .LVU1355
 4464 0004 C36B     		ldr	r3, [r0, #60]
 4465              		.loc 1 2358 4 discriminator 2 view .LVU1356
 4466 0006 9A42     		cmp	r2, r3
 4467 0008 0AD0     		beq	.L324
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 146


2359:System/FreeRTOS/queue.c **** 	{
2360:System/FreeRTOS/queue.c **** 		xReturn = pdTRUE;
2361:System/FreeRTOS/queue.c **** 	}
2362:System/FreeRTOS/queue.c **** 	else
2363:System/FreeRTOS/queue.c **** 	{
2364:System/FreeRTOS/queue.c **** 		xReturn = pdFALSE;
 4468              		.loc 1 2364 11 view .LVU1357
 4469 000a 0020     		movs	r0, #0
 4470              	.LVL372:
2365:System/FreeRTOS/queue.c **** 	}
2366:System/FreeRTOS/queue.c **** 
2367:System/FreeRTOS/queue.c **** 	return xReturn;
 4471              		.loc 1 2367 2 is_stmt 1 view .LVU1358
2368:System/FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4472              		.loc 1 2368 1 is_stmt 0 view .LVU1359
 4473 000c 7047     		bx	lr
 4474              	.LVL373:
 4475              	.L323:
2357:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 4476              		.loc 1 2357 2 is_stmt 1 view .LVU1360
 4477              	.LBB232:
 4478              	.LBI232:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 4479              		.loc 2 191 30 view .LVU1361
 4480              	.LBB233:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4481              		.loc 2 193 1 view .LVU1362
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4482              		.loc 2 195 2 view .LVU1363
 4483              		.syntax unified
 4484              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4485 000e 4FF05003 			mov r3, #80												
 4486 0012 83F31188 		msr basepri, r3											
 4487 0016 BFF36F8F 		isb														
 4488 001a BFF34F8F 		dsb														
 4489              	
 4490              	@ 0 "" 2
 4491              	.LVL374:
 4492              		.thumb
 4493              		.syntax unified
 4494              	.L320:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4495              		.loc 2 195 2 is_stmt 0 view .LVU1364
 4496              	.LBE233:
 4497              	.LBE232:
2357:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 4498              		.loc 1 2357 2 is_stmt 1 discriminator 1 view .LVU1365
2357:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 4499              		.loc 1 2357 2 discriminator 1 view .LVU1366
2357:System/FreeRTOS/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 4500              		.loc 1 2357 2 discriminator 1 view .LVU1367
 4501 001e FEE7     		b	.L320
 4502              	.L324:
2360:System/FreeRTOS/queue.c **** 	}
 4503              		.loc 1 2360 11 is_stmt 0 view .LVU1368
 4504 0020 0120     		movs	r0, #1
 4505              	.LVL375:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 147


2360:System/FreeRTOS/queue.c **** 	}
 4506              		.loc 1 2360 11 view .LVU1369
 4507 0022 7047     		bx	lr
 4508              		.cfi_endproc
 4509              	.LFE36:
 4511              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 4512              		.align	1
 4513              		.global	vQueueAddToRegistry
 4514              		.syntax unified
 4515              		.thumb
 4516              		.thumb_func
 4518              	vQueueAddToRegistry:
 4519              	.LVL376:
 4520              	.LFB37:
2369:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2370:System/FreeRTOS/queue.c **** 
2371:System/FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2372:System/FreeRTOS/queue.c **** 
2373:System/FreeRTOS/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2374:System/FreeRTOS/queue.c **** 	{
2375:System/FreeRTOS/queue.c **** 	BaseType_t xReturn;
2376:System/FreeRTOS/queue.c **** 	Queue_t * const pxQueue = xQueue;
2377:System/FreeRTOS/queue.c **** 
2378:System/FreeRTOS/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2379:System/FreeRTOS/queue.c **** 		is required to prevent an interrupt removing something from the queue
2380:System/FreeRTOS/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2381:System/FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2382:System/FreeRTOS/queue.c **** 		{
2383:System/FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2384:System/FreeRTOS/queue.c **** 			{
2385:System/FreeRTOS/queue.c **** 				/* The queue is full - do we want to block or just leave without
2386:System/FreeRTOS/queue.c **** 				posting? */
2387:System/FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2388:System/FreeRTOS/queue.c **** 				{
2389:System/FreeRTOS/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2390:System/FreeRTOS/queue.c **** 					return indicating that we need to block. */
2391:System/FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2392:System/FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2393:System/FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2394:System/FreeRTOS/queue.c **** 				}
2395:System/FreeRTOS/queue.c **** 				else
2396:System/FreeRTOS/queue.c **** 				{
2397:System/FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2398:System/FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2399:System/FreeRTOS/queue.c **** 				}
2400:System/FreeRTOS/queue.c **** 			}
2401:System/FreeRTOS/queue.c **** 		}
2402:System/FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2403:System/FreeRTOS/queue.c **** 
2404:System/FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2405:System/FreeRTOS/queue.c **** 		{
2406:System/FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2407:System/FreeRTOS/queue.c **** 			{
2408:System/FreeRTOS/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2409:System/FreeRTOS/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2410:System/FreeRTOS/queue.c **** 				xReturn = pdPASS;
2411:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 148


2412:System/FreeRTOS/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2413:System/FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2414:System/FreeRTOS/queue.c **** 				{
2415:System/FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2416:System/FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2417:System/FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2418:System/FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2419:System/FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2420:System/FreeRTOS/queue.c **** 					{
2421:System/FreeRTOS/queue.c **** 						/* The co-routine waiting has a higher priority so record
2422:System/FreeRTOS/queue.c **** 						that a yield might be appropriate. */
2423:System/FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2424:System/FreeRTOS/queue.c **** 					}
2425:System/FreeRTOS/queue.c **** 					else
2426:System/FreeRTOS/queue.c **** 					{
2427:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2428:System/FreeRTOS/queue.c **** 					}
2429:System/FreeRTOS/queue.c **** 				}
2430:System/FreeRTOS/queue.c **** 				else
2431:System/FreeRTOS/queue.c **** 				{
2432:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2433:System/FreeRTOS/queue.c **** 				}
2434:System/FreeRTOS/queue.c **** 			}
2435:System/FreeRTOS/queue.c **** 			else
2436:System/FreeRTOS/queue.c **** 			{
2437:System/FreeRTOS/queue.c **** 				xReturn = errQUEUE_FULL;
2438:System/FreeRTOS/queue.c **** 			}
2439:System/FreeRTOS/queue.c **** 		}
2440:System/FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2441:System/FreeRTOS/queue.c **** 
2442:System/FreeRTOS/queue.c **** 		return xReturn;
2443:System/FreeRTOS/queue.c **** 	}
2444:System/FreeRTOS/queue.c **** 
2445:System/FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2446:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2447:System/FreeRTOS/queue.c **** 
2448:System/FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2449:System/FreeRTOS/queue.c **** 
2450:System/FreeRTOS/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2451:System/FreeRTOS/queue.c **** 	{
2452:System/FreeRTOS/queue.c **** 	BaseType_t xReturn;
2453:System/FreeRTOS/queue.c **** 	Queue_t * const pxQueue = xQueue;
2454:System/FreeRTOS/queue.c **** 
2455:System/FreeRTOS/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2456:System/FreeRTOS/queue.c **** 		is required to prevent an interrupt adding something to the queue
2457:System/FreeRTOS/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2458:System/FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2459:System/FreeRTOS/queue.c **** 		{
2460:System/FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2461:System/FreeRTOS/queue.c **** 			{
2462:System/FreeRTOS/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2463:System/FreeRTOS/queue.c **** 				leave with nothing? */
2464:System/FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2465:System/FreeRTOS/queue.c **** 				{
2466:System/FreeRTOS/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2467:System/FreeRTOS/queue.c **** 					indicating that we need to block. */
2468:System/FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 149


2469:System/FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2470:System/FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2471:System/FreeRTOS/queue.c **** 				}
2472:System/FreeRTOS/queue.c **** 				else
2473:System/FreeRTOS/queue.c **** 				{
2474:System/FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2475:System/FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2476:System/FreeRTOS/queue.c **** 				}
2477:System/FreeRTOS/queue.c **** 			}
2478:System/FreeRTOS/queue.c **** 			else
2479:System/FreeRTOS/queue.c **** 			{
2480:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2481:System/FreeRTOS/queue.c **** 			}
2482:System/FreeRTOS/queue.c **** 		}
2483:System/FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2484:System/FreeRTOS/queue.c **** 
2485:System/FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2486:System/FreeRTOS/queue.c **** 		{
2487:System/FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2488:System/FreeRTOS/queue.c **** 			{
2489:System/FreeRTOS/queue.c **** 				/* Data is available from the queue. */
2490:System/FreeRTOS/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2491:System/FreeRTOS/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2492:System/FreeRTOS/queue.c **** 				{
2493:System/FreeRTOS/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2494:System/FreeRTOS/queue.c **** 				}
2495:System/FreeRTOS/queue.c **** 				else
2496:System/FreeRTOS/queue.c **** 				{
2497:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2498:System/FreeRTOS/queue.c **** 				}
2499:System/FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2500:System/FreeRTOS/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2501:System/FreeRTOS/queue.c **** 
2502:System/FreeRTOS/queue.c **** 				xReturn = pdPASS;
2503:System/FreeRTOS/queue.c **** 
2504:System/FreeRTOS/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2505:System/FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2506:System/FreeRTOS/queue.c **** 				{
2507:System/FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2508:System/FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2509:System/FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2510:System/FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2511:System/FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2512:System/FreeRTOS/queue.c **** 					{
2513:System/FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2514:System/FreeRTOS/queue.c **** 					}
2515:System/FreeRTOS/queue.c **** 					else
2516:System/FreeRTOS/queue.c **** 					{
2517:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2518:System/FreeRTOS/queue.c **** 					}
2519:System/FreeRTOS/queue.c **** 				}
2520:System/FreeRTOS/queue.c **** 				else
2521:System/FreeRTOS/queue.c **** 				{
2522:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2523:System/FreeRTOS/queue.c **** 				}
2524:System/FreeRTOS/queue.c **** 			}
2525:System/FreeRTOS/queue.c **** 			else
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 150


2526:System/FreeRTOS/queue.c **** 			{
2527:System/FreeRTOS/queue.c **** 				xReturn = pdFAIL;
2528:System/FreeRTOS/queue.c **** 			}
2529:System/FreeRTOS/queue.c **** 		}
2530:System/FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2531:System/FreeRTOS/queue.c **** 
2532:System/FreeRTOS/queue.c **** 		return xReturn;
2533:System/FreeRTOS/queue.c **** 	}
2534:System/FreeRTOS/queue.c **** 
2535:System/FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2536:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2537:System/FreeRTOS/queue.c **** 
2538:System/FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2539:System/FreeRTOS/queue.c **** 
2540:System/FreeRTOS/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2541:System/FreeRTOS/queue.c **** 	{
2542:System/FreeRTOS/queue.c **** 	Queue_t * const pxQueue = xQueue;
2543:System/FreeRTOS/queue.c **** 
2544:System/FreeRTOS/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2545:System/FreeRTOS/queue.c **** 		exit without doing anything. */
2546:System/FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2547:System/FreeRTOS/queue.c **** 		{
2548:System/FreeRTOS/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2549:System/FreeRTOS/queue.c **** 
2550:System/FreeRTOS/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2551:System/FreeRTOS/queue.c **** 			co-routine has not already been woken. */
2552:System/FreeRTOS/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2553:System/FreeRTOS/queue.c **** 			{
2554:System/FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2555:System/FreeRTOS/queue.c **** 				{
2556:System/FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2557:System/FreeRTOS/queue.c **** 					{
2558:System/FreeRTOS/queue.c **** 						return pdTRUE;
2559:System/FreeRTOS/queue.c **** 					}
2560:System/FreeRTOS/queue.c **** 					else
2561:System/FreeRTOS/queue.c **** 					{
2562:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2563:System/FreeRTOS/queue.c **** 					}
2564:System/FreeRTOS/queue.c **** 				}
2565:System/FreeRTOS/queue.c **** 				else
2566:System/FreeRTOS/queue.c **** 				{
2567:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2568:System/FreeRTOS/queue.c **** 				}
2569:System/FreeRTOS/queue.c **** 			}
2570:System/FreeRTOS/queue.c **** 			else
2571:System/FreeRTOS/queue.c **** 			{
2572:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2573:System/FreeRTOS/queue.c **** 			}
2574:System/FreeRTOS/queue.c **** 		}
2575:System/FreeRTOS/queue.c **** 		else
2576:System/FreeRTOS/queue.c **** 		{
2577:System/FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2578:System/FreeRTOS/queue.c **** 		}
2579:System/FreeRTOS/queue.c **** 
2580:System/FreeRTOS/queue.c **** 		return xCoRoutinePreviouslyWoken;
2581:System/FreeRTOS/queue.c **** 	}
2582:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 151


2583:System/FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2584:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2585:System/FreeRTOS/queue.c **** 
2586:System/FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2587:System/FreeRTOS/queue.c **** 
2588:System/FreeRTOS/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2589:System/FreeRTOS/queue.c **** 	{
2590:System/FreeRTOS/queue.c **** 	BaseType_t xReturn;
2591:System/FreeRTOS/queue.c **** 	Queue_t * const pxQueue = xQueue;
2592:System/FreeRTOS/queue.c **** 
2593:System/FreeRTOS/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2594:System/FreeRTOS/queue.c **** 		not then just leave without doing anything. */
2595:System/FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2596:System/FreeRTOS/queue.c **** 		{
2597:System/FreeRTOS/queue.c **** 			/* Copy the data from the queue. */
2598:System/FreeRTOS/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2599:System/FreeRTOS/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2600:System/FreeRTOS/queue.c **** 			{
2601:System/FreeRTOS/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2602:System/FreeRTOS/queue.c **** 			}
2603:System/FreeRTOS/queue.c **** 			else
2604:System/FreeRTOS/queue.c **** 			{
2605:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2606:System/FreeRTOS/queue.c **** 			}
2607:System/FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2608:System/FreeRTOS/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2609:System/FreeRTOS/queue.c **** 
2610:System/FreeRTOS/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2611:System/FreeRTOS/queue.c **** 			{
2612:System/FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2613:System/FreeRTOS/queue.c **** 				{
2614:System/FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2615:System/FreeRTOS/queue.c **** 					{
2616:System/FreeRTOS/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2617:System/FreeRTOS/queue.c **** 					}
2618:System/FreeRTOS/queue.c **** 					else
2619:System/FreeRTOS/queue.c **** 					{
2620:System/FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2621:System/FreeRTOS/queue.c **** 					}
2622:System/FreeRTOS/queue.c **** 				}
2623:System/FreeRTOS/queue.c **** 				else
2624:System/FreeRTOS/queue.c **** 				{
2625:System/FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2626:System/FreeRTOS/queue.c **** 				}
2627:System/FreeRTOS/queue.c **** 			}
2628:System/FreeRTOS/queue.c **** 			else
2629:System/FreeRTOS/queue.c **** 			{
2630:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:System/FreeRTOS/queue.c **** 			}
2632:System/FreeRTOS/queue.c **** 
2633:System/FreeRTOS/queue.c **** 			xReturn = pdPASS;
2634:System/FreeRTOS/queue.c **** 		}
2635:System/FreeRTOS/queue.c **** 		else
2636:System/FreeRTOS/queue.c **** 		{
2637:System/FreeRTOS/queue.c **** 			xReturn = pdFAIL;
2638:System/FreeRTOS/queue.c **** 		}
2639:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 152


2640:System/FreeRTOS/queue.c **** 		return xReturn;
2641:System/FreeRTOS/queue.c **** 	}
2642:System/FreeRTOS/queue.c **** 
2643:System/FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2644:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2645:System/FreeRTOS/queue.c **** 
2646:System/FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2647:System/FreeRTOS/queue.c **** 
2648:System/FreeRTOS/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2649:System/FreeRTOS/queue.c **** 	{
 4521              		.loc 1 2649 2 is_stmt 1 view -0
 4522              		.cfi_startproc
 4523              		@ args = 0, pretend = 0, frame = 0
 4524              		@ frame_needed = 0, uses_anonymous_args = 0
 4525              		@ link register save eliminated.
2650:System/FreeRTOS/queue.c **** 	UBaseType_t ux;
 4526              		.loc 1 2650 2 view .LVU1371
2651:System/FreeRTOS/queue.c **** 
2652:System/FreeRTOS/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2653:System/FreeRTOS/queue.c **** 		a free slot. */
2654:System/FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4527              		.loc 1 2654 3 view .LVU1372
 4528              		.loc 1 2654 11 is_stmt 0 view .LVU1373
 4529 0000 0023     		movs	r3, #0
 4530              	.LVL377:
 4531              	.L326:
 4532              		.loc 1 2654 33 is_stmt 1 discriminator 1 view .LVU1374
 4533              		.loc 1 2654 3 is_stmt 0 discriminator 1 view .LVU1375
 4534 0002 1F2B     		cmp	r3, #31
 4535 0004 0CD8     		bhi	.L330
2655:System/FreeRTOS/queue.c **** 		{
2656:System/FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 4536              		.loc 1 2656 4 is_stmt 1 view .LVU1376
 4537              		.loc 1 2656 28 is_stmt 0 view .LVU1377
 4538 0006 074A     		ldr	r2, .L332
 4539 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 4540              		.loc 1 2656 6 view .LVU1378
 4541 000c 0AB1     		cbz	r2, .L331
2657:System/FreeRTOS/queue.c **** 			{
2658:System/FreeRTOS/queue.c **** 				/* Store the information on this queue. */
2659:System/FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
2660:System/FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
2661:System/FreeRTOS/queue.c **** 
2662:System/FreeRTOS/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2663:System/FreeRTOS/queue.c **** 				break;
2664:System/FreeRTOS/queue.c **** 			}
2665:System/FreeRTOS/queue.c **** 			else
2666:System/FreeRTOS/queue.c **** 			{
2667:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 4542              		.loc 1 2667 29 is_stmt 1 discriminator 2 view .LVU1379
2654:System/FreeRTOS/queue.c **** 		{
 4543              		.loc 1 2654 81 discriminator 2 view .LVU1380
2654:System/FreeRTOS/queue.c **** 		{
 4544              		.loc 1 2654 83 is_stmt 0 discriminator 2 view .LVU1381
 4545 000e 0133     		adds	r3, r3, #1
 4546              	.LVL378:
2654:System/FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 153


 4547              		.loc 1 2654 83 discriminator 2 view .LVU1382
 4548 0010 F7E7     		b	.L326
 4549              	.L331:
2659:System/FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 4550              		.loc 1 2659 5 is_stmt 1 view .LVU1383
2659:System/FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 4551              		.loc 1 2659 38 is_stmt 0 view .LVU1384
 4552 0012 044A     		ldr	r2, .L332
 4553 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2660:System/FreeRTOS/queue.c **** 
 4554              		.loc 1 2660 5 is_stmt 1 view .LVU1385
2660:System/FreeRTOS/queue.c **** 
 4555              		.loc 1 2660 34 is_stmt 0 view .LVU1386
 4556 0018 02EBC303 		add	r3, r2, r3, lsl #3
 4557              	.LVL379:
2660:System/FreeRTOS/queue.c **** 
 4558              		.loc 1 2660 34 view .LVU1387
 4559 001c 5860     		str	r0, [r3, #4]
2662:System/FreeRTOS/queue.c **** 				break;
 4560              		.loc 1 2662 51 is_stmt 1 view .LVU1388
2663:System/FreeRTOS/queue.c **** 			}
 4561              		.loc 1 2663 5 view .LVU1389
 4562 001e 7047     		bx	lr
 4563              	.LVL380:
 4564              	.L330:
2668:System/FreeRTOS/queue.c **** 			}
2669:System/FreeRTOS/queue.c **** 		}
2670:System/FreeRTOS/queue.c **** 	}
 4565              		.loc 1 2670 2 is_stmt 0 view .LVU1390
 4566 0020 7047     		bx	lr
 4567              	.L333:
 4568 0022 00BF     		.align	2
 4569              	.L332:
 4570 0024 00000000 		.word	.LANCHOR0
 4571              		.cfi_endproc
 4572              	.LFE37:
 4574              		.section	.text.pcQueueGetName,"ax",%progbits
 4575              		.align	1
 4576              		.global	pcQueueGetName
 4577              		.syntax unified
 4578              		.thumb
 4579              		.thumb_func
 4581              	pcQueueGetName:
 4582              	.LVL381:
 4583              	.LFB38:
2671:System/FreeRTOS/queue.c **** 
2672:System/FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2673:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2674:System/FreeRTOS/queue.c **** 
2675:System/FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2676:System/FreeRTOS/queue.c **** 
2677:System/FreeRTOS/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2678:System/FreeRTOS/queue.c **** 	{
 4584              		.loc 1 2678 2 is_stmt 1 view -0
 4585              		.cfi_startproc
 4586              		@ args = 0, pretend = 0, frame = 0
 4587              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 154


 4588              		@ link register save eliminated.
2679:System/FreeRTOS/queue.c **** 	UBaseType_t ux;
 4589              		.loc 1 2679 2 view .LVU1392
2680:System/FreeRTOS/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
 4590              		.loc 1 2680 2 view .LVU1393
2681:System/FreeRTOS/queue.c **** 
2682:System/FreeRTOS/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2683:System/FreeRTOS/queue.c **** 		removing entries from the registry while it is being searched. */
2684:System/FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4591              		.loc 1 2684 3 view .LVU1394
 4592              		.loc 1 2684 11 is_stmt 0 view .LVU1395
 4593 0000 0023     		movs	r3, #0
 4594              	.LVL382:
 4595              	.L335:
 4596              		.loc 1 2684 33 is_stmt 1 discriminator 1 view .LVU1396
 4597              		.loc 1 2684 3 is_stmt 0 discriminator 1 view .LVU1397
 4598 0002 1F2B     		cmp	r3, #31
 4599 0004 0BD8     		bhi	.L339
2685:System/FreeRTOS/queue.c **** 		{
2686:System/FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4600              		.loc 1 2686 4 is_stmt 1 view .LVU1398
 4601              		.loc 1 2686 28 is_stmt 0 view .LVU1399
 4602 0006 074A     		ldr	r2, .L341
 4603 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4604 000c 5268     		ldr	r2, [r2, #4]
 4605              		.loc 1 2686 6 view .LVU1400
 4606 000e 8242     		cmp	r2, r0
 4607 0010 01D0     		beq	.L340
2687:System/FreeRTOS/queue.c **** 			{
2688:System/FreeRTOS/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
2689:System/FreeRTOS/queue.c **** 				break;
2690:System/FreeRTOS/queue.c **** 			}
2691:System/FreeRTOS/queue.c **** 			else
2692:System/FreeRTOS/queue.c **** 			{
2693:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 4608              		.loc 1 2693 29 is_stmt 1 discriminator 2 view .LVU1401
2684:System/FreeRTOS/queue.c **** 		{
 4609              		.loc 1 2684 81 discriminator 2 view .LVU1402
2684:System/FreeRTOS/queue.c **** 		{
 4610              		.loc 1 2684 83 is_stmt 0 discriminator 2 view .LVU1403
 4611 0012 0133     		adds	r3, r3, #1
 4612              	.LVL383:
2684:System/FreeRTOS/queue.c **** 		{
 4613              		.loc 1 2684 83 discriminator 2 view .LVU1404
 4614 0014 F5E7     		b	.L335
 4615              	.L340:
2688:System/FreeRTOS/queue.c **** 				break;
 4616              		.loc 1 2688 5 is_stmt 1 view .LVU1405
2688:System/FreeRTOS/queue.c **** 				break;
 4617              		.loc 1 2688 14 is_stmt 0 view .LVU1406
 4618 0016 034A     		ldr	r2, .L341
 4619 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 4620              	.LVL384:
2689:System/FreeRTOS/queue.c **** 			}
 4621              		.loc 1 2689 5 is_stmt 1 view .LVU1407
 4622 001c 7047     		bx	lr
 4623              	.LVL385:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 155


 4624              	.L339:
2680:System/FreeRTOS/queue.c **** 
 4625              		.loc 1 2680 14 is_stmt 0 view .LVU1408
 4626 001e 0020     		movs	r0, #0
 4627              	.LVL386:
2694:System/FreeRTOS/queue.c **** 			}
2695:System/FreeRTOS/queue.c **** 		}
2696:System/FreeRTOS/queue.c **** 
2697:System/FreeRTOS/queue.c **** 		return pcReturn;
 4628              		.loc 1 2697 3 is_stmt 1 view .LVU1409
2698:System/FreeRTOS/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 4629              		.loc 1 2698 2 is_stmt 0 view .LVU1410
 4630 0020 7047     		bx	lr
 4631              	.L342:
 4632 0022 00BF     		.align	2
 4633              	.L341:
 4634 0024 00000000 		.word	.LANCHOR0
 4635              		.cfi_endproc
 4636              	.LFE38:
 4638              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 4639              		.align	1
 4640              		.global	vQueueUnregisterQueue
 4641              		.syntax unified
 4642              		.thumb
 4643              		.thumb_func
 4645              	vQueueUnregisterQueue:
 4646              	.LVL387:
 4647              	.LFB39:
2699:System/FreeRTOS/queue.c **** 
2700:System/FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2701:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2702:System/FreeRTOS/queue.c **** 
2703:System/FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2704:System/FreeRTOS/queue.c **** 
2705:System/FreeRTOS/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2706:System/FreeRTOS/queue.c **** 	{
 4648              		.loc 1 2706 2 is_stmt 1 view -0
 4649              		.cfi_startproc
 4650              		@ args = 0, pretend = 0, frame = 0
 4651              		@ frame_needed = 0, uses_anonymous_args = 0
 4652              		@ link register save eliminated.
2707:System/FreeRTOS/queue.c **** 	UBaseType_t ux;
 4653              		.loc 1 2707 2 view .LVU1412
2708:System/FreeRTOS/queue.c **** 
2709:System/FreeRTOS/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2710:System/FreeRTOS/queue.c **** 		registry. */
2711:System/FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4654              		.loc 1 2711 3 view .LVU1413
 4655              		.loc 1 2711 11 is_stmt 0 view .LVU1414
 4656 0000 0023     		movs	r3, #0
 4657              	.LVL388:
 4658              	.L344:
 4659              		.loc 1 2711 33 is_stmt 1 discriminator 1 view .LVU1415
 4660              		.loc 1 2711 3 is_stmt 0 discriminator 1 view .LVU1416
 4661 0002 1F2B     		cmp	r3, #31
 4662 0004 0FD8     		bhi	.L348
2712:System/FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 156


2713:System/FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4663              		.loc 1 2713 4 is_stmt 1 view .LVU1417
 4664              		.loc 1 2713 28 is_stmt 0 view .LVU1418
 4665 0006 084A     		ldr	r2, .L350
 4666 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4667 000c 5268     		ldr	r2, [r2, #4]
 4668              		.loc 1 2713 6 view .LVU1419
 4669 000e 8242     		cmp	r2, r0
 4670 0010 01D0     		beq	.L349
2714:System/FreeRTOS/queue.c **** 			{
2715:System/FreeRTOS/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2716:System/FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
2717:System/FreeRTOS/queue.c **** 
2718:System/FreeRTOS/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2719:System/FreeRTOS/queue.c **** 				appear in the registry twice if it is added, removed, then
2720:System/FreeRTOS/queue.c **** 				added again. */
2721:System/FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
2722:System/FreeRTOS/queue.c **** 				break;
2723:System/FreeRTOS/queue.c **** 			}
2724:System/FreeRTOS/queue.c **** 			else
2725:System/FreeRTOS/queue.c **** 			{
2726:System/FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 4671              		.loc 1 2726 29 is_stmt 1 discriminator 2 view .LVU1420
2711:System/FreeRTOS/queue.c **** 		{
 4672              		.loc 1 2711 81 discriminator 2 view .LVU1421
2711:System/FreeRTOS/queue.c **** 		{
 4673              		.loc 1 2711 83 is_stmt 0 discriminator 2 view .LVU1422
 4674 0012 0133     		adds	r3, r3, #1
 4675              	.LVL389:
2711:System/FreeRTOS/queue.c **** 		{
 4676              		.loc 1 2711 83 discriminator 2 view .LVU1423
 4677 0014 F5E7     		b	.L344
 4678              	.L349:
2716:System/FreeRTOS/queue.c **** 
 4679              		.loc 1 2716 5 is_stmt 1 view .LVU1424
2716:System/FreeRTOS/queue.c **** 
 4680              		.loc 1 2716 38 is_stmt 0 view .LVU1425
 4681 0016 044A     		ldr	r2, .L350
 4682 0018 0021     		movs	r1, #0
 4683 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2721:System/FreeRTOS/queue.c **** 				break;
 4684              		.loc 1 2721 5 is_stmt 1 view .LVU1426
2721:System/FreeRTOS/queue.c **** 				break;
 4685              		.loc 1 2721 34 is_stmt 0 view .LVU1427
 4686 001e 02EBC303 		add	r3, r2, r3, lsl #3
 4687              	.LVL390:
2721:System/FreeRTOS/queue.c **** 				break;
 4688              		.loc 1 2721 34 view .LVU1428
 4689 0022 5960     		str	r1, [r3, #4]
2722:System/FreeRTOS/queue.c **** 			}
 4690              		.loc 1 2722 5 is_stmt 1 view .LVU1429
 4691 0024 7047     		bx	lr
 4692              	.LVL391:
 4693              	.L348:
2727:System/FreeRTOS/queue.c **** 			}
2728:System/FreeRTOS/queue.c **** 		}
2729:System/FreeRTOS/queue.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 157


2730:System/FreeRTOS/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4694              		.loc 1 2730 2 is_stmt 0 view .LVU1430
 4695 0026 7047     		bx	lr
 4696              	.L351:
 4697              		.align	2
 4698              	.L350:
 4699 0028 00000000 		.word	.LANCHOR0
 4700              		.cfi_endproc
 4701              	.LFE39:
 4703              		.section	.text.vQueueDelete,"ax",%progbits
 4704              		.align	1
 4705              		.global	vQueueDelete
 4706              		.syntax unified
 4707              		.thumb
 4708              		.thumb_func
 4710              	vQueueDelete:
 4711              	.LVL392:
 4712              	.LFB25:
1976:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 4713              		.loc 1 1976 1 is_stmt 1 view -0
 4714              		.cfi_startproc
 4715              		@ args = 0, pretend = 0, frame = 0
 4716              		@ frame_needed = 0, uses_anonymous_args = 0
1977:System/FreeRTOS/queue.c **** 
 4717              		.loc 1 1977 1 view .LVU1432
1979:System/FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4718              		.loc 1 1979 2 view .LVU1433
 4719 0000 38B1     		cbz	r0, .L358
1976:System/FreeRTOS/queue.c **** Queue_t * const pxQueue = xQueue;
 4720              		.loc 1 1976 1 is_stmt 0 discriminator 2 view .LVU1434
 4721 0002 10B5     		push	{r4, lr}
 4722              	.LCFI49:
 4723              		.cfi_def_cfa_offset 8
 4724              		.cfi_offset 4, -8
 4725              		.cfi_offset 14, -4
 4726 0004 0446     		mov	r4, r0
1979:System/FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4727              		.loc 1 1979 25 is_stmt 1 discriminator 2 view .LVU1435
1980:System/FreeRTOS/queue.c **** 
 4728              		.loc 1 1980 30 discriminator 2 view .LVU1436
1984:System/FreeRTOS/queue.c **** 	}
 4729              		.loc 1 1984 3 discriminator 2 view .LVU1437
 4730 0006 FFF7FEFF 		bl	vQueueUnregisterQueue
 4731              	.LVL393:
1998:System/FreeRTOS/queue.c **** 		{
 4732              		.loc 1 1998 3 discriminator 2 view .LVU1438
1998:System/FreeRTOS/queue.c **** 		{
 4733              		.loc 1 1998 14 is_stmt 0 discriminator 2 view .LVU1439
 4734 000a 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
1998:System/FreeRTOS/queue.c **** 		{
 4735              		.loc 1 1998 5 discriminator 2 view .LVU1440
 4736 000e 4BB1     		cbz	r3, .L359
 4737              	.L352:
2014:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 4738              		.loc 1 2014 1 view .LVU1441
 4739 0010 10BD     		pop	{r4, pc}
 4740              	.LVL394:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 158


 4741              	.L358:
 4742              	.LCFI50:
 4743              		.cfi_def_cfa_offset 0
 4744              		.cfi_restore 4
 4745              		.cfi_restore 14
1979:System/FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4746              		.loc 1 1979 2 is_stmt 1 view .LVU1442
 4747              	.LBB234:
 4748              	.LBI234:
 191:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** {
 4749              		.loc 2 191 30 view .LVU1443
 4750              	.LBB235:
 193:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4751              		.loc 2 193 1 view .LVU1444
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4752              		.loc 2 195 2 view .LVU1445
 4753              		.syntax unified
 4754              	@ 195 "System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4755 0012 4FF05003 			mov r3, #80												
 4756 0016 83F31188 		msr basepri, r3											
 4757 001a BFF36F8F 		isb														
 4758 001e BFF34F8F 		dsb														
 4759              	
 4760              	@ 0 "" 2
 4761              	.LVL395:
 4762              		.thumb
 4763              		.syntax unified
 4764              	.L354:
 195:System/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4765              		.loc 2 195 2 is_stmt 0 view .LVU1446
 4766              	.LBE235:
 4767              	.LBE234:
1979:System/FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4768              		.loc 1 1979 2 is_stmt 1 discriminator 1 view .LVU1447
1979:System/FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4769              		.loc 1 1979 2 discriminator 1 view .LVU1448
1979:System/FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4770              		.loc 1 1979 2 discriminator 1 view .LVU1449
 4771 0022 FEE7     		b	.L354
 4772              	.LVL396:
 4773              	.L359:
 4774              	.LCFI51:
 4775              		.cfi_def_cfa_offset 8
 4776              		.cfi_offset 4, -8
 4777              		.cfi_offset 14, -4
2000:System/FreeRTOS/queue.c **** 		}
 4778              		.loc 1 2000 4 view .LVU1450
 4779 0024 2046     		mov	r0, r4
 4780 0026 FFF7FEFF 		bl	vPortFree
 4781              	.LVL397:
2004:System/FreeRTOS/queue.c **** 		}
 4782              		.loc 1 2004 28 view .LVU1451
2014:System/FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 4783              		.loc 1 2014 1 is_stmt 0 view .LVU1452
 4784 002a F1E7     		b	.L352
 4785              		.cfi_endproc
 4786              	.LFE25:
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 159


 4788              		.global	xQueueRegistry
 4789              		.section	.bss.xQueueRegistry,"aw",%nobits
 4790              		.align	2
 4791              		.set	.LANCHOR0,. + 0
 4794              	xQueueRegistry:
 4795 0000 00000000 		.space	256
 4795      00000000 
 4795      00000000 
 4795      00000000 
 4795      00000000 
 4796              		.text
 4797              	.Letext0:
 4798              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\
 4799              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 4800              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 4801              		.file 6 "System/FreeRTOS/include/FreeRTOS.h"
 4802              		.file 7 "System/FreeRTOS/include/list.h"
 4803              		.file 8 "System/FreeRTOS/include/task.h"
 4804              		.file 9 "System/FreeRTOS/include/queue.h"
 4805              		.file 10 "System/FreeRTOS/FreeRTOSConfig.h"
 4806              		.file 11 "System/FreeRTOS/include/portable.h"
 4807              		.file 12 "<built-in>"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 160


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:20     .text.prvGetDisinheritPriorityAfterTimeout:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:25     .text.prvGetDisinheritPriorityAfterTimeout:00000000 prvGetDisinheritPriorityAfterTimeout
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:60     .text.prvIsQueueFull:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:65     .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:113    .text.prvIsQueueEmpty:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:118    .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:163    .text.prvCopyDataToQueue:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:168    .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:325    .text.prvCopyDataFromQueue:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:330    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:390    .text.prvUnlockQueue:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:395    .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:520    .text.xQueueGenericReset:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:526    .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:669    .text.prvInitialiseNewQueue:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:674    .text.prvInitialiseNewQueue:00000000 prvInitialiseNewQueue
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:734    .text.xQueueGenericCreateStatic:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:740    .text.xQueueGenericCreateStatic:00000000 xQueueGenericCreateStatic
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:963    .text.xQueueGenericCreate:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:969    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1074   .text.xQueueCreateCountingSemaphoreStatic:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1080   .text.xQueueCreateCountingSemaphoreStatic:00000000 xQueueCreateCountingSemaphoreStatic
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1193   .text.xQueueCreateCountingSemaphore:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1199   .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1300   .text.xQueueGenericSend:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1306   .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1718   .text.prvInitialiseMutex:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1723   .text.prvInitialiseMutex:00000000 prvInitialiseMutex
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1771   .text.xQueueCreateMutex:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1777   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1816   .text.xQueueCreateMutexStatic:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1822   .text.xQueueCreateMutexStatic:00000000 xQueueCreateMutexStatic
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1874   .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:1880   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:2142   .text.xQueueGiveFromISR:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:2148   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:2421   .text.xQueueReceive:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:2427   .text.xQueueReceive:00000000 xQueueReceive
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:2801   .text.xQueueSemaphoreTake:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:2807   .text.xQueueSemaphoreTake:00000000 xQueueSemaphoreTake
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:3275   .text.xQueuePeek:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:3281   .text.xQueuePeek:00000000 xQueuePeek
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:3657   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:3663   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:3887   .text.xQueuePeekFromISR:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:3893   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4092   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4098   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4166   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4172   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4244   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4250   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4302   .text.uxQueueGetQueueNumber:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4308   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4326   .text.vQueueSetQueueNumber:00000000 $t
ARM GAS  C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s 			page 161


C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4332   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4349   .text.ucQueueGetQueueType:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4355   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4373   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4379   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4441   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4447   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4512   .text.vQueueAddToRegistry:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4518   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4570   .text.vQueueAddToRegistry:00000024 $d
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4575   .text.pcQueueGetName:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4581   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4634   .text.pcQueueGetName:00000024 $d
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4639   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4645   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4699   .text.vQueueUnregisterQueue:00000028 $d
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4704   .text.vQueueDelete:00000000 $t
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4710   .text.vQueueDelete:00000000 vQueueDelete
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4794   .bss.xQueueRegistry:00000000 xQueueRegistry
C:\Users\8bit\AppData\Local\Temp\cclLF9s7.s:4790   .bss.xQueueRegistry:00000000 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
