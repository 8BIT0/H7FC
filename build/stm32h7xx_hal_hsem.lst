ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_hsem.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_HSEM_Take,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_HSEM_Take
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_HSEM_Take:
  26              	.LVL0:
  27              	.LFB144:
  28              		.file 1 "HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c"
   1:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
   2:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ******************************************************************************
   3:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @file    stm32h7xx_hal_hsem.c
   4:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @author  MCD Application Team
   5:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief   HSEM HAL module driver.
   6:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *          This file provides firmware functions to manage the following
   7:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *          functionalities of the semaphore peripheral:
   8:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *           + Semaphore Take function (2-Step Procedure) , non blocking
   9:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *           + Semaphore FastTake function (1-Step Procedure) , non blocking
  10:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *           + Semaphore Status check
  11:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *           + Semaphore Clear Key Set and Get
  12:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *           + Release and release all functions
  13:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *           + Semaphore notification enabling and disabling and callnack functions
  14:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *           + IRQ handler management
  15:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *
  16:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *
  17:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ******************************************************************************
  18:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @attention
  19:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *
  20:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * Copyright (c) 2017 STMicroelectronics.
  21:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * All rights reserved.
  22:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *
  23:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * This software is licensed under terms that can be found in the LICENSE file
  24:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * in the root directory of this software component.
  25:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  26:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *
  27:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ******************************************************************************
  28:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   @verbatim
  29:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ==============================================================================
  30:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****                      ##### How to use this driver #####
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 2


  31:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ==============================================================================
  32:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   [..]
  33:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (#)Take a semaphore In 2-Step mode Using function HAL_HSEM_Take. This function takes as param
  34:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            (++) the semaphore ID from 0 to 31
  35:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            (++) the process ID from 0 to 255
  36:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (#) Fast Take semaphore In 1-Step mode Using function HAL_HSEM_FastTake. This function takes 
  37:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            (++) the semaphore ID from 0_ID to 31. Note that the process ID value is implicitly assu
  38:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (#) Check if a semaphore is Taken using function HAL_HSEM_IsSemTaken. This function takes as 
  39:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****           (++) the semaphore ID from 0_ID to 31
  40:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****           (++) It returns 1 if the given semaphore is taken otherwise (Free) zero
  41:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (#)Release a semaphore using function with HAL_HSEM_Release. This function takes as parameter
  42:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            (++) the semaphore ID from 0 to 31
  43:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            (++) the process ID from 0 to 255:
  44:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            (++) Note: If ProcessID and MasterID match, semaphore is freed, and an interrupt
  45:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****          may be generated when enabled (notification activated). If ProcessID or MasterID does not 
  46:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****          semaphore remains taken (locked)
  47:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
  48:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (#)Release all semaphores at once taken by a given Master using function HAL_HSEM_Release_All
  49:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****           This function takes as parameters :
  50:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            (++) the Release Key (value from 0 to 0xFFFF) can be Set or Get respectively by
  51:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****               HAL_HSEM_SetClearKey() or HAL_HSEM_GetClearKey functions
  52:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            (++) the Master ID:
  53:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            (++) Note: If the Key and MasterID match, all semaphores taken by the given CPU that cor
  54:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            to MasterID  will be freed, and an interrupt may be generated when enabled (notification
  55:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****            Key or the MasterID doesn't match, semaphores remains taken (locked)
  56:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
  57:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (#)Semaphores Release all key functions:
  58:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****          (++)  HAL_HSEM_SetClearKey() to set semaphore release all Key
  59:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****          (++)  HAL_HSEM_GetClearKey() to get release all Key
  60:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (#)Semaphores notification functions :
  61:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****          (++)  HAL_HSEM_ActivateNotification to activate a notification callback on
  62:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****                a given semaphores Mask (bitfield). When one or more semaphores defined by the mask 
  63:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****                the callback HAL_HSEM_FreeCallback will be asserted giving as parameters a mask of t
  64:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****                semaphores (bitfield).
  65:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
  66:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****          (++)  HAL_HSEM_DeactivateNotification to deactivate the notification of a given semaphores
  67:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****          (++) See the description of the macro __HAL_HSEM_SEMID_TO_MASK to check how to calculate a
  68:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****                 Used by the notification functions
  69:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****      *** HSEM HAL driver macros list ***
  70:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****      =============================================
  71:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****      [..] Below the list of most used macros in HSEM HAL driver.
  72:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
  73:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) __HAL_HSEM_SEMID_TO_MASK: Helper macro to convert a Semaphore ID to a Mask.
  74:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       [..] Example of use :
  75:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       [..] mask = __HAL_HSEM_SEMID_TO_MASK(8)  |  __HAL_HSEM_SEMID_TO_MASK(21) | __HAL_HSEM_SEMID_T
  76:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       [..] All next macros take as parameter a semaphore Mask (bitfiled) that can be constructed us
  77:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) __HAL_HSEM_ENABLE_IT: Enable the specified semaphores Mask interrupts.
  78:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) __HAL_HSEM_DISABLE_IT: Disable the specified semaphores Mask interrupts.
  79:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) __HAL_HSEM_GET_IT: Checks whether the specified semaphore interrupt has occurred or not.
  80:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) __HAL_HSEM_GET_FLAG: Get the semaphores status release flags.
  81:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) __HAL_HSEM_CLEAR_FLAG: Clear the semaphores status release flags.
  82:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
  83:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   @endverbatim
  84:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ******************************************************************************
  85:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
  86:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
  87:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 3


  88:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #include "stm32h7xx_hal.h"
  89:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
  90:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /** @addtogroup STM32H7xx_HAL_Driver
  91:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @{
  92:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
  93:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
  94:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /** @defgroup HSEM HSEM
  95:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief HSEM HAL module driver
  96:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @{
  97:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
  98:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
  99:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #ifdef HAL_HSEM_MODULE_ENABLED
 100:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 101:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /* Private typedef -----------------------------------------------------------*/
 102:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /* Private define ------------------------------------------------------------*/
 103:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #if defined(DUAL_CORE)
 104:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /** @defgroup HSEM_Private_Constants  HSEM Private Constants
 105:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @{
 106:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 107:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 108:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #ifndef HSEM_R_MASTERID
 109:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #define HSEM_R_MASTERID HSEM_R_COREID
 110:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif
 111:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 112:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #ifndef HSEM_RLR_MASTERID
 113:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #define HSEM_RLR_MASTERID HSEM_RLR_COREID
 114:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif
 115:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 116:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #ifndef HSEM_CR_MASTERID
 117:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #define HSEM_CR_MASTERID HSEM_CR_COREID
 118:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif
 119:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 120:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 121:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @}
 122:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */  
 123:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif /* DUAL_CORE */
 124:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /* Private macro -------------------------------------------------------------*/
 125:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /* Private variables ---------------------------------------------------------*/
 126:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /* Private function prototypes -----------------------------------------------*/
 127:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /* Private functions ---------------------------------------------------------*/
 128:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /* Exported functions --------------------------------------------------------*/
 129:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 130:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /** @defgroup HSEM_Exported_Functions  HSEM Exported Functions
 131:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @{
 132:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 133:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 134:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /** @defgroup HSEM_Exported_Functions_Group1 Take and Release functions
 135:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *  @brief    HSEM Take and Release functions
 136:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *
 137:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** @verbatim
 138:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****  ==============================================================================
 139:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****               ##### HSEM Take and Release functions #####
 140:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****  ==============================================================================
 141:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** [..] This section provides functions allowing to:
 142:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) Take a semaphore with 2 Step method
 143:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) Fast Take a semaphore with 1 Step method
 144:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) Check semaphore state Taken or not
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 4


 145:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) Release a semaphore
 146:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) Release all semaphore at once
 147:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 148:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** @endverbatim
 149:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @{
 150:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 151:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 152:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 153:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 154:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  Take a semaphore in 2 Step mode.
 155:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  SemID: semaphore ID from 0 to 31
 156:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  ProcessID: Process ID from 0 to 255
 157:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval HAL status
 158:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 159:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** HAL_StatusTypeDef  HAL_HSEM_Take(uint32_t SemID, uint32_t ProcessID)
 160:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
  29              		.loc 1 160 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 161:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Check the parameters */
 162:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   assert_param(IS_HSEM_SEMID(SemID));
  34              		.loc 1 162 3 view .LVU1
 163:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   assert_param(IS_HSEM_PROCESSID(ProcessID));
  35              		.loc 1 163 3 view .LVU2
 164:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 165:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #if  USE_MULTI_CORE_SHARED_CODE != 0U
 166:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* First step  write R register with MasterID, processID and take bit=1*/
 167:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HSEM->R[SemID] = ((ProcessID & HSEM_R_PROCID) | ((HAL_GetCurrentCPUID() << POSITION_VAL(HSEM_R_MA
 168:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 169:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* second step : read the R register . Take achieved if MasterID and processID match and take bit
 170:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   if (HSEM->R[SemID] == ((ProcessID & HSEM_R_PROCID) | ((HAL_GetCurrentCPUID() << POSITION_VAL(HSEM
 171:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
 172:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*take success when MasterID and ProcessID match and take bit set*/
 173:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     return HAL_OK;
 174:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 175:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #else
 176:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* First step  write R register with MasterID, processID and take bit=1*/
 177:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HSEM->R[SemID] = (ProcessID | HSEM_CR_COREID_CURRENT | HSEM_R_LOCK);
  36              		.loc 1 177 3 view .LVU3
  37              		.loc 1 177 56 is_stmt 0 view .LVU4
  38 0000 064B     		ldr	r3, .L4
  39 0002 0B43     		orrs	r3, r3, r1
  40              		.loc 1 177 18 view .LVU5
  41 0004 064A     		ldr	r2, .L4+4
  42 0006 42F82030 		str	r3, [r2, r0, lsl #2]
 178:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 179:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* second step : read the R register . Take achieved if MasterID and processID match and take bit
 180:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   if (HSEM->R[SemID] == (ProcessID | HSEM_CR_COREID_CURRENT | HSEM_R_LOCK))
  43              		.loc 1 180 3 is_stmt 1 view .LVU6
  44              		.loc 1 180 14 is_stmt 0 view .LVU7
  45 000a 52F82020 		ldr	r2, [r2, r0, lsl #2]
  46              		.loc 1 180 6 view .LVU8
  47 000e 9342     		cmp	r3, r2
  48 0010 01D0     		beq	.L3
 181:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 5


 182:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*take success when MasterID and ProcessID match and take bit set*/
 183:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     return HAL_OK;
 184:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 185:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif
 186:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 187:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Semaphore take fails*/
 188:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   return HAL_ERROR;
  49              		.loc 1 188 10 view .LVU9
  50 0012 0120     		movs	r0, #1
  51              	.LVL1:
  52              		.loc 1 188 10 view .LVU10
  53 0014 7047     		bx	lr
  54              	.LVL2:
  55              	.L3:
 183:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
  56              		.loc 1 183 12 view .LVU11
  57 0016 0020     		movs	r0, #0
  58              	.LVL3:
 189:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
  59              		.loc 1 189 1 view .LVU12
  60 0018 7047     		bx	lr
  61              	.L5:
  62 001a 00BF     		.align	2
  63              	.L4:
  64 001c 00030080 		.word	-2147482880
  65 0020 00640258 		.word	1476551680
  66              		.cfi_endproc
  67              	.LFE144:
  69              		.section	.text.HAL_HSEM_FastTake,"ax",%progbits
  70              		.align	1
  71              		.global	HAL_HSEM_FastTake
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	HAL_HSEM_FastTake:
  77              	.LVL4:
  78              	.LFB145:
 190:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 191:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 192:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  Fast Take a semaphore with 1 Step mode.
 193:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  SemID: semaphore ID from 0 to 31
 194:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval HAL status
 195:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 196:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** HAL_StatusTypeDef HAL_HSEM_FastTake(uint32_t SemID)
 197:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
  79              		.loc 1 197 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
 198:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Check the parameters */
 199:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   assert_param(IS_HSEM_SEMID(SemID));
  84              		.loc 1 199 3 view .LVU14
 200:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 201:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #if  USE_MULTI_CORE_SHARED_CODE != 0U
 202:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Read the RLR register to take the semaphore */
 203:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   if (HSEM->RLR[SemID] == (((HAL_GetCurrentCPUID() << POSITION_VAL(HSEM_R_MASTERID)) & HSEM_RLR_MAS
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 6


 204:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
 205:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*take success when MasterID match and take bit set*/
 206:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     return HAL_OK;
 207:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 208:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #else  
 209:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Read the RLR register to take the semaphore */
 210:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   if (HSEM->RLR[SemID] == (HSEM_CR_COREID_CURRENT | HSEM_RLR_LOCK))
  85              		.loc 1 210 3 view .LVU15
  86              		.loc 1 210 16 is_stmt 0 view .LVU16
  87 0000 2030     		adds	r0, r0, #32
  88              	.LVL5:
  89              		.loc 1 210 16 view .LVU17
  90 0002 054B     		ldr	r3, .L9
  91 0004 53F82020 		ldr	r2, [r3, r0, lsl #2]
  92              		.loc 1 210 6 view .LVU18
  93 0008 044B     		ldr	r3, .L9+4
  94 000a 9A42     		cmp	r2, r3
  95 000c 01D0     		beq	.L8
 211:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
 212:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*take success when MasterID match and take bit set*/
 213:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     return HAL_OK;
 214:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 215:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif
 216:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 217:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Semaphore take fails */
 218:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   return HAL_ERROR;
  96              		.loc 1 218 10 view .LVU19
  97 000e 0120     		movs	r0, #1
  98              	.LVL6:
  99              		.loc 1 218 10 view .LVU20
 100 0010 7047     		bx	lr
 101              	.L8:
 213:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 102              		.loc 1 213 12 view .LVU21
 103 0012 0020     		movs	r0, #0
 219:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 104              		.loc 1 219 1 view .LVU22
 105 0014 7047     		bx	lr
 106              	.L10:
 107 0016 00BF     		.align	2
 108              	.L9:
 109 0018 00640258 		.word	1476551680
 110 001c 00030080 		.word	-2147482880
 111              		.cfi_endproc
 112              	.LFE145:
 114              		.section	.text.HAL_HSEM_IsSemTaken,"ax",%progbits
 115              		.align	1
 116              		.global	HAL_HSEM_IsSemTaken
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	HAL_HSEM_IsSemTaken:
 122              	.LVL7:
 123              	.LFB146:
 220:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 221:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  Check semaphore state Taken or not.
 222:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  SemID: semaphore ID
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 7


 223:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval HAL HSEM state
 224:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 225:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** uint32_t HAL_HSEM_IsSemTaken(uint32_t SemID)
 226:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
 124              		.loc 1 226 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 227:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   return (((HSEM->R[SemID] & HSEM_R_LOCK) != 0U) ? 1UL : 0UL);
 129              		.loc 1 227 3 view .LVU24
 130              		.loc 1 227 20 is_stmt 0 view .LVU25
 131 0000 044B     		ldr	r3, .L15
 132 0002 53F82030 		ldr	r3, [r3, r0, lsl #2]
 133              		.loc 1 227 56 view .LVU26
 134 0006 002B     		cmp	r3, #0
 135 0008 01DB     		blt	.L14
 136 000a 0020     		movs	r0, #0
 137              	.LVL8:
 228:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 138              		.loc 1 228 1 view .LVU27
 139 000c 7047     		bx	lr
 140              	.LVL9:
 141              	.L14:
 227:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   return (((HSEM->R[SemID] & HSEM_R_LOCK) != 0U) ? 1UL : 0UL);
 142              		.loc 1 227 56 view .LVU28
 143 000e 0120     		movs	r0, #1
 144              	.LVL10:
 227:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   return (((HSEM->R[SemID] & HSEM_R_LOCK) != 0U) ? 1UL : 0UL);
 145              		.loc 1 227 56 view .LVU29
 146 0010 7047     		bx	lr
 147              	.L16:
 148 0012 00BF     		.align	2
 149              	.L15:
 150 0014 00640258 		.word	1476551680
 151              		.cfi_endproc
 152              	.LFE146:
 154              		.section	.text.HAL_HSEM_Release,"ax",%progbits
 155              		.align	1
 156              		.global	HAL_HSEM_Release
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	HAL_HSEM_Release:
 162              	.LVL11:
 163              	.LFB147:
 229:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 230:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 231:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 232:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  Release a semaphore.
 233:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  SemID: semaphore ID from 0 to 31
 234:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  ProcessID: Process ID from 0 to 255
 235:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval None
 236:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 237:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** void  HAL_HSEM_Release(uint32_t SemID, uint32_t ProcessID)
 238:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
 164              		.loc 1 238 1 is_stmt 1 view -0
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 8


 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 239:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Check the parameters */
 240:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   assert_param(IS_HSEM_SEMID(SemID));
 169              		.loc 1 240 3 view .LVU31
 241:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   assert_param(IS_HSEM_PROCESSID(ProcessID));
 170              		.loc 1 241 3 view .LVU32
 242:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 243:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Clear the semaphore by writing to the R register : the MasterID , the processID and take bit =
 244:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #if  USE_MULTI_CORE_SHARED_CODE != 0U
 245:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HSEM->R[SemID] = (ProcessID | ((HAL_GetCurrentCPUID() << POSITION_VAL(HSEM_R_MASTERID)) & HSEM_R_
 246:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #else
 247:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HSEM->R[SemID] = (ProcessID | HSEM_CR_COREID_CURRENT);
 171              		.loc 1 247 3 view .LVU33
 172              		.loc 1 247 31 is_stmt 0 view .LVU34
 173 0000 41F44071 		orr	r1, r1, #768
 174              	.LVL12:
 175              		.loc 1 247 18 view .LVU35
 176 0004 014B     		ldr	r3, .L18
 177 0006 43F82010 		str	r1, [r3, r0, lsl #2]
 248:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif
 249:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 250:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 178              		.loc 1 250 1 view .LVU36
 179 000a 7047     		bx	lr
 180              	.L19:
 181              		.align	2
 182              	.L18:
 183 000c 00640258 		.word	1476551680
 184              		.cfi_endproc
 185              	.LFE147:
 187              		.section	.text.HAL_HSEM_ReleaseAll,"ax",%progbits
 188              		.align	1
 189              		.global	HAL_HSEM_ReleaseAll
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	HAL_HSEM_ReleaseAll:
 195              	.LVL13:
 196              	.LFB148:
 251:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 252:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 253:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  Release All semaphore used by a given Master .
 254:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  Key: Semaphore Key , value from 0 to 0xFFFF
 255:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  CoreID: CoreID of the CPU that is using semaphores to be released
 256:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval None
 257:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 258:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** void HAL_HSEM_ReleaseAll(uint32_t Key, uint32_t CoreID)
 259:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
 197              		.loc 1 259 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 260:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   assert_param(IS_HSEM_KEY(Key));
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 9


 202              		.loc 1 260 3 view .LVU38
 261:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   assert_param(IS_HSEM_COREID(CoreID));
 203              		.loc 1 261 3 view .LVU39
 262:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 263:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HSEM->CR = ((Key << HSEM_CR_KEY_Pos) | (CoreID << HSEM_CR_COREID_Pos));
 204              		.loc 1 263 3 view .LVU40
 205              		.loc 1 263 50 is_stmt 0 view .LVU41
 206 0000 0902     		lsls	r1, r1, #8
 207              	.LVL14:
 208              		.loc 1 263 40 view .LVU42
 209 0002 41EA0041 		orr	r1, r1, r0, lsl #16
 210              		.loc 1 263 12 view .LVU43
 211 0006 024B     		ldr	r3, .L21
 212 0008 C3F84011 		str	r1, [r3, #320]
 264:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 213              		.loc 1 264 1 view .LVU44
 214 000c 7047     		bx	lr
 215              	.L22:
 216 000e 00BF     		.align	2
 217              	.L21:
 218 0010 00640258 		.word	1476551680
 219              		.cfi_endproc
 220              	.LFE148:
 222              		.section	.text.HAL_HSEM_SetClearKey,"ax",%progbits
 223              		.align	1
 224              		.global	HAL_HSEM_SetClearKey
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 229              	HAL_HSEM_SetClearKey:
 230              	.LVL15:
 231              	.LFB149:
 265:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 266:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 267:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @}
 268:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 269:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 270:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /** @defgroup HSEM_Exported_Functions_Group2 HSEM Set and Get Key functions
 271:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *  @brief    HSEM Set and Get Key functions.
 272:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *
 273:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** @verbatim
 274:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ==============================================================================
 275:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****               ##### HSEM Set and Get Key functions #####
 276:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ==============================================================================
 277:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     [..]  This section provides functions allowing to:
 278:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) Set semaphore Key
 279:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       (+) Get semaphore Key
 280:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** @endverbatim
 281:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 282:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @{
 283:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 284:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 285:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 286:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  Set semaphore Key .
 287:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  Key: Semaphore Key , value from 0 to 0xFFFF
 288:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval None
 289:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 10


 290:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** void  HAL_HSEM_SetClearKey(uint32_t Key)
 291:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
 232              		.loc 1 291 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 292:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   assert_param(IS_HSEM_KEY(Key));
 237              		.loc 1 292 3 view .LVU46
 293:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 294:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   MODIFY_REG(HSEM->KEYR, HSEM_KEYR_KEY, (Key << HSEM_KEYR_KEY_Pos));
 238              		.loc 1 294 3 view .LVU47
 239 0000 044A     		ldr	r2, .L24
 240 0002 D2F84431 		ldr	r3, [r2, #324]
 241 0006 9BB2     		uxth	r3, r3
 242 0008 43EA0043 		orr	r3, r3, r0, lsl #16
 243 000c C2F84431 		str	r3, [r2, #324]
 295:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 296:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 244              		.loc 1 296 1 is_stmt 0 view .LVU48
 245 0010 7047     		bx	lr
 246              	.L25:
 247 0012 00BF     		.align	2
 248              	.L24:
 249 0014 00640258 		.word	1476551680
 250              		.cfi_endproc
 251              	.LFE149:
 253              		.section	.text.HAL_HSEM_GetClearKey,"ax",%progbits
 254              		.align	1
 255              		.global	HAL_HSEM_GetClearKey
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	HAL_HSEM_GetClearKey:
 261              	.LFB150:
 297:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 298:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 299:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  Get semaphore Key .
 300:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval Semaphore Key , value from 0 to 0xFFFF
 301:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 302:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** uint32_t HAL_HSEM_GetClearKey(void)
 303:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
 262              		.loc 1 303 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 304:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   return (HSEM->KEYR >> HSEM_KEYR_KEY_Pos);
 267              		.loc 1 304 3 view .LVU50
 268              		.loc 1 304 15 is_stmt 0 view .LVU51
 269 0000 024B     		ldr	r3, .L27
 270 0002 D3F84401 		ldr	r0, [r3, #324]
 305:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 271              		.loc 1 305 1 view .LVU52
 272 0006 000C     		lsrs	r0, r0, #16
 273 0008 7047     		bx	lr
 274              	.L28:
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 11


 275 000a 00BF     		.align	2
 276              	.L27:
 277 000c 00640258 		.word	1476551680
 278              		.cfi_endproc
 279              	.LFE150:
 281              		.section	.text.HAL_HSEM_ActivateNotification,"ax",%progbits
 282              		.align	1
 283              		.global	HAL_HSEM_ActivateNotification
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	HAL_HSEM_ActivateNotification:
 289              	.LVL16:
 290              	.LFB151:
 306:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 307:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 308:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @}
 309:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 310:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 311:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /** @defgroup HSEM_Exported_Functions_Group3 HSEM IRQ handler management
 312:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *  @brief    HSEM Notification functions.
 313:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   *
 314:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** @verbatim
 315:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ==============================================================================
 316:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****       ##### HSEM IRQ handler management and Notification functions #####
 317:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   ==============================================================================
 318:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** [..]  This section provides HSEM IRQ handler and Notification function.
 319:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 320:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** @endverbatim
 321:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @{
 322:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 323:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 324:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 325:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  Activate Semaphore release Notification for a given Semaphores Mask .
 326:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  SemMask: Mask of Released semaphores
 327:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval Semaphore Key
 328:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 329:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** void HAL_HSEM_ActivateNotification(uint32_t SemMask)
 330:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
 291              		.loc 1 330 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 331:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #if  USE_MULTI_CORE_SHARED_CODE != 0U
 332:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /*enable the semaphore mask interrupts */
 333:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   if (HAL_GetCurrentCPUID() == HSEM_CPU1_COREID)
 334:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
 335:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*Use interrupt line 0 for CPU1 Master */
 336:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     HSEM->C1IER |= SemMask;
 337:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 338:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   else /* HSEM_CPU2_COREID */
 339:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
 340:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*Use interrupt line 1 for CPU2 Master*/
 341:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     HSEM->C2IER |= SemMask;
 342:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 343:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #else
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 12


 344:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HSEM_COMMON->IER |= SemMask;
 296              		.loc 1 344 3 view .LVU54
 297              		.loc 1 344 20 is_stmt 0 view .LVU55
 298 0000 024A     		ldr	r2, .L30
 299 0002 1368     		ldr	r3, [r2]
 300 0004 0343     		orrs	r3, r3, r0
 301 0006 1360     		str	r3, [r2]
 345:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif
 346:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 302              		.loc 1 346 1 view .LVU56
 303 0008 7047     		bx	lr
 304              	.L31:
 305 000a 00BF     		.align	2
 306              	.L30:
 307 000c 00650258 		.word	1476551936
 308              		.cfi_endproc
 309              	.LFE151:
 311              		.section	.text.HAL_HSEM_DeactivateNotification,"ax",%progbits
 312              		.align	1
 313              		.global	HAL_HSEM_DeactivateNotification
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	HAL_HSEM_DeactivateNotification:
 319              	.LVL17:
 320              	.LFB152:
 347:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 348:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 349:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  Deactivate Semaphore release Notification for a given Semaphores Mask .
 350:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param  SemMask: Mask of Released semaphores
 351:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval Semaphore Key
 352:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 353:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** void HAL_HSEM_DeactivateNotification(uint32_t SemMask)
 354:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
 321              		.loc 1 354 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 355:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #if  USE_MULTI_CORE_SHARED_CODE != 0U
 356:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /*enable the semaphore mask interrupts */
 357:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   if (HAL_GetCurrentCPUID() == HSEM_CPU1_COREID)
 358:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
 359:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*Use interrupt line 0 for CPU1 Master */
 360:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     HSEM->C1IER &= ~SemMask;
 361:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 362:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   else /* HSEM_CPU2_COREID */
 363:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
 364:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*Use interrupt line 1 for CPU2 Master*/
 365:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     HSEM->C2IER &= ~SemMask;
 366:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 367:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #else
 368:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HSEM_COMMON->IER &= ~SemMask;
 326              		.loc 1 368 3 view .LVU58
 327              		.loc 1 368 20 is_stmt 0 view .LVU59
 328 0000 024A     		ldr	r2, .L33
 329 0002 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 13


 330 0004 23EA0003 		bic	r3, r3, r0
 331 0008 1360     		str	r3, [r2]
 369:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif
 370:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 332              		.loc 1 370 1 view .LVU60
 333 000a 7047     		bx	lr
 334              	.L34:
 335              		.align	2
 336              	.L33:
 337 000c 00650258 		.word	1476551936
 338              		.cfi_endproc
 339              	.LFE152:
 341              		.section	.text.HAL_HSEM_FreeCallback,"ax",%progbits
 342              		.align	1
 343              		.weak	HAL_HSEM_FreeCallback
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	HAL_HSEM_FreeCallback:
 349              	.LVL18:
 350              	.LFB154:
 371:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 372:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 373:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief  This function handles HSEM interrupt request
 374:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval None
 375:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 376:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** void HAL_HSEM_IRQHandler(void)
 377:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
 378:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   uint32_t statusreg;
 379:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #if  USE_MULTI_CORE_SHARED_CODE != 0U
 380:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   if (HAL_GetCurrentCPUID() == HSEM_CPU1_COREID)
 381:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
 382:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /* Get the list of masked freed semaphores*/
 383:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     statusreg = HSEM->C1MISR; /*Use interrupt line 0 for CPU1 Master*/
 384:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 385:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*Disable Interrupts*/
 386:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     HSEM->C1IER &= ~((uint32_t)statusreg);
 387:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 388:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*Clear Flags*/
 389:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     HSEM->C1ICR = ((uint32_t)statusreg);
 390:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 391:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   else /* HSEM_CPU2_COREID */
 392:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   {
 393:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /* Get the list of masked freed semaphores*/
 394:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     statusreg = HSEM->C2MISR;/*Use interrupt line 1 for CPU2 Master*/
 395:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 396:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*Disable Interrupts*/
 397:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     HSEM->C2IER &= ~((uint32_t)statusreg);
 398:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 399:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     /*Clear Flags*/
 400:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     HSEM->C2ICR = ((uint32_t)statusreg);
 401:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   }
 402:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #else
 403:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Get the list of masked freed semaphores*/
 404:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   statusreg = HSEM_COMMON->MISR;
 405:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 406:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /*Disable Interrupts*/
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 14


 407:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HSEM_COMMON->IER &= ~((uint32_t)statusreg);
 408:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 409:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /*Clear Flags*/
 410:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HSEM_COMMON->ICR = ((uint32_t)statusreg);
 411:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 412:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #endif
 413:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Call FreeCallback */
 414:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   HAL_HSEM_FreeCallback(statusreg);
 415:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 416:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 417:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** /**
 418:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @brief Semaphore Released Callback.
 419:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @param SemMask: Mask of Released semaphores
 420:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   * @retval None
 421:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   */
 422:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** __weak void HAL_HSEM_FreeCallback(uint32_t SemMask)
 423:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** {
 351              		.loc 1 423 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 424:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* Prevent unused argument(s) compilation warning */
 425:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   UNUSED(SemMask);
 356              		.loc 1 425 3 view .LVU62
 426:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 427:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 428:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   the HAL_HSEM_FreeCallback can be implemented in the user file
 429:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****     */
 430:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 357              		.loc 1 430 1 is_stmt 0 view .LVU63
 358 0000 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE154:
 362              		.section	.text.HAL_HSEM_IRQHandler,"ax",%progbits
 363              		.align	1
 364              		.global	HAL_HSEM_IRQHandler
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 369              	HAL_HSEM_IRQHandler:
 370              	.LFB153:
 377:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c ****   uint32_t statusreg;
 371              		.loc 1 377 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0000 08B5     		push	{r3, lr}
 376              	.LCFI0:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 378:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** #if  USE_MULTI_CORE_SHARED_CODE != 0U
 380              		.loc 1 378 3 view .LVU65
 404:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 381              		.loc 1 404 3 view .LVU66
 404:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 15


 382              		.loc 1 404 13 is_stmt 0 view .LVU67
 383 0002 054B     		ldr	r3, .L38
 384 0004 D868     		ldr	r0, [r3, #12]
 385              	.LVL19:
 407:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 386              		.loc 1 407 3 is_stmt 1 view .LVU68
 407:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 387              		.loc 1 407 20 is_stmt 0 view .LVU69
 388 0006 1A68     		ldr	r2, [r3]
 389 0008 22EA0002 		bic	r2, r2, r0
 390 000c 1A60     		str	r2, [r3]
 410:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 391              		.loc 1 410 3 is_stmt 1 view .LVU70
 410:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 392              		.loc 1 410 20 is_stmt 0 view .LVU71
 393 000e 5860     		str	r0, [r3, #4]
 414:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** }
 394              		.loc 1 414 3 is_stmt 1 view .LVU72
 395 0010 FFF7FEFF 		bl	HAL_HSEM_FreeCallback
 396              	.LVL20:
 415:HAL_Lib/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c **** 
 397              		.loc 1 415 1 is_stmt 0 view .LVU73
 398 0014 08BD     		pop	{r3, pc}
 399              	.L39:
 400 0016 00BF     		.align	2
 401              	.L38:
 402 0018 00650258 		.word	1476551936
 403              		.cfi_endproc
 404              	.LFE153:
 406              		.text
 407              	.Letext0:
 408              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 409              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 410              		.file 4 "HAL_Lib/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 411              		.file 5 "HAL_Lib/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
ARM GAS  C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_hsem.c
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:19     .text.HAL_HSEM_Take:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:25     .text.HAL_HSEM_Take:00000000 HAL_HSEM_Take
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:64     .text.HAL_HSEM_Take:0000001c $d
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:70     .text.HAL_HSEM_FastTake:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:76     .text.HAL_HSEM_FastTake:00000000 HAL_HSEM_FastTake
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:109    .text.HAL_HSEM_FastTake:00000018 $d
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:115    .text.HAL_HSEM_IsSemTaken:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:121    .text.HAL_HSEM_IsSemTaken:00000000 HAL_HSEM_IsSemTaken
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:150    .text.HAL_HSEM_IsSemTaken:00000014 $d
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:155    .text.HAL_HSEM_Release:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:161    .text.HAL_HSEM_Release:00000000 HAL_HSEM_Release
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:183    .text.HAL_HSEM_Release:0000000c $d
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:188    .text.HAL_HSEM_ReleaseAll:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:194    .text.HAL_HSEM_ReleaseAll:00000000 HAL_HSEM_ReleaseAll
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:218    .text.HAL_HSEM_ReleaseAll:00000010 $d
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:223    .text.HAL_HSEM_SetClearKey:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:229    .text.HAL_HSEM_SetClearKey:00000000 HAL_HSEM_SetClearKey
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:249    .text.HAL_HSEM_SetClearKey:00000014 $d
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:254    .text.HAL_HSEM_GetClearKey:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:260    .text.HAL_HSEM_GetClearKey:00000000 HAL_HSEM_GetClearKey
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:277    .text.HAL_HSEM_GetClearKey:0000000c $d
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:282    .text.HAL_HSEM_ActivateNotification:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:288    .text.HAL_HSEM_ActivateNotification:00000000 HAL_HSEM_ActivateNotification
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:307    .text.HAL_HSEM_ActivateNotification:0000000c $d
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:312    .text.HAL_HSEM_DeactivateNotification:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:318    .text.HAL_HSEM_DeactivateNotification:00000000 HAL_HSEM_DeactivateNotification
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:337    .text.HAL_HSEM_DeactivateNotification:0000000c $d
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:342    .text.HAL_HSEM_FreeCallback:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:348    .text.HAL_HSEM_FreeCallback:00000000 HAL_HSEM_FreeCallback
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:363    .text.HAL_HSEM_IRQHandler:00000000 $t
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:369    .text.HAL_HSEM_IRQHandler:00000000 HAL_HSEM_IRQHandler
C:\Users\HUAV\AppData\Local\Temp\ccqWHb8A.s:402    .text.HAL_HSEM_IRQHandler:00000018 $d

NO UNDEFINED SYMBOLS
