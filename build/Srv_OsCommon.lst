ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Srv_OsCommon.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.__enable_irq,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	__enable_irq:
  26              	.LFB6:
  27              		.file 1 "HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h"
   1:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /******************************************************************************
   2:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * @version  V5.3.0
   5:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * @date     26. March 2020
   6:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  ******************************************************************************/
   7:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /*
   8:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  *
  10:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  *
  12:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  *
  16:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  *
  18:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  * limitations under the License.
  23:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  */
  24:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
  25:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
  28:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 2


  32:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
  34:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef __has_builtin
  36:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  38:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
  39:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __ASM
  41:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  43:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __INLINE
  44:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __INLINE                               inline
  45:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  46:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  49:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  52:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  55:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __USED
  56:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  58:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __WEAK
  59:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  61:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __PACKED
  62:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  64:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  67:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  70:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  78:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  86:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 3


  89:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
  94:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 102:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 110:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 113:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 116:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 119:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 120:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 122:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 124:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /**
 125:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****            in the used linker script.
 129:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 130:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  */
 131:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** {
 133:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 135:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   typedef struct {
 136:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     uint32_t const* src;
 137:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     uint32_t* dest;
 138:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     uint32_t  wlen;
 139:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   } __copy_table_t;
 140:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 141:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   typedef struct {
 142:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     uint32_t* dest;
 143:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     uint32_t  wlen;
 144:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   } __zero_table_t;
 145:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 4


 146:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 151:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     }
 155:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   }
 156:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 157:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     }
 161:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   }
 162:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 163:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   _start();
 164:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** }
 165:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 166:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 168:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 169:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 172:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 173:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 176:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 177:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 180:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 181:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** #endif
 184:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 185:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   @{
 189:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  */
 190:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 191:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /**
 192:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  */
 196:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** {
  28              		.loc 1 197 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 5


 198:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  33              		.loc 1 198 3 view .LVU1
  34              		.syntax unified
  35              	@ 198 "HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h" 1
  36 0000 62B6     		cpsie i
  37              	@ 0 "" 2
 199:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** }
  38              		.loc 1 199 1 is_stmt 0 view .LVU2
  39              		.thumb
  40              		.syntax unified
  41 0002 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE6:
  45              		.section	.text.__disable_irq,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	__disable_irq:
  52              	.LFB7:
 200:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 201:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** 
 202:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** /**
 203:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****  */
 207:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** {
  53              		.loc 1 208 1 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 209:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  58              		.loc 1 209 3 view .LVU4
  59              		.syntax unified
  60              	@ 209 "HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h" 1
  61 0000 72B6     		cpsid i
  62              	@ 0 "" 2
 210:HW_Lib/AT32F435/cmsis/cm4/core_support/cmsis_gcc.h **** }
  63              		.loc 1 210 1 is_stmt 0 view .LVU5
  64              		.thumb
  65              		.syntax unified
  66 0002 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE7:
  70              		.section	.text.SrvOsCommon_Reboot,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	SrvOsCommon_Reboot:
  77              	.LFB114:
  78              		.file 2 "Service/Srv_OsCommon.c"
   1:Service/Srv_OsCommon.c **** #include "Srv_OsCommon.h"
   2:Service/Srv_OsCommon.c **** #include "kernel.h"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 6


   3:Service/Srv_OsCommon.c **** #include "cmsis_gcc.h"
   4:Service/Srv_OsCommon.c **** #include "shell_port.h"
   5:Service/Srv_OsCommon.c **** 
   6:Service/Srv_OsCommon.c **** typedef struct
   7:Service/Srv_OsCommon.c **** {
   8:Service/Srv_OsCommon.c ****     uint32_t available_size;
   9:Service/Srv_OsCommon.c ****     uint32_t heap_remain;
  10:Service/Srv_OsCommon.c ****     uint32_t block_num;
  11:Service/Srv_OsCommon.c **** 
  12:Service/Srv_OsCommon.c ****     uint32_t malloc_cnt;
  13:Service/Srv_OsCommon.c ****     uint32_t malloc_failed_cnt;
  14:Service/Srv_OsCommon.c ****     uint32_t free_cnt;
  15:Service/Srv_OsCommon.c ****     uint32_t free_faile_cnt;
  16:Service/Srv_OsCommon.c **** }SrvOsCommon_HeapMonitor_TypeDef;
  17:Service/Srv_OsCommon.c **** 
  18:Service/Srv_OsCommon.c **** /* internal vriable */
  19:Service/Srv_OsCommon.c **** static bool first_call = true;
  20:Service/Srv_OsCommon.c **** static SrvOsCommon_HeapMonitor_TypeDef OsHeap_Monitor = {0};
  21:Service/Srv_OsCommon.c **** 
  22:Service/Srv_OsCommon.c **** /* external vriable */
  23:Service/Srv_OsCommon.c **** uint8_t ucHeap[ configTOTAL_HEAP_SIZE ] __attribute__((section(".OsHeap_Section")));
  24:Service/Srv_OsCommon.c **** 
  25:Service/Srv_OsCommon.c **** /* external function */
  26:Service/Srv_OsCommon.c **** static void* SrvOsCommon_Malloc(uint32_t size);
  27:Service/Srv_OsCommon.c **** static void SrvOsCommon_Free(void *ptr);
  28:Service/Srv_OsCommon.c **** static int32_t SrvOsCommon_Delay(uint32_t ms);
  29:Service/Srv_OsCommon.c **** static void SrvOsCommon_DelayUntil(uint32_t *prev_time, uint32_t ms);
  30:Service/Srv_OsCommon.c **** static void SrvOsCommon_Reboot(void);
  31:Service/Srv_OsCommon.c **** 
  32:Service/Srv_OsCommon.c **** SrvOsCommon_TypeDef SrvOsCommon = {
  33:Service/Srv_OsCommon.c ****     .get_os_ms = osKernelSysTick,
  34:Service/Srv_OsCommon.c ****     .delay_ms = SrvOsCommon_Delay,
  35:Service/Srv_OsCommon.c ****     .precise_delay = SrvOsCommon_DelayUntil,
  36:Service/Srv_OsCommon.c ****     .malloc = SrvOsCommon_Malloc,
  37:Service/Srv_OsCommon.c ****     .free = SrvOsCommon_Free,
  38:Service/Srv_OsCommon.c ****     .enter_critical = vPortEnterCritical,
  39:Service/Srv_OsCommon.c ****     .exit_critical = vPortExitCritical,
  40:Service/Srv_OsCommon.c ****     .get_heap_status = vPortGetHeapStats,
  41:Service/Srv_OsCommon.c ****     .get_systimer_current_tick = Kernel_Get_SysTimer_TickUnit,
  42:Service/Srv_OsCommon.c ****     .get_systimer_period = Kernel_Get_PeriodValue,
  43:Service/Srv_OsCommon.c ****     .set_systimer_tick_value = Kernel_Set_SysTimer_TickUnit,
  44:Service/Srv_OsCommon.c ****     .set_systimer_period = Kernel_Set_PeriodValue,
  45:Service/Srv_OsCommon.c ****     .systimer_tick_to_us = Kernel_TickVal_To_Us,
  46:Service/Srv_OsCommon.c ****     .systimer_disable = Kernel_DisableTimer_IRQ,
  47:Service/Srv_OsCommon.c ****     .systimer_enable = Kernel_EnableTimer_IRQ,
  48:Service/Srv_OsCommon.c ****     .disable_all_irq = __disable_irq,
  49:Service/Srv_OsCommon.c ****     .enable_all_irq = __enable_irq,
  50:Service/Srv_OsCommon.c ****     .reboot = SrvOsCommon_Reboot,
  51:Service/Srv_OsCommon.c **** };
  52:Service/Srv_OsCommon.c **** 
  53:Service/Srv_OsCommon.c **** static void* SrvOsCommon_Malloc(uint32_t size)
  54:Service/Srv_OsCommon.c **** {
  55:Service/Srv_OsCommon.c ****     void *req_tmp = NULL;
  56:Service/Srv_OsCommon.c ****     SrvOs_HeapStatus_TypeDef status; 
  57:Service/Srv_OsCommon.c ****     uint32_t malloc_num = 0;
  58:Service/Srv_OsCommon.c ****     memset(&status, 0, sizeof(SrvOs_HeapStatus_TypeDef));
  59:Service/Srv_OsCommon.c **** 
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 7


  60:Service/Srv_OsCommon.c ****     /* check heap status first */
  61:Service/Srv_OsCommon.c ****     vPortGetHeapStats(&status);
  62:Service/Srv_OsCommon.c ****     malloc_num = status.xNumberOfSuccessfulAllocations;
  63:Service/Srv_OsCommon.c ****     
  64:Service/Srv_OsCommon.c ****     if(first_call)
  65:Service/Srv_OsCommon.c ****     {
  66:Service/Srv_OsCommon.c ****         memset(&OsHeap_Monitor, 0, sizeof(SrvOsCommon_HeapMonitor_TypeDef));
  67:Service/Srv_OsCommon.c ****         first_call = false;
  68:Service/Srv_OsCommon.c ****     }
  69:Service/Srv_OsCommon.c **** 
  70:Service/Srv_OsCommon.c ****     if(status.xAvailableHeapSpaceInBytes)
  71:Service/Srv_OsCommon.c ****     {
  72:Service/Srv_OsCommon.c ****         req_tmp = pvPortMalloc(size);
  73:Service/Srv_OsCommon.c ****         
  74:Service/Srv_OsCommon.c ****         /* recheck heap status after os heap malloc */
  75:Service/Srv_OsCommon.c ****         vPortGetHeapStats(&status);
  76:Service/Srv_OsCommon.c **** 
  77:Service/Srv_OsCommon.c ****         OsHeap_Monitor.available_size = status.xAvailableHeapSpaceInBytes;
  78:Service/Srv_OsCommon.c ****         OsHeap_Monitor.block_num = status.xNumberOfFreeBlocks;
  79:Service/Srv_OsCommon.c ****     
  80:Service/Srv_OsCommon.c ****         if(!req_tmp && (status.xNumberOfSuccessfulAllocations - malloc_num != 1))
  81:Service/Srv_OsCommon.c ****         {
  82:Service/Srv_OsCommon.c ****             req_tmp = NULL;
  83:Service/Srv_OsCommon.c ****             OsHeap_Monitor.malloc_failed_cnt ++;
  84:Service/Srv_OsCommon.c ****         }
  85:Service/Srv_OsCommon.c ****         else
  86:Service/Srv_OsCommon.c ****         {
  87:Service/Srv_OsCommon.c ****             memset(req_tmp, 0, size);
  88:Service/Srv_OsCommon.c ****             OsHeap_Monitor.malloc_cnt ++;
  89:Service/Srv_OsCommon.c ****         }
  90:Service/Srv_OsCommon.c ****     }
  91:Service/Srv_OsCommon.c **** 
  92:Service/Srv_OsCommon.c ****     return req_tmp;
  93:Service/Srv_OsCommon.c **** }
  94:Service/Srv_OsCommon.c **** 
  95:Service/Srv_OsCommon.c **** static void SrvOsCommon_Free(void *ptr)
  96:Service/Srv_OsCommon.c **** {
  97:Service/Srv_OsCommon.c ****     uint32_t free_cnt = 0;
  98:Service/Srv_OsCommon.c ****     SrvOs_HeapStatus_TypeDef status;
  99:Service/Srv_OsCommon.c **** 
 100:Service/Srv_OsCommon.c ****     memset(&status, 0, sizeof(SrvOs_HeapStatus_TypeDef));
 101:Service/Srv_OsCommon.c **** 
 102:Service/Srv_OsCommon.c ****     if(ptr)
 103:Service/Srv_OsCommon.c ****     {
 104:Service/Srv_OsCommon.c ****         vPortGetHeapStats(&status);
 105:Service/Srv_OsCommon.c ****         free_cnt = status.xNumberOfSuccessfulFrees;
 106:Service/Srv_OsCommon.c ****         
 107:Service/Srv_OsCommon.c ****         vPortFree(ptr);
 108:Service/Srv_OsCommon.c ****         
 109:Service/Srv_OsCommon.c ****         /* check heap status after os heap free */
 110:Service/Srv_OsCommon.c ****         vPortGetHeapStats(&status);
 111:Service/Srv_OsCommon.c ****         OsHeap_Monitor.available_size = status.xAvailableHeapSpaceInBytes;
 112:Service/Srv_OsCommon.c ****         OsHeap_Monitor.block_num = status.xNumberOfFreeBlocks;
 113:Service/Srv_OsCommon.c **** 
 114:Service/Srv_OsCommon.c ****         if(status.xNumberOfSuccessfulFrees - free_cnt == 1)
 115:Service/Srv_OsCommon.c ****         {
 116:Service/Srv_OsCommon.c ****             OsHeap_Monitor.free_cnt++;
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 8


 117:Service/Srv_OsCommon.c ****             ptr = NULL;
 118:Service/Srv_OsCommon.c ****         }
 119:Service/Srv_OsCommon.c ****         else
 120:Service/Srv_OsCommon.c ****             OsHeap_Monitor.free_faile_cnt ++;
 121:Service/Srv_OsCommon.c ****     }
 122:Service/Srv_OsCommon.c **** }
 123:Service/Srv_OsCommon.c **** 
 124:Service/Srv_OsCommon.c **** static int32_t SrvOsCommon_Delay(uint32_t ms)
 125:Service/Srv_OsCommon.c **** {
 126:Service/Srv_OsCommon.c ****     if (osDelay(ms) == osOK)
 127:Service/Srv_OsCommon.c ****         return 1;
 128:Service/Srv_OsCommon.c **** 
 129:Service/Srv_OsCommon.c ****     return 0;
 130:Service/Srv_OsCommon.c **** }
 131:Service/Srv_OsCommon.c **** 
 132:Service/Srv_OsCommon.c **** static void SrvOsCommon_DelayUntil(uint32_t *prev_time, uint32_t ms)
 133:Service/Srv_OsCommon.c **** {
 134:Service/Srv_OsCommon.c ****     if (prev_time && ms)
 135:Service/Srv_OsCommon.c ****         osDelayUntil(prev_time, ms);
 136:Service/Srv_OsCommon.c **** }
 137:Service/Srv_OsCommon.c **** 
 138:Service/Srv_OsCommon.c **** static void SrvOsCommon_Reboot(void)
 139:Service/Srv_OsCommon.c **** {
  79              		.loc 2 139 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 08B5     		push	{r3, lr}
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
 140:Service/Srv_OsCommon.c ****     Kernel_reboot();
  88              		.loc 2 140 5 view .LVU7
  89 0002 FFF7FEFF 		bl	Kernel_reboot
  90              	.LVL0:
 141:Service/Srv_OsCommon.c **** }
  91              		.loc 2 141 1 is_stmt 0 view .LVU8
  92 0006 08BD     		pop	{r3, pc}
  93              		.cfi_endproc
  94              	.LFE114:
  96              		.section	.text.SrvOsCommon_Free,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	SrvOsCommon_Free:
 103              	.LVL1:
 104              	.LFB111:
  96:Service/Srv_OsCommon.c ****     uint32_t free_cnt = 0;
 105              		.loc 2 96 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 32
 108              		@ frame_needed = 0, uses_anonymous_args = 0
  96:Service/Srv_OsCommon.c ****     uint32_t free_cnt = 0;
 109              		.loc 2 96 1 is_stmt 0 view .LVU10
 110 0000 30B5     		push	{r4, r5, lr}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 9


 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 5, -8
 115              		.cfi_offset 14, -4
 116 0002 89B0     		sub	sp, sp, #36
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 48
  97:Service/Srv_OsCommon.c ****     SrvOs_HeapStatus_TypeDef status;
 119              		.loc 2 97 5 is_stmt 1 view .LVU11
 120              	.LVL2:
  98:Service/Srv_OsCommon.c **** 
 121              		.loc 2 98 5 view .LVU12
 100:Service/Srv_OsCommon.c **** 
 122              		.loc 2 100 5 view .LVU13
 123 0004 0023     		movs	r3, #0
 124 0006 0193     		str	r3, [sp, #4]
 125 0008 0293     		str	r3, [sp, #8]
 126 000a 0393     		str	r3, [sp, #12]
 127 000c 0493     		str	r3, [sp, #16]
 128 000e 0593     		str	r3, [sp, #20]
 129 0010 0693     		str	r3, [sp, #24]
 130 0012 0793     		str	r3, [sp, #28]
 102:Service/Srv_OsCommon.c ****     {
 131              		.loc 2 102 5 view .LVU14
 102:Service/Srv_OsCommon.c ****     {
 132              		.loc 2 102 7 is_stmt 0 view .LVU15
 133 0014 B8B1     		cbz	r0, .L5
 134 0016 0446     		mov	r4, r0
 104:Service/Srv_OsCommon.c ****         free_cnt = status.xNumberOfSuccessfulFrees;
 135              		.loc 2 104 9 is_stmt 1 view .LVU16
 136 0018 01A8     		add	r0, sp, #4
 137              	.LVL3:
 104:Service/Srv_OsCommon.c ****         free_cnt = status.xNumberOfSuccessfulFrees;
 138              		.loc 2 104 9 is_stmt 0 view .LVU17
 139 001a FFF7FEFF 		bl	vPortGetHeapStats
 140              	.LVL4:
 105:Service/Srv_OsCommon.c ****         
 141              		.loc 2 105 9 is_stmt 1 view .LVU18
 105:Service/Srv_OsCommon.c ****         
 142              		.loc 2 105 18 is_stmt 0 view .LVU19
 143 001e 079D     		ldr	r5, [sp, #28]
 144              	.LVL5:
 107:Service/Srv_OsCommon.c ****         
 145              		.loc 2 107 9 is_stmt 1 view .LVU20
 146 0020 2046     		mov	r0, r4
 147 0022 FFF7FEFF 		bl	vPortFree
 148              	.LVL6:
 110:Service/Srv_OsCommon.c ****         OsHeap_Monitor.available_size = status.xAvailableHeapSpaceInBytes;
 149              		.loc 2 110 9 view .LVU21
 150 0026 01A8     		add	r0, sp, #4
 151 0028 FFF7FEFF 		bl	vPortGetHeapStats
 152              	.LVL7:
 111:Service/Srv_OsCommon.c ****         OsHeap_Monitor.block_num = status.xNumberOfFreeBlocks;
 153              		.loc 2 111 9 view .LVU22
 111:Service/Srv_OsCommon.c ****         OsHeap_Monitor.block_num = status.xNumberOfFreeBlocks;
 154              		.loc 2 111 39 is_stmt 0 view .LVU23
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 10


 155 002c 094B     		ldr	r3, .L10
 156 002e 019A     		ldr	r2, [sp, #4]
 157 0030 1A60     		str	r2, [r3]
 112:Service/Srv_OsCommon.c **** 
 158              		.loc 2 112 9 is_stmt 1 view .LVU24
 112:Service/Srv_OsCommon.c **** 
 159              		.loc 2 112 42 is_stmt 0 view .LVU25
 160 0032 049A     		ldr	r2, [sp, #16]
 112:Service/Srv_OsCommon.c **** 
 161              		.loc 2 112 34 view .LVU26
 162 0034 9A60     		str	r2, [r3, #8]
 114:Service/Srv_OsCommon.c ****         {
 163              		.loc 2 114 9 is_stmt 1 view .LVU27
 114:Service/Srv_OsCommon.c ****         {
 164              		.loc 2 114 18 is_stmt 0 view .LVU28
 165 0036 079B     		ldr	r3, [sp, #28]
 114:Service/Srv_OsCommon.c ****         {
 166              		.loc 2 114 44 view .LVU29
 167 0038 5B1B     		subs	r3, r3, r5
 114:Service/Srv_OsCommon.c ****         {
 168              		.loc 2 114 11 view .LVU30
 169 003a 012B     		cmp	r3, #1
 170 003c 05D0     		beq	.L9
 120:Service/Srv_OsCommon.c ****     }
 171              		.loc 2 120 13 is_stmt 1 view .LVU31
 120:Service/Srv_OsCommon.c ****     }
 172              		.loc 2 120 27 is_stmt 0 view .LVU32
 173 003e 054A     		ldr	r2, .L10
 174 0040 9369     		ldr	r3, [r2, #24]
 120:Service/Srv_OsCommon.c ****     }
 175              		.loc 2 120 43 view .LVU33
 176 0042 0133     		adds	r3, r3, #1
 177 0044 9361     		str	r3, [r2, #24]
 178              	.LVL8:
 179              	.L5:
 122:Service/Srv_OsCommon.c **** 
 180              		.loc 2 122 1 view .LVU34
 181 0046 09B0     		add	sp, sp, #36
 182              	.LCFI3:
 183              		.cfi_remember_state
 184              		.cfi_def_cfa_offset 12
 185              		@ sp needed
 186 0048 30BD     		pop	{r4, r5, pc}
 187              	.LVL9:
 188              	.L9:
 189              	.LCFI4:
 190              		.cfi_restore_state
 116:Service/Srv_OsCommon.c ****             ptr = NULL;
 191              		.loc 2 116 13 is_stmt 1 view .LVU35
 116:Service/Srv_OsCommon.c ****             ptr = NULL;
 192              		.loc 2 116 27 is_stmt 0 view .LVU36
 193 004a 024A     		ldr	r2, .L10
 194 004c 5369     		ldr	r3, [r2, #20]
 116:Service/Srv_OsCommon.c ****             ptr = NULL;
 195              		.loc 2 116 36 view .LVU37
 196 004e 0133     		adds	r3, r3, #1
 197 0050 5361     		str	r3, [r2, #20]
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 11


 117:Service/Srv_OsCommon.c ****         }
 198              		.loc 2 117 13 is_stmt 1 view .LVU38
 199              	.LVL10:
 117:Service/Srv_OsCommon.c ****         }
 200              		.loc 2 117 13 is_stmt 0 view .LVU39
 201 0052 F8E7     		b	.L5
 202              	.L11:
 203              		.align	2
 204              	.L10:
 205 0054 00000000 		.word	.LANCHOR0
 206              		.cfi_endproc
 207              	.LFE111:
 209              		.section	.text.SrvOsCommon_Malloc,"ax",%progbits
 210              		.align	1
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	SrvOsCommon_Malloc:
 216              	.LVL11:
 217              	.LFB110:
  54:Service/Srv_OsCommon.c ****     void *req_tmp = NULL;
 218              		.loc 2 54 1 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 32
 221              		@ frame_needed = 0, uses_anonymous_args = 0
  54:Service/Srv_OsCommon.c ****     void *req_tmp = NULL;
 222              		.loc 2 54 1 is_stmt 0 view .LVU41
 223 0000 70B5     		push	{r4, r5, r6, lr}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 4, -16
 227              		.cfi_offset 5, -12
 228              		.cfi_offset 6, -8
 229              		.cfi_offset 14, -4
 230 0002 88B0     		sub	sp, sp, #32
 231              	.LCFI6:
 232              		.cfi_def_cfa_offset 48
 233 0004 0546     		mov	r5, r0
  55:Service/Srv_OsCommon.c ****     SrvOs_HeapStatus_TypeDef status; 
 234              		.loc 2 55 5 is_stmt 1 view .LVU42
 235              	.LVL12:
  56:Service/Srv_OsCommon.c ****     uint32_t malloc_num = 0;
 236              		.loc 2 56 5 view .LVU43
  57:Service/Srv_OsCommon.c ****     memset(&status, 0, sizeof(SrvOs_HeapStatus_TypeDef));
 237              		.loc 2 57 5 view .LVU44
  58:Service/Srv_OsCommon.c **** 
 238              		.loc 2 58 5 view .LVU45
 239 0006 0023     		movs	r3, #0
 240 0008 0193     		str	r3, [sp, #4]
 241 000a 0293     		str	r3, [sp, #8]
 242 000c 0393     		str	r3, [sp, #12]
 243 000e 0493     		str	r3, [sp, #16]
 244 0010 0593     		str	r3, [sp, #20]
 245 0012 0693     		str	r3, [sp, #24]
 246 0014 0793     		str	r3, [sp, #28]
  61:Service/Srv_OsCommon.c ****     malloc_num = status.xNumberOfSuccessfulAllocations;
 247              		.loc 2 61 5 view .LVU46
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 12


 248 0016 01A8     		add	r0, sp, #4
 249              	.LVL13:
  61:Service/Srv_OsCommon.c ****     malloc_num = status.xNumberOfSuccessfulAllocations;
 250              		.loc 2 61 5 is_stmt 0 view .LVU47
 251 0018 FFF7FEFF 		bl	vPortGetHeapStats
 252              	.LVL14:
  62:Service/Srv_OsCommon.c ****     
 253              		.loc 2 62 5 is_stmt 1 view .LVU48
  62:Service/Srv_OsCommon.c ****     
 254              		.loc 2 62 16 is_stmt 0 view .LVU49
 255 001c 069E     		ldr	r6, [sp, #24]
 256              	.LVL15:
  64:Service/Srv_OsCommon.c ****     {
 257              		.loc 2 64 5 is_stmt 1 view .LVU50
  64:Service/Srv_OsCommon.c ****     {
 258              		.loc 2 64 8 is_stmt 0 view .LVU51
 259 001e 1B4B     		ldr	r3, .L20
 260 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  64:Service/Srv_OsCommon.c ****     {
 261              		.loc 2 64 7 view .LVU52
 262 0022 CBB9     		cbnz	r3, .L18
 263              	.L13:
  70:Service/Srv_OsCommon.c ****     {
 264              		.loc 2 70 5 is_stmt 1 view .LVU53
  70:Service/Srv_OsCommon.c ****     {
 265              		.loc 2 70 14 is_stmt 0 view .LVU54
 266 0024 019B     		ldr	r3, [sp, #4]
  70:Service/Srv_OsCommon.c ****     {
 267              		.loc 2 70 7 view .LVU55
 268 0026 002B     		cmp	r3, #0
 269 0028 2BD0     		beq	.L16
  72:Service/Srv_OsCommon.c ****         
 270              		.loc 2 72 9 is_stmt 1 view .LVU56
  72:Service/Srv_OsCommon.c ****         
 271              		.loc 2 72 19 is_stmt 0 view .LVU57
 272 002a 2846     		mov	r0, r5
 273 002c FFF7FEFF 		bl	pvPortMalloc
 274              	.LVL16:
 275 0030 0446     		mov	r4, r0
 276              	.LVL17:
  75:Service/Srv_OsCommon.c **** 
 277              		.loc 2 75 9 is_stmt 1 view .LVU58
 278 0032 01A8     		add	r0, sp, #4
 279              	.LVL18:
  75:Service/Srv_OsCommon.c **** 
 280              		.loc 2 75 9 is_stmt 0 view .LVU59
 281 0034 FFF7FEFF 		bl	vPortGetHeapStats
 282              	.LVL19:
  77:Service/Srv_OsCommon.c ****         OsHeap_Monitor.block_num = status.xNumberOfFreeBlocks;
 283              		.loc 2 77 9 is_stmt 1 view .LVU60
  77:Service/Srv_OsCommon.c ****         OsHeap_Monitor.block_num = status.xNumberOfFreeBlocks;
 284              		.loc 2 77 39 is_stmt 0 view .LVU61
 285 0038 154B     		ldr	r3, .L20+4
 286 003a 019A     		ldr	r2, [sp, #4]
 287 003c 1A60     		str	r2, [r3]
  78:Service/Srv_OsCommon.c ****     
 288              		.loc 2 78 9 is_stmt 1 view .LVU62
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 13


  78:Service/Srv_OsCommon.c ****     
 289              		.loc 2 78 42 is_stmt 0 view .LVU63
 290 003e 049A     		ldr	r2, [sp, #16]
  78:Service/Srv_OsCommon.c ****     
 291              		.loc 2 78 34 view .LVU64
 292 0040 9A60     		str	r2, [r3, #8]
  80:Service/Srv_OsCommon.c ****         {
 293              		.loc 2 80 9 is_stmt 1 view .LVU65
  80:Service/Srv_OsCommon.c ****         {
 294              		.loc 2 80 11 is_stmt 0 view .LVU66
 295 0042 ACB1     		cbz	r4, .L19
 296              	.L15:
  87:Service/Srv_OsCommon.c ****             OsHeap_Monitor.malloc_cnt ++;
 297              		.loc 2 87 13 is_stmt 1 view .LVU67
 298 0044 2A46     		mov	r2, r5
 299 0046 0021     		movs	r1, #0
 300 0048 2046     		mov	r0, r4
 301 004a FFF7FEFF 		bl	memset
 302              	.LVL20:
  88:Service/Srv_OsCommon.c ****         }
 303              		.loc 2 88 13 view .LVU68
  88:Service/Srv_OsCommon.c ****         }
 304              		.loc 2 88 27 is_stmt 0 view .LVU69
 305 004e 104A     		ldr	r2, .L20+4
 306 0050 D368     		ldr	r3, [r2, #12]
  88:Service/Srv_OsCommon.c ****         }
 307              		.loc 2 88 39 view .LVU70
 308 0052 0133     		adds	r3, r3, #1
 309 0054 D360     		str	r3, [r2, #12]
 310 0056 15E0     		b	.L12
 311              	.LVL21:
 312              	.L18:
  66:Service/Srv_OsCommon.c ****         first_call = false;
 313              		.loc 2 66 9 is_stmt 1 view .LVU71
 314 0058 0D49     		ldr	r1, .L20+4
 315 005a 0023     		movs	r3, #0
 316 005c 0B60     		str	r3, [r1]
 317 005e 4B60     		str	r3, [r1, #4]
 318 0060 8B60     		str	r3, [r1, #8]
 319 0062 CB60     		str	r3, [r1, #12]
 320 0064 0B61     		str	r3, [r1, #16]
 321 0066 4B61     		str	r3, [r1, #20]
 322 0068 8B61     		str	r3, [r1, #24]
  67:Service/Srv_OsCommon.c ****     }
 323              		.loc 2 67 9 view .LVU72
  67:Service/Srv_OsCommon.c ****     }
 324              		.loc 2 67 20 is_stmt 0 view .LVU73
 325 006a 084A     		ldr	r2, .L20
 326 006c 1370     		strb	r3, [r2]
 327 006e D9E7     		b	.L13
 328              	.LVL22:
 329              	.L19:
  80:Service/Srv_OsCommon.c ****         {
 330              		.loc 2 80 31 discriminator 1 view .LVU74
 331 0070 069B     		ldr	r3, [sp, #24]
  80:Service/Srv_OsCommon.c ****         {
 332              		.loc 2 80 63 discriminator 1 view .LVU75
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 14


 333 0072 9B1B     		subs	r3, r3, r6
  80:Service/Srv_OsCommon.c ****         {
 334              		.loc 2 80 21 discriminator 1 view .LVU76
 335 0074 012B     		cmp	r3, #1
 336 0076 E5D0     		beq	.L15
  82:Service/Srv_OsCommon.c ****             OsHeap_Monitor.malloc_failed_cnt ++;
 337              		.loc 2 82 13 is_stmt 1 view .LVU77
 338              	.LVL23:
  83:Service/Srv_OsCommon.c ****         }
 339              		.loc 2 83 13 view .LVU78
  83:Service/Srv_OsCommon.c ****         }
 340              		.loc 2 83 27 is_stmt 0 view .LVU79
 341 0078 054A     		ldr	r2, .L20+4
 342 007a 1369     		ldr	r3, [r2, #16]
  83:Service/Srv_OsCommon.c ****         }
 343              		.loc 2 83 46 view .LVU80
 344 007c 0133     		adds	r3, r3, #1
 345 007e 1361     		str	r3, [r2, #16]
 346 0080 00E0     		b	.L12
 347              	.L16:
  55:Service/Srv_OsCommon.c ****     SrvOs_HeapStatus_TypeDef status; 
 348              		.loc 2 55 11 view .LVU81
 349 0082 0024     		movs	r4, #0
  92:Service/Srv_OsCommon.c **** }
 350              		.loc 2 92 5 is_stmt 1 view .LVU82
 351              	.LVL24:
 352              	.L12:
  93:Service/Srv_OsCommon.c **** 
 353              		.loc 2 93 1 is_stmt 0 view .LVU83
 354 0084 2046     		mov	r0, r4
 355 0086 08B0     		add	sp, sp, #32
 356              	.LCFI7:
 357              		.cfi_def_cfa_offset 16
 358              		@ sp needed
 359 0088 70BD     		pop	{r4, r5, r6, pc}
 360              	.LVL25:
 361              	.L21:
  93:Service/Srv_OsCommon.c **** 
 362              		.loc 2 93 1 view .LVU84
 363 008a 00BF     		.align	2
 364              	.L20:
 365 008c 00000000 		.word	.LANCHOR1
 366 0090 00000000 		.word	.LANCHOR0
 367              		.cfi_endproc
 368              	.LFE110:
 370              		.section	.text.SrvOsCommon_DelayUntil,"ax",%progbits
 371              		.align	1
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 376              	SrvOsCommon_DelayUntil:
 377              	.LVL26:
 378              	.LFB113:
 133:Service/Srv_OsCommon.c ****     if (prev_time && ms)
 379              		.loc 2 133 1 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 15


 382              		@ frame_needed = 0, uses_anonymous_args = 0
 134:Service/Srv_OsCommon.c ****         osDelayUntil(prev_time, ms);
 383              		.loc 2 134 5 view .LVU86
 134:Service/Srv_OsCommon.c ****         osDelayUntil(prev_time, ms);
 384              		.loc 2 134 8 is_stmt 0 view .LVU87
 385 0000 28B1     		cbz	r0, .L25
 133:Service/Srv_OsCommon.c ****     if (prev_time && ms)
 386              		.loc 2 133 1 discriminator 1 view .LVU88
 387 0002 08B5     		push	{r3, lr}
 388              	.LCFI8:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 3, -8
 391              		.cfi_offset 14, -4
 134:Service/Srv_OsCommon.c ****         osDelayUntil(prev_time, ms);
 392              		.loc 2 134 19 discriminator 1 view .LVU89
 393 0004 01B9     		cbnz	r1, .L28
 394              	.LVL27:
 395              	.L22:
 136:Service/Srv_OsCommon.c **** 
 396              		.loc 2 136 1 view .LVU90
 397 0006 08BD     		pop	{r3, pc}
 398              	.LVL28:
 399              	.L28:
 135:Service/Srv_OsCommon.c **** }
 400              		.loc 2 135 9 is_stmt 1 view .LVU91
 401 0008 FFF7FEFF 		bl	osDelayUntil
 402              	.LVL29:
 136:Service/Srv_OsCommon.c **** 
 403              		.loc 2 136 1 is_stmt 0 view .LVU92
 404 000c FBE7     		b	.L22
 405              	.LVL30:
 406              	.L25:
 407              	.LCFI9:
 408              		.cfi_def_cfa_offset 0
 409              		.cfi_restore 3
 410              		.cfi_restore 14
 136:Service/Srv_OsCommon.c **** 
 411              		.loc 2 136 1 view .LVU93
 412 000e 7047     		bx	lr
 413              		.cfi_endproc
 414              	.LFE113:
 416              		.section	.text.SrvOsCommon_Delay,"ax",%progbits
 417              		.align	1
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	SrvOsCommon_Delay:
 423              	.LVL31:
 424              	.LFB112:
 125:Service/Srv_OsCommon.c ****     if (osDelay(ms) == osOK)
 425              		.loc 2 125 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 125:Service/Srv_OsCommon.c ****     if (osDelay(ms) == osOK)
 429              		.loc 2 125 1 is_stmt 0 view .LVU95
 430 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 16


 431              	.LCFI10:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 3, -8
 434              		.cfi_offset 14, -4
 126:Service/Srv_OsCommon.c ****         return 1;
 435              		.loc 2 126 5 is_stmt 1 view .LVU96
 126:Service/Srv_OsCommon.c ****         return 1;
 436              		.loc 2 126 9 is_stmt 0 view .LVU97
 437 0002 FFF7FEFF 		bl	osDelay
 438              	.LVL32:
 126:Service/Srv_OsCommon.c ****         return 1;
 439              		.loc 2 126 8 view .LVU98
 440 0006 08B1     		cbz	r0, .L31
 129:Service/Srv_OsCommon.c **** }
 441              		.loc 2 129 12 view .LVU99
 442 0008 0020     		movs	r0, #0
 443              	.L29:
 130:Service/Srv_OsCommon.c **** 
 444              		.loc 2 130 1 view .LVU100
 445 000a 08BD     		pop	{r3, pc}
 446              	.L31:
 127:Service/Srv_OsCommon.c **** 
 447              		.loc 2 127 16 view .LVU101
 448 000c 0120     		movs	r0, #1
 449 000e FCE7     		b	.L29
 450              		.cfi_endproc
 451              	.LFE112:
 453              		.global	shellCommandreboot
 454              		.global	shellDescreboot
 455              		.global	shellCmdreboot
 456              		.global	SrvOsCommon
 457              		.global	ucHeap
 458              		.section	.OsHeap_Section,"aw"
 459              		.align	2
 462              	ucHeap:
 463 0000 00000000 		.space	131072
 463      00000000 
 463      00000000 
 463      00000000 
 463      00000000 
 464              		.section	.bss.OsHeap_Monitor,"aw",%nobits
 465              		.align	2
 466              		.set	.LANCHOR0,. + 0
 469              	OsHeap_Monitor:
 470 0000 00000000 		.space	28
 470      00000000 
 470      00000000 
 470      00000000 
 470      00000000 
 471              		.section	.data.SrvOsCommon,"aw"
 472              		.align	2
 475              	SrvOsCommon:
 476 0000 00000000 		.word	osKernelSysTick
 477 0004 00000000 		.word	SrvOsCommon_Delay
 478 0008 00000000 		.word	SrvOsCommon_DelayUntil
 479 000c 00000000 		.word	Kernel_Get_SysTimer_TickUnit
 480 0010 00000000 		.word	Kernel_Get_PeriodValue
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 17


 481 0014 00000000 		.word	Kernel_TickVal_To_Us
 482 0018 00000000 		.word	Kernel_Set_SysTimer_TickUnit
 483 001c 00000000 		.word	Kernel_Set_PeriodValue
 484 0020 00000000 		.word	Kernel_DisableTimer_IRQ
 485 0024 00000000 		.word	Kernel_EnableTimer_IRQ
 486 0028 00000000 		.word	SrvOsCommon_Malloc
 487 002c 00000000 		.word	SrvOsCommon_Free
 488 0030 00000000 		.word	vPortEnterCritical
 489 0034 00000000 		.word	vPortExitCritical
 490 0038 00000000 		.word	vPortGetHeapStats
 491 003c 00000000 		.word	__disable_irq
 492 0040 00000000 		.word	__enable_irq
 493 0044 00000000 		.word	SrvOsCommon_Reboot
 494              		.section	.data.first_call,"aw"
 495              		.set	.LANCHOR1,. + 0
 498              	first_call:
 499 0000 01       		.byte	1
 500              		.section	.rodata.shellCmdreboot,"a"
 501              		.align	2
 504              	shellCmdreboot:
 505 0000 7265626F 		.ascii	"reboot\000"
 505      6F7400
 506              		.section	.rodata.shellDescreboot,"a"
 507              		.align	2
 510              	shellDescreboot:
 511 0000 53797374 		.ascii	"System ReBoot\000"
 511      656D2052 
 511      65426F6F 
 511      7400
 512              		.section	shellCommand,"a"
 513              		.align	2
 516              	shellCommandreboot:
 517 0000 00210000 		.word	8448
 518 0004 00000000 		.word	shellCmdreboot
 519 0008 00000000 		.word	SrvOsCommon_Reboot
 520 000c 00000000 		.word	shellDescreboot
 521              		.text
 522              	.Letext0:
 523              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\
 524              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 525              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 526              		.file 6 "System/FreeRTOS/include/portable.h"
 527              		.file 7 "Service/Srv_OsCommon.h"
 528              		.file 8 "System/FreeRTOS/CMSIS_RTOS/cmsis_os.h"
 529              		.file 9 "System/shell/shell.h"
 530              		.file 10 "System/FreeRTOS/FreeRTOSConfig.h"
 531              		.file 11 "System/kernel/kernel.h"
 532              		.file 12 "<built-in>"
ARM GAS  C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 Srv_OsCommon.c
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:20     .text.__enable_irq:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:25     .text.__enable_irq:00000000 __enable_irq
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:46     .text.__disable_irq:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:51     .text.__disable_irq:00000000 __disable_irq
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:71     .text.SrvOsCommon_Reboot:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:76     .text.SrvOsCommon_Reboot:00000000 SrvOsCommon_Reboot
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:97     .text.SrvOsCommon_Free:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:102    .text.SrvOsCommon_Free:00000000 SrvOsCommon_Free
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:205    .text.SrvOsCommon_Free:00000054 $d
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:210    .text.SrvOsCommon_Malloc:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:215    .text.SrvOsCommon_Malloc:00000000 SrvOsCommon_Malloc
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:365    .text.SrvOsCommon_Malloc:0000008c $d
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:371    .text.SrvOsCommon_DelayUntil:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:376    .text.SrvOsCommon_DelayUntil:00000000 SrvOsCommon_DelayUntil
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:417    .text.SrvOsCommon_Delay:00000000 $t
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:422    .text.SrvOsCommon_Delay:00000000 SrvOsCommon_Delay
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:516    shellCommand:00000000 shellCommandreboot
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:510    .rodata.shellDescreboot:00000000 shellDescreboot
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:504    .rodata.shellCmdreboot:00000000 shellCmdreboot
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:475    .data.SrvOsCommon:00000000 SrvOsCommon
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:462    .OsHeap_Section:00000000 ucHeap
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:459    .OsHeap_Section:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:465    .bss.OsHeap_Monitor:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:469    .bss.OsHeap_Monitor:00000000 OsHeap_Monitor
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:472    .data.SrvOsCommon:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:498    .data.first_call:00000000 first_call
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:501    .rodata.shellCmdreboot:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:507    .rodata.shellDescreboot:00000000 $d
C:\Users\8bit\AppData\Local\Temp\ccBmyXre.s:513    shellCommand:00000000 $d

UNDEFINED SYMBOLS
Kernel_reboot
vPortGetHeapStats
vPortFree
pvPortMalloc
memset
osDelayUntil
osDelay
osKernelSysTick
Kernel_Get_SysTimer_TickUnit
Kernel_Get_PeriodValue
Kernel_TickVal_To_Us
Kernel_Set_SysTimer_TickUnit
Kernel_Set_PeriodValue
Kernel_DisableTimer_IRQ
Kernel_EnableTimer_IRQ
vPortEnterCritical
vPortExitCritical
